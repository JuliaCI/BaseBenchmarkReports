cset: moving following pidspec: 10391
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.348783276 seconds)
loading group "string"... done (took 0.578000653 seconds)
loading group "linalg"... done (took 7.661554112 seconds)
loading group "parallel"... done (took 0.160744412 seconds)
loading group "find"... done (took 1.129669634 seconds)
loading group "tuple"... done (took 1.83675491 seconds)
loading group "dates"... done (took 1.225711755 seconds)
loading group "micro"... done (took 0.243639397 seconds)
loading group "io"... done (took 0.916504873 seconds)
loading group "scalar"... done (took 38.14273986 seconds)
loading group "sparse"... done (took 11.897820397 seconds)
loading group "broadcast"... done (took 0.975732116 seconds)
loading group "union"... done (took 13.152011471 seconds)
loading group "simd"... done (took 4.886865603 seconds)
loading group "random"... done (took 8.844138185 seconds)
loading group "problem"... done (took 1.786049303 seconds)
loading group "array"... done (took 20.839498961 seconds)
loading group "misc"... done (took 1.762643241 seconds)
loading group "sort"... done (took 3.128823082 seconds)
loading group "collection"... done (took 17.060391862 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.538483833 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.133351179 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140783079 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.130312979 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.156183477 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.126141521 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.134338226 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.092674704 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.862701311 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.157498003 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119790138 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.417630268 seconds)
done (took 5.396704089 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176400237 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087342889 seconds)
    (2/2) benchmarking "String"...
    done (took 0.088248573 seconds)
  done (took 1.234174577 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.072802413 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.132103976 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.072737345 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07773688 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.075474415 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.074328097 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.074103783 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.073914884 seconds)
  done (took 1.640019945 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07838064 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073901344 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.073751463 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.075805323 seconds)
  done (took 1.363193843 seconds)
done (took 5.556409445 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.781776279 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.2156097 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189466528 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.404368871 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136909622 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182949709 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.656887043 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.326595898 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.196069717 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.083196022 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.115835647 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.356873054 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.12861255 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.651370744 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.082939769 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.098132028 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.144230498 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.453338949 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072778374 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088051721 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.096612873 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.136825691 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092299666 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080782595 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.1508476 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.072600687 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.139291086 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087876965 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071436586 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.221352214 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.179541202 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665443981 seconds)
  done (took 10.451643397 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104337531 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.103853228 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07501404 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.131289393 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.106987311 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077716828 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083455615 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.074643375 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.100551656 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.137839576 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.100268914 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.113619865 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.073637978 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.076538866 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.090599618 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.217807566 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.088395691 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08905871 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.077945223 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086508756 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116137018 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.086324344 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.087603824 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.087511765 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.137038811 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.189278315 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105020488 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.105381288 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.074099475 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.089585262 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.12189846 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.135973163 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073709597 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073599713 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.133453776 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.102938953 seconds)
  done (took 4.82797211 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.984053169 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.146105834 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094057767 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136754241 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.070594471 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112025732 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.074166708 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085946094 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.211309383 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.372051571 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.588765681 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.136179425 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117741598 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109692185 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073320216 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073934219 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074485831 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.493262759 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.103995528 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112606821 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.0850522 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075751904 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073636294 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.07023385 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072290574 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069169298 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073841577 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.120920033 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081503833 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.307803954 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12922311 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076110647 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.951629623 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.175481809 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.073951328 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.247478598 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.179964747 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101621107 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.150379963 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077658806 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074052005 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.169105425 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.072835364 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.078291585 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.074547229 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.093758652 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111956726 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129973035 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.073700914 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074975731 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.176642337 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.073565903 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087092044 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.155032206 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.16129762 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.075117426 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.295852935 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095443255 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077634089 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.073750228 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.073049495 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.183107451 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129504374 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.075496902 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074885539 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076223203 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.075963653 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.401171244 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071325712 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.889247292 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.076413354 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.085023772 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077262131 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074978058 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078154154 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078354545 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.094454274 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.071424761 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077997838 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070913104 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.073841545 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071769794 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08711362 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09585743 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.371584151 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.176021009 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.076194809 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.073045929 seconds)
    (88/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.072740194 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098963438 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103744078 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.075659028 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.073023815 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107305737 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075760079 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.074720337 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074584321 seconds)
    (97/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.072034424 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.091262914 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.078121471 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.120992752 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.074918993 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.10263928 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104634252 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.077475446 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107206036 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.088839087 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075916723 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.449650653 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.071065803 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073203414 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.072065796 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.075325418 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.07394149 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.088459835 seconds)
  done (took 22.33501555 seconds)
done (took 39.658938105 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.245198675 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075989392 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075835492 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076446227 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075735444 seconds)
  done (took 1.695629874 seconds)
done (took 2.829160872 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124843389 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104885664 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072299551 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107378626 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071919815 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10756232 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106820248 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084462076 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105664978 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.071582273 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103486425 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071700364 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07166026 seconds)
  done (took 2.350434356 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088513373 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089844509 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076244246 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088490277 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069372255 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088251219 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08696635 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096784358 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088623832 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080173128 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070841016 seconds)
  done (took 2.050096052 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087767841 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089544929 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075716873 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087800125 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073759834 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088357292 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088219417 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093109426 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088856583 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0808668 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070273628 seconds)
  done (took 2.048151549 seconds)
done (took 7.569968742 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081647135 seconds)
  done (took 1.195328447 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.534252811 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.667249306 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085095569 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.109324626 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191917465 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.115552403 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.24737581 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087153868 seconds)
  done (took 8.307036625 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094011231 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.074225061 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087418109 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.077760121 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.076609776 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.077491154 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.073660477 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.076703571 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.075000512 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.074042055 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.075363685 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.077680468 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.076802622 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.076053666 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.075339341 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.074645993 seconds)
  done (took 2.429365804 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097255368 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096084523 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.078798151 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079968667 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.077426678 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076742719 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.079264644 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078537803 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.076008338 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.077367255 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.080152475 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078002179 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.076494296 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.069090506 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078693709 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080736941 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075881496 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078905855 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.080406609 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.080554447 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.081123261 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.069805782 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076638682 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07898699 seconds)
  done (took 3.110088013 seconds)
done (took 16.163246396 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110720665 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073256141 seconds)
  done (took 1.30388303 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085252902 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085921982 seconds)
  done (took 1.300349491 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085692657 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.070119545 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091603221 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081885112 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070524585 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.070224806 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089730936 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070297683 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.070052877 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070491547 seconds)
  done (took 1.899549874 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072658932 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079894878 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073739135 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.084385284 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.079543216 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.070497618 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.078623101 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.0740395 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082895853 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.069323283 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.077337115 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.089532374 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.076932721 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.091554223 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07858722 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.074271942 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.076551598 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.074330709 seconds)
  done (took 2.534854155 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069997968 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071329597 seconds)
  done (took 1.277672013 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.071067197 seconds)
    (2/7) benchmarking "second"...
    done (took 0.069092401 seconds)
    (3/7) benchmarking "month"...
    done (took 0.073161093 seconds)
    (4/7) benchmarking "year"...
    done (took 0.072395055 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.070116818 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.069243193 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.070213463 seconds)
  done (took 1.627476093 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.389914317 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121207422 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.311830106 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.078486186 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086009294 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.259867084 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.072217494 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.077295307 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.077888599 seconds)
  done (took 2.64489238 seconds)
done (took 13.722988911 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.085821501 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.093328338 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.103241025 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.390693365 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10020437 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.074524083 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.121691123 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.186442334 seconds)
done (took 2.300124981 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.218019127 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.771190537 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.482100159 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.207554725 seconds)
  done (took 2.598270014 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342885074 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.207288406 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.065803746 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073523999 seconds)
  done (took 1.837971469 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072665626 seconds)
    (2/2) benchmarking "read"...
    done (took 0.075507825 seconds)
  done (took 1.293340868 seconds)
done (took 7.089935177 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072674706 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.072004302 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.069724 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.072020827 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.070396462 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.070185976 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073689882 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.073667663 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.093278348 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.07340226 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.073816769 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.07114854 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.073570775 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07332536 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071193032 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071133527 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073464572 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.07146108 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071021022 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070952397 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071187796 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073840171 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071120274 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.070695699 seconds)
  done (took 2.919291951 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088556272 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.071695728 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.076308147 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075336735 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073448877 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075184871 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075804997 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.07203021 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.076999883 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.075075893 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074121317 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.074655211 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.075544077 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.075483975 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075714041 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.075304853 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.0769911 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071396797 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074086478 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073778173 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075960763 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073527825 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.075681673 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076078003 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073673284 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073545383 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073573268 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.072013311 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076564056 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.075928868 seconds)
  done (took 3.404938288 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.0754074 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.068129895 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.069021011 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.075887742 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.070570677 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.071323965 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.070196417 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.070431659 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.070864251 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.07046553 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07144159 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.069853441 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.070350865 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.071151796 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.070720159 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.074738775 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.087229349 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.070255377 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.069716993 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.070668684 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.076983719 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.069933815 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.070810643 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.069905106 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.070506637 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.070062374 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.071004072 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.070236183 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.070997139 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.070020445 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.073950347 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.074420935 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.070063524 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.078519388 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.074384402 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.069999482 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.075341748 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.069850774 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.070897447 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.069720541 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.069807721 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.070053081 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.069912489 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.078199713 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07080882 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.07147168 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07051334 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.071436817 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.070929597 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.072367314 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.070261396 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.070467489 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.072532504 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.071695725 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.074748722 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07010029 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.071379241 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.070235523 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.071036709 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.070413047 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.070018017 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.070111317 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.074462239 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.071081353 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.087339381 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.078222562 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.069961929 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.071586093 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.071285901 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.073790409 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.071820211 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.086134685 seconds)
  done (took 6.356409892 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091949862 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092725327 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.072159258 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071402146 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067022847 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069069442 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074840108 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069569643 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071227604 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088542008 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069716733 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071181173 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073145303 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074993744 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071253422 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.072995493 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079583926 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068852308 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.071133454 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075077852 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071249895 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076504527 seconds)
  done (took 2.813662928 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153785732 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075620472 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110429666 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080454242 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075163949 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080495863 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075522169 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074936592 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077394696 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075822329 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074869257 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077124856 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076818343 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074965963 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074896758 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075105369 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07757232 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075239554 seconds)
  done (took 2.645262424 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.083036867 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.072389443 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.096191925 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073532409 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.073832724 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075954788 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077468387 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079780624 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.073839909 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.071564306 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.079186052 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07389506 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.073906185 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071786348 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073801348 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072663089 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.07577598 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073649112 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080789807 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077645272 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077935222 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081261388 seconds)
  done (took 2.850235726 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085816199 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073155688 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086556472 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073058459 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066552195 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069242228 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.074908421 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.071313255 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074680426 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.073154439 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071543515 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068863584 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073466535 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071135599 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07442096 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072955498 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075324437 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073686163 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075283577 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.067989199 seconds)
  done (took 2.63591815 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088922143 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072132298 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072874976 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081425743 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074404537 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074510911 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080799466 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074399681 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074495656 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.094066735 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072789486 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07302184 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079636254 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080662579 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074007245 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080975877 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080785504 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081617543 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073807879 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073577226 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.094241683 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072365589 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079447887 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073796023 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074348076 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074565599 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074603385 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078367276 seconds)
  done (took 3.34437088 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072507497 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071768765 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.069396563 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.070847646 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.071275299 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.071861424 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.071066374 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.071344847 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073665776 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07127026 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.073040771 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.072125916 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071919224 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.071545563 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071536214 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.07144235 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071616871 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.069240584 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069287219 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071038085 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.073566807 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073666848 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.073284788 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070870844 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071001346 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.072928735 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070975837 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0707902 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072696615 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070899141 seconds)
  done (took 3.316433396 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080353307 seconds)
    (2/2) benchmarking "in"...
    done (took 0.078344034 seconds)
  done (took 1.326631099 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.068036489 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086793218 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.070662772 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079044008 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077194866 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074031543 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079813123 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076619334 seconds)
  done (took 1.775755945 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08698613 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.082693786 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.073812213 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083021494 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081619902 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089471381 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130894106 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.07334355 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.079986665 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.071621841 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.085824615 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.072941969 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.080045438 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073948954 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.079744507 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081300826 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.070527399 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.077667162 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.074255201 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.071165881 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073827494 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082270902 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075453767 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.067919756 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.075182543 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096812316 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.084820092 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.072521884 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077146734 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.081196711 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07981092 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.067159342 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.073119544 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.073194119 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.071125964 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.081986311 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088448877 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076685115 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.082440286 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073664974 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081436288 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.068656107 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.078010521 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.080782513 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084362888 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.073071247 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.073273122 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.068015079 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.07209526 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.075919482 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.067819243 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073908989 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.0678501 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081071126 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.077053241 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08433675 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.071937003 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.075106232 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.076802429 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.076477524 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.080043496 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073641562 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076210481 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.072831949 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084515055 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.079048114 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081317752 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.068140888 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.067432603 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.071039817 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.08343257 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097481606 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.079781378 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071712853 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07164013 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.069322514 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07511076 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071599739 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076182935 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077875475 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069921412 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074726167 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078661838 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071665299 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073677 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076505942 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068897337 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073054099 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.069612583 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086595371 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.072453372 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.069839447 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.071192052 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.083383574 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.076752673 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.071619473 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.07103654 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079127876 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064508509 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069591482 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06976695 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07132874 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079199961 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073118496 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073604118 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079365858 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076702644 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070929799 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072916137 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.067049884 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.197252137 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.073349411 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.080809484 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.066906379 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076159665 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.074299204 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071911955 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.081509777 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.070444559 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071606928 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08024041 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.078112419 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069955144 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.068685433 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074964901 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.071695868 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073350992 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079735645 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069883832 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066677669 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.066463154 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075396075 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.071182898 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074955313 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075245709 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075051691 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06607086 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.070383141 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07540405 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.080391164 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.072277978 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072880354 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07783147 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.073610345 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.071538429 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.080621764 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.075895098 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.072760528 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.078848467 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.075081055 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.068317999 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075072754 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.076383517 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.071262109 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.077979018 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075124765 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.075725305 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.073528045 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071510895 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07920726 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073621111 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.072617518 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074017121 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.071917393 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.084860732 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.075694388 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.068475941 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.0704651 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.080167641 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.071683582 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.072243927 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.072679027 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.075696812 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071403707 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.070554607 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.072716307 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07610175 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080721495 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.075921871 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073604807 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.078895446 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08637568 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.072424709 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.075900062 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.072409655 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073460276 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.072845447 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.08274152 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.080075247 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.076258312 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074326546 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.068008827 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076186484 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079454078 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.071585278 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.069220316 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.072621298 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.075775268 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.079141114 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07606923 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.073003208 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071181715 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0743307 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074799623 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.076734402 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.072466358 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.072979428 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.077675297 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.070987803 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.077668121 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072568014 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.083049202 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076478785 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.067518567 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073717551 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070338205 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.079442902 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.067536352 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.070844267 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.07266546 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.072247553 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.070962164 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.075501368 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.066487645 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.211199784 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081682601 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.074609562 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.073518374 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071883119 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081155431 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.075532629 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076421364 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.076859496 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07827922 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082817333 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071363237 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.080632744 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.084569604 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.073480205 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.068163992 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.079401569 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.072028065 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.071868564 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.072142998 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.071146624 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077326899 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081311476 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.080549005 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.067654404 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.076698173 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.071370339 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.073239562 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.068556824 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.078210813 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.076686046 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.075169602 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080783843 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07362357 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.073179493 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077704627 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.072390901 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.073738403 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.073078433 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076531624 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.07359581 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.075624634 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.07355763 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.077057539 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.073374825 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.071311468 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.075645725 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.073083392 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.074049538 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078877968 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.072354662 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073624785 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.075210726 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071197467 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072802267 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.072881246 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071674796 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074757029 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073308003 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072658363 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07454263 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066620962 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079259059 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070668457 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079623128 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.072594783 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068722257 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076435652 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074925163 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075333898 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071419216 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071402936 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.073855065 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070545295 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07570896 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081826979 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.071848076 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.084853649 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079791963 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074754932 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.075121445 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072327288 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073558583 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.071310904 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072461372 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070749168 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.072063078 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.07051442 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075652238 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073686514 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.072237544 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074277351 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.073105368 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.074226363 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.072175246 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065934421 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.070950123 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.071313275 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070531206 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079891713 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070385088 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.071322529 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069606893 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070499434 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069635128 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067608537 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075702766 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076338726 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070310775 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076407586 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.070178951 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072078418 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08183986 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.066510587 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.070677889 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.202737939 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.07175119 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081111418 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.072722284 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.08234452 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.073412237 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.072247448 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.070237019 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071920766 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.070253844 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.066655935 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.069686392 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075898571 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.071472106 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07120532 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.071344465 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074755556 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072180231 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080509734 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070761869 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.073126733 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071487413 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068009075 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.072044285 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.071595381 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.075213495 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.073597499 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.071640514 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.070447138 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.073109434 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.074789752 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.076238544 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.073052822 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.075863227 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08150942 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072865002 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.076607437 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075832214 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.068261207 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.076369395 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.072532577 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.072678756 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.073504668 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.080396092 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077555137 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073735803 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.082471749 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.072461111 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074901176 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072677059 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.07080287 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.072641466 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.072503645 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.072414326 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.072985894 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.073943772 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081816828 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.071936852 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.077958757 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074441456 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.074609661 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.080892005 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.073832377 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.077069575 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.078928328 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.074624177 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.075750092 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.082680678 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.076507126 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077170686 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074083103 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.075452231 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079656304 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.072975064 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.080798717 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.074588676 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.073642041 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.075747887 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.072261566 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073281012 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.072745705 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071980423 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.080460554 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.07319396 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.073258375 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.07310912 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.070864659 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.074549751 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075389483 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081226387 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.075709437 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076697193 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.068188794 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.069871888 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073074103 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.071910268 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.075712448 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.075954676 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079018848 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.07633035 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.074272793 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.072085137 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.082780183 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07954269 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.076996835 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.071819703 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.076472068 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.072613314 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.075132273 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.074404576 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.073403802 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072321428 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.076317573 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074433081 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.072237025 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079111462 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07568541 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.206679182 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.076349174 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.077404952 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.076513373 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.069622413 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.074475998 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.077718377 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079341362 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.077045543 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073484797 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085263946 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.072481849 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.075004761 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075883245 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072691281 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07861579 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.068757716 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.075779455 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074533548 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073652413 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.068820811 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.073296986 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.072575823 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07694375 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.073563375 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06853264 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084889163 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.084313557 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.077860854 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0727554 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071683107 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.068809313 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.068770982 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.07371223 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074482253 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.0763553 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.084157369 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.073743874 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.073215259 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.068408805 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073634299 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076670727 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.076803493 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.070268146 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.068330574 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.073436885 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.077596462 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.080011627 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071746985 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.072044711 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076264629 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.076722496 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.071137666 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0754998 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.069226724 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.077157309 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086465009 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.073441704 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075191131 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.079636998 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.082284068 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.073142907 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.068094065 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.073275952 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.077522175 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.074617578 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.073572347 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.074327964 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.089052961 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077425276 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.073222216 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.072066301 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07927599 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.073527702 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.0825238 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073707607 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.073627873 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.078817127 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.075760461 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.080669145 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077456043 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080643979 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.077154952 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.077007737 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.072733442 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074231725 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.071103877 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.073449974 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.074244921 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.073499983 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.077077553 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.079364134 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.073413245 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08386336 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.082265675 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.073947915 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.068140921 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.070959832 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.071545234 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.067254408 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.073633117 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.071030641 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.071493323 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.070815849 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.07248181 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.073468957 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075375845 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.072282834 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070311259 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070565929 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06480896 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073521348 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072887874 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071973023 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.069517013 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.071434462 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.207167016 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077971493 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075593538 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.071337786 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.075058282 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.07700817 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076060243 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.069293196 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.081940197 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073148027 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.077328183 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.073634691 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073767645 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.074113012 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077646248 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07766492 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.074823888 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.076431324 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078111797 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.075190956 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.07061561 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.071008568 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.079558591 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.071750202 seconds)
  done (took 46.441506566 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104793702 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067796211 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066692218 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067095038 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07693659 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068042684 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066777386 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067530951 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06727329 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069900633 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0664959 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067146964 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074543722 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081735899 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077142762 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072424833 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068248734 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067643162 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066767732 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068208495 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07529997 seconds)
  done (took 2.765367401 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077201866 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.082270312 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08014428 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088347242 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076993038 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07613824 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0803959 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075777226 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083608997 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076958482 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082800806 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074775308 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.079201044 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.078899413 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079375207 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076610029 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084781649 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078060618 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.076204578 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081784859 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076945096 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082055233 seconds)
  done (took 2.995177599 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071072189 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070937203 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.075370286 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06717658 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.072179962 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.067617815 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.075031948 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.070272936 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.08399432 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.072540001 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.072950518 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.0731635 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.075018479 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.068176202 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.073711427 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.070857922 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.114676741 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.075574525 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.072428273 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.073634598 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.068109573 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.075461344 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.067227922 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066616265 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.070591965 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07411209 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.072321012 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.069351266 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070997552 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.072163772 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.072315713 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.070143442 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.073367988 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.072070708 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.072570206 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070990028 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.073622589 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070369845 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066398592 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.069550322 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072011142 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.067099227 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.07100074 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072598351 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.069338249 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.069509057 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.074105941 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070335891 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.066787522 seconds)
  done (took 4.799192082 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081906881 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113054445 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.072590811 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092951989 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083894063 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076867389 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074997874 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093414877 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.068189748 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06873786 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085480196 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.098827432 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070854397 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074688082 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.075110374 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.07022537 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070835405 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06925994 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.07346041 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069724737 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073349609 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076535441 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083668026 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081830113 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073521565 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069085637 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069636122 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073905442 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.08107173 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073781572 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074408559 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074774098 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083981869 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.075249656 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069616054 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072201156 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08520475 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070629364 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072604003 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067823275 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072237238 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074052965 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077216479 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085816687 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070988993 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.076683002 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070561777 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.068541342 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083180829 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.074417014 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.079096631 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.085173439 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.075676273 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.073054374 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076390646 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.086643281 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.071958398 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.07081529 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.075356134 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.083392755 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.070177343 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075815626 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.084569605 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.0740042 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.078160605 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.084656126 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07686081 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076058418 seconds)
  done (took 6.608400615 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079831206 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101057376 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086827695 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088202415 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082958488 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.082447062 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082377972 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.0824957 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091672358 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0871382 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082335349 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.122061572 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.076183322 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08208025 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080417149 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08149655 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.081644753 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080664061 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081538734 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081730116 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.081827222 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.089015123 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082514003 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089167162 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085154899 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07841043 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082111896 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083080418 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088968043 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082837159 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085895967 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.08240027 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082274088 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.088886254 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085772585 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.082428369 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071957105 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082749543 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.083008366 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082511302 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078269923 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08921446 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082365714 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.078068064 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082542966 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082554949 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089393753 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086079131 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084668911 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08669523 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.082920996 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089184195 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082319773 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083079982 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.088827254 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.09182358 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08912953 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08907487 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082721586 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089050746 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089581335 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.09155756 seconds)
  done (took 6.570825958 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085209818 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076869685 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.090084302 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.068360677 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069717822 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076547184 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068864328 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.07176787 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079858772 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.079591279 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081908589 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07908806 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082043562 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082368509 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079641283 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081547913 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079003758 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07948101 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080102321 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.079194771 seconds)
  done (took 2.862968808 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.08070096 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088450129 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.07244681 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076727246 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.0762501 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.078262276 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.075706722 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076712801 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07443263 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07634923 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082619543 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082872358 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074551728 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.078997501 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082719804 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.078570917 seconds)
  done (took 2.535335871 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087658319 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077279654 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084197527 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.072681263 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.073709882 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.068903626 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.072411623 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.068261689 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.069130501 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.085433657 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.072974694 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.083622378 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.072704483 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.071005209 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.069320978 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07825975 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06906912 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.069860279 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.07241113 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.083706367 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076811511 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.069924434 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.074478719 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.071151263 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.074898626 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.077472858 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.07127659 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.073702032 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.069885747 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.072679323 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.075638213 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07668383 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.069911103 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.070822764 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.071957814 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06964217 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.07273382 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.072820458 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.078383175 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.072972262 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.070860287 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.075113208 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.072262372 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.073593604 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.068877384 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.072929929 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.068989075 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075478257 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.070179089 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.075959932 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.072717239 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.074881401 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.073008617 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079951962 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.075232162 seconds)
  done (took 5.345634062 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08569652 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074792107 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066595519 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069269008 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.074144642 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.073042195 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074599972 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072814478 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074385035 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.071025087 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074691344 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075733712 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075202913 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077363838 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074938687 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076454251 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068252447 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074181855 seconds)
  done (took 2.62599868 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077028343 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071192882 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.078719014 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071320018 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.072383514 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074837442 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066986956 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.069566667 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069478331 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071393924 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071918799 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.074849711 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070755928 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.075593609 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073135717 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073370485 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.075213146 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07136609 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073105621 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068255555 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075245252 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070956647 seconds)
  done (took 2.880803272 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098309208 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.088064556 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143532943 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.085051817 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.091578748 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.077805629 seconds)
  done (took 1.87054886 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096187805 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105044067 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071299978 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074064178 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080341053 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075014946 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074726273 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076078797 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083514549 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079907572 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078182212 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082190615 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082180883 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081715761 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07997078 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079796541 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07520044 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074736258 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07144079 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088709752 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077316846 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084691081 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07714982 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077007823 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077824491 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084266687 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084359682 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082362064 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077248907 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084645691 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082595957 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077618987 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084548455 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082664002 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076659434 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084671376 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07744832 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089625332 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082526817 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084447428 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.076521025 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082277069 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0845362 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081235993 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084979094 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077662011 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081274338 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077458663 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077527258 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091191617 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082345989 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083730844 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082486929 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085506962 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08470918 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091157121 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082383394 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083896758 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0824465 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082420108 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08398997 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08223123 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08352181 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082193313 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082232598 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083495766 seconds)
  done (took 6.682204627 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109211657 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073023478 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074927797 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080070695 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081326316 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075459303 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075361867 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075246191 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075321951 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072340651 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11219542 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07534898 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08224938 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081631441 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075935214 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075176208 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075649941 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08319589 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073758969 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090417652 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076598539 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083067571 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081576575 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082134549 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07994002 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08001969 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075175843 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075110445 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075394696 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075189124 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078928306 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075227402 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081751567 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071992552 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081523669 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075303662 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075169097 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079128713 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075279902 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080228246 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08187863 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086893945 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07505568 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07518429 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080158458 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075205799 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075255558 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072420933 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075518909 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072506524 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082605138 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08232255 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082198435 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083667784 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077879603 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077536758 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077314636 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077482916 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077458517 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082410108 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083809453 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077211717 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091021468 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07777431 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077998449 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084183774 seconds)
  done (took 6.549450338 seconds)
done (took 136.064054745 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.197801806 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175548346 seconds)
  done (took 1.650029132 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073880154 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101301469 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081561985 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136963369 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.07220359 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106304806 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104569031 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082166405 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071899301 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.07292302 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073511818 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.076508032 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139462672 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071728096 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071169424 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073710597 seconds)
  done (took 2.703599992 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102692439 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.161239059 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106306588 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.072541166 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104304699 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079471923 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.075429315 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082262754 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076300162 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070949352 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077240241 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07512866 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070795806 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07483124 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075511159 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077173443 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070713721 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076935231 seconds)
  done (took 2.827123319 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100796377 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09536808 seconds)
  done (took 1.495353129 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.162761019 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137745074 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206416307 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.341257879 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.158334443 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.146806328 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.146612712 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.145203455 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118811787 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.141198598 seconds)
  done (took 2.99922581 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105012386 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153507428 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.276512961 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.12064205 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077989364 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09535639 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122600469 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.08421671 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083874606 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08438426 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083923565 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080793358 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103717758 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078262078 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.079789813 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.081258249 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107421214 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.079021024 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.08013844 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079954216 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105058847 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071877602 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078199608 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.079589789 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081475026 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081879392 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07166755 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071643422 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080288546 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.080582076 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081185243 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094237204 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081431392 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106053018 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076716176 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107020297 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.08142474 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077746976 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.080177993 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.078099596 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082035109 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082397819 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078581214 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080778642 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071299992 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081206449 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.07162172 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071762409 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082082663 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072524941 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082174432 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080965495 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106146456 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072811958 seconds)
  done (took 6.160175527 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11209465 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111564398 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075754276 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116907185 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108437248 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074476581 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109878237 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103318365 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.11219815 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075489123 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073929909 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075114923 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083837169 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085235692 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120379798 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.111631167 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077243776 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074563596 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112009864 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111096648 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074484232 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105689106 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101997504 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110897766 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.073258517 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074990067 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073518672 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07498072 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079967801 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081953912 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073823229 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083173095 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.0876283 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081475301 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072918936 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073585798 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074012988 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082460992 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083069015 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082922309 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080951456 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072862667 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073799953 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07703992 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076612649 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074831027 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.083986074 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.085533665 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.083119885 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075504964 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077245528 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.075782255 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.077310379 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085613984 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083036716 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.085169018 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08303215 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073542387 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07342237 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076404267 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083608793 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083075865 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082002815 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076766263 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.084648787 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075772227 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087558424 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087977728 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073700715 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074577187 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073686849 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073932299 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07475479 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080288184 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.08056442 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074933787 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073037349 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073325387 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082467322 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080770504 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073667123 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080004856 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072155115 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07303201 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07563732 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076501301 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.082885891 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.084724538 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.075808401 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07386356 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072451586 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072303528 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071081237 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078046009 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080403277 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080184407 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079426411 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073116844 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079979847 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079465281 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073260165 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079622929 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07213407 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073415513 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072964563 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079329384 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07873145 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080613142 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072328009 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072807848 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079376296 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082102564 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072396903 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078929554 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081014953 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07965393 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.07155041 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081977726 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072800879 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080862771 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072059545 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08152436 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07196423 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078520263 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071830402 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070807657 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071677535 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079150765 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072672312 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072590893 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07220741 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070982922 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07852039 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081253452 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072387476 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078676825 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078393323 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072617373 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078005392 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070670495 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07893201 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071182409 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072064394 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070089424 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080577815 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071638762 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071523106 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071296292 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079783799 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071235636 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079133995 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077848103 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070396318 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081112808 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080007318 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076929455 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08025609 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072647254 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071023812 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070899616 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071291551 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077057545 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078508991 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072152181 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070629062 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076808306 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079066996 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070114983 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077527415 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077555345 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077501182 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.0706606 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070946263 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080063319 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079926715 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077084557 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077842382 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078147509 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072155059 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077654853 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077649027 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0710967 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082775499 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07135123 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08263523 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078361069 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076474588 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079161737 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079797797 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079122592 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079541165 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082738795 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070851597 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071619502 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077987946 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071462549 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071208941 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077095948 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072218972 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072549608 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081857494 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071037833 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.322356303 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.076035586 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.085568017 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076046614 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07852943 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089778471 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.077872225 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.081250166 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085316724 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077618532 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084912638 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087472245 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084999929 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.077619213 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078409112 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08597348 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.085281556 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076759663 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075901932 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077331643 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.084183257 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.083039892 seconds)
  done (took 19.334013719 seconds)
done (took 38.4801263 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.203588103 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154616516 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.166089184 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120285629 seconds)
  done (took 2.056409063 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.117215884 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105395562 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.099614505 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.074908759 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.106137315 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.075008932 seconds)
  done (took 1.938247989 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.282375796 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.196803026 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181022915 seconds)
  done (took 2.016061086 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.207577216 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.196727496 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.443846072 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.269054278 seconds)
  done (took 2.575844563 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143324416 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090614351 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.072886354 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.089653724 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.131016768 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.158619483 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101373278 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125796697 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.084996899 seconds)
  done (took 2.404066431 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148595593 seconds)
done (took 12.502535387 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.272355488 seconds)
    (2/309) benchmarking ("sort", BigInt, false)...
    done (took 0.230525745 seconds)
    (3/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089722571 seconds)
    (4/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.215244616 seconds)
    (5/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.191061556 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.080497779 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076509858 seconds)
    (8/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.165297223 seconds)
    (9/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.189672597 seconds)
    (10/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.203011193 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.147182587 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.128974923 seconds)
    (13/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.243535859 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.308948638 seconds)
    (15/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.079128093 seconds)
    (16/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.060809624 seconds)
    (17/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.184501909 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.082987637 seconds)
    (19/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.082037347 seconds)
    (20/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.163687712 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.082772282 seconds)
    (22/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.100252788 seconds)
    (23/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.087569622 seconds)
    (24/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.072844681 seconds)
    (25/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091100335 seconds)
    (26/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.248796597 seconds)
    (27/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.224498531 seconds)
    (28/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.083796423 seconds)
    (29/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.206821219 seconds)
    (30/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.135148361 seconds)
    (31/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.135634658 seconds)
    (32/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.080260421 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.097294524 seconds)
    (34/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.205530005 seconds)
    (35/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.069952724 seconds)
    (36/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.123826507 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.197653298 seconds)
    (38/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.147013597 seconds)
    (39/309) benchmarking ("sort", Bool, false)...
    done (took 0.161285994 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.109268341 seconds)
    (41/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.083360683 seconds)
    (42/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.159172561 seconds)
    (43/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.078771384 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136562407 seconds)
    (45/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.166960094 seconds)
    (46/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.223615746 seconds)
    (47/309) benchmarking ("sort", Int64, false)...
    done (took 0.076017792 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.100442694 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.096672903 seconds)
    (50/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.16088871 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.08134912 seconds)
    (52/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.085698405 seconds)
    (53/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.081572371 seconds)
    (54/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071839771 seconds)
    (55/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.080910786 seconds)
    (56/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.197295469 seconds)
    (57/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.196501778 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.093019513 seconds)
    (59/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.072890119 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.069701024 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093393634 seconds)
    (62/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.058923513 seconds)
    (63/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.1192405 seconds)
    (64/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.168974631 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.101721222 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.096556191 seconds)
    (67/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.082095904 seconds)
    (68/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.122704315 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09721099 seconds)
    (70/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.185276581 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.094276379 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.182948294 seconds)
    (73/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.097499306 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.070782524 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.09234848 seconds)
    (76/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.057810439 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.081236198 seconds)
    (78/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079026113 seconds)
    (79/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.228536371 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.336395031 seconds)
    (81/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.059860936 seconds)
    (82/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.175797741 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.073863398 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.189584883 seconds)
    (85/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.058951804 seconds)
    (86/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.157879118 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.094420407 seconds)
    (88/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.110771589 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.100659009 seconds)
    (90/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.06979622 seconds)
    (91/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.078452466 seconds)
    (92/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.184369047 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.07243393 seconds)
    (94/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.079165907 seconds)
    (95/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.167091243 seconds)
    (96/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.061084391 seconds)
    (97/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.150778784 seconds)
    (98/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.058759513 seconds)
    (99/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.084357211 seconds)
    (100/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.074338645 seconds)
    (101/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.083177926 seconds)
    (102/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.12146801 seconds)
    (103/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.084304849 seconds)
    (104/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.059049151 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.14491258 seconds)
    (106/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.087529754 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.072490763 seconds)
    (108/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.107129516 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078165531 seconds)
    (110/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.070873033 seconds)
    (111/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.08267472 seconds)
    (112/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.180226437 seconds)
    (113/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.080798986 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.094790902 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.093702325 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.057815581 seconds)
    (117/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.081013053 seconds)
    (118/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.077697468 seconds)
    (119/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.05782749 seconds)
    (120/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.197453478 seconds)
    (121/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.079031684 seconds)
    (122/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.076126008 seconds)
    (123/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.110601429 seconds)
    (124/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.059226495 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.097913784 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.079180002 seconds)
    (127/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.102853242 seconds)
    (128/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.080517101 seconds)
    (129/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.156264553 seconds)
    (130/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.057778875 seconds)
    (131/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.080250869 seconds)
    (132/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078657788 seconds)
    (133/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.059279501 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.117170806 seconds)
    (135/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.080006878 seconds)
    (136/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.059176839 seconds)
    (137/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.105472114 seconds)
    (138/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.079716594 seconds)
    (139/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.158310208 seconds)
    (140/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071774523 seconds)
    (141/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.059424907 seconds)
    (142/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073531385 seconds)
    (143/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.06059407 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.080204472 seconds)
    (145/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.185533505 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.124834957 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.080529929 seconds)
    (148/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.150431372 seconds)
    (149/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.084938935 seconds)
    (150/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.085817169 seconds)
    (151/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.084511784 seconds)
    (152/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.102596216 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.080952182 seconds)
    (154/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.060635304 seconds)
    (155/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074038672 seconds)
    (156/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.199285772 seconds)
    (157/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.071444983 seconds)
    (158/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.058251195 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130958463 seconds)
    (160/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.084302853 seconds)
    (161/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.069497318 seconds)
    (162/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.057145962 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173058507 seconds)
    (164/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083479236 seconds)
    (165/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.059316724 seconds)
    (166/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.080973494 seconds)
    (167/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.070120934 seconds)
    (168/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.058470234 seconds)
    (169/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.078833719 seconds)
    (170/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.078622139 seconds)
    (171/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.075056025 seconds)
    (172/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.057513821 seconds)
    (173/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.08237483 seconds)
    (174/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.075446665 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091286108 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.07068584 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128164272 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.150766078 seconds)
    (179/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.079749458 seconds)
    (180/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.081344096 seconds)
    (181/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.164422896 seconds)
    (182/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.087309658 seconds)
    (183/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.109539929 seconds)
    (184/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.070880239 seconds)
    (185/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.072775521 seconds)
    (186/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.075536586 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.129606287 seconds)
    (188/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.237203339 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.075007563 seconds)
    (190/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075772251 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.098916236 seconds)
    (192/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075468954 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.099298422 seconds)
    (194/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.061733937 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073215192 seconds)
    (196/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.096026107 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.134282555 seconds)
    (198/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.210180391 seconds)
    (199/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.088359686 seconds)
    (200/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.169207857 seconds)
    (201/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074861281 seconds)
    (202/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.069417152 seconds)
    (203/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.059035633 seconds)
    (204/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.080295712 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.073625412 seconds)
    (206/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080684635 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.136211582 seconds)
    (208/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.087062359 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.0789593 seconds)
    (210/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.057552405 seconds)
    (211/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.187694741 seconds)
    (212/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.072589288 seconds)
    (213/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.069948144 seconds)
    (214/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.079886142 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.078427161 seconds)
    (216/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071158522 seconds)
    (217/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074231763 seconds)
    (218/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.058139456 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.072396376 seconds)
    (220/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.057750239 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.08036454 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078788253 seconds)
    (223/309) benchmarking ("sort", Float32, false)...
    done (took 0.13916707 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.15801187 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.150308582 seconds)
    (226/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.101805348 seconds)
    (227/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.059945992 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.074100068 seconds)
    (229/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.061784002 seconds)
    (230/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.076104759 seconds)
    (231/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.060355735 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.125497391 seconds)
    (233/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.179651016 seconds)
    (234/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.082841488 seconds)
    (235/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073036319 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10003098 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.083439984 seconds)
    (238/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.060412174 seconds)
    (239/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.082080948 seconds)
    (240/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.07332007 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.093316504 seconds)
    (242/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.068226634 seconds)
    (243/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.078222702 seconds)
    (244/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.059480795 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.07186892 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.100919442 seconds)
    (247/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.058015785 seconds)
    (248/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.057770596 seconds)
    (249/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078144004 seconds)
    (250/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077742062 seconds)
    (251/309) benchmarking ("sort", Int8, false)...
    done (took 0.15118497 seconds)
    (252/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.070969923 seconds)
    (253/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.071260527 seconds)
    (254/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.059761416 seconds)
    (255/309) benchmarking ("sort", Float64, false)...
    done (took 0.139574067 seconds)
    (256/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.098426226 seconds)
    (257/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.07628125 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07192291 seconds)
    (259/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074676503 seconds)
    (260/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079962041 seconds)
    (261/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.060014731 seconds)
    (262/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.128480214 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.073710688 seconds)
    (264/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.059044073 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.095708658 seconds)
    (266/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.081447051 seconds)
    (267/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.059805363 seconds)
    (268/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.112517024 seconds)
    (269/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.060231362 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.073379814 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.073547073 seconds)
    (272/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.061074367 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.081209466 seconds)
    (274/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.070097754 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.074792229 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.079317357 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.099086396 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.059072818 seconds)
    (279/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.098278938 seconds)
    (280/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.079387648 seconds)
    (281/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.079057779 seconds)
    (282/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072778856 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.072861887 seconds)
    (284/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.061012041 seconds)
    (285/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.059302312 seconds)
    (286/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.059189465 seconds)
    (287/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.059059573 seconds)
    (288/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.083319467 seconds)
    (289/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.080716916 seconds)
    (290/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.071264149 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.093666204 seconds)
    (292/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.060852549 seconds)
    (293/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.155573146 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.080601411 seconds)
    (295/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.095976026 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.11838314 seconds)
    (297/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.060938142 seconds)
    (298/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.073159626 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078919956 seconds)
    (300/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.077130202 seconds)
    (301/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.060072891 seconds)
    (302/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.0591554 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.097732606 seconds)
    (304/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074118675 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143803996 seconds)
    (306/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.081122 seconds)
    (307/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.24892742 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074208676 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.126199897 seconds)
  done (took 33.326861561 seconds)
done (took 34.697061352 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089027252 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098700205 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.084664312 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.101973026 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.090210331 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.087074995 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.082462783 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.087209322 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08975563 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.090676877 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08804021 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.064650032 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.084007488 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.083639134 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.084315082 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100496187 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.087976155 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.081497863 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.08117043 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.0708966 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.079780854 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.071528104 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.073255583 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.061223225 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.084644814 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.078271432 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.08068457 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080505996 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.071601698 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.072229902 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.075835891 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.080215897 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.071630271 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.086185181 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079831413 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079547002 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080601452 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.083054896 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.073720323 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.073460922 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.083741907 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.074005237 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.081510198 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.082089433 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.080672771 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.080023194 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.082402117 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.085754626 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099516853 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07638945 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.082085928 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.082362639 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.083315997 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.079311986 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.077531207 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.079491569 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.077529983 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096205238 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.079570232 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073670525 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.080894441 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.080087026 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.077360356 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.079669089 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.079534758 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.08185403 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.083544241 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.077727188 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.0841659 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.080603808 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.073766726 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.08178623 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.078467999 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.076332991 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.085055014 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.08676019 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.072637729 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.080307843 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.081718826 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.081995173 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.073194213 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.076228695 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.075113819 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.080867995 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076166016 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.063337113 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.077914622 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.078487436 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.070452977 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.079850731 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.078387837 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.079815784 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.07259576 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.08411587 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070677993 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.076514552 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.071414144 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070911345 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072687254 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.075894056 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070534538 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073272763 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.081571559 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.072491253 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077865205 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083847519 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070814911 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.077912358 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069967112 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.070557469 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084262792 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080811595 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070982307 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072992789 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.070559463 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.081018353 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.072852633 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.072860378 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.072421285 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.072678358 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.079892049 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.073329544 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075890589 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.080375616 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.227957918 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.073558128 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.076990007 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074971585 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.072522736 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.078207958 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.072527066 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.072262375 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.073695032 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.068984851 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073952048 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.071649362 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.079326303 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07409051 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.08007747 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.073158962 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.08307076 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.080529303 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.080815612 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.079518613 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.073310434 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.068940308 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.077934011 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.077237341 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.076131033 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.074030689 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.074910978 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.073805321 seconds)
done (took 13.53508458 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072570465 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.137802811 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099156187 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.101351686 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.092205436 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.07445141 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.082875365 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102992751 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.075581528 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.106178651 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09588484 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.093975653 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.117915407 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.072894676 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.074040427 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.077734507 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.075279684 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.087681494 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.102417495 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091735938 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115822461 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.07087022 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095359317 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092603685 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090861512 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106151579 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.072534055 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.075495407 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.075406401 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.095368209 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.096539101 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.076196624 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.073164531 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100457659 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.096469287 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087423066 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.072312855 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086544809 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.072707133 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.071408671 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.073146824 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101454056 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08499985 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.086136991 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.078301751 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.084671202 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.075349223 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.089545438 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094844602 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08453766 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.090104054 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102432578 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073955597 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.087936065 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070599909 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.089094073 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080744612 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.074024279 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.072826515 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.081794234 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.07411216 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.077979674 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.087459252 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.087132474 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.078732035 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.090704559 seconds)
  done (took 7.151774599 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.090146802 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.100472775 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088974874 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.090432262 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.073732596 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.073851386 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.072797911 seconds)
  done (took 2.054000572 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072953604 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092183125 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092924662 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094405847 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08780725 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09773906 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083763452 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.072000996 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097130204 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071498283 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092146801 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10364283 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.075114149 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.083639663 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093845268 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072355188 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.097159241 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.074674643 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07705781 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094156713 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076264554 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.098944982 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.083230348 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.072525649 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085377159 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.07248125 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116143881 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.081063111 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072684751 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.075653396 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073544974 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.112717657 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.087319317 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.086822789 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074630388 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087843552 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.088559913 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07684 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085737 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.084583287 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.087994641 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.078143489 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.07648224 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.075436422 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.079728053 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.08428215 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.076000975 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.078237199 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.076381932 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091029019 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071313956 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084748413 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074907202 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077458448 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.077727126 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07659591 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083711044 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.075504336 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.0937472 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074755255 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090340122 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089615819 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.087497212 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089417572 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076783631 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087704243 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08745049 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.077437979 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076316364 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.078401766 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090454643 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.077452152 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.076115479 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.084517456 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076483907 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.097215198 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.096819238 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076498227 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.088378014 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.075088709 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.074984712 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.074377798 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.096642107 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080227053 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.075067807 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07986709 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077690111 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.077124647 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.073629282 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.079012886 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.075462122 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07949228 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.077604841 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.078039833 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076118481 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087334223 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071962176 seconds)
  done (took 9.475775126 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.075622604 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.074082578 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.075366592 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.07551225 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.076115929 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.07681265 seconds)
  done (took 1.944684563 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09468742 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.074153652 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085648191 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076968813 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.109608195 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.093603994 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.094083992 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.084013202 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.090920803 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.08577758 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.093764321 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.095183458 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.098698315 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.080237673 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.09390497 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.079240725 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.094439654 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082357274 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.086282134 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080562976 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.09382839 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.080167821 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080346482 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.088225558 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.083811366 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07990855 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.086245552 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.086817072 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.086247727 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085213835 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.079758211 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.083778067 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.078442681 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085234966 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.092943048 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076548456 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080135547 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.082749541 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07772167 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080675165 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092409926 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077831835 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079074122 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.082076328 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.082349779 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076133546 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.082236434 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.084144101 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.091065764 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.082423606 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.082420301 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076417087 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.080412392 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081971496 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075399367 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082201968 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.082317659 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.093353187 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.080252901 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07748209 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074258204 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080863683 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081681008 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.081221344 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.08254833 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081939333 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075758808 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077594554 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077735707 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076575699 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.083007895 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.07443685 seconds)
  done (took 7.493954763 seconds)
done (took 29.569417041 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543177233 seconds)
  done (took 1.986070414 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.609952101 seconds)
  done (took 2.082294507 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.535873173 seconds)
  done (took 8.003772119 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.37560712 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.483630133 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.720764476 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139757938 seconds)
  done (took 3.22596862 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.729123863 seconds)
  done (took 2.209751087 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.240620472 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.231340572 seconds)
  done (took 1.961611749 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.356257558 seconds)
  done (took 1.825836531 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.132470896 seconds)
  done (took 2.604849998 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.236817755 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.167689323 seconds)
  done (took 1.881355584 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.445561889 seconds)
  done (took 1.920664677 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.884376169 seconds)
  done (took 6.361972352 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224232332 seconds)
  done (took 1.741918973 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241143869 seconds)
  done (took 1.719143992 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.753007422 seconds)
  done (took 3.232518687 seconds)
done (took 42.238536424 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08857441 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.09076387 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.090955322 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086891526 seconds)
  done (took 1.81872984 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082168958 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078546225 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081754342 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077977331 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081575368 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07848056 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.080309136 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081220159 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077919109 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078319028 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078078528 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077926822 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080458256 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079359239 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076503416 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.08077847 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.081502745 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078464244 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080910491 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.078288199 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076312474 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080552603 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080643604 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07745413 seconds)
  done (took 3.386309318 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083768002 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078730742 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.081312677 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.077197869 seconds)
  done (took 1.805995739 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.084011445 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095749976 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093601213 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.083813257 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.095625827 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091381672 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074386686 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074956658 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075960263 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.083355312 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.073363914 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099571111 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.09249876 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.083963694 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.087932616 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.073448201 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.074989577 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092462535 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.084414723 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.08503665 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075843688 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08477438 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.074556204 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.094755973 seconds)
  done (took 3.511097323 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086247143 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.107038863 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085349497 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.098985728 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.099848833 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.073332201 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.086770847 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097477642 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.131194595 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.071128291 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.076695054 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.071011863 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.080118419 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.075847055 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.088504315 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.116742458 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.119407357 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.075259838 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103756409 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.072635022 seconds)
  done (took 3.310652288 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077751657 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.075093144 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.075645152 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071465234 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.083486006 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.078447239 seconds)
  done (took 1.957000047 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073478283 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072804436 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.072998327 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071930204 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.079120941 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.075639024 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.074065425 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.075780461 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.075651507 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.074887554 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.075102316 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.073614682 seconds)
  done (took 2.384384631 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.187268109 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.074486506 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074998651 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.072160993 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075823266 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.071987919 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086451786 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073145015 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096891705 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.072807868 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.07224976 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074359657 seconds)
  done (took 2.524997284 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199351038 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083789927 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231975494 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154678929 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113253638 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116205327 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115877447 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11607465 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143246523 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105601047 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167046311 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167834991 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111424299 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138852185 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093752538 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.10607665 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152275372 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164925369 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108761694 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163613659 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143829928 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128661715 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146405858 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10395966 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107398978 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120651556 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076503374 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083827082 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166254486 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1321374 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147446596 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113888312 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094331087 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172976895 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164561208 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138497565 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148425048 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087375597 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105662878 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133599547 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19961879 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091590843 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.30304528 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115683907 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088442698 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138732915 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125526402 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.126732436 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.111770597 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09757577 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14812713 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180237432 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.135010581 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090427358 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125192979 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114790792 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114878582 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116581639 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176187007 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159661248 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133856433 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.079361275 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114428763 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152807424 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139686909 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.113137554 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125859792 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094768325 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132215736 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152967162 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12332984 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140941098 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.117164618 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092136147 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122768943 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137510912 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128534373 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159524438 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1264397 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.078264661 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122492546 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101552347 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084188943 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147429766 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079535844 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171437765 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102707933 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108575661 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12475313 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109702752 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111185098 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154340096 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28767379 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108100344 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073389444 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108957814 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122020095 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145265782 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09192422 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111065334 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117955688 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082277887 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135988851 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.081526041 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126251305 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082328609 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125674573 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131557746 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082903457 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126515274 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108944757 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10870343 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134038005 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161700196 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095556433 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088783194 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168004465 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127611563 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.109129972 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143431663 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154682289 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.107196129 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105422179 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148616264 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167549578 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094035789 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160571481 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108485864 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087725617 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091998562 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125749206 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114636916 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126420265 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086105414 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11896889 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162531102 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079475303 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099550366 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13581585 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086008793 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088353345 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110582205 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109209404 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100935958 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102169 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.107696379 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137960146 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278196486 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111357827 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130689577 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10632029 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170597217 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095262732 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.110799702 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111308948 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.078038786 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137145657 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156901593 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086544782 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162868134 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.127494852 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123805123 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125733322 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090749064 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139288007 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08580022 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.078181693 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14590956 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117646148 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115758209 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150558204 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117882443 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124731788 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119797125 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131936843 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130310802 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130303525 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10928623 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092883768 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115394855 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128114045 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.081527609 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.097239075 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.087709191 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111668312 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101906999 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090890329 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142654445 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125551691 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110251179 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115905426 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101793838 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144834598 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080841935 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12634104 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.121104552 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098776311 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149958786 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150892883 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137190624 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105735942 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287792135 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.079519455 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083438772 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.095011589 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128832076 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091160612 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08982307 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119037713 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146631762 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129649917 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137255239 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125241575 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121582162 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154190958 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075452395 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.121790542 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144429738 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123198664 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10917152 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09571226 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102981181 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141973409 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108111181 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173546211 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11609063 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126494792 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156673632 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105777561 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084268913 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106987462 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132905657 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105570248 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143365386 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101929642 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092071944 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110869718 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.080812511 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102789505 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130321855 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120869374 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137557732 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115400777 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132919585 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0817524 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114837086 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122720555 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121705791 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.069769826 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119065223 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162797674 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098080492 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118403826 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299725404 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084947747 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.140870032 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17542493 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146402585 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089193796 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109792535 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122964645 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127964249 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122034456 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137028425 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108615777 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138177118 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113415689 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.091782942 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093330418 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102279489 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108162131 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09964559 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105693107 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115050018 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099692165 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132180192 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106452876 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113562761 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119758266 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.104123766 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097037786 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10015267 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171525138 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121026667 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167707815 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104843412 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.141336485 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158302533 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081664327 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086574244 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.083830328 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140849825 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091907497 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133899373 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.115399928 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118127629 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124464217 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137941891 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098245468 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073957678 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110617835 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13187639 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123977915 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100638598 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104166958 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158877346 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101827395 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083165317 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.26156268 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119759298 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111235113 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171325707 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.071419576 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113291774 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085155955 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089130011 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131568042 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152897493 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.088167736 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.107332738 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126872368 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117354001 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130154351 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103755309 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11088933 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125904016 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146453355 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12897034 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093733688 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112581194 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131297416 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152936872 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10511027 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101655068 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16760256 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149209772 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.156523046 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089702715 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116330459 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116393233 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112220715 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136890589 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087937833 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158114271 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086497698 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135765843 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105117745 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091331593 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127144598 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112915598 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092213526 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143654426 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118732786 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086570845 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082104777 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116075625 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119284079 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105779798 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079081164 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287457275 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.080008517 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135560659 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159425045 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086275165 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10776218 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100469961 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085399808 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107748988 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105166729 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09122554 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.104102161 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167569354 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090084373 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146282914 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134890225 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113936645 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135017862 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105566874 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643817602 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082323873 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150323321 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117074903 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168031114 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103141257 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119958239 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112520097 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121966154 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142247916 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105080983 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181024865 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131805491 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117917718 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083431234 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104645337 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10631146 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091083973 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110458569 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115887577 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117112332 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.097835538 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117890948 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123547572 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086702457 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09926839 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152231543 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115810246 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141597333 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13576822 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088221345 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118752348 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135724508 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233215079 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119962329 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150520237 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109982857 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10254125 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086041524 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103551257 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173134036 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078844921 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155245224 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125348478 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113194211 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115698997 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112216644 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132182009 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107389877 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123561667 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095585489 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110778083 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115927643 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085898968 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082012969 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107285678 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112180812 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102545989 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100361479 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.104106078 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149009674 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.078155169 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101598058 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117821738 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142024295 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167478818 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092622416 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087497254 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12164882 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117611503 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114444761 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122883912 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083791451 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086121511 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084087525 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.088368187 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111998458 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115868189 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115723019 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111019333 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156635381 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087346911 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227311419 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098993617 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108599889 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.077333411 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.083629529 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101364518 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099661076 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25672904 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112510511 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158424235 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.10100368 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.094304047 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094621673 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.081025884 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088963686 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128592184 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115882476 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120971955 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104454255 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.070376945 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110365407 seconds)
  done (took 60.137442101 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112456401 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.088036198 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101552326 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147614392 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.127119518 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204915644 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156105255 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194698471 seconds)
  done (took 2.720669276 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07382927 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099239899 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108817445 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087885143 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072420285 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.074101589 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22703056 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086127944 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.07245219 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09753129 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082666675 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.073956709 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.410952317 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.072096676 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072623633 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.067243798 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072986984 seconds)
  done (took 3.432046381 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.398474592 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.61701311 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.346504296 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.082729228 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.968426195 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.096170325 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.17305694 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139395002 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083955529 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53307582 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.415866289 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.1343494 seconds)
  done (took 18.578895594 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.087049859 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.080700424 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094211467 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093163684 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.082931783 seconds)
  done (took 2.024946625 seconds)
done (took 109.099920837 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.087631471 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.429952024 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.060128866 seconds)
  done (took 2.105016522 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092304447 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090506972 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.093061358 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.089926352 seconds)
  done (took 1.960955907 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07959647 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.081869425 seconds)
  done (took 1.751137608 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.230841013 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172490316 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.10063248 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087579557 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.084947858 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.085436904 seconds)
  done (took 1.849593498 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077292177 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.08064006 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077761735 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.08102128 seconds)
  done (took 1.903871572 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080968001 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.058113724 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060491212 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.063488895 seconds)
  done (took 1.851651291 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091318652 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.089304743 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084806797 seconds)
  done (took 1.854643134 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104742615 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092266223 seconds)
  done (took 1.786584066 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086151487 seconds)
  done (took 1.677992305 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09396326 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103223211 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135866772 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.118764887 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141812224 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.117904434 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089486777 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090212534 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.083925641 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.091539396 seconds)
  done (took 2.657213576 seconds)
done (took 21.574953307 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084147277 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.377225705 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365519611 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094297478 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674640046 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361739063 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.995260335 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097808477 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144829974 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072948515 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089599132 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.654761644 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.988444709 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.336029211 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.976763908 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.335039744 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65547021 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074157057 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073694532 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07363965 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.981628555 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073810165 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074302235 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075797418 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.6566833 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.378340142 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074181725 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.352555204 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074104672 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076001336 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.361404412 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074812212 seconds)
  done (took 16.35205625 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075806062 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123401634 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078627661 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089923162 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.076579151 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075455879 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.077376266 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.075085491 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126320114 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073962613 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09105254 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073999483 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077665954 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074877411 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093663067 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.076827456 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075294757 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075492916 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074531687 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074713955 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09248183 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07404789 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074316409 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074782169 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074321522 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085969053 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074491057 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074202505 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07481702 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076263192 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076941004 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07490696 seconds)
  done (took 4.190880508 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121617998 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.133667279 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.082702563 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114337563 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122248302 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.079552051 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.151845078 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.103271687 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.136771138 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.077250954 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.093054312 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074515005 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108266235 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.076224535 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093692183 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.075024394 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075629793 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074609538 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074740845 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074454754 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092860188 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073714721 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075015914 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075113787 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074177153 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087564686 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074488041 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074727494 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074660117 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076143826 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077699437 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074912585 seconds)
  done (took 4.477921497 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078124055 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.081007537 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087425473 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088181832 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074538001 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.077635272 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078619358 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074887833 seconds)
  done (took 2.245462625 seconds)
done (took 28.862508068 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084262554 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074783844 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.078698486 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.094727775 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.079994973 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083708488 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.07370808 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.082380947 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079189589 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.079431037 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080803922 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.07310055 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.077835249 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.072451975 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079319055 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073658476 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084432217 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077970206 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08391389 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084079821 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.076110262 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078934297 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.081369162 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083676764 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083752217 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083514142 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082331367 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078450815 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073592323 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.076658553 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081876473 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088797477 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073632044 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083228349 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.073267451 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.07310882 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.077060777 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.073317022 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083289897 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.082119709 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074985106 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.082340946 seconds)
  done (took 4.921708953 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092894948 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097222354 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089166097 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067641214 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.073692401 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.07067121 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.095550734 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.066178733 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.066574855 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.094070428 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.063980606 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.065603988 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.069011373 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.060362933 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.066326229 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.063778953 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.068217091 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061501054 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066423535 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.065383923 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094894087 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.060611038 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082888116 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.069476832 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.062632688 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.068102987 seconds)
  done (took 3.518635778 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080439488 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088605396 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095601994 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.149316521 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115071758 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083246882 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084432017 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09748469 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099356667 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072252729 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076662772 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098911075 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09346327 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078995309 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.074591873 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.091013131 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.090210742 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074888142 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078673702 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099571908 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091023783 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090581968 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097018632 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086990439 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.072899757 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07510033 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.077388115 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085997889 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075742816 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082444515 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07566446 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076433615 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074584064 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084395641 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.076055695 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074784386 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098640115 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083531781 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083861418 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.074010975 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.081116705 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07418271 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096285771 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129322397 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.072360157 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078522288 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076166106 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082949922 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072671379 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.100066741 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084841311 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.074478456 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075913016 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.072592789 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.072484489 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075853196 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.074640077 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.075364667 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.082059264 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078529646 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.096772722 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.077851297 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08873887 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.07245091 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081393086 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072615712 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073805595 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071903544 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097855675 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074536056 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.115422406 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.076281497 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.076205316 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.085215336 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.083810197 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.081283132 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.074490233 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089031591 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083206338 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076731416 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.0816914 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.076594313 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075756676 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102018731 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075716546 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.074649297 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.074354241 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078207829 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.076472998 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.07436466 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086066841 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.07360128 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076327153 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.091953756 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.075719943 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.077040493 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.081558427 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.080050821 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.074632514 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087399649 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.079039862 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07566052 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.08323342 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.074016158 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.076351155 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.086299819 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.081422204 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.072878183 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076607621 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07882532 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073867852 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074584115 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075300186 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.074552485 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081643106 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079437723 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076938145 seconds)
  done (took 11.271896863 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166314005 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.161672871 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.080192214 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.154565807 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.085807798 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.086770235 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.153174986 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09818488 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.073337954 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074380006 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073468926 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112483576 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108582113 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.118431288 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083581453 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.0736405 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.096233103 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116884614 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152452905 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147933663 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095857886 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081668902 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075702634 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074566844 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075384247 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082802238 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090151795 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082375107 seconds)
  done (took 4.535361716 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084820612 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.109094301 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.080940619 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.096369499 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.097219196 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.076153989 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.078725659 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.078038628 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.092477316 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.085791502 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.076186494 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.080492886 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.082426672 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07884616 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.076548907 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.083266205 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.082187058 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.077657879 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.079171755 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.083321796 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.085851143 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097026861 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076497976 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072578876 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07781688 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.07262461 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068352036 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088495752 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073740419 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.098031559 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.071075716 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078463674 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086919229 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.074147177 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073120622 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073297112 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.074108307 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.075671747 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.077551203 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.074833043 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.074661922 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06591591 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.074748808 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.085537564 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.087350928 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062181232 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.078267873 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.078475392 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078574867 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070919325 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.076343148 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076158031 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075900459 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080883127 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077291585 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.078632569 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074645501 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.081306695 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081649364 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07323774 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070514996 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.073641186 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.079746357 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070073783 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.088269751 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078426316 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.072193912 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07348631 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075409031 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.086389032 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073762837 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.081049798 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.073273811 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.078168339 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.080536252 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.078007764 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.077193318 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.074397327 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.07595156 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.076089346 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.062878493 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.075198597 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.060248612 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075853169 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.07381303 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.074103553 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073879892 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.078156298 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083945407 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.074864216 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078858236 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074304797 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072436791 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075998997 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065454586 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075482201 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084103728 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086832204 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073656996 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.071335283 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085616354 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.078251225 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072941664 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.062469338 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077861822 seconds)
  done (took 9.827722553 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096807697 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.075813397 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087293715 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095152572 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091896658 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079880949 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.084181502 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.075008656 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089607658 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.079969267 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082546568 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073393534 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083753146 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082762201 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07528506 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083849149 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.077614534 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088675184 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087677744 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.074080452 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.082422179 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.087932804 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.09747386 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.089387848 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.087309969 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.089397459 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.097482947 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.085827312 seconds)
  done (took 4.039514981 seconds)
done (took 39.713374118 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.71313544 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.951105456 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.692709429 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.014550207 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.763290784 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.88850914 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.787699158 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.689003889 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.884959782 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.727778615 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.005616527 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.786929778 seconds)
done (took 64.647215236 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.738828132 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.82795784 seconds)
    (2/2) benchmarking "String"...
    done (took 1.926350696 seconds)
  done (took 5.369069096 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.904249075 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.360574653 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.925482741 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.68473345 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.691655737 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.94502468 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.490936335 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.225188507 seconds)
  done (took 29.940205747 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.877113847 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.914795974 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.399537267 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.429089949 seconds)
  done (took 15.287541359 seconds)
done (took 61.941184057 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.704274367 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.712902745 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.700306683 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.671462583 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.743749527 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.692562231 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.858382334 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.696995433 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.68936656 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.675813618 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.689086814 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.117600795 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.702823903 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.950845514 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.69127489 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.696988906 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.712714428 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.156926078 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.847986103 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.698520155 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.696194554 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.735322731 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.689971836 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.834473969 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.714592386 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.686722701 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.096713598 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.691419521 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.311923419 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.692062831 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.718649437 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.035638885 seconds)
  done (took 200.929986071 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.686703617 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.773724571 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.842455669 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.711980068 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.231718396 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.869321399 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.769522845 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.276800463 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.695305558 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.711307461 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.90736846 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.691752404 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.931947576 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.63994756 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.740677689 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.689027554 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.942881293 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.936729919 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.744854066 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.856071344 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.706145303 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.884589882 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.808759321 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.881274403 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.738324647 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.705869174 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.709838978 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.712397053 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.885672916 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.898859731 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.704029915 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.723399388 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.896477187 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.563481586 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.689480144 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.707100575 seconds)
  done (took 167.484601711 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.876778508 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.68941385 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.687776392 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.689207347 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.693572191 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.688449155 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.81089958 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.818461774 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.312861569 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.00651015 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.744257606 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.687587061 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.508039707 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.691234122 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.756655771 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.700640517 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.688746816 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.703398258 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.716233045 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.689150007 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.688378662 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.815457385 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.702080863 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.688991444 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.695832502 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.689523881 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.694020888 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.059453782 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.688622556 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.79291095 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.694068418 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.69532237 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.930492506 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.689590226 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.689699737 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.548197866 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.828513198 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.776628903 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.691625938 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.695177119 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.689156377 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.907649372 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.690439212 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.689289295 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.690163983 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.692993278 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.840303099 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.692988957 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.812433411 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.694844018 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.178676619 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.693498281 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.690588345 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.510615543 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.295298836 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.694265089 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.692787444 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.690870121 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.690259149 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.696979975 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.689771791 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.411064864 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.765890144 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.692302453 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.693470002 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.696308708 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.690720462 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.907907798 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.69401485 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.492162404 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.748365993 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.810511872 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.813588379 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.693212689 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.757691 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.784958833 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.691431508 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.691717704 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.691474456 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.691353951 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.772417826 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.691709671 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.816373725 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.692107212 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.698502271 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.692769974 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.744271976 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.76055157 seconds)
    (88/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.692241685 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.691749648 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.548270878 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.695910352 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.693511529 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.958417343 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.757610898 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.692901574 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.691705288 seconds)
    (97/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.692475795 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.816393026 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.813929419 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.409116659 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.696253374 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.422784278 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.829186792 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.693324789 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.847959649 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.697133959 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.773804835 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.697500329 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.694410608 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.724709936 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.69315371 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.745436797 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.696240322 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.064879636 seconds)
  done (took 393.315952215 seconds)
done (took 765.280151655 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.281497086 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.251270026 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.34959281 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.262787595 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.245893012 seconds)
  done (took 13.014669516 seconds)
done (took 14.635789027 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.779240034 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.78662302 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.716819725 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.782264887 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.714077449 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.781678073 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.765355424 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.719760407 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.750894585 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.720006282 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.752087511 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.719726 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.704754525 seconds)
  done (took 24.316280465 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.928282719 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.925750228 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.765604862 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.927987003 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.741862425 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.926712441 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.860086064 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.852729983 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.845100778 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.711674355 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.70926052 seconds)
  done (took 21.819424453 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.930496369 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.931168855 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.77272205 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.948894224 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.744936215 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.933043979 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.860815548 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.848289062 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.846723191 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.714726464 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.709277841 seconds)
  done (took 21.865459294 seconds)
done (took 69.62215297 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.703361083 seconds)
  done (took 3.32768318 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.729385532 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.901332962 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.710216664 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.706350811 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.702981365 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.704292412 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.706986848 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.70301015 seconds)
  done (took 15.489982508 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.701919328 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.702365193 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.706014684 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.704973164 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.70536767 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.705676811 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.70336351 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.705380348 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.702718902 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.702445801 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.702645514 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.705846556 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.706327716 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.705394524 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.70285287 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.703390535 seconds)
  done (took 28.892651168 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.703883882 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.703217979 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.702743203 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.703133529 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.703356863 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.703221211 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.704820597 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.70357768 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.70238576 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.702907057 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.70394214 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.702806195 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.702768328 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.702875082 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.702843034 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.704396791 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.703155913 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.705932791 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.707469959 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.703378104 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.703561647 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.703601385 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.703239169 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.703371801 seconds)
  done (took 42.515425457 seconds)
done (took 91.848123486 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.412308697 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.667077426 seconds)
  done (took 9.705590484 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.706471851 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.706488484 seconds)
  done (took 5.04524489 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.70972809 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.707317075 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.707134027 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.707524689 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.70776044 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.706833754 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.707389366 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.707288997 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.70779406 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.706875646 seconds)
  done (took 18.702827619 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.708341104 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.707892426 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.705469296 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.709114405 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.707138434 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.706087172 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.70753258 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.711008298 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.70733388 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.705360366 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.707413425 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.704572608 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.706944979 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.705160328 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.707536623 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.706033543 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.705217139 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.705722817 seconds)
  done (took 32.352283994 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.70851445 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.708143285 seconds)
  done (took 5.04434991 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.704671789 seconds)
    (2/7) benchmarking "second"...
    done (took 1.705369274 seconds)
    (3/7) benchmarking "month"...
    done (took 1.706899376 seconds)
    (4/7) benchmarking "year"...
    done (took 1.706630215 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.704602498 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.705598497 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.706037308 seconds)
  done (took 13.567867215 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.709509914 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.847460413 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.910120477 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.369849438 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.710464458 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.711685106 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.591726633 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.713495235 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.71387664 seconds)
  done (took 18.906901283 seconds)
done (took 104.949873718 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.576295545 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.706067418 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.006168783 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.766465529 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.77149829 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.044819357 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.72726222 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.992456396 seconds)
done (took 42.218496301 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.706452559 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.37440253 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.392169047 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.73699703 seconds)
  done (took 15.13262706 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.686369422 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.991125374 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.709801254 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.550549538 seconds)
  done (took 21.571656159 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.075528429 seconds)
    (2/2) benchmarking "read"...
    done (took 2.051440275 seconds)
  done (took 5.762318463 seconds)
done (took 50.803186775 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.710220954 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.710005164 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.707712392 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.709845832 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.707172097 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.708328727 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.710216555 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.711555281 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.710727414 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.710376312 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.709810291 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.707389221 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.710901405 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.710384665 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.708148373 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.707879816 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.715660404 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.708123056 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.709275096 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.70941305 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.70915677 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.71053437 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.707503346 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.709253077 seconds)
  done (took 42.663135117 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.711520255 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.709164248 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.711090134 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.711887078 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.709534825 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.712184588 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.711369546 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.709579276 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.712522244 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.715640335 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.708828742 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.709501058 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.711790437 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.709791602 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.711465656 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.709301468 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.711463153 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.709646508 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.712200937 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.708910808 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.712259425 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.70956162 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.708950445 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.712476536 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.709911639 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.709267179 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.716858832 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.710583099 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.713374823 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.71012373 seconds)
  done (took 52.963219992 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.717086021 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.719944177 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.71352619 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.712547484 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.712834434 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.712212053 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.712875188 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.713073434 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.712936758 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.712008258 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.712324425 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.715053253 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.712526718 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.716862315 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.713243431 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.713453347 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.712711078 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.713713734 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.713787684 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.714755184 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.713771236 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.713480733 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.714319313 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.713566527 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.713421136 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.714131384 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.713506271 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.71331595 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.713623401 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.712979334 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.714973368 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.714519088 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.714229843 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.714304946 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.713430197 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.714096176 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.718741386 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.723112173 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.713442842 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.714190321 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.714624255 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.714267904 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.714189317 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.713596826 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.713431094 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.714340613 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.714312099 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.714476255 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.715608437 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.714012071 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.714800764 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.715658272 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.715018541 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.7150802 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.714981706 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.714922644 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.715983459 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.715605762 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.71558128 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.715526677 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.714799805 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.714847981 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.71569718 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.715599333 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.716002232 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.716832534 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.717089933 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.715984185 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.715378459 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.714883741 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.715925943 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.716295092 seconds)
  done (took 125.088390015 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.715679855 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.713455199 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.712926007 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.713517066 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.71345457 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.715908608 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.713978389 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.716375603 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.713920405 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.715893626 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.720123043 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.714133122 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.714241265 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.716593575 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.71746217 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.714442945 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.716670243 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.713104586 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.717414055 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.717628748 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.716490894 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.714632658 seconds)
  done (took 39.374602175 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.71593548 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.717304539 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.714027048 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.718252426 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.714436083 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.719437148 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.717654915 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.718554008 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.716745941 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.714983228 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.714235902 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.71657008 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.714856039 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.714191272 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.7146426 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.714876056 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.716561597 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.714629335 seconds)
  done (took 32.525138297 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.715855167 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.71613755 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.718059653 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.717528955 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.715851558 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.718353832 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.715141103 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.71809058 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.718549214 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.715061947 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.717730575 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.717723465 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.717862807 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.715316574 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.718147639 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.716401863 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.718072377 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.715754919 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.718958478 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.7153575 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.716295456 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.720441751 seconds)
  done (took 39.414548303 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.719445761 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.719959362 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.716991777 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.715814435 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.715851291 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.719692038 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.720206298 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.716765761 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.719340658 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.719587657 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.716559631 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.718731643 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.716562262 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.718119527 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.71645455 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.717833463 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.719669712 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.717811157 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.719098135 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.716720352 seconds)
  done (took 36.000327754 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.717743563 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.718932085 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.718759208 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.718925312 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.717659892 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.718704302 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.718728448 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.718959416 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.718021069 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.718386477 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.718813785 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.718573904 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.719501784 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.718718145 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.71854039 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.719236154 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.719755856 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.720320315 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.720110282 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.719411998 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.719228586 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.7193376 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.718652176 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.719858984 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.719852214 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.719833655 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.719076335 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.719994214 seconds)
  done (took 49.774063757 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.722825936 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.721568711 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.717736689 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.719236161 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.718497049 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.717306829 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.717911487 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.718235759 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.720995585 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.719393406 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.721532445 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.720950464 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.721538211 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.721647534 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.721880703 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.722733644 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.722411937 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.721800788 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.721476367 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.71910039 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.722891465 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.721075073 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.723120926 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.719833883 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.719991535 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.722304249 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.7192294 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.719603141 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.721681833 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.719344046 seconds)
  done (took 53.259973554 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.739873793 seconds)
    (2/2) benchmarking "in"...
    done (took 1.740080787 seconds)
  done (took 5.122165239 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.719054675 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.723040526 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.722755888 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.719531264 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.720271459 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.722199188 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.721866474 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.719250192 seconds)
  done (took 15.410026956 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.718921666 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.722555357 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.722819914 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.722973439 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.721259199 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.719687713 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.726981317 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.723345713 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.721117298 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.721822271 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.729266805 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.728708124 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.723376296 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.721635139 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.720011662 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.721447302 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.724083048 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.721829082 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.721520018 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.725224917 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.722675818 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.723386313 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.72322789 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.722220375 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.722707931 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.731969011 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.72519899 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.725933807 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.721457525 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.725346879 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.722540865 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.722741122 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.723755577 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.723589234 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.724890936 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.723305876 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.730710781 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.722843524 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.728508714 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.723350295 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.725531468 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.722508718 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.723010638 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.723212144 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.723290757 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.724673137 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.726121854 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.722407792 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.722436434 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.725343839 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.730194674 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.721864456 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.722188569 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.7265632 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.724294662 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.729405838 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.725523617 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.725230898 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.731782474 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.733492335 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.736384922 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.730518745 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.725514546 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.723664327 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.732567523 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.747796565 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.730048819 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.723961635 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.723240755 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.725963036 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.73079553 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.736067928 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.733412365 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.724486495 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.724387176 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.726809114 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.724623811 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.727619658 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.730694395 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.726809536 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.728194558 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.725225515 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.73491194 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.747274361 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.724054947 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.724924334 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.724361581 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.725823244 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.724947218 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.737940301 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.726860635 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.727479739 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.72472165 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.724814271 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.72595053 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.726119874 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.72460161 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.727687362 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.725672155 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.728372626 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.725916976 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.728277334 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.733287804 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.726646414 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.725658141 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.730706474 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.728058679 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.725239213 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.731328782 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.727832411 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.726419698 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.726511988 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.732631311 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.725177073 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.730227081 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.735908523 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.726930475 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.727306345 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.727552691 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.729318177 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.734643958 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.752775716 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.728610296 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.729296801 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.731634832 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.741307403 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.727019636 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.729885111 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.729542359 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.727004723 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.726187275 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.726954135 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.734609019 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.727203571 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.727739331 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.727347695 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.726471112 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.730141264 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.729160868 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.726990382 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.729181045 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.728595627 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.728436433 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.729841212 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.728724674 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.729915745 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.733560858 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.72729573 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.728968596 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.731342593 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.728933444 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.73060602 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.728420839 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.72828106 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.727784429 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.729228729 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.728250521 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.728027919 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.730502065 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.730312422 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.730883458 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.729000352 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.732307167 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.729525524 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.732061386 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.727731686 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.729554689 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.733561931 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.73008151 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.727859921 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.73076581 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.727242437 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.731588175 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.737858879 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.731911429 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.728976329 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.731348818 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.728832964 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.729686776 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.729583065 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.731840855 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.738594098 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.729664054 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.735667566 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.731927997 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.730383258 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.732839348 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.729458714 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.728671977 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.729748997 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.732409289 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.740166657 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.742894531 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.738617709 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.731428929 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.736708598 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.731510776 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.734901151 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.734232978 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.730556183 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.733010877 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.734930641 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.731177932 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.731981595 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.732084448 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.731104369 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.729047673 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.733370306 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.733658332 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.731649487 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.73368454 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.731959719 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.73175539 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.730644361 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.734716136 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.731596598 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.729916851 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.73095634 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.729939401 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.732740039 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.733681052 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.732170224 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.736315839 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.730154351 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.731440433 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.732901316 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.731256345 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.730134506 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.734394694 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.733380989 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.731535684 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.739142823 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.731603475 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.73193723 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.738713247 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.731281369 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.734659918 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.734187038 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.734219604 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.730866011 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.734619664 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.744007417 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.7340068 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.733047944 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.733368002 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.732345755 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.734643193 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.738891021 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.733184699 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.731954248 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.736244818 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.73314382 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.732009551 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.735834969 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.735181387 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.73425621 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.734052482 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.735508312 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.735542211 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.733727357 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.73479323 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.733351578 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.734408785 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.73538019 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.743155424 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.736859073 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.733595804 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.735236015 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.735483673 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.740460697 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.733738693 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.737138222 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.732478315 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.746618705 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.742679356 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.740306632 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.736099978 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.736334571 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.739209488 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.735111014 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.737389334 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.733707098 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.734527209 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.733530181 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.734037598 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.733952036 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.734869271 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.737388129 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.737834458 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.73562111 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.740966596 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.736996931 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.732816451 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.734858782 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.735686486 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.736967661 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.7333131 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.736786803 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.737079214 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.736380755 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.733463744 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.734655674 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.74128578 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.7350071 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.73554336 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.736502215 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.733770796 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.734515773 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.736588259 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.735224667 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.739132615 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.744268495 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.737844789 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.74577218 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.73633258 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.74451436 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.737913948 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.738988545 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.745572607 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.735399809 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.735336193 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.735658992 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.73747823 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.744537991 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.737424535 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.738510069 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.741510015 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.736744446 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.737681209 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.738367697 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.736734837 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.738852518 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.737989487 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.743644817 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.736776248 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.741292095 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.738049183 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.736333214 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.737131535 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.738806092 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.738129316 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.739342179 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.737954256 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.737278391 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.736952499 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.736522468 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.740158843 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.738100287 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.739642321 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.736523835 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.738966244 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.743489932 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.738351428 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.742324124 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.740034796 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.744369304 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.738047907 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.744390515 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.738878808 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.737713618 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.738549706 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.740209724 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.738652574 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.737478084 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.738322905 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.738902721 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.739341516 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.745131941 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.738480738 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.739597601 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.738694735 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.738767096 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.737309736 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.747625843 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.763580958 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.739481795 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.745940399 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.738563925 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.740456161 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.744340618 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.740213197 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.737680675 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.742057535 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.74928254 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.750553373 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.739607757 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.740061663 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.739374336 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.740534973 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.742614963 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.741802689 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.740306734 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.744234081 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.738882523 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.740335309 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.742655706 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.741374765 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.740626517 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.740264251 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.741010875 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.749793212 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.74125276 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.740291021 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.740103431 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.742846251 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.739887801 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.740698625 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.740833896 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.740180996 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.74440242 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.741049555 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.746738905 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.747782128 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.741919784 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.74057263 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.741138278 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.740525644 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.740648881 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.741484961 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.740993924 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.742027995 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.741819048 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.741479071 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.740130717 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.740081966 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.74264324 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.743685975 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.743880044 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.743690229 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.749103594 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.741280125 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.740819428 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.743933983 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.743604048 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.741194101 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.742174122 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.748747995 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.745274908 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.752709395 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.75053258 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.747556213 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.741838738 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.744968654 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.751231101 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.740548273 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.742084015 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.7426778 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.743269859 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.743434999 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.746274828 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.743081827 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.748795374 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.7418535 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.742418361 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.750857415 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.743478577 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.74322731 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.743049516 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.74675809 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.741987461 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.742834551 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.746622085 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.741390324 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.749720643 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.745272468 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.744307926 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.744501655 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.740690597 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.743824075 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.748356275 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.745155572 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.744020961 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.742543209 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.743263586 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.744178194 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.748433963 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.742764843 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.742426882 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.743245167 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.747165406 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.750703085 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.743663947 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.744507722 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.743937536 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.743696787 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.745207938 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.746540256 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.744205271 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.744585206 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.743647464 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.745786366 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.746279497 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.746637743 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.743218013 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.745421253 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.749272962 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.74580482 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.748348034 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.755911954 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.755240687 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.7441908 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.743764629 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.745037423 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.747043336 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.745334976 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.746137418 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.744427843 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.744879689 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.746960989 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.745640397 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.746680778 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.748665901 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.762190652 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.748210755 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.744456134 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.745794266 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.748571137 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.749167743 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.744384739 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.748082602 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.747006607 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.748855425 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.754797331 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.746313681 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.752171272 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.745570194 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.746133514 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.753017012 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.74928282 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.753511439 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.748394175 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.746931228 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.7464227 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.750671394 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.762590414 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.748465982 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.755880481 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.777139611 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.746737881 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.746649365 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.746678546 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.74541644 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.746347631 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.748291781 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.74728932 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.748008538 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.749963762 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.748614976 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.746993851 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.75401431 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.748018813 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.749484871 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.750436836 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.746662496 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.747184706 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.747156962 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.748097755 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.749993982 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.748371094 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.748144766 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.749062801 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.747921826 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.761025748 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.757320618 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.751258546 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.748657516 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.747558613 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.751902174 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.751503967 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.760009445 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.759180672 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.74947786 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.748146055 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.749414885 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.748497324 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.747404358 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.748297732 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.747292815 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.747573203 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.747255155 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.761097473 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.759118814 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.751702012 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.748559661 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.749314068 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.75157605 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.749689261 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.749637511 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.749314722 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.749667645 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.749607087 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.754513189 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.750678718 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.750986979 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.752497726 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.759964702 seconds)
  done (took 1037.181471191 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.749602189 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.751185652 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.748747847 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.749385779 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.74971662 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.750437894 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.74979141 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.749386175 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.748899416 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.749739656 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.749626877 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.74952612 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.749264869 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.749916584 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.750811132 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.749975553 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.750366086 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.750557929 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.752385664 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.751465584 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.749366767 seconds)
  done (took 38.420233441 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.752602808 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.750896109 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.750207952 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.752533346 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.749869608 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.753151595 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.750480481 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753327028 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.753056851 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.750667732 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.753853432 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753276164 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.750760917 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.75149875 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752762767 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.75329749 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.753998346 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.751121517 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.754082384 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.75097337 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.753799613 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.751785118 seconds)
  done (took 40.219789774 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.752091463 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.751800155 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.751346604 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.751173155 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.754695636 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.751589752 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.752276072 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.754272336 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.756912246 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.752221275 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.751365958 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.752745129 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.759425887 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.76035962 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.75438622 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.754605632 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.898131233 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.752439193 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.752381938 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.752879881 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.751489879 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.757336871 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.752035064 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.752697991 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.751340155 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.756002526 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.755500912 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.755020669 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.753495251 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.755447517 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.75833481 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.755831935 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.752365722 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.754478599 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.752217086 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.753648254 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.759254713 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.754355071 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.753361391 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.754760804 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.761893221 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.776510204 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.75705765 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.760149967 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.756429209 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.756434927 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.756614454 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.7636645 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.75342661 seconds)
  done (took 87.821460072 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.756469706 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.755897549 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.753071375 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.756733256 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.755718249 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.755814241 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.755971822 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.755782232 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.753898519 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.756580371 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.757183321 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.753960367 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.753600589 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.756231678 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.756753645 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.752647612 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.75354202 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.753546097 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.754260984 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.754481922 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.75440455 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.757231616 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.756337639 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.754572195 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.757935851 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.754519594 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.756644935 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.759300128 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.755337763 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.754226408 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.757058905 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.758288983 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.757569615 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.756043231 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.754744529 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.757923447 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.758922137 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.75447928 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.758341018 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.75505192 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.758357387 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.759008848 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.757695729 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.759791325 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.75584872 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.756551487 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.755931019 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.755688106 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.756361994 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.758364558 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.757998816 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.755463699 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.757767695 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.756572995 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.758350324 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.758647228 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.756191974 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.755692237 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.757844324 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.75634763 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.757046015 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.760991765 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.757497859 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.758061403 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.758957264 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.757752818 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.756232611 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.759510928 seconds)
  done (took 121.118287386 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.756007797 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.756895111 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.758309624 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.757655439 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.75784285 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.757545179 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.757357316 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.757280209 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.75697424 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.76070262 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.757237366 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.760830298 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.758040698 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.759797419 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.758997872 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.757491862 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.758779909 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.758576254 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.758741693 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.758733737 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.757860544 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.757361581 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.758347208 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.758029539 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.758323947 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.759284919 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.759681019 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.759229524 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.757556557 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.758247174 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.759344768 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.757935215 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.758856792 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.759009034 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.759150836 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.759255795 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.758508971 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.759660285 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.759667486 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.759317445 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.759525628 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.759991723 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.76029833 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.761006169 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.759248208 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.759674525 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.759028155 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.759317237 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.760694276 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.7595921 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.75964802 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.759895079 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.760036259 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.759319784 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.759889808 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.762335142 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.759936912 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.760483478 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.760785214 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.759984224 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.763803845 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.762429918 seconds)
  done (took 110.745451955 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.7618825 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.761807378 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.7595964 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.75980571 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.762542788 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.759675869 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.76215181 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.763176522 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.765137803 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.762751434 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.763785976 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.760840394 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761494265 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763078128 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.764216605 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761825941 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.760523298 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.760720467 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.762690114 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.759951459 seconds)
  done (took 36.918271327 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.759656889 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.763605247 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.759904409 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.761342155 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.764003892 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.760514681 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.763871065 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.763754284 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76080356 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762962853 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.766357701 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.764304929 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761339602 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.760572494 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.763123128 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.760802058 seconds)
  done (took 29.879979754 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.76305297 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.763323507 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.762099477 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.762092886 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.76171056 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.760556064 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.763941601 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.760910962 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.761255788 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.764519751 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.766155006 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.764511094 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.764398844 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.762107567 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.761845688 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.763114497 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.761924254 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.76256814 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.763819345 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.762977598 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.762069749 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.761539907 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.764965858 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.764696291 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.762532367 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.763218661 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.762236462 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.764126206 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.76352054 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.764731755 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.763102624 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.763334269 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.762978426 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.763032674 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.764491714 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.762958988 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.766347881 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.766266738 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.766563692 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.765102861 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.765152823 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.763635074 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.765876312 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.766269822 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.764087748 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.766023938 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.763698938 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.763465602 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.76354486 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.763609866 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.765377114 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.765417759 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.766476245 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.767020946 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.766260121 seconds)
  done (took 98.694395905 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.766804419 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.766664828 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.764091203 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.766642853 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.766986803 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.764695324 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.767752721 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.765052528 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.763891491 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.766434287 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.764301217 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.766298724 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.764926168 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.767777768 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.765550334 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.767649986 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.765242059 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.764700044 seconds)
  done (took 33.47082722 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.764726912 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.764885011 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.768087757 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.765394143 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.766552194 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.767831148 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.764799169 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.76823661 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767917692 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.766395498 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.765547532 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.767717953 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.766981008 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.767678091 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.765477407 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76513155 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.768574443 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768076323 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.765880508 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.764919326 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.769589054 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.768963519 seconds)
  done (took 40.555978378 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.764764663 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.764959445 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.781889876 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.786611216 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.787779053 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.798937282 seconds)
  done (took 12.371687218 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765301534 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768270822 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.765435539 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768417829 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768879964 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765820834 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765799441 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766282233 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769678606 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766111677 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766847812 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76873916 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768693512 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766972285 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769274495 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770307407 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767236729 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767241103 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767451429 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76931849 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766928974 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770024472 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766282458 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766510797 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766759739 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768339319 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769621281 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767867465 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766999574 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770012624 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769692667 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767547652 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770217722 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766842086 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.77013535 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770342179 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766742051 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.77064764 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77040994 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767720922 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.770491257 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769766118 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771208476 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768202107 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771455271 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768371851 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769140934 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76875702 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767860065 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770975841 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770926304 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768434235 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771915368 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771734245 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771588037 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770922309 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768085215 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768667105 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770994347 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769271192 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767986833 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771914058 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768144737 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768927987 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771505872 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768461801 seconds)
  done (took 118.426057302 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769341688 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.768814322 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76953454 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768885506 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768740978 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768017851 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768939325 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768045622 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767911203 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768641846 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771022316 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76807073 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767569536 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76812347 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767524177 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767819559 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768464546 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768099405 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768469092 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772027327 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767947838 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769110725 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768442823 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768863281 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769646044 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771883083 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.771979522 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76914248 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769376118 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768247305 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770322029 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766999382 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767153272 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.767154338 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766693715 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766576341 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767630697 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767358895 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767368027 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769375699 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767613627 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769248124 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76790914 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770978003 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767087889 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767272152 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76686307 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769237271 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767690366 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766030835 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767486159 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767888497 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767980562 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767865767 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767651791 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766841577 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767070163 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767260465 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767634601 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766267603 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.763971729 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761231721 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.763865723 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.761164775 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763965788 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.759868075 seconds)
  done (took 118.365144893 seconds)
done (took 2417.417652218 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.798870089 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.748591121 seconds)
  done (took 15.227083061 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.924105434 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.872603926 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.75688302 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.763739441 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.757750664 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.764277519 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.752208222 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.758026016 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.756629162 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.761732067 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.758251629 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.945170915 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.755586658 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.757600973 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.757967279 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.851542029 seconds)
  done (took 50.37727541 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.759963228 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.762426844 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.770869558 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.763307713 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.760504648 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.774515965 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.795863251 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.763368586 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.794253532 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.773956893 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.831014242 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.774541383 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.760922668 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.808913689 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.775830294 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.776119337 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.851055868 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.83876598 seconds)
  done (took 33.817771267 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.839057226 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.761478934 seconds)
  done (took 10.288006176 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.78989622 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.773540962 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.790555225 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.776075433 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.756517603 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.778859183 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.792854124 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.784534549 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.764616275 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.776418551 seconds)
  done (took 69.466613795 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.759012317 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.755232161 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.7540685 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.752713917 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.745669201 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.751636503 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.751482236 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.751159438 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.42673795 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.786774987 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.759163869 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.758465864 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.751629975 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.752796237 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.752643355 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.774105461 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.871617077 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.751377981 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.75478024 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.758636476 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.751081375 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.806275198 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.76718312 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.756320665 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.782004571 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.425071019 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.759966392 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.758655797 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.853973976 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.752420736 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.751109845 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.752018458 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.754246909 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.156231008 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.027430527 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.754817722 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.767292291 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.760765009 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.751756606 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.864396694 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.753550376 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.76038167 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.465610285 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.005341347 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.855540719 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.796955463 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.082263191 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.771015326 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.753544073 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.782045313 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.753912513 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.752524603 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.765078819 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.2338656 seconds)
  done (took 125.883955232 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.747609213 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.096921957 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.914548959 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.749671751 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.035179383 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.957004093 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.746336268 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.796592868 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.744764708 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.980152759 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.999382344 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.850680413 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.744242676 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.739853349 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.742248616 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.736444247 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.895962953 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.815058777 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.742462832 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.736550554 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.768244154 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.984735202 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.863455473 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.741555259 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.768506163 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.954408394 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.863552871 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.845165544 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.523325256 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.735526115 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.804662902 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.739287897 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.738035127 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.735483102 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.896300353 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.834035371 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.823374226 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.740328988 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.736048635 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.735339883 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.39955919 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.938626388 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.833862204 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.868876461 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.991167422 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.943876347 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.519479403 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.732702732 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.47468113 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.901371955 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.967173687 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.970388634 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.859667416 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.737907198 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.083184543 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.733220857 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.732504662 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.987700515 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.957173114 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.835960642 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.735454874 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.732686453 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.731242907 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.975029155 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.737408748 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.830665501 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.734754421 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.731464511 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.830269983 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.83410759 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.966709226 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.948729266 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.766481842 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.073443514 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.239281226 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.980653647 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.800317277 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.986047836 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.732395869 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.729138909 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.814506876 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.572066045 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.987208996 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.978025038 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.978867817 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.769366864 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.458022075 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.730694916 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.959109995 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.954569457 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.993008031 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.97940141 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.974873811 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.063843363 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.730083173 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.728450984 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.973651358 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.857178593 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.732039162 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.075895122 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.961224492 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.256698274 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.757739364 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.03494717 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.864818754 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.732511891 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.360594777 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.730633933 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.961188181 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.771427611 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.730272487 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.729691049 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.94981509 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.719899229 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.728458941 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.395557312 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.794109225 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.736604475 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.964526913 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.732560524 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999585493 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.731847691 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.962989157 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.172469751 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.762341849 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.906103622 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.977156471 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.731686313 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.972308895 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.974980159 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.847480588 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.953164279 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.451882192 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.729570947 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.016316296 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.731759874 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.728772069 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.901219314 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.731484176 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.875806147 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.732783942 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.025007717 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.756274568 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.972575813 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.733498995 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.99100454 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.767439364 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.786636177 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.733443679 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.863367018 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.732574672 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.988190285 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.891275204 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.732120851 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.731038117 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.303130605 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.731182858 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.882794553 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.958898393 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.75766223 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.805657287 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.401984367 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.730286432 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.814034214 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.758093564 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.120046257 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.730016673 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.983697979 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.732855162 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.730961285 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.730243534 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.967132388 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.917351157 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.732510271 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.731944055 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.639347849 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.733397899 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.729775763 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.915171648 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.094989867 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.731034779 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.936033969 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.736784699 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.860235178 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.733406546 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.803055812 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.069639978 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.730520295 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.73048994 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.733600779 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.733313573 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.731067196 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.94469182 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.760615321 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.234154589 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.871853791 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.006674781 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.046296374 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.974572527 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.776922342 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.734868725 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.98873658 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.735360172 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.796833847 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.734633289 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.756282795 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.961244098 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.736132174 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.944011438 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.005671556 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.576374269 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.781940247 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.735658593 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.733016126 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.732415584 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.87751745 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.819249541 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.735322007 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.734318619 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.848604324 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.85585316 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.947464873 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.733659862 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.782954884 seconds)
  done (took 872.741225677 seconds)
done (took 1179.481257189 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.732735288 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.737331647 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.722669578 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.735470156 seconds)
  done (took 28.587907109 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.741257814 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.737205022 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.740702926 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.737968871 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.739763339 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.737654053 seconds)
  done (took 12.09332172 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.784038318 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.736953918 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.736968257 seconds)
  done (took 20.918977769 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.806726147 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.127272508 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.841005953 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.163273093 seconds)
  done (took 9.598266808 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.742104746 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.741228073 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.740826113 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.742033201 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.742395876 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.743566503 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.741769888 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.743991048 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.747311175 seconds)
  done (took 17.349975628 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.751654526 seconds)
done (took 93.958107912 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.224295579 seconds)
    (2/309) benchmarking ("sort", BigInt, false)...
    done (took 6.74069232 seconds)
    (3/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.916905028 seconds)
    (4/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.232560827 seconds)
    (5/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.965789767 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.812338785 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.843252152 seconds)
    (8/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.969096509 seconds)
    (9/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.148595429 seconds)
    (10/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.725524302 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.858249872 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.641538371 seconds)
    (13/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.129108458 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.764802627 seconds)
    (15/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.969627958 seconds)
    (16/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.157946291 seconds)
    (17/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.832353029 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.90743245 seconds)
    (19/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.912358785 seconds)
    (20/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.812745842 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.769398933 seconds)
    (22/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.74809485 seconds)
    (23/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.756014014 seconds)
    (24/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.929032236 seconds)
    (25/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.834804147 seconds)
    (26/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.208118257 seconds)
    (27/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.730344418 seconds)
    (28/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 2.986771409 seconds)
    (29/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.93607089 seconds)
    (30/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.02957873 seconds)
    (31/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.83217619 seconds)
    (32/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.917339043 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.055069139 seconds)
    (34/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.732657387 seconds)
    (35/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.365709859 seconds)
    (36/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.963461844 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.903387498 seconds)
    (38/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.745414779 seconds)
    (39/309) benchmarking ("sort", Bool, false)...
    done (took 1.959787074 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.860229343 seconds)
    (41/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.749448474 seconds)
    (42/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.972392773 seconds)
    (43/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.846671805 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.851442394 seconds)
    (45/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.803782267 seconds)
    (46/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.726740558 seconds)
    (47/309) benchmarking ("sort", Int64, false)...
    done (took 5.523159202 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.766351702 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.120124941 seconds)
    (50/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.013815106 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.003435447 seconds)
    (52/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.739389124 seconds)
    (53/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 3.077551778 seconds)
    (54/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.920821516 seconds)
    (55/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.763238107 seconds)
    (56/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.221987837 seconds)
    (57/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.92221381 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.09673612 seconds)
    (59/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.860154569 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.924241102 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.835921785 seconds)
    (62/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.202911069 seconds)
    (63/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.987422299 seconds)
    (64/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.314329167 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.863994684 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.519587376 seconds)
    (67/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.831857045 seconds)
    (68/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.72669107 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.801646205 seconds)
    (70/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.179431352 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.436169968 seconds)
    (72/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.052274006 seconds)
    (73/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.770261318 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.034613565 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.087158757 seconds)
    (76/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.730994388 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.859252286 seconds)
    (78/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.765052049 seconds)
    (79/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.98297137 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.74221749 seconds)
    (81/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.835426441 seconds)
    (82/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.896928518 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.010730021 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.74629462 seconds)
    (85/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.903337138 seconds)
    (86/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.749974268 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.693955155 seconds)
    (88/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.832344799 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.362144441 seconds)
    (90/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.903542221 seconds)
    (91/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.8171494 seconds)
    (92/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.74332881 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.139577648 seconds)
    (94/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.835380033 seconds)
    (95/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.946250024 seconds)
    (96/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.730083507 seconds)
    (97/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.377335564 seconds)
    (98/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.008144638 seconds)
    (99/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.907344519 seconds)
    (100/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.897667331 seconds)
    (101/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.746624019 seconds)
    (102/309) benchmarking ("map", identity, Int8, true)...
    done (took 3.118760435 seconds)
    (103/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.889998928 seconds)
    (104/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.841057171 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.892449346 seconds)
    (106/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.745171253 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.779429028 seconds)
    (108/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.069475211 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.76700925 seconds)
    (110/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.880411344 seconds)
    (111/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.743789103 seconds)
    (112/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.109671467 seconds)
    (113/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.831838213 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.055768102 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.092235922 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.06398775 seconds)
    (117/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.642871343 seconds)
    (118/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.191783461 seconds)
    (119/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.929108457 seconds)
    (120/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.146566081 seconds)
    (121/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.079486024 seconds)
    (122/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.813933967 seconds)
    (123/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.837567576 seconds)
    (124/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.254542664 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.535668816 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.944499716 seconds)
    (127/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.693057852 seconds)
    (128/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.777691911 seconds)
    (129/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.846204771 seconds)
    (130/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.249415691 seconds)
    (131/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.777063027 seconds)
    (132/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.828195753 seconds)
    (133/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.729306362 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.875073582 seconds)
    (135/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.809348199 seconds)
    (136/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.060735118 seconds)
    (137/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.238444509 seconds)
    (138/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.781407644 seconds)
    (139/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.974162369 seconds)
    (140/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.966114598 seconds)
    (141/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.103018342 seconds)
    (142/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.749290227 seconds)
    (143/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 8.04336479 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.077917519 seconds)
    (145/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.911071048 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.858903121 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.002512942 seconds)
    (148/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.745515527 seconds)
    (149/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.750128228 seconds)
    (150/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.488872268 seconds)
    (151/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.840558837 seconds)
    (152/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.085312583 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.794742777 seconds)
    (154/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.856141486 seconds)
    (155/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.748161706 seconds)
    (156/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 8.043659507 seconds)
    (157/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.832483365 seconds)
    (158/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.395408201 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.905963761 seconds)
    (160/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.281686089 seconds)
    (161/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.789838802 seconds)
    (162/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.909803372 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.763616793 seconds)
    (164/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.60769333 seconds)
    (165/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.943083763 seconds)
    (166/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.887565195 seconds)
    (167/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.125983275 seconds)
    (168/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.869481183 seconds)
    (169/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.167237762 seconds)
    (170/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.778594234 seconds)
    (171/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.893315812 seconds)
    (172/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.861689948 seconds)
    (173/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.776932162 seconds)
    (174/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.743325544 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.787682341 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.452170305 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.866215957 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.758219422 seconds)
    (179/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.094551268 seconds)
    (180/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.77930804 seconds)
    (181/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.830590189 seconds)
    (182/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.355803883 seconds)
    (183/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.062453312 seconds)
    (184/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.938429193 seconds)
    (185/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.769480356 seconds)
    (186/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.909702575 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.867913317 seconds)
    (188/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.859484194 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.114003765 seconds)
    (190/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.869238594 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.674788446 seconds)
    (192/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.776779242 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.715903965 seconds)
    (194/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.750226653 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.131475413 seconds)
    (196/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.783088181 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.79880281 seconds)
    (198/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.745154837 seconds)
    (199/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 3.313525351 seconds)
    (200/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.965954055 seconds)
    (201/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.759505608 seconds)
    (202/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.303806624 seconds)
    (203/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.833909692 seconds)
    (204/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.79115841 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.826407223 seconds)
    (206/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.857905938 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.787665767 seconds)
    (208/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.63585958 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.837441183 seconds)
    (210/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.861518378 seconds)
    (211/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.762534512 seconds)
    (212/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.766884056 seconds)
    (213/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.93576441 seconds)
    (214/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.797576495 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.996253549 seconds)
    (216/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.872274596 seconds)
    (217/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.843084292 seconds)
    (218/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.770041515 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.399193537 seconds)
    (220/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.867330613 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.509933976 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.961070494 seconds)
    (223/309) benchmarking ("sort", Float32, false)...
    done (took 5.467903153 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.763780293 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.763695341 seconds)
    (226/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.766722615 seconds)
    (227/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.047383736 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.099486403 seconds)
    (229/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.063658064 seconds)
    (230/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.903119076 seconds)
    (231/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.854715976 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.766967269 seconds)
    (233/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.846583657 seconds)
    (234/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.850316364 seconds)
    (235/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.145540983 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.762349087 seconds)
    (237/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.872579329 seconds)
    (238/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.047590503 seconds)
    (239/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.860316938 seconds)
    (240/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.761620881 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.777837996 seconds)
    (242/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.230244042 seconds)
    (243/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.912957856 seconds)
    (244/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.157779839 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.08074078 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.757375317 seconds)
    (247/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.062608768 seconds)
    (248/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.131447657 seconds)
    (249/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.926796895 seconds)
    (250/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.784825435 seconds)
    (251/309) benchmarking ("sort", Int8, false)...
    done (took 4.641006205 seconds)
    (252/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.021295534 seconds)
    (253/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.661932174 seconds)
    (254/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.656494012 seconds)
    (255/309) benchmarking ("sort", Float64, false)...
    done (took 5.528849821 seconds)
    (256/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.783269787 seconds)
    (257/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.787877511 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.898727987 seconds)
    (259/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.760981521 seconds)
    (260/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 3.0744683 seconds)
    (261/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.928005015 seconds)
    (262/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.767682169 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.027104749 seconds)
    (264/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.899931536 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.770517034 seconds)
    (266/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.814679506 seconds)
    (267/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.158478653 seconds)
    (268/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.869873773 seconds)
    (269/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.628577763 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.172350353 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.170010043 seconds)
    (272/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.197372488 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.112567817 seconds)
    (274/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.204705182 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.767147251 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.862739105 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.874142026 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.138638276 seconds)
    (279/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.800330646 seconds)
    (280/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.791670802 seconds)
    (281/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.906604364 seconds)
    (282/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.950539322 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.177318298 seconds)
    (284/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.936247777 seconds)
    (285/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.203802688 seconds)
    (286/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.833705016 seconds)
    (287/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.140722923 seconds)
    (288/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.771673319 seconds)
    (289/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.882263241 seconds)
    (290/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.005206682 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.892268578 seconds)
    (292/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.75493547 seconds)
    (293/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.121655589 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.564477467 seconds)
    (295/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.781447737 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.751925016 seconds)
    (297/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.179468015 seconds)
    (298/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.769908979 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.881761186 seconds)
    (300/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.849971979 seconds)
    (301/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.035858429 seconds)
    (302/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.066053044 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.413556002 seconds)
    (304/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.918445464 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.904242844 seconds)
    (306/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.775341816 seconds)
    (307/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.642982646 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.990365844 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.76818709 seconds)
  done (took 969.784157374 seconds)
done (took 971.510543161 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.034339489 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.791332348 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.775400745 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.796798158 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.886446289 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.803901466 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.78658966 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.77805636 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.823808667 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.825259411 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.77355136 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.803011835 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.778110179 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.776209477 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.775798301 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.790675819 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.094998536 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.809122309 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.792886824 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.785568617 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.792441203 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.773253019 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.826887738 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.801510343 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.780505819 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.778675219 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.77939834 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.795395448 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.888109119 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.779757237 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.77926102 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.787924244 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.091999349 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.808523315 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.771750856 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.795667616 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.787346231 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.786263479 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.781758665 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.808227687 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.178187558 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.817699133 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.779485042 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.777124322 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.778760434 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.78081154 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.777937931 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.785186535 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.792158268 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.793079351 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.170641612 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.834216985 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.779265896 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.77882602 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.78949272 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.779707131 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.781301394 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.79365035 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.79803342 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.794688258 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.077978835 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.815187317 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.780633603 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.795093222 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.78751327 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.206387091 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.813842394 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.7834669 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.179395873 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.823267272 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.205994005 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.829517223 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.780512822 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.792660162 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.809887866 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.094192938 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.806518959 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.778413482 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.785639293 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.775953016 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.790314311 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.792156105 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.785612172 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.779925922 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.793420122 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.806775637 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.789545369 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.781222505 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.787952385 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.798240009 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.787343192 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.790253833 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.782947457 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.776319119 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.79066913 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.783064045 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.782049122 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.785079664 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.784627233 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.791876619 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.179082875 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.836047387 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.777408288 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.776018227 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.779582956 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.794507619 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.178765965 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.821015718 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.801961469 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.828189892 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.782259275 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.077024672 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.813985373 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.799332105 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.791483008 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.785587539 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.777423493 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.077783597 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.206546453 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.837919132 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.784078305 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.777482331 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.796459243 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.784831398 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.778287721 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.098754936 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.814548905 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.795443876 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.903597281 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.792010667 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.81395881 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.7783376 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.784698407 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.81239633 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.797313611 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.81356369 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.78647408 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.797383778 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.798069631 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.780431739 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.793253328 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.794402287 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.785540917 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.789832339 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.777628356 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.813637345 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.798276085 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.794694295 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.804703911 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.904135097 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.782023015 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.078896273 seconds)
done (took 281.354924335 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.849460886 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.776798835 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.873284899 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.780360335 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.858045755 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.864956527 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.780241667 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.778841616 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.778721159 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.17949602 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.778458815 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.779370883 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.776401469 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.779471292 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.860970879 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.781097298 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.778435645 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.111990765 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.780894451 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.853149477 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.774306205 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.779303843 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.780329777 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.156082102 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.779200141 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.772783194 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.849521874 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.781303697 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.120953615 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.778626594 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.774553847 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.118902604 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.868680452 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.799863693 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.793303399 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.789141735 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.85915969 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.786653488 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.862702988 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.860650272 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.875650348 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.821028585 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.778894184 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.773279538 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.784735257 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.781689567 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.779944607 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.810055082 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.779200715 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.779982043 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.113147732 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.79264539 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.792524871 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.780510745 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.780647194 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.80240489 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.780830473 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.781130617 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.870019704 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.782309879 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.841725212 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.1563599 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.180828278 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.78528923 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.77998131 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.780382319 seconds)
  done (took 178.349559178 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.847114278 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.857390288 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.845423718 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.783882152 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.829041961 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.847985795 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.78534896 seconds)
  done (took 14.495546051 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.785815966 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.784437025 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.83381875 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.833429389 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.781996036 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.93522265 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.784107084 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.791654059 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.781204651 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.806618354 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.782096492 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.784438758 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.7911358 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.781716805 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.832777395 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.792800073 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.899660223 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.782900253 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.78387932 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.934098232 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.783203741 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.791260725 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.807787879 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.792567063 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.783633072 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.788119037 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.37518399 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.784435066 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.78279604 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.785439897 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.782952331 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.823288862 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.788159427 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.778703734 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.78240464 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.896993764 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.783371663 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.782119776 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.785318224 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.779412616 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.785670573 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.785257629 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.785984221 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.78618019 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.786976652 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.804980761 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.785516316 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.786135887 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.785223225 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.786029506 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.807656181 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.785937972 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.783630814 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.784101094 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.825411083 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.793979313 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.785530292 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.783226149 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.787022225 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.783704008 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.936617692 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.834247036 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.786552337 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.834628401 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.786981112 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.787193253 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.790233288 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.78704535 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.879558293 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.787486429 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.834525729 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.784968866 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.941219421 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.806435229 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.788101573 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.786109198 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.788134638 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.786609742 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.784936354 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.790567169 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.784499167 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.784763659 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.79019237 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.784769336 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.784924344 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.896348708 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.920743228 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.784965494 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.796380065 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.790993367 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.785892411 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.828010362 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.788374933 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.785816051 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.839892685 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.901171722 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.812214085 seconds)
  done (took 197.403750235 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.789629093 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.792844682 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.785952506 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.801727928 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.785450937 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.784707514 seconds)
  done (took 12.444115663 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.787268305 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.788996374 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.791122864 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.788607744 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.786832016 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.788219735 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.787183478 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.786409689 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.792195826 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.788829505 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.786633091 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.787898937 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.787164018 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.787665411 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.787856504 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.789797422 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.788179704 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.787294276 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.789717966 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.788976437 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.93139153 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.787320633 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.787715979 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.787282081 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.795725869 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.791041721 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.796311285 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.790579684 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.792389824 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.796300643 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.792948732 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.788038078 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.788669052 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.793805764 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.793804727 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.791033924 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.79480393 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.790764844 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.787881013 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.789640518 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.791553431 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.78987141 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.791696914 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.790360989 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.790004362 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.792996653 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.794510373 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.796686557 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.789892222 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.79035865 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.790359794 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.791770621 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.793557631 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.790263566 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.790530598 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.79365875 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.79397046 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.791685594 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.789963319 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.790425488 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.793638974 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.790508119 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.7910131 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.795294295 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.800225392 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.791713609 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.790898275 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.794778041 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.791804347 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.794402579 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.790375346 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.791035267 seconds)
  done (took 131.790443446 seconds)
done (took 536.198554437 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.928394661 seconds)
  done (took 8.636388576 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.935792854 seconds)
  done (took 8.687561538 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.302849595 seconds)
  done (took 10.011602863 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.805349053 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.811796281 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.793179132 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.79158158 seconds)
  done (took 28.936072145 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.904328661 seconds)
  done (took 8.612654497 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.81086812 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.78751603 seconds)
  done (took 15.342083519 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.937980993 seconds)
  done (took 8.647551405 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.907503958 seconds)
  done (took 8.627559486 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.801049779 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.816331426 seconds)
  done (took 15.340839695 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.771176283 seconds)
  done (took 8.481890351 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.447329769 seconds)
  done (took 11.251524455 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.812203751 seconds)
  done (took 8.627640732 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.863428406 seconds)
  done (took 8.572630733 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.85810096 seconds)
  done (took 8.567687113 seconds)
done (took 160.049821313 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.790378945 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.78497816 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.784427669 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.784826552 seconds)
  done (took 28.853359271 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.828014458 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.827984773 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.830401746 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.839000442 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.83162474 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.827425268 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.821832768 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.822769734 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.838609412 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.830740405 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.830565133 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.83101397 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.828250895 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.820163341 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.831327198 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.831389926 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.839734804 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.83047124 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.821262502 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.831146712 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.795946383 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.839674521 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.830916199 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.799029704 seconds)
  done (took 45.569500658 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.989455151 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.86159374 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.945335816 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.844555291 seconds)
  done (took 9.35163724 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.846977279 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.848049322 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.860100255 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.898858058 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.933595624 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.857651683 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.822006894 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.817684465 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.803446894 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.849057789 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.923774452 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.844264379 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.932084893 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.795762829 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.975451501 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.796314982 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.796758053 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.848830545 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.899499818 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.911430001 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.797734825 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.84814956 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.851446057 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.843977536 seconds)
  done (took 46.315415757 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.796375832 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.806128123 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.802468496 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.795867658 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.799154087 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.795734016 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.802085909 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.796416061 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.817340363 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.796415064 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.794436022 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.796283046 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.795499485 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.795320116 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.795805716 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.808432472 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.809042642 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.799910716 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.800787537 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.801928165 seconds)
  done (took 37.717872595 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.787741425 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.639944912 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.138782447 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.044823961 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.787436911 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.792678303 seconds)
  done (took 30.903214448 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.80734147 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.800635775 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.793208467 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.852091087 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.937000598 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.804077926 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.795083004 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.807684076 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.84287412 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.861310299 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.817968465 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.824229497 seconds)
  done (took 23.657373149 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.792440264 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.795450531 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.792757184 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.810963393 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.806048007 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.803274269 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.801206817 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.78938957 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.809246617 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.813750362 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.803190498 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.806523559 seconds)
  done (took 43.342883827 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881191933 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.680250343 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.494305495 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.512046407 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.326963502 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.006711977 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.308098041 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.975112922 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.801760264 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.066847144 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.437065615 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041584799 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.045565183 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793303344 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.869257761 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.256751521 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.096589121 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048223488 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823148255 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.497966572 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921044794 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.368363614 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.583588618 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.926214474 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.004929813 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.926466823 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.053883533 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.748706565 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942893255 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.83113836 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80359988 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.79482694 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.068215753 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015671889 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886062828 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803618045 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.446936384 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.510331253 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.783631373 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.507291675 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.526078565 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.933379546 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803127662 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.79584319 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.72743132 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354865304 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.98135944 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.803483047 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.496697882 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.797308368 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.80505312 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881547541 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.800847078 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.612641315 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750068363 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.076087431 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.793468872 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797572107 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.359739092 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.911415119 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.489190145 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.737952746 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.884845984 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.564022145 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.290652747 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.953096808 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.799110918 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.799684697 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.730284175 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.557187321 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925321727 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.939937716 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.814339429 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.448449882 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105285044 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.517222111 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.885824694 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113577508 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.641204522 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.737399048 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023441309 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.753505158 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.730675271 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.635833045 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.73054888 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074618648 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835953696 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.469686598 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837774233 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.971921347 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.81060592 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817403466 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803932718 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.022431658 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.678036694 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.798943863 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.399567591 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.086824303 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819133959 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.976525782 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733910425 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.801080542 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050961781 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.007926664 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.083235454 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.269579652 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973458099 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.803724032 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.886117967 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.759508951 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.814557245 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.088066083 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865167603 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.930099749 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937411129 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.754750258 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122203354 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.830522621 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.972918475 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.486487797 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.070065882 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.133932212 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.052219338 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885005071 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.802106313 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.799494901 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.608758 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.427454128 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.021748826 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.796052901 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324429684 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.81864974 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.798995614 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733807353 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.460445821 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.477840296 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.928359455 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.021207414 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.792977303 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.078870436 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733020481 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.946270012 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.792404319 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.020790182 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.46845634 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.891992392 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057505892 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309611174 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.076448784 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.814064905 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818539476 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882161392 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822199157 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.25644466 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.057248499 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.802777554 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.804278816 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.583520867 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.884178437 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.802007486 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.806057919 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.599783479 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09994092 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.835568284 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.809388653 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.691279228 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.813962481 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884735241 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.80768232 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.812515935 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.327806358 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.547422452 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.811375131 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.449031614 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024431599 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809572674 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.562834868 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.002382108 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.889223385 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.096784614 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.872610789 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.737176087 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.50296568 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.503536076 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801994127 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.735499428 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.802661843 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808250463 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815749874 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.993630188 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.098672237 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854486473 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.566221767 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.925233946 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.811058682 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.806581352 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.802983867 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.305581554 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.929002082 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.451691842 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.813473603 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938146787 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.815753312 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.736319565 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.805891208 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.807227439 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.802423268 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.757505632 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855346277 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.576143516 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146324877 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064613837 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.452061816 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.820542826 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.544516024 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.943322332 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.838011317 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.429011838 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917814051 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.812473978 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876487425 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.813906611 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.573626152 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.60321946 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.368555957 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131268195 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146635745 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266859048 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.193703154 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.147800898 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.983938637 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043472675 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.333787186 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.868062725 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.987334982 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.753219698 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894915378 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.480240325 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168439739 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.818546279 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030901634 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.200699891 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.510148253 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977510082 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.020404663 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841636668 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.625664075 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.840298054 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.324906421 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961643453 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.471667429 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037783768 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9841306 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.447368585 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.929743268 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.803212257 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.304215603 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894250706 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.52093749 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.165865984 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.350437073 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.507989416 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192251305 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.817206161 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.250578053 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187815239 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.140803887 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.905144876 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.743998213 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.817296071 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.817297864 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.804555063 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.784725018 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.689692854 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.07200324 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.819209645 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04195803 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.092797303 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109040746 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.721719384 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.812870043 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.807218485 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119063484 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.491771893 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049116349 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.161350948 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.390472531 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819953627 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.741148422 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.741817305 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.511282429 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.816931006 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.781774165 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062420298 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.919761133 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.761806411 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.209458222 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123087699 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.062660404 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.821757307 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.099511639 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.095764874 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.540974428 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837376759 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.909218622 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.446565418 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.514704943 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.030020401 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.043405893 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.632718018 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.038765648 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.4721778 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.792453684 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.807199532 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.028449448 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.030932853 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.512976504 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08144988 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.534279824 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.82005662 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179046971 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878265731 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.519883216 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.03833478 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.900267829 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.817537291 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891671529 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820227733 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.82109901 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.823497723 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854191086 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.523523835 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.956193997 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.824815046 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90061234 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.959458731 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.403547346 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.821467055 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103938761 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19335429 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.162160406 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.881497135 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.812306814 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818805841 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.744845255 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949252557 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.255227844 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.08702818 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.943706628 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.947458826 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83688107 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.456630884 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.104749847 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12660763 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.087033648 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.705515001 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.814677181 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.900655586 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.035767935 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822760604 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.022966831 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058553771 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161513052 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288375921 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.944592041 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.095970579 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.089731655 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.190054571 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.814513935 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401596629 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.826016027 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.357611641 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.858981742 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.521281792 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116506114 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822518239 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05235327 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.83987995 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.010561693 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.266176223 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.546808 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.183953051 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.814234986 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.880583284 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10802741 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.240819338 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137841194 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896502748 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825708407 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.513083628 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954097979 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.732105839 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.068654058 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.816023729 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025626051 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.5272553 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.824347894 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117835034 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136288597 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.81351708 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.768657078 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866913078 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.825054428 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.037967943 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109750389 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.073905025 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.82507278 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.823713359 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.62954863 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121304893 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.886328062 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.749807758 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.819661041 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912307796 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.064695432 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.836221051 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.334232388 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.519057993 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152438778 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.739543394 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838603314 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.221564895 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.283475257 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175935831 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.351929104 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074762668 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.379975385 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.67709334 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191688526 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.82228732 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.213356776 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196731777 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.820163238 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.331449478 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929863282 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.106381181 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148052827 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.828218392 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.647534126 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.872845621 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039331472 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.410436744 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758322472 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.820566046 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.875651775 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.82318981 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.813860194 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.829066232 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.803784833 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.687074276 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.65915555 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308657193 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.823026512 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.885203347 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.456421885 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.379523524 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923167127 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977211514 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.826929858 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.530346494 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.110214208 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.070851186 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.321468833 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.892873505 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.821666381 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82018375 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.744963982 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.015974421 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.008910485 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13973529 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.162464557 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.930597236 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.822135135 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.033482082 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028635599 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.52694936 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987521403 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.210463461 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933319098 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.744331248 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.530553719 seconds)
  done (took 1650.569373436 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.823952393 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.840509631 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.831330895 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.898971722 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.839280789 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.839442981 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.870909661 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.830119304 seconds)
  done (took 56.514191661 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.817126802 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.999830762 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.826394086 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.817372308 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.841650274 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.817896882 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.008111765 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.829907338 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.833346399 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.826961255 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.819520786 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.832083986 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.116439479 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.842342536 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.818954277 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.84098942 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.831116822 seconds)
  done (took 73.470349928 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.818988477 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.993136851 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.850343925 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.85240859 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.704004434 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.833599664 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.762935218 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.82287383 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.821571918 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.994610892 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.163050913 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.868466457 seconds)
  done (took 89.228268929 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.834529133 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.824587953 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.824446842 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.825391538 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.823482749 seconds)
  done (took 10.881289149 seconds)
done (took 2148.102710206 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.060048279 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.006513224 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.053223755 seconds)
  done (took 5.800090322 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.963428359 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.01530251 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.131573805 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.138245487 seconds)
  done (took 9.992836284 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.103811588 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.203900678 seconds)
  done (took 6.049505919 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.14157938 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.834744579 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.208929777 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.819121581 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.822232075 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.82447453 seconds)
  done (took 22.213153955 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.826875067 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.827684849 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.824913227 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.827673683 seconds)
  done (took 9.049443421 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.804293611 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.495998602 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.808214315 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.823926826 seconds)
  done (took 20.674572143 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.97297621 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.940691118 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.972883075 seconds)
  done (took 7.629143538 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.425974501 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.16881008 seconds)
  done (took 9.338300007 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.985463184 seconds)
  done (took 3.728371543 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.85503773 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.09716078 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.339862075 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.394576926 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.478018801 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.071862224 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.172356267 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.060105021 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.273370761 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.313092258 seconds)
  done (took 24.799071454 seconds)
done (took 134.259650542 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.371244239 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.851780105 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.026533663 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.187340454 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.05865391 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.025089259 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.037402542 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.182545099 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.87426985 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.864144847 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.19920623 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.057761307 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.986303061 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.840708506 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.994171413 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.839263148 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.049005396 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.21120243 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.868901138 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.115038537 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.046692953 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.830105727 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.023426085 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.846784295 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.054625954 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.978102957 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.375871793 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.849747158 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.003614041 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.388046198 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.981013727 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.255802502 seconds)
  done (took 167.019283286 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.82334944 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.824213277 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.824067695 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.823501689 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.295031211 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.826189752 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.82497117 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.823246824 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.245345159 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.23815451 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.823438748 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.27496576 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.82646734 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.825027454 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.826382998 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.823745873 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.398342505 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.825332104 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.824457361 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.823747913 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.824304036 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.112398699 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.825018235 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.127632666 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.394147575 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.826266603 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.823889715 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.825593684 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.82408687 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.823261895 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.8264925 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.824622553 seconds)
  done (took 207.626900479 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.825053551 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.825383159 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.825164571 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.825806449 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.826360104 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.827642424 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.825935725 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.824898669 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.594100204 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.558227191 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.825702641 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.828103156 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.830969454 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.827564421 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.828832299 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.823956322 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.825615564 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.827017676 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.826961887 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.827366796 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.829898706 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.581648935 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.83380114 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.616926347 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.83738929 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.837091378 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.826521534 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.841800357 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.845572063 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.843357533 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.848023946 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.830099267 seconds)
  done (took 219.351369155 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.089929919 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.835525788 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.835343962 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.742990358 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.835970258 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.83382919 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.839701995 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.082499076 seconds)
  done (took 18.868585545 seconds)
done (took 614.617139797 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.310545293 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.165420266 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.01674665 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.859820192 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.124087882 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.891756353 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.855300747 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.929686497 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.487704742 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.934308266 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.534887023 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.878345604 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.613222611 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.887949401 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.977576099 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.920555918 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.434135809 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.52244011 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.037854767 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.93482133 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.029780942 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.79447062 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.940749122 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.508090487 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.637364489 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.843142243 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.929097712 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.436684342 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.868311959 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.015729575 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.753649297 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.167337676 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.870022863 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.852895929 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.914739452 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.889520141 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.117786998 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.864018635 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.972935427 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.606980095 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.935951784 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.384517117 seconds)
  done (took 101.401631138 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.823022555 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.822044896 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.822550038 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.82061796 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.822206511 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.821370646 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.820718306 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.821979066 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.821185689 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.821887265 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.822821882 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.823111082 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.82159924 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.823136287 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.821663627 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.820818316 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.822324201 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.823089582 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.823971378 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.820631248 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.822787369 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.822205082 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.837266619 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.821448127 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.822905128 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.823135404 seconds)
  done (took 49.15285216 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.840033755 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.988784056 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.076584805 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.857536223 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.835107691 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.837217724 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.854363945 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.843639561 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.837104464 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.837483075 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.940265015 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.84547688 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.854644111 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.073191054 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.853507815 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.838857541 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.84218559 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.835950701 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.995318463 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.853874466 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.856151453 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.845271827 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.856584549 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.85125792 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.836829454 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.83681349 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.839206402 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.271730653 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.84716802 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.940517863 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.894292857 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.860227849 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.217763477 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.088682251 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.896232067 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.848544244 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.839667267 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.944641684 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.844943238 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.837109069 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.854522053 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.844449274 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.073880755 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.337601978 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.854336087 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.839968598 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.280383144 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.960726983 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.881446309 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.848801532 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.077794059 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.857788047 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.841352373 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.838517559 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.874298188 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.843356202 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.836930503 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.137873655 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.850540373 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.855897454 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.848229999 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.839089321 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.999352216 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.851487545 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.989631097 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.850779169 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.844371334 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.839610266 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.076874356 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.858626074 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.331191608 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.856197838 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.841005192 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.942268187 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.9946314 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.319214604 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.855108499 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.998343967 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.234310999 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.866374835 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.848987204 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.261826054 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.871485638 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.848612021 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.843296602 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.843742998 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.842419821 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.885026072 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.853881039 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.271659967 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.341089518 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.154661001 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.866897689 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.855783886 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.838827642 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.137916334 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.852619039 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.84214449 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.070629118 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.349456152 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.857360747 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.846135061 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.324777715 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.861165782 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.858554881 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.851811243 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.082445587 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.860340614 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.885884195 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.845129829 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.846573681 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.842591457 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.859004297 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.849364955 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.843565731 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.318982856 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.971162168 seconds)
  done (took 228.264273903 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.83773602 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.855832007 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.835353192 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.859956245 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.833683708 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.840756011 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.834259036 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.835477417 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.839828559 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.834721013 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.835112913 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.835220917 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.837877091 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.83619073 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.849633285 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.840324019 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.437356599 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.836930661 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.834255259 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.836344288 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.490766238 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.843601717 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.835430126 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.836553852 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.835984306 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.834675204 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.83892387 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.859994986 seconds)
  done (took 166.523413352 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.844698628 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.955735506 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.863310079 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.869960188 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.856517223 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.843256696 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.865675107 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.857405347 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.847734665 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.842770181 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.842581909 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.904023958 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.857809387 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.944956052 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.873528344 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.876458436 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.94673458 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.852611966 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.844661713 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.844148094 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.871598219 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.837725494 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.903684565 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.97102377 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.868017538 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.959288067 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.850787048 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.847229003 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.84275202 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.960340675 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.866188031 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.906906506 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.877319174 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.861121411 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.964057579 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.961382087 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.952023784 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.875200751 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.848060653 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.844258228 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.843620769 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.829983865 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.959388762 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.86808763 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.84400834 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.948316181 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.870900125 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.848236244 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.855861294 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.845159553 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.85706869 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.861802401 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.911508182 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.978373635 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.882179306 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.871185219 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.869328535 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.14616473 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.85451202 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.945543779 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.836431162 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.966243946 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.871018226 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.831724571 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.846819846 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.851211407 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.875401886 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.879500854 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.949428629 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.850679941 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.943572828 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.883346741 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.854008792 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.846611296 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.849939825 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.962723174 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.964074511 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.88246865 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.884815424 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.876685461 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.840522483 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.844274378 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.833453723 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.862255298 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.852829632 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.964230597 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.967031609 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.855549272 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.84954001 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.850364666 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.849659592 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.8710548 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.970486446 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.883437767 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.941205777 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.912720927 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.924903275 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.865428551 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.861042415 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.852253614 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.909719277 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.870082235 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.861025612 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.196130285 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.918595606 seconds)
  done (took 200.072024797 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.304806963 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.903534538 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.903391805 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.162186025 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.193068767 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.87554281 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.896566389 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.897928124 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.917519805 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.09333601 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.974736921 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.917838694 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.881719029 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.868671551 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.89715469 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.914271973 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.910329663 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.225158928 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.00388129 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.016307759 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.879437833 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.183201897 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.169475621 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.284015186 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.93245613 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.239917351 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.564922295 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.04106542 seconds)
  done (took 60.82274598 seconds)
done (took 807.985048165 seconds)
SAVING RESULT...
DONE!
