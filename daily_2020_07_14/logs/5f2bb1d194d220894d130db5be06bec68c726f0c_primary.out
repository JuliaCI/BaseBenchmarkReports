cset: moving following pidspec: 4178
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.605186429 seconds)
loading group "shootout"... done (took 1.242296357 seconds)
loading group "string"... done (took 0.415710812 seconds)
loading group "linalg"... done (took 7.870544325 seconds)
loading group "parallel"... done (took 0.157342774 seconds)
loading group "find"... done (took 1.38201945 seconds)
loading group "tuple"... done (took 1.875174807 seconds)
loading group "union"... done (took 12.926272299 seconds)
loading group "dates"... done (took 1.316387967 seconds)
loading group "micro"... done (took 0.203212194 seconds)
loading group "simd"... done (took 4.249515411 seconds)
loading group "io"... done (took 1.018522621 seconds)
loading group "random"... done (took 8.597990702 seconds)
loading group "problem"... done (took 1.648045151 seconds)
loading group "array"... done (took 19.157669898 seconds)
loading group "misc"... done (took 1.538869488 seconds)
loading group "scalar"... done (took 39.495099975 seconds)
loading group "sort"... done (took 3.063418046 seconds)
loading group "sparse"... done (took 11.593281945 seconds)
loading group "collection"... done (took 17.46331557 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.512432787 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125673815 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.130681352 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117867064 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.143298405 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117818021 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123773268 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083788988 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.926228431 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.145016592 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.112055088 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.45637519 seconds)
done (took 5.302429193 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.166341454 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.092038559 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081072486 seconds)
  done (took 1.262349663 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.063795177 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128659993 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065188734 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065503976 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.064830546 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065244103 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06486029 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064485353 seconds)
  done (took 1.609555838 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072650289 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067706396 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064900151 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066666064 seconds)
  done (took 1.36345464 seconds)
done (took 5.571005082 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.246536911 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.106248258 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.29197901 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.398171422 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.468193219 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.089115017 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.073600069 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.069324655 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.128258152 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.311219205 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108636184 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.185277523 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089541887 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.18086822 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.991079762 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.119482469 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083377644 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.125526726 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090099518 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127513779 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.425095974 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.074222167 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.072117706 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.069354885 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.066781582 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.650844891 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.651687402 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.131281131 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081431004 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.1013064 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.114308658 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.642316232 seconds)
  done (took 10.499380348 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096381043 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.094815796 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067704715 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124871733 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094246526 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068790234 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074086616 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066284288 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091901497 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.125079071 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090993921 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101894845 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064777779 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068990172 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.078898715 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.198973032 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078083917 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.07979874 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067614175 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079444598 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10729122 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078575563 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079188166 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078825881 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128154841 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.169759665 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.094348291 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097438032 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066419181 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080437272 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114045796 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127128091 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065314782 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065100568 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.120612666 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09397475 seconds)
  done (took 4.521355142 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.985774968 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.114604528 seconds)
    (2/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.089500052 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.106149059 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.626054691 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064436991 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.16111608 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.246311944 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072760761 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.468967516 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.151818723 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.114734746 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.149416965 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.115850046 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.069807794 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.293086407 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.118652189 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.433379006 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068188076 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.066842195 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.064528035 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.06863692 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067459759 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062755617 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.070746488 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.091405184 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.087494454 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.18111676 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.969027992 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.264320328 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065053394 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.159067765 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.087157347 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066167209 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.07003214 seconds)
    (35/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.361563344 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.08520539 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.393430683 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.122722856 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065802478 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.181696696 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.114823995 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.062012168 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.117613095 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077894604 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.068527586 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.068093901 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069957859 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070255827 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07839858 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.100686649 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065831816 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.062840341 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162750976 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062333999 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065455255 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.067175458 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.14907433 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064691369 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.15165054 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063854465 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068279465 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.097020071 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068644225 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.095140185 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.110143179 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.334477056 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.05474359 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066216726 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.051644317 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078567618 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.06685457 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.07261186 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.0636558 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065993143 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.068850551 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063887636 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067662987 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.078162364 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069409478 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067730613 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.111516254 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064561753 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067664308 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.06457068 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.07254329 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.098361171 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062837169 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.461743983 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.097427943 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.064292011 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.076454089 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.104174837 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065196386 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.073341859 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067925767 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066711242 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065561892 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067729383 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.072175268 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.093403705 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.07042592 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112469322 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.023553508 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.065735022 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064718529 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.071134957 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.071111188 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068979838 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066034483 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070898238 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066739946 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063655622 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.117831721 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.063570367 seconds)
  done (took 21.78435788 seconds)
done (took 38.882793014 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.270417954 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.087251439 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086900806 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086456777 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086444993 seconds)
  done (took 1.819488359 seconds)
done (took 3.025467839 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.110733639 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.064374115 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.107532991 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.102883944 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.065599017 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.063652243 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.101472133 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.062666618 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.09866742 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.101850256 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.103827837 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.103104993 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.063370614 seconds)
  done (took 2.345034104 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.070474232 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081215325 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.084393366 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062927755 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072605128 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.082739523 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.062291795 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081155043 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.089228238 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.082744121 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.082693167 seconds)
  done (took 2.025380674 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069658723 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.0851348 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.085914182 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062570378 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.074473278 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.082365122 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.062522475 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.082327122 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.087052269 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.082367285 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.082324504 seconds)
  done (took 2.021780971 seconds)
done (took 7.557907513 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.070919965 seconds)
  done (took 1.221772445 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.544961611 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.806794756 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.072097892 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.092484959 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.195016877 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.105243649 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.257502517 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.077931283 seconds)
  done (took 8.5005358 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.10311066 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070337518 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072242559 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07059125 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070131325 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069365914 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070900249 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06991888 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071045077 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069777401 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070428751 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070940998 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069151534 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069357982 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070821007 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070271163 seconds)
  done (took 2.415899117 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.100634382 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.099373332 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07618645 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077459169 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074621294 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073870676 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076715631 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075455263 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072969301 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074391331 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077524515 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075738927 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075285328 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066541363 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076995656 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079460618 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073697281 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07686013 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077258243 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077642962 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077896522 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066190935 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075625124 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07830467 seconds)
  done (took 3.152153294 seconds)
done (took 16.456257374 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.12648719 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085156912 seconds)
  done (took 1.372142355 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.07748443 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079352704 seconds)
  done (took 1.328072632 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084215272 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066233552 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09385037 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07926696 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067988125 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066930612 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089182938 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064634035 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064375208 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065793619 seconds)
  done (took 1.914690389 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069376502 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.082049389 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074840984 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.089763391 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070133819 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06247846 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.06928729 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.063027082 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.072578927 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061155731 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.067187637 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081516286 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.066727814 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084073173 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068710295 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067569419 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069533871 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065718793 seconds)
  done (took 2.46096269 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.062884819 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063983227 seconds)
  done (took 1.322017324 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065953438 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062260804 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065957124 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065845546 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.061764032 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061103528 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061851468 seconds)
  done (took 1.632336713 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.374854858 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121861485 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.33106931 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069024949 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.079256186 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249229816 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06182788 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068764573 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068811733 seconds)
  done (took 2.662002421 seconds)
done (took 13.874924124 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080921126 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083387986 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.091999051 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.437746395 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091021575 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065193704 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113393512 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.169690616 seconds)
done (took 2.341453816 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215152862 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.487847168 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.961160078 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.06500333 seconds)
  done (took 3.708753948 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332346687 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.084677885 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075919098 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065639403 seconds)
  done (took 1.765233647 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.063539523 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069632314 seconds)
  done (took 1.33479049 seconds)
done (took 8.228335277 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063273465 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.062304812 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088438131 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06298741 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.062729148 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062966819 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062070888 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.062555629 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062333222 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.062043118 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.062032397 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0621992 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062572754 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06254765 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062044792 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062263069 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062745945 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062414297 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062141736 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.062014782 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062482352 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062215573 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061950836 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062074191 seconds)
  done (took 2.759312959 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081854029 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065476653 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.066613052 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066662377 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.066642157 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.066082129 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.066015583 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064428104 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.06607721 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.064458506 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066383927 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06679229 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.064064375 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.066263821 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064623437 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.066603957 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.06607693 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064815427 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064241885 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.066438279 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.065949214 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064454383 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066542054 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065700996 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06654857 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066489732 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.064264565 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064913285 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066271231 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.066300262 seconds)
  done (took 3.202542501 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.064011144 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.058941793 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060737208 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068233333 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059023783 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.060160034 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060772633 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.058764899 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.059479648 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061017453 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060349278 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.058890174 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060018611 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059203682 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059198135 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.059963139 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.063036247 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.0763658 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.05926237 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.058975896 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.062812593 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.059405243 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059100246 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.059014678 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.060165709 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.059221571 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.059144287 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.059481661 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.059199974 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.060377352 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.059139718 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.062437248 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.063278383 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.059311838 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.067627118 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.062901761 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.059219594 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.062648546 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.06069855 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058957609 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.058783041 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.05913988 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.059330197 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.05896147 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.06763722 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.059376904 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.060661653 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.059828923 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.059419756 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.059218659 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059346594 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.061694204 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.063945967 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.060956597 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.059064072 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.060673149 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.058658014 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060221449 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.059154686 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.058933552 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.058895033 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.061855958 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.061412555 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060123274 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076779217 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.061193179 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.067875534 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059224095 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063421419 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.062638019 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.059801664 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.074579594 seconds)
  done (took 5.628185524 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088630508 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089177002 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064543792 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064327852 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060513991 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060071359 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068048058 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059865454 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064291326 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078952738 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060545947 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064073597 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063958415 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063981924 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060332199 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064061812 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068429313 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060343338 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060183289 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064020638 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0602475 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067794161 seconds)
  done (took 2.687026438 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146096961 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066609676 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103352311 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078775374 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069411212 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078648093 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065933859 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065854032 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066087901 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06657815 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066999622 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066262447 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069189671 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066802059 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066727097 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066438421 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066234461 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066578509 seconds)
  done (took 2.56044058 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077942702 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065843939 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087941625 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064637654 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065266386 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064626046 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069155943 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071261379 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.064767154 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065033376 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.070610401 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064986594 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065282066 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064686994 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064799236 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064731974 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065083501 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064849793 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070790702 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069205094 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069432399 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070998015 seconds)
  done (took 2.72392528 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076040206 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065519126 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078084605 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06637687 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060291729 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060536965 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.065631971 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064129078 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.065516651 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.063974762 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064319991 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060152084 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.066177948 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06399873 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066824908 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064535355 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064608029 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064161281 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063877789 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.05999275 seconds)
  done (took 2.526425314 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08821589 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063704935 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063948597 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081540163 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063549726 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063542159 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081894377 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.063323956 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.063499849 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08517005 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063834317 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06394603 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081426861 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082051591 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06328479 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081222479 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081845107 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081959093 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063345341 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063419409 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084926802 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063680423 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081215955 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063509615 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063317918 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063682956 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06327845 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081919857 seconds)
  done (took 3.233530911 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063522164 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071769325 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062776332 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062715466 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062759842 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062160438 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063256707 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063109029 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063647298 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063568865 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.062950485 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.062747893 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062348775 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062196127 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062381174 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.062300583 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062697366 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062538572 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062416485 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062757078 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062541192 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062587838 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062044201 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062873395 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062238744 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062655729 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062116979 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06242883 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062262654 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062074018 seconds)
  done (took 3.116418574 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074593637 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071967537 seconds)
  done (took 1.375286504 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062461286 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077107937 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059906324 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069584881 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069288479 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06322224 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070594875 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069146298 seconds)
  done (took 1.764006762 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.070817736 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.094445085 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.061609647 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.063982604 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.066644811 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.121917922 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.075417345 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.070052011 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075134248 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.061533065 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.061036844 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.0736944 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059935911 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071694238 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062954677 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069620668 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069894441 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074659099 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073383795 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060100183 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076322823 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066036666 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06068536 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.064241951 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.062123039 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067660028 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077449993 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073269051 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069720788 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058718257 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.083414896 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060492426 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.062392807 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069348324 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.066776062 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.061124453 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.099084273 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.061150558 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.067263224 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059760603 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073163452 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083305077 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074168597 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.080990972 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.062678828 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064002825 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059563293 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.063315129 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062856475 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.0699606 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.059975332 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067001181 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059401949 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.063324886 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070089419 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061624917 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.068515 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069335953 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075894269 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07171039 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068695005 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07556032 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069299345 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.072332443 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.062685663 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079224264 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.061703076 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071869299 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074350504 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.063312445 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077486138 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.059392808 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058691659 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.059823445 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096187427 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.063059575 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.062287968 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.061323919 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060385144 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.063423675 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069864115 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.068078331 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066853895 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065460998 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077719799 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070668377 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.060405546 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071799307 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.078581706 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.060719675 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.060219324 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.075455728 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060680038 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.059763149 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078807491 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066338452 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.062938496 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.063587894 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062626248 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074949495 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063117891 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058460944 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067473079 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.062959187 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.064001193 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.065566249 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066827883 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.059726233 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070272901 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.06610603 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.062080825 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.05798336 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063264456 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.060991801 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.057707207 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067794505 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.059959528 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074703745 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06448868 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.072560802 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074442774 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.069084814 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076944239 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.059873411 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.057793136 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.079831125 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068091419 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.060760086 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077647053 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.057024799 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.197975262 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061789787 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.065929265 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.070968733 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060279829 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065244254 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.061610762 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.070172183 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.065156251 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064294278 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064528669 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068999287 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073897768 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.063480126 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068640396 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06279804 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077076078 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070807022 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064284426 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.067088343 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.06270148 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073594373 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066454282 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071775387 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060010108 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.062791071 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06187033 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07105651 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070238029 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064507136 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073828817 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064319105 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.063140781 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.061782338 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.063540979 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06286935 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066224381 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062427911 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069023179 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070218577 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.076482119 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075303414 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070106684 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.060492464 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.060727959 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.064011622 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060134033 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065048241 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070905182 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075285545 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073029702 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080298783 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.059459184 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067378604 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.061288891 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075001194 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070312578 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060086872 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064849323 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.057976757 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061587894 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069742448 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071050485 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.076085067 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074852377 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064655161 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.063898692 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060104306 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074789005 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.062559666 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068559732 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.071186274 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067180345 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.061303183 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064116253 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069453811 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063557318 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061113255 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.077290443 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070660184 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059920165 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073925678 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.061927963 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.072470413 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060071627 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062361475 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064212394 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064433232 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070180979 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078718809 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058594523 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062364275 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079200066 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.063176632 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063345262 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067707704 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.075706106 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064777337 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067995278 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069637803 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068125594 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063319154 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067883256 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.062395506 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.070683701 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.065712648 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071955012 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.060751264 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078539838 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058601595 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.074486324 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.060143997 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.070908461 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06192308 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068934853 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.061110401 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.076926495 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.062766404 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.061582914 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074020957 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.058360149 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070094156 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.058744453 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.063380197 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.0647347 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.070528144 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.063209897 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068588451 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062649543 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068406964 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.062948521 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067738026 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.070044604 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062702033 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058797882 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068965477 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.20723016 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070647764 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.065460029 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.0655213 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063856687 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07300284 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066251349 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063851108 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070495366 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065573788 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066176446 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064275213 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.065282482 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.064588347 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071451269 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070755896 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079710184 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068905775 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067988361 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071800446 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060573593 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079621054 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.061546476 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067975222 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060234466 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071685562 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071242471 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.062113986 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.08037523 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.0644951 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069105134 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075045324 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066583749 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.062174768 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077963687 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.064147475 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067738155 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066818202 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062606462 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.065311526 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064459153 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069092021 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072230262 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073206803 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063116784 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067572247 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069461859 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064007427 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.073524679 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.063394357 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069701277 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064871697 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059326205 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06515232 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071384145 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064404652 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066326927 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061882328 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.058919458 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.061977795 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.071153166 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064970439 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068685512 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075244838 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059200744 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.062485984 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060428084 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065659105 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079538051 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070630923 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067941381 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065394382 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060100214 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.063491952 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.064450866 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.062083273 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.066560974 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059835785 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060296009 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070431155 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.063892037 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063785873 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062006521 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.062944699 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069119297 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.066638555 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061993265 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065963734 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.061181427 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064068337 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059754077 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.063226516 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064020221 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059533641 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063058276 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.069866521 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.077093237 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065977275 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06919639 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063930996 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06831065 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07644841 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.070760463 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0638105 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069631584 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.05966815 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.081571164 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069873675 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068395514 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070043551 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064553987 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076864461 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.062192982 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069598195 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.077065017 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060193265 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.067394477 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.058037847 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.078067797 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063230368 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.059757562 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067862178 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066612248 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064282573 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074290577 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.061397131 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068001861 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066585652 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.061857948 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.062188095 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.062683337 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06757745 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076489186 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.061088126 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065916211 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067348461 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.209467724 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066115607 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075036678 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070392968 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064679638 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065398242 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063821909 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063585824 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074362545 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06229243 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065903342 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064739168 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.060919986 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066293721 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077086892 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071845457 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070417544 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060653631 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061310934 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.082018797 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06369413 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.066247989 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069097166 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069206109 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072859763 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071443516 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078278639 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.060559853 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06486311 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073246765 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.062683293 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.0613241 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063366207 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064062975 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070403824 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071060974 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068185925 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066421984 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067122393 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.073862948 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.06432219 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064828118 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.069106318 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.063773672 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071068862 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069253858 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069368107 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064238243 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06018262 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063698291 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07168214 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067972083 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071369988 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062957924 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.072167156 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.076747266 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067667706 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.066478476 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060285006 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.066405761 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069271571 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.066996691 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059939818 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064553823 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063398343 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.070363996 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071125228 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064109805 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060366674 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078976428 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068260378 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.069745693 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.064530833 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.064458192 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061953878 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060331029 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071527192 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060230667 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.063563437 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064598687 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.064282857 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.079225488 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069127237 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.080581715 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063044067 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064542646 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060318037 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070118971 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064803023 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.061000999 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070449672 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.059596495 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.079178373 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.073542326 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.072706527 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06012684 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064493502 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068806113 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076911171 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070543649 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070797856 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.066196721 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069983612 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.063651233 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.071331667 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.0605092 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.059107271 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071341567 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068524402 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071617004 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06010661 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.070730594 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.06381903 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068150487 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068220364 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.063376012 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062787518 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.063231595 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069213928 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063705533 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069465361 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063646897 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078310759 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.061511019 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070578174 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068317844 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.070377991 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073515179 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075313401 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068141496 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061321061 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066778887 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.067754709 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.062074615 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.063157474 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.064756188 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.224382694 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06565445 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066568191 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.077600082 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.074329317 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.063317588 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073799064 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065312006 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.071914489 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.063774926 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.071059569 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.069328477 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.063421308 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065178766 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064658923 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059916866 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060186318 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061254268 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071110718 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065010799 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062041216 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080043622 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.064033904 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069540555 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072084471 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066755522 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.064287116 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060260473 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064872303 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072742454 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076724324 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063798415 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069507721 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065228579 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071886116 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060410795 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069590604 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069090833 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069398545 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060555101 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062715777 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.0757186 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07557946 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064947642 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071238107 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070559081 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06491506 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.087051975 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070601822 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063849919 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.073166367 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064901129 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.059994002 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061895234 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.064458393 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07235253 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060627343 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.063873776 seconds)
  done (took 41.918961773 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102159032 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062265741 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061283212 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060860755 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074734154 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061847738 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060890342 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061528214 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061533806 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064703874 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060398867 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060770617 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073363121 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077396377 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07251789 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065720789 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060305597 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061678621 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060758653 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061709694 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07237304 seconds)
  done (took 2.735590561 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069557238 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077800499 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073819593 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079091997 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069572797 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066390512 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073647229 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066172616 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074165672 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071451651 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074635742 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066201058 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071001992 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070889685 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071217555 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066596266 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073957693 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069238434 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.066525028 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073483479 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066374522 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073058172 seconds)
  done (took 2.882694124 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064551857 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.062355244 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068986103 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060198254 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.060097943 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.065210804 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.059654811 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.063212136 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.062962116 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.063030416 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067953906 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.061070945 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.060082608 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.064617399 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.059399818 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.060674366 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.105002301 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061371699 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.061550255 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.05984232 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.066475699 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07177376 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059800581 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060162623 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.062886761 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.064702281 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.060081819 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.063495767 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.061153671 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063516265 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.062069122 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.059697816 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068398196 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.07049704 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063744751 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063385178 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.061749861 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06209522 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059987846 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.059880278 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069237678 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.061778427 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.060258743 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063032719 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070404927 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.060901265 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.059884217 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068074957 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059804157 seconds)
  done (took 4.452603054 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.076716609 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.11111969 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066406297 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091042085 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.075245966 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.068699349 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065496523 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091376919 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061826695 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06327011 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.076886565 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.076760788 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06461702 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.066675424 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067261078 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064414659 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065387695 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063361909 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068064789 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06413925 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.067981138 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.067545893 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.075535543 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076009087 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.0656461 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063435718 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064095995 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.066491653 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.075127023 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068957087 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.066553638 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067257757 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076277081 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065976739 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064030958 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06353229 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.076701031 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064680182 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.064313042 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062033955 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.063702922 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066587643 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.067559187 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077395932 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064403287 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.067974433 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064578629 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061687558 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.075993695 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.064104326 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069257218 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077278145 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065855632 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064651407 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066818969 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076232374 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064672637 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062823944 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065157015 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.075492425 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062597033 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066072125 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077000455 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.063695143 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.068763051 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.076940055 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068211689 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065545825 seconds)
  done (took 6.202362114 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072810084 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092541485 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073972364 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074088478 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072255678 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072763313 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072248556 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072432963 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07272766 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073337047 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072762624 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113852825 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066876656 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079375881 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072178368 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072560737 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072326732 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072075284 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072029465 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072241322 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072012376 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073108495 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07223813 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073291532 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076161894 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066788099 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072175733 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071756467 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073366119 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071943568 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076229542 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072001803 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072165201 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073036378 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076351436 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072132185 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061093272 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072047553 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072010264 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072177601 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066988816 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072910411 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072205464 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066814926 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07250276 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.0720198 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073032875 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076237412 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082634393 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073381731 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072517115 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07304694 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072195779 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072670403 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073291506 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082902802 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073167468 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07295941 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072425287 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073842283 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073545073 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083183326 seconds)
  done (took 5.936505869 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079260795 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069337947 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081747245 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063474265 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060395889 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070661071 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060531418 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060166379 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069163823 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.069230354 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071026992 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070785697 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073344948 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07105493 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071078783 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073886319 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071085403 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07075929 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068997433 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071003816 seconds)
  done (took 2.746184805 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073090075 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.079553569 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066435603 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071314142 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067503975 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07075105 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.065007468 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066325826 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066628139 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066975173 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072437859 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072871653 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066543264 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070851426 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072396657 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070221004 seconds)
  done (took 2.457557203 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.067888425 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070703687 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.070677879 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062702727 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065846983 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061391131 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.061712818 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060015207 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.060608474 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075327482 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.062457616 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072931479 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.061748779 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.060512242 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061371806 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06737187 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061093952 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061963136 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06189878 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.068244179 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.06854334 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063737799 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065590353 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.061949673 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06725447 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069197451 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06390124 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065377581 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061694702 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062313271 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067863604 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068474885 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061453049 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062531438 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06050987 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062247837 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.062072514 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062405903 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067180754 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.061547343 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.060151243 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066412433 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.062318321 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063351394 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061047107 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.061984902 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.060729889 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066863234 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.061957582 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066549877 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.061299207 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06401617 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.061959084 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.069196514 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.064819814 seconds)
  done (took 4.874593625 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077013624 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066675031 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0608095 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060885029 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065861009 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066296285 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066345268 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.065642522 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065698314 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059930068 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066256212 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.065169189 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066186154 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066430058 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066251648 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066243749 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060442663 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065463815 seconds)
  done (took 2.530119034 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071413233 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065452124 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.070848046 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065344746 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064968155 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065493688 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060689048 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061394389 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060933843 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065051488 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064902152 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064929248 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060680365 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064504303 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06513591 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064851606 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.065060317 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060763637 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064942564 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060703589 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06469578 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060574115 seconds)
  done (took 2.75691204 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.089184969 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082676802 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.124346554 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07851903 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087661256 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070872207 seconds)
  done (took 1.880709414 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089863602 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106423675 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065177786 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065579994 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078561119 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069551336 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069807055 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069719686 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078209009 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075366142 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069797437 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078372352 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078313411 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072054678 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078253031 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080503624 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069130315 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069861504 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065106771 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081730984 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070094746 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078389055 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069998747 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070041296 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069918473 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090245094 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081436889 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075660652 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072081447 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078336024 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081479557 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069320409 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077823254 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075021701 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065284548 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077719225 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069636862 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081289998 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078120593 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072057158 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065181227 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078083402 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078002 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071775959 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08178602 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069495527 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071989659 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06947772 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069736711 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08467462 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078442153 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072698935 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078555997 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082164872 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082274698 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085002152 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07569274 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072139442 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078406962 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075487967 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072183784 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078432277 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071997956 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075611395 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081684137 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07197486 seconds)
  done (took 6.337642906 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099690346 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066893337 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070640434 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076343008 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072619186 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069485455 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069986147 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069930004 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070065297 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065666963 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10671802 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070208126 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072519347 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07238516 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070366633 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070120216 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06994327 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072125104 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066295776 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085213001 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069819474 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072852074 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072510819 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072679213 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075913374 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081914067 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069765845 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070142023 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069388073 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069845921 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072570182 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070242008 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072187302 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065956746 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072108661 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069788291 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069926861 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072238101 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069465463 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078432986 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072019876 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081620716 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069780779 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069440115 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075756264 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069965146 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069576982 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065769457 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069297566 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065319017 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075486659 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075639372 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076066124 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072651756 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069788034 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069969925 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069732924 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069804558 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070165104 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082099769 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072114562 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07030215 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085225967 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070012701 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070364362 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072103301 seconds)
  done (took 6.176500893 seconds)
done (took 126.668226816 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210383097 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.181719718 seconds)
  done (took 1.725427281 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072812308 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096866937 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075597193 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133006064 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067536865 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103097879 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100650336 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.072574215 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067102643 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067338 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068917933 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072036486 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134948833 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067441203 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068189787 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072000917 seconds)
  done (took 2.696502266 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106351258 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.184422469 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109855721 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066925738 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106164228 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076757214 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067139465 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080292574 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07306662 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070474693 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07665099 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074295657 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070386441 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07449093 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073013035 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076176355 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070383103 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076310955 seconds)
  done (took 2.89439931 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.093757954 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.085879905 seconds)
  done (took 1.543383799 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159619347 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.130300121 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.198159862 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.331534419 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.14247281 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.28318305 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130678261 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.130028144 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.10822817 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12411929 seconds)
  done (took 3.093913845 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102276528 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170474735 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.304142271 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120316288 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074071313 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.088726417 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121431582 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079954745 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079798123 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079336988 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079573183 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079473306 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097355572 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075994003 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074836746 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075973382 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.099912341 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074672309 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073921376 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075428712 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099407589 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068241381 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076231397 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074113512 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077543248 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077336425 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069269493 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067902429 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075277934 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07424697 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078981595 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.085162509 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077429655 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104405912 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07176279 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105036851 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.074284564 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072220983 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073954956 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072543933 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.0762037 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07616921 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.076499551 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076126094 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068664626 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.074188691 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069122351 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067736207 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079499914 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069236768 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080163855 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078728839 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103842551 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069551025 seconds)
  done (took 6.057979223 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111826624 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112061636 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073830772 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.117541137 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111005734 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073705463 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109159771 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101774096 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110148956 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072863248 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070674091 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072263681 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083109419 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083423347 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.118138974 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.109250351 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072792173 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07033102 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107710621 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106863559 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067773199 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10276559 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098266784 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109357311 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067843024 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072541348 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069322296 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072072717 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076174398 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078102473 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070558171 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081634767 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.089631342 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078164044 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068253492 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069752398 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069666363 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079724612 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079336291 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077985738 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077641493 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069064695 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069778245 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070679835 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071946027 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068903187 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078014559 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080875081 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078278186 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070513611 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071828706 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069866616 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07059293 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079637707 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077398081 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081710196 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078333596 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067752774 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069452092 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07518316 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080735687 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079230369 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080242434 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072552302 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078461402 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069842021 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080365459 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08539595 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.0697661 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07147293 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069739932 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070090857 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070568142 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076454896 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076780966 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071974319 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07062698 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069826173 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079075016 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077521293 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069647343 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075668785 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067933338 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070485092 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071725082 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07182578 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076536434 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079787581 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.0723195 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068801111 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069433088 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069474246 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068304635 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076052279 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079485033 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079243861 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077437613 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070108515 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077785816 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077289364 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07098738 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077296671 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068575839 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070351439 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069517078 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077293095 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074538337 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077377786 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069193884 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068938631 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076139429 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079041733 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069185946 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076480623 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.214587185 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081414562 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071051151 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084934958 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069123643 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077206422 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069340365 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077418432 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068691957 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079433617 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068378293 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067333972 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068168788 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077901293 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0715147 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06897276 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070126736 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069822481 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077510092 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07920632 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070825636 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076300851 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076000727 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070098761 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075777137 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068144398 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076091865 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068592043 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071329441 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069262742 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081649744 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071443437 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070635387 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070925778 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080774664 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071761217 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080483178 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078566616 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069868854 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083516432 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080286023 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075204868 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.077523668 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069978329 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068852887 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068523489 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071102799 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076205017 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079720736 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072950997 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069513166 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077654545 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079585597 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066537633 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.0778452 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0780058 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078145902 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070808238 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070780905 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080712946 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077835324 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075990232 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.074987864 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075988712 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067738506 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075235062 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076470458 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069798057 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086168523 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069249548 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083717903 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078840907 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076771411 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078227926 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079842964 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079806927 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080903408 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084658832 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069642444 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069662231 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079427899 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070190635 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071145731 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078498582 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072124205 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072026767 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.0834817 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067861337 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076638012 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.0667606 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077717331 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06637639 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069431912 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081491399 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067821002 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069493465 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077314122 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068947582 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076386467 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07756779 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07466806 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066655427 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068578786 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075159326 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07384716 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066288222 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065708294 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068388435 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.072846595 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.071829029 seconds)
  done (took 18.623641306 seconds)
done (took 38.011566008 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.220747633 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.16231084 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.19823959 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119637564 seconds)
  done (took 2.174197871 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.10655979 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101653367 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.08055333 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062071393 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.086402716 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06194292 seconds)
  done (took 1.903266119 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.307801366 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21223921 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.186242508 seconds)
  done (took 2.105408548 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.226434575 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.204100851 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.45735242 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.28985391 seconds)
  done (took 2.690834904 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.138201814 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086897584 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064057059 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.075358466 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.122060248 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.151789773 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093021815 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.117859176 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.072606395 seconds)
  done (took 2.386729791 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.138584168 seconds)
done (took 12.82913777 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.210865025 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.491255015 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094540227 seconds)
    (4/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.224388551 seconds)
    (5/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.177715565 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.065096918 seconds)
    (7/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.200450905 seconds)
    (8/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.236029071 seconds)
    (9/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.189663682 seconds)
    (10/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093893751 seconds)
    (11/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.086971779 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072923139 seconds)
    (13/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.230874528 seconds)
    (14/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.196867771 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.11965287 seconds)
    (16/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.184413644 seconds)
    (17/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.217832127 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071616539 seconds)
    (19/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066791736 seconds)
    (20/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.17482878 seconds)
    (21/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.142146717 seconds)
    (22/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.061988151 seconds)
    (23/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074732352 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.070794888 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.084298532 seconds)
    (26/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.172638046 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.083996214 seconds)
    (28/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.076153466 seconds)
    (29/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.186215614 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074771238 seconds)
    (31/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.159623941 seconds)
    (32/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.106250313 seconds)
    (33/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077262355 seconds)
    (34/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.073461794 seconds)
    (35/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.197679051 seconds)
    (36/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.169611009 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089361258 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.084114194 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.070247925 seconds)
    (40/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.062687104 seconds)
    (41/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.06227864 seconds)
    (42/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.08378071 seconds)
    (43/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082850181 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.061050959 seconds)
    (45/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066067527 seconds)
    (46/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.062113505 seconds)
    (47/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071260513 seconds)
    (48/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.062570168 seconds)
    (49/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.176999782 seconds)
    (50/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.070481389 seconds)
    (51/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.070850218 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.143605676 seconds)
    (53/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.076141394 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 0.149663331 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.093302651 seconds)
    (56/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.074564151 seconds)
    (57/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068285702 seconds)
    (58/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.063329049 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 0.063129297 seconds)
    (60/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.070874942 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.187889181 seconds)
    (62/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.169418236 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076040345 seconds)
    (64/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088028702 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.106568148 seconds)
    (66/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.062685451 seconds)
    (67/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.061450209 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.062733275 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072454976 seconds)
    (70/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072453893 seconds)
    (71/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.207689043 seconds)
    (72/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.179402327 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.135474098 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061093843 seconds)
    (75/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.061279838 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091020475 seconds)
    (77/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070423993 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.072308651 seconds)
    (79/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.063178306 seconds)
    (80/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070454009 seconds)
    (81/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.135413604 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090404888 seconds)
    (83/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.060659468 seconds)
    (84/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.158842055 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.060708832 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08370454 seconds)
    (87/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.212830692 seconds)
    (88/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070865639 seconds)
    (89/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.203593029 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135302419 seconds)
    (91/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088595834 seconds)
    (92/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086100933 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.159442147 seconds)
    (94/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.070165174 seconds)
    (95/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068130013 seconds)
    (96/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.153148344 seconds)
    (97/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061791259 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088055904 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068397811 seconds)
    (100/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.073321519 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.085451291 seconds)
    (102/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.137011163 seconds)
    (103/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.173808559 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.067390607 seconds)
    (105/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.066931579 seconds)
    (106/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.242696523 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.076315006 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06090903 seconds)
    (109/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07673763 seconds)
    (110/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078498704 seconds)
    (111/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.062168425 seconds)
    (112/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.060828487 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115759907 seconds)
    (114/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.061445372 seconds)
    (115/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.137038388 seconds)
    (116/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.060632236 seconds)
    (117/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.06368869 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140953126 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07209202 seconds)
    (120/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.062125446 seconds)
    (121/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.069107075 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.108073533 seconds)
    (123/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.067826406 seconds)
    (124/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.060668889 seconds)
    (125/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068329472 seconds)
    (126/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.062585449 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.079533818 seconds)
    (128/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.078049749 seconds)
    (129/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088811562 seconds)
    (130/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.13406054 seconds)
    (131/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.060804725 seconds)
    (132/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068246838 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.119192052 seconds)
    (134/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073501977 seconds)
    (135/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.073377526 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069481732 seconds)
    (137/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.061087221 seconds)
    (138/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.069925721 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12461564 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.061848837 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071183777 seconds)
    (142/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087711169 seconds)
    (143/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.199696349 seconds)
    (144/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.061065025 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.060576133 seconds)
    (146/309) benchmarking ("sort", Int8, false)...
    done (took 0.16065857 seconds)
    (147/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.19355888 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073090298 seconds)
    (149/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.071396574 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.07543418 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.069479078 seconds)
    (152/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.135263997 seconds)
    (153/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078234722 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.159845618 seconds)
    (155/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.061042608 seconds)
    (156/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.061414248 seconds)
    (157/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.136853794 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.093155302 seconds)
    (159/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.155835381 seconds)
    (160/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070019848 seconds)
    (161/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.063877941 seconds)
    (162/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.137297551 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.061922077 seconds)
    (164/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.064078771 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137090213 seconds)
    (166/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.155063324 seconds)
    (167/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.169366442 seconds)
    (168/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.072178331 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.216834179 seconds)
    (170/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.061598308 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.06245854 seconds)
    (172/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.070763447 seconds)
    (173/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.063588873 seconds)
    (174/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.067679805 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140494919 seconds)
    (176/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.063510862 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.160535513 seconds)
    (178/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.060522553 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118098666 seconds)
    (180/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070126276 seconds)
    (181/309) benchmarking ("sort", BigInt, false)...
    done (took 0.234482005 seconds)
    (182/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.067483043 seconds)
    (183/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.182810999 seconds)
    (184/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.063585922 seconds)
    (185/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.140984453 seconds)
    (186/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.067287648 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.083817393 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.127657856 seconds)
    (189/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.061588002 seconds)
    (190/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.164932566 seconds)
    (191/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06270986 seconds)
    (192/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.06117738 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.16711189 seconds)
    (194/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.143023139 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.118080155 seconds)
    (196/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066408509 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.126738029 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.084872629 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.117676264 seconds)
    (200/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.411827979 seconds)
    (201/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067316572 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067255843 seconds)
    (203/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071442393 seconds)
    (204/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.068778925 seconds)
    (205/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.07170493 seconds)
    (206/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067645598 seconds)
    (207/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067089508 seconds)
    (208/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.071791853 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.089849882 seconds)
    (210/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.067151677 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074743352 seconds)
    (212/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.068184132 seconds)
    (213/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.137488009 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066523027 seconds)
    (215/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065804196 seconds)
    (216/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076079745 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07462136 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067653827 seconds)
    (219/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068281329 seconds)
    (220/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069096064 seconds)
    (221/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067584721 seconds)
    (222/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.209708416 seconds)
    (223/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069708944 seconds)
    (224/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173865743 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078816592 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078152724 seconds)
    (227/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.075185961 seconds)
    (228/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.067256037 seconds)
    (229/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.074065958 seconds)
    (230/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.065648978 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142584176 seconds)
    (232/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075474776 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.123130221 seconds)
    (234/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.064393536 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091130533 seconds)
    (236/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066426737 seconds)
    (237/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.06504019 seconds)
    (238/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073736306 seconds)
    (239/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066674617 seconds)
    (240/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073619196 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065072597 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094180139 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.063407875 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130628992 seconds)
    (245/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077012062 seconds)
    (246/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117887121 seconds)
    (247/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.062879771 seconds)
    (248/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.062310795 seconds)
    (249/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.064304476 seconds)
    (250/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.064621118 seconds)
    (251/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067451831 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130590689 seconds)
    (253/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.066095939 seconds)
    (254/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067542563 seconds)
    (255/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073171878 seconds)
    (256/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.06451186 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093219467 seconds)
    (258/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.066339919 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072249627 seconds)
    (260/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064591714 seconds)
    (261/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066346316 seconds)
    (262/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.064389658 seconds)
    (263/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.073511858 seconds)
    (264/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.066250075 seconds)
    (265/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.080447245 seconds)
    (266/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176760449 seconds)
    (267/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.065116781 seconds)
    (268/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.064265127 seconds)
    (269/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073636813 seconds)
    (270/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.097074659 seconds)
    (271/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06646209 seconds)
    (272/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.06458552 seconds)
    (273/309) benchmarking ("sort", Float64, false)...
    done (took 0.132682275 seconds)
    (274/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.065270638 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090017998 seconds)
    (276/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064941647 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06486512 seconds)
    (278/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066166658 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072222933 seconds)
    (280/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.06512148 seconds)
    (281/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.06587441 seconds)
    (282/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.064930393 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.141643136 seconds)
    (284/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.066804684 seconds)
    (285/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065114378 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122991008 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064549946 seconds)
    (288/309) benchmarking ("sort", Float32, false)...
    done (took 0.1339978 seconds)
    (289/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.164318765 seconds)
    (290/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.064116013 seconds)
    (291/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.064639078 seconds)
    (292/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064010942 seconds)
    (293/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066142665 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076327702 seconds)
    (295/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.064364356 seconds)
    (296/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.06372119 seconds)
    (297/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06594599 seconds)
    (298/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.06632216 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065132403 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072318462 seconds)
    (301/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064541283 seconds)
    (302/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.063930385 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092208392 seconds)
    (304/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066182451 seconds)
    (305/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072897978 seconds)
    (306/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066141757 seconds)
    (307/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.064330167 seconds)
    (308/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.064119899 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.064251776 seconds)
  done (took 32.234727578 seconds)
done (took 33.652132005 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.090097957 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096308307 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073752418 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.087547605 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083317104 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09862979 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073855316 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07845984 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081586838 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080942275 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.083480251 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.075135434 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078748734 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078827072 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075875963 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094282332 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082200176 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076607905 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076250831 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066560224 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076137589 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066678156 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065818739 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07292026 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077828577 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073378198 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076656515 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075744969 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065910724 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065673847 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070851424 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075212604 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068344015 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078801698 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074621332 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074608194 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076169911 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078071975 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065029355 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065783727 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076186577 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065639472 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074994284 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07255299 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070922084 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072487873 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075006523 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078863349 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092748379 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071198113 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076659718 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078180103 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078480828 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071217756 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070854647 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074713625 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071987889 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091778355 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075199336 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070783522 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075961966 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074994968 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07245471 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075117358 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074705356 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07639695 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079071696 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072494231 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07612316 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072782731 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064928984 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074655857 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070229217 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065879283 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076476434 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07934481 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064317821 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07008891 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074560527 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074203113 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065280846 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069511366 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.064991221 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070438289 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069575047 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071955644 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070653748 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07346379 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064719441 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074541734 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073875509 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073709824 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.064707869 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07967912 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065101892 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071685706 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065139366 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06573408 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.064735851 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071005782 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065224281 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070021125 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074611514 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064873438 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069992338 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07953083 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065022411 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073462017 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06472986 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065121541 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076950593 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076535092 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065117581 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07036102 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065020687 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070869231 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064983741 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064961605 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064851868 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065609656 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.06978481 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065596292 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069548019 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071078502 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078712066 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065212155 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069831827 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069197101 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065015156 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072616572 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065644794 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065283958 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.064865074 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080484226 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069687553 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065759928 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07093146 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069281913 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073904086 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064291337 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074617392 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071520266 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069833959 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07178335 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064443791 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076327358 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070391452 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069235716 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06436136 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064788459 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.205771194 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066362974 seconds)
done (took 12.803729249 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067312277 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.116879404 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.076453026 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.086769609 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.081692739 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066494538 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.072674943 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.088548161 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06910937 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.088249276 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088317689 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088644478 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.096573092 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063071444 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064909207 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06709312 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.064929848 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.072437004 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.084956699 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088548681 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.096922461 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.063783107 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.073563241 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.081198476 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.075426802 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.084833343 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.064793583 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.064868246 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068446937 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.084999413 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088773205 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.063909567 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.064610157 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.080468922 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.079177768 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.074352196 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.064151114 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.069492706 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.064155932 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.063541974 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.065162113 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.080470916 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.069104202 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.071758658 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.065444516 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.064869958 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064875802 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.073631233 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.079576999 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.071851875 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.076026177 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.081847684 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069066203 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06695979 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065026668 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.072421793 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066031823 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06679265 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066542561 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.065999713 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06591896 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067901913 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.066857542 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.067277477 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07106111 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.069226549 seconds)
  done (took 6.408903525 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086373202 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.095279163 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082968646 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08389059 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065653112 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066259974 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066421696 seconds)
  done (took 2.128615285 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066936157 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08367493 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085223658 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083612499 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.07509623 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.084518114 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066137801 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.100780987 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064334451 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.080018658 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.114077327 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.085426042 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06888033 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077434894 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066163888 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.076499048 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066322479 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.076353281 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.077838135 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085443987 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072025484 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094408638 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07997828 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06630573 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.094699639 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.070195671 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.063604396 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065026105 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066217975 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068001591 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067362898 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108699249 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.07026698 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079548579 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065537846 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.064068604 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.071309225 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067476715 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.068945159 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071974096 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.071027562 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066588988 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.065323122 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067708778 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070645913 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.071462729 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.0655006 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067729958 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067612743 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082078436 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.063055124 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.071050591 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068896265 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070035641 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070380078 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070235695 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075099194 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066639139 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.080440983 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.072497362 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067601917 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.078271583 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.078027977 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.073746546 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.076948568 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.069902376 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.07020488 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.0712162 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065395613 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.066553533 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.065646234 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.0748004 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.064220534 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.066352322 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067490241 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066279388 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.069981007 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08394351 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.082478409 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077954972 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066181397 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065320515 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071228362 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.086883564 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072520117 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067347277 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069575332 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065307771 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070377856 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067500815 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072091855 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.067364102 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.075131483 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.069020633 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070917416 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078053686 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066225237 seconds)
  done (took 8.672160585 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070759201 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069248512 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072077655 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068638279 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06699786 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068876114 seconds)
  done (took 2.031827685 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095269878 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068606188 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082177801 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068835931 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10969682 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.075545208 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.077047549 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078849891 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.080922744 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080975417 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.076868628 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.079654352 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.075519466 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.069498895 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.076526557 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069025864 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.077062514 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072656226 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080254961 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070648544 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084311879 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.066937427 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067906984 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.078785331 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.068647862 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.067031277 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065078842 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07791229 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079284979 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080211356 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.06757573 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.069160214 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074976379 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.074728219 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.073705282 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073363779 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065708311 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07193953 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067729797 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068457696 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.076112991 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067358024 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.06821432 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.071557964 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.075272662 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073524967 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071633929 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069955619 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.073674284 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.072814407 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074278215 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068919142 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071328616 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074465969 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077493824 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077429913 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072906551 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.073964298 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.067017846 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073497806 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065663743 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.068715513 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075434096 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.069609357 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.074303123 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071859232 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073598835 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.06730678 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06744333 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065948002 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.072036789 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065806621 seconds)
  done (took 6.878268181 seconds)
done (took 27.686326835 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.984897421 seconds)
  done (took 2.54499206 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.598602599 seconds)
  done (took 2.194761697 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.279156598 seconds)
  done (took 8.873695297 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.315942427 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.353089954 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.746925113 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.137210057 seconds)
  done (took 3.174613647 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.715951684 seconds)
  done (took 2.319663716 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.250404416 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23257896 seconds)
  done (took 2.09491214 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.360660197 seconds)
  done (took 1.956081526 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.099253667 seconds)
  done (took 2.6937832 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.262190603 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161950943 seconds)
  done (took 2.026939198 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.468821831 seconds)
  done (took 2.06710639 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.320444367 seconds)
  done (took 5.924931618 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.245115406 seconds)
  done (took 1.882265985 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241193518 seconds)
  done (took 1.846573887 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.754485846 seconds)
  done (took 3.356622879 seconds)
done (took 44.56520816 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084553079 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.087402913 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083419497 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07925999 seconds)
  done (took 1.912245743 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.076070818 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.070244194 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.074258769 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.074429972 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072398166 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073778922 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.073221333 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.06992937 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.071605889 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.06979609 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.06873831 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.07009348 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.072875394 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.069009909 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.072245306 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.072401665 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.067989353 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.067807382 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07085328 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067371513 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.072726348 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.070612883 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.06831879 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069151132 seconds)
  done (took 3.309192544 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079365211 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.0730757 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075464796 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072005463 seconds)
  done (took 1.916535418 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.077640735 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.089194871 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.088269836 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.091111575 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074680179 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.075000523 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.08356424 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.083472269 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.063281698 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.087857203 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.06607601 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.065447296 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.066409536 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.087543075 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.086439013 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063601204 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065411709 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.077216196 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.076397256 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.078754548 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.067541318 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.065421653 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076457518 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.07612886 seconds)
  done (took 3.441989239 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.083194212 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.065523802 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081789503 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09240396 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093636205 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06549697 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.086318197 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092559837 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.143255414 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065955872 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071315947 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065334292 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.107027282 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06547875 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08455174 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109155928 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114155154 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069413275 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099766044 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064915073 seconds)
  done (took 3.343783476 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078494521 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069211688 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070613125 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065515479 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076562338 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073913624 seconds)
  done (took 2.056557678 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068945453 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068205257 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067354795 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066611828 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072211197 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066839793 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065192254 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06723401 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067361371 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066497547 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066045883 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066110015 seconds)
  done (took 2.426104284 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.167786188 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067194374 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067974083 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065729552 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069935574 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.063972379 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.07961836 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068109938 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.086291584 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065601777 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065889512 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069306617 seconds)
  done (took 2.556152115 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110181396 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137109264 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097737264 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.070945432 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177849934 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098883034 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.089821283 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.123929757 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097103266 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.067716218 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095888859 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139568536 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096223528 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.099382493 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082549196 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128757896 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112655413 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0892842 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115884481 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081007769 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.069261188 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138650877 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069324555 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094092928 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10503364 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.097800766 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111960739 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135963047 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084816001 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.089277941 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081516539 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074402877 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106088175 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.083453973 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.098144876 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094481037 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099744237 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08746447 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085520555 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12166732 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165501278 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106252256 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101988261 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138561454 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078071055 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.111127962 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080672601 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10034182 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105988814 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093549982 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074859364 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092349725 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.107657092 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103998994 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.081067585 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08137115 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123429129 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.099869014 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099310825 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080681594 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110170573 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.09030133 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111725472 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121757401 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142734556 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249357263 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148100142 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13052025 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104584919 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.090767007 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.093571773 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074769479 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114734878 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101780448 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140850642 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115662255 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103477803 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.096258032 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082848768 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110493844 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11879536 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099913908 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100197591 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152805089 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116960193 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095045817 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097633731 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.140524078 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073486507 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157689381 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093061378 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128098686 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101644377 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143242908 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095194451 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.084551022 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111420423 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111998594 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090809995 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106578009 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08641283 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118090328 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092738936 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107946334 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082161286 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091990413 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087252942 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.098137631 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074320951 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10880387 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118855982 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116487075 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074345916 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110319977 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086650117 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.075894188 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093842934 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143882616 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083489211 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076072712 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155562288 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.093985006 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.119291798 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113520641 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.083598445 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120500437 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139515451 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09220296 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092899943 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075267048 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.311339064 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07990081 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123719939 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082124069 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106694621 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110897461 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144853368 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144803656 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100656211 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07944814 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092791899 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.110191794 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089626807 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086077706 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077336888 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115312324 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132227187 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.10139536 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081591826 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.092975242 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.069702459 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117887967 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075755977 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086582807 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099787501 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.089289683 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.090554815 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148143295 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.084976244 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111453205 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099363679 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.068338173 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095042768 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164935661 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08352164 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.113194114 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119989556 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08571739 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.0670998 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.098418575 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.073258491 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112292282 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.094528853 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1103543 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079249172 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109703947 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.067907936 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074638812 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140768153 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103378904 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090562484 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.138442014 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108695597 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.090842675 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.108377244 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.097802862 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097234051 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104593247 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.109224293 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111751842 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.07317761 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132538693 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092763536 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078290908 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092887583 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078387071 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.076250867 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10169721 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273874989 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093947605 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106067682 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104933317 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096932658 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.111537242 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095538388 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082401688 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141176544 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079650947 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077931451 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094479886 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.11124616 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093016801 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.142022879 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.082082903 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148149233 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098173073 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083334139 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123166759 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069848031 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072540576 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088099033 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094564011 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119461515 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07909009 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082577571 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125185996 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138928092 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102263971 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109326416 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068155415 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093358799 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141252746 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.113741097 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084041231 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113531599 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085142532 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134066664 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10156996 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123758892 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108612633 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11315797 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.092381968 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.081118915 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073986099 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088320296 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11503409 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086396462 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082022329 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.066601032 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073471464 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098634472 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093127108 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116254421 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09315521 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140900282 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072448993 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108371799 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109989188 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10941175 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094962685 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097135804 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.094013726 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095954748 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095509307 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093625603 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073233529 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130465065 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107122497 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077788401 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088303247 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253874852 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112338628 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11465312 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112740057 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096010758 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11061524 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126012755 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10031947 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083443766 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086577824 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.098303695 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.087276067 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082065477 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.107981745 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118705918 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101104256 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115043714 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.095341897 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.094657359 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111188806 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097489981 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090340042 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.121006714 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15900149 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.106007936 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105883888 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086654503 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11092925 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107247584 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11684183 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.114925154 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11548718 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069874614 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07541564 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.072297881 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113006364 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080981742 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122451609 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076557711 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110412843 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102164643 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0806416 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066128857 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103118981 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094668134 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.083668165 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128508208 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.113902886 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076087698 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094605813 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110606883 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084200748 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130239335 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.107469065 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104802172 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071417691 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098525262 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074789431 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112854479 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103141502 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.077059929 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.075630722 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.071808998 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111548241 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084380971 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112602317 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093853246 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103868601 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123407431 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141693674 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0870686 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097086608 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273512616 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12251325 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.082985222 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118198222 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142185777 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.127402528 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085439227 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.086567019 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108910591 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109361901 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106580321 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078284129 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084045849 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11851707 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121552307 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.069611792 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089474612 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073869991 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.090976698 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121284713 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106621675 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086007403 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127600676 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078075266 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116999351 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103430781 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135148255 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13192343 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15540811 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102457423 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088982635 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079420159 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135348826 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.074743803 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126076433 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119272911 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092173544 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.069932919 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08642649 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101940039 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.633962216 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111371336 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075554414 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141265417 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092580635 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120410643 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088719118 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.123081095 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098951977 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1040024 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.0939091 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138687686 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083075925 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113666968 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.176254216 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117084089 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.110828289 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074822352 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.085716516 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.073506165 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.07919403 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.084131238 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088354911 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113636407 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089480057 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111039383 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.082284602 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113612793 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099117211 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245969518 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.103095115 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087727549 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150170459 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095992404 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133566486 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115420511 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082585672 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079015273 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.093901103 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109341794 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085960119 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100076013 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081806829 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.082458152 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160817603 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112921446 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08604127 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10682369 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.092248175 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.090487559 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092925349 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124069079 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114925255 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074303648 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.089004016 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108846874 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083137744 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077874484 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102315353 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.07320572 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097228188 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110603228 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101741422 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096605621 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.10663884 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078238012 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095217084 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113531479 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086659502 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079534253 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079594894 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08146492 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.078969158 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11042791 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117613204 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122255085 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115836217 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097551795 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103079572 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.078543729 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.219486157 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082062668 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099178386 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.106777056 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.074759658 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.134638544 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093332293 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096511881 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100154005 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104050938 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157410224 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073847813 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114235431 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09715095 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116161918 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090129137 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11310741 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100419715 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096435364 seconds)
  done (took 52.104043891 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.096960763 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.15415035 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.159329268 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.080326602 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.093961813 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120572365 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210390235 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195029255 seconds)
  done (took 2.869125955 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.076920069 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.082761086 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105921193 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083582146 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.064373846 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.075181444 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.214889213 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080683051 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063703452 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09984248 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079286228 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.065181329 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.432813422 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.064400697 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.065491013 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.074362675 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.064289634 seconds)
  done (took 3.509369919 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.385586578 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.599781061 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.364224559 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075639594 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.024038659 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089833047 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.182852108 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138473128 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082149954 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.553010332 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.36929982 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.12892535 seconds)
  done (took 18.720058185 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081399937 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078228701 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083189001 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083142078 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.077847384 seconds)
  done (took 2.130273016 seconds)
done (took 101.911192345 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081518584 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.173538056 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069793148 seconds)
  done (took 2.011509787 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.084959759 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083229331 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.082681083 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.080539181 seconds)
  done (took 2.062500715 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074239309 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076837575 seconds)
  done (took 1.875946368 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.238953256 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.167458736 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.098544898 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08356558 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081187977 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081011572 seconds)
  done (took 1.976091827 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072598266 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073485946 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073066771 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075275552 seconds)
  done (took 2.017752258 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.06813317 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066087922 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.06881239 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072113561 seconds)
  done (took 2.000494375 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085163606 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085410164 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079828691 seconds)
  done (took 1.976451016 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.09936747 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.098997459 seconds)
  done (took 1.923843496 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082056573 seconds)
  done (took 1.806654929 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092797062 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101288344 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.123317814 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.105560335 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.125652057 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.106227524 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.077665206 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.077784125 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.072706639 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.071662967 seconds)
  done (took 2.681635811 seconds)
done (took 22.646107188 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080607049 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.373855991 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.358051589 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083778003 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669693318 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357135073 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.00005519 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093215768 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.102087271 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070549142 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085569165 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648699075 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.990120075 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.322661042 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.974944104 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326561302 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65061317 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065645061 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067053143 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06759211 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.981116007 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065070654 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06627235 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065981771 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.683569343 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37093622 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066906559 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.321937588 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065195024 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068160381 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353686035 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06674558 seconds)
  done (took 16.262614303 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07227672 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123751881 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074010539 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082041021 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.067875348 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070485389 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071311702 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.066306654 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.109303762 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070148121 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086393088 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069202769 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073935338 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06959848 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08591229 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066444678 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068168651 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067058981 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066636612 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070367393 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084396198 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066271985 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067762038 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066719698 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067244478 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079589282 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067939734 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066050017 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066999964 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06923753 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070412092 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068303211 seconds)
  done (took 4.112254538 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122131664 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128136731 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072344524 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105030007 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118659714 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071811072 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.151811912 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093751271 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11558193 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070471239 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085271474 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065985826 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101346755 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068255676 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087257295 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067031258 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068499002 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067010007 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06682597 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067858371 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085310328 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066274516 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067204954 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066979103 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067489832 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081349526 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067999363 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066362898 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066853534 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06925224 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070654009 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068081487 seconds)
  done (took 4.379689589 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070352224 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072921464 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08146689 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082648395 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068451905 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.069913547 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.070559524 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068252161 seconds)
  done (took 2.328760681 seconds)
done (took 28.819007281 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080051834 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068650641 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071585604 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08830441 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074239726 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.072612981 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064855828 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074141811 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072934274 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072389527 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.072904767 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066367186 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070138498 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065122443 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072860201 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066458115 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.073835742 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071254998 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.073011715 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.073636782 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06962231 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073922587 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075340718 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.072874708 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.072907204 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.073140342 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077418899 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07253801 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068129759 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070551441 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.06991738 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.081037574 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074538326 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.073224853 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.064379025 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067747912 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071599841 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068924658 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07485745 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076596257 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068825081 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076761754 seconds)
  done (took 4.747676149 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087704501 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09214585 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084250533 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080371441 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.101876591 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082560103 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087210007 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.076151982 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074222474 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084672852 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.070709956 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.078918508 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077681477 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073033746 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077636719 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074409428 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079657662 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.073964727 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077938367 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078079297 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08983514 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072321807 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081447821 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079862254 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074903745 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080728013 seconds)
  done (took 3.847456515 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073593805 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085115989 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091796552 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.149697083 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114396605 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08047986 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082232805 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093600926 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097670695 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067610047 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071151959 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091832557 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089465957 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.071293454 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.105222088 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.081123131 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080204646 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067531741 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075361644 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097294247 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090584129 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086061421 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096942863 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084719542 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06846819 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070662126 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074993376 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082759773 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075475306 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080480778 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073248286 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071569204 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066742856 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07709156 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069873123 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.064878799 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089267327 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077473058 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07815995 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.107157703 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074446114 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066246319 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092738108 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128189503 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06783352 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071088344 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071446562 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07957654 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068648056 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095664598 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081751606 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067271605 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.067912893 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068137101 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068357128 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083139654 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069265417 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069359317 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078665296 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074611874 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089121257 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072637116 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087747793 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067579467 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078004041 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068133877 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068301569 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065970196 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098662258 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073760601 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117452164 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068268599 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.065735222 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078777819 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078034163 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073164552 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066724837 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085733135 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078196866 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07242754 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078485091 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070234631 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072027549 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098205139 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.067723231 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.066787032 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066195537 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07082665 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071438542 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067840313 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081509353 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066584874 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072515702 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082599864 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067307383 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068372353 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070746506 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069640617 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066799875 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081991819 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071640755 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068563265 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078971022 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068545475 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07164168 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080761803 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074970304 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066940627 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.069224084 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.070881706 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06856927 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07154823 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071724445 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069769912 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074048746 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074428979 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072525573 seconds)
  done (took 10.89065695 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165967114 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155237275 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069332256 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.151043499 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075897672 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.076236013 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152014944 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.090320401 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069119722 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068697499 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067194599 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.099537859 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.09581086 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.107758203 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.0738002 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067938246 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092766173 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.103523799 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152074764 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146382655 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08873532 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.072718114 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.067880786 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.066940708 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.067201541 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.074276067 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.080869521 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.072756532 seconds)
  done (took 4.461860792 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079159342 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.092896905 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072214153 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.079107404 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08969054 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068764031 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070166989 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070140211 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082056392 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078445561 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067922361 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075968426 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07193861 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071654396 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069102901 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074790186 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07508261 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067743989 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071862716 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073362111 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078113452 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09419281 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075163395 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067647219 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.070107059 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067571152 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077998786 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081550407 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068091598 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.084698298 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065550673 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073775204 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083399492 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06700964 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064969422 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065419176 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06537407 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.065503034 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.065636053 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.064271524 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063977631 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072232755 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06690654 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077520118 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081386086 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.074892787 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070318549 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.070520844 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.070664882 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065802905 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070377333 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070250749 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071843052 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075815701 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072406756 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.070608798 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068880744 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096617623 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.071173213 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.064663373 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064738775 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06433183 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.067640259 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.076053809 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081691582 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.06751677 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064016782 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06546831 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071516086 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078693374 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.065127059 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07002676 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.063633081 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.065826572 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.067826475 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068368477 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.066328956 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.064741162 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.065774886 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066061114 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068099237 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067397238 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067539276 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071436153 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066103748 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066789247 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068153004 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.069645113 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078087963 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067596502 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.071620564 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068714033 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066558561 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072018941 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072653308 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071854675 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08202617 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.07807369 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066151041 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066515659 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081351145 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.06965912 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06527363 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.071628641 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.071532515 seconds)
  done (took 9.304771718 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090627656 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070171378 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083895231 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.088591249 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.076332765 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.071313931 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075770982 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066428445 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082062795 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067011003 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076707688 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.0672937 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078896623 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077758499 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069576461 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078739992 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072264322 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084479746 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081741518 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067653533 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076738191 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079917086 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08026156 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082422139 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08152499 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082913602 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.080284655 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072313421 seconds)
  done (took 3.959784875 seconds)
done (took 38.950438508 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.82074723 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.995633612 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.819898135 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.015818471 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.022115519 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.835168208 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.02685801 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.817688643 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.023744215 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.865205929 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.144567162 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.315506146 seconds)
done (took 66.507773709 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.862400171 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.994188051 seconds)
    (2/2) benchmarking "String"...
    done (took 2.084093007 seconds)
  done (took 5.825143768 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.066088616 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.462504862 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.075568056 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.815603209 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.816236039 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.239567892 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.605838553 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.258374699 seconds)
  done (took 31.0241556 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.977598951 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.034054062 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.510340262 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.542180415 seconds)
  done (took 15.854626208 seconds)
done (took 64.471172254 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.864759507 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.813951471 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.832410216 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.838801954 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.823127526 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.819174051 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.81770804 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.815195661 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.833619477 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.884898562 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.8130437 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.815461762 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.815061522 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.825419867 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.36020698 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.862786226 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.833915974 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.82417702 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.823697698 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.84226149 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.819755225 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.816360797 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.296084347 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.96929323 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.434051517 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.867120436 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.368089279 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.21927209 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.826314542 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.814083235 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 7.015202037 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.826439771 seconds)
  done (took 205.179147231 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.817975736 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.825471287 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.921184459 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.828330998 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.156543228 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.993646487 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.915572393 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.264534058 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.821821961 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.840322474 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.031295609 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.820729635 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.045394596 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.763889782 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.853440361 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.831806112 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.935525456 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.057961487 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.857293813 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.979935934 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.83568051 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.944409789 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.896495137 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.021322715 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.838464787 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.918989154 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.818910161 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.8287121 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.008481297 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.943299843 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.837695018 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.856364704 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.018815118 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.684286921 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.844714594 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.837475427 seconds)
  done (took 171.448988863 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.009793881 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.821509332 seconds)
    (2/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.823242887 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.817886235 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.876291218 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.938757824 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.818740443 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.489800132 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.825249463 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.569952783 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.821046119 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.820083486 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.82002624 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.819414716 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.833494683 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.914944626 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.817638629 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.836138304 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.823264039 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.844160682 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.821160231 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.820113754 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.819689309 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.821846027 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.82062509 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.821065961 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.821262866 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.99100247 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.065887964 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.819118296 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.823280394 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.395323395 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.836266486 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.816849332 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.823353593 seconds)
    (35/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.943734338 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.914839382 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.875379541 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.942280523 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.822688985 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.041636106 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.896706268 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.818550941 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.822390497 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.886908291 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.83045283 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.817672362 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.824122145 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.827257506 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.886312016 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.075093239 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.818543264 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.943027178 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.307599588 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.823076329 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.82157088 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.821409639 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.408530701 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.82276198 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.824746761 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.827507761 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.827432578 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.822932299 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.823601859 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.20968756 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.889252618 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.063519562 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.001247542 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.81950412 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.122147179 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.060216378 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.822599786 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.821202141 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.822365328 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.822654437 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.823831132 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.823335585 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.823371404 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.824781287 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.94536853 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.829149889 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.951885099 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.905410402 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.940278893 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.823593155 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.833764155 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.646584505 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.891875577 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.857066291 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.646033471 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.820658827 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.197389418 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.602811816 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.821697317 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.825182619 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.837236223 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.820690836 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.825360131 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.829227677 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.904549986 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.820787946 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.946284157 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.54473998 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.953836075 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.820981272 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.825866904 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.831950471 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.907563392 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.943589294 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.826782594 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.891964885 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.827884923 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.828933422 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.916777751 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.82240101 seconds)
  done (took 405.756177589 seconds)
done (took 786.197857622 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.460039871 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.432206338 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.526916441 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.445505982 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.41592961 seconds)
  done (took 14.036285654 seconds)
done (took 15.790545642 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.842353205 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.832038999 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.888434997 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.911913553 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.840179229 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.846390816 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.908760652 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.843330952 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.877928738 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.882139364 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.911833514 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.909343055 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.848204301 seconds)
  done (took 26.100553201 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.83594133 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.98195754 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.058227681 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.868199789 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.83551008 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.062152093 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.892374539 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.984068447 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.979546161 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.063551226 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.073045125 seconds)
  done (took 23.396039531 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.834946073 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.985619286 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.05794021 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.871394507 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.836893023 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.067457181 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.898893821 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.98149025 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.983077446 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.063774994 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.085216151 seconds)
  done (took 23.434805943 seconds)
done (took 74.689101374 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.831015487 seconds)
  done (took 3.589953675 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.859218001 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.994903141 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.830111406 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.828595012 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.82936237 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.829879532 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.828756835 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.829741715 seconds)
  done (took 16.593162462 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.830549736 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.830895918 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.829966048 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.831872844 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.831164935 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.832323872 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.830556735 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.82905624 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.831569483 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.830399471 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.831296844 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.83011389 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.831878994 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.830868591 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.830913278 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.831156154 seconds)
  done (took 31.053723839 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.832769026 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.830916466 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.83141874 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.83142998 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.829604819 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.832542292 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.833799099 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.831917515 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.832368672 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.831538415 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.83273223 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.832684817 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.83183216 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.832733927 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.83183864 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.832703587 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.833082148 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.832596186 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.836832238 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.833203793 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.832290507 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.832252822 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.832734688 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.83361362 seconds)
  done (took 45.747286383 seconds)
done (took 98.751527945 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.55973734 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.437090796 seconds)
  done (took 9.75710905 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.837345482 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.833427714 seconds)
  done (took 5.498684088 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.8338567 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.8344082 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.834087767 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.832381181 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.832876177 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.834331314 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.833761796 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.833533224 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.833469042 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.834038954 seconds)
  done (took 20.098735607 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.83500564 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.833952735 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.834086902 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.83470462 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.835294919 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.834906134 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.835398514 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.834393839 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.835074942 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.835751137 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.837002793 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.835348725 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.834860491 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.833099345 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.835472161 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.834400147 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.835168984 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.835175993 seconds)
  done (took 34.79138275 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.834516133 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.835359538 seconds)
  done (took 5.432589613 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.834627978 seconds)
    (2/7) benchmarking "second"...
    done (took 1.837390986 seconds)
    (3/7) benchmarking "month"...
    done (took 1.834820677 seconds)
    (4/7) benchmarking "year"...
    done (took 1.834987074 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.835809402 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.836909022 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.835270359 seconds)
  done (took 14.611927735 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.835989171 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.989965806 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.049187918 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.67963869 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.836808107 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.838607124 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.156705396 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.839687794 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.840043686 seconds)
  done (took 20.830252174 seconds)
done (took 112.779989889 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.664724437 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.839760232 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.083317147 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.885416762 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.858467844 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.128840814 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.844366036 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.109659737 seconds)
done (took 43.176754553 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.839990326 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.833242041 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.856578787 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.858678786 seconds)
  done (took 22.312739245 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.835969283 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.170920354 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.854045972 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.740474253 seconds)
  done (took 22.381265669 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.217231547 seconds)
    (2/2) benchmarking "read"...
    done (took 2.177656903 seconds)
  done (took 6.166051572 seconds)
done (took 59.466601391 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.837218195 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.837927128 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.837701593 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.83685635 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.836771998 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.835561865 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.835659435 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.836870403 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.836143155 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.83701269 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.838939689 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838178404 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.837071327 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836129279 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.837671761 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.837415369 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.837484021 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.838181814 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.837035154 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.837191073 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.83729157 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.83752371 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.837158421 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.837927992 seconds)
  done (took 45.858190718 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.838689988 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.838458093 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.838645673 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.838337005 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.836662604 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.838694422 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.838441794 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.838267839 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.837440074 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.837503651 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.836960702 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.838834998 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.837557823 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.838340666 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838606989 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.839557101 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.839848418 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.840269586 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841834554 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.838911057 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.8386484 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838223533 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.838917155 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.839045758 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.838067802 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.840765264 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.838931439 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.839283799 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.839062562 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.840336424 seconds)
  done (took 56.930452731 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.840639045 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.840656838 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.840537021 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.839452906 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.841102272 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.841560637 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.840928381 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.840471209 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.839832129 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.840963217 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.841712467 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.840534362 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.842509889 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.84061743 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.840927002 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.841163261 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.840526425 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.84187013 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.842051332 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.841044692 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.842500854 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.84217392 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.841861958 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.842472774 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.841772477 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.841706402 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.840145782 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.841830904 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.841899523 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.841864893 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.842226254 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.841387613 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.841613868 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.842206953 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.842692663 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.841400198 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.842954091 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.841002245 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.842837918 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.842610886 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.840860194 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.841923494 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.842566588 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.842442311 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.841943428 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.841754503 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.843396971 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.842101954 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.842812794 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.84372542 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.842460564 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.842660872 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.841568636 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.843698257 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.844845601 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.844174116 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.844716158 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.841951882 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.843568391 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.84279559 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.845121703 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.842836001 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.844254324 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.843942921 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.84530988 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.844482718 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.844081633 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.844230123 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.84416482 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.844813202 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.843373256 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.843406612 seconds)
  done (took 134.413741854 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.84419111 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.843206054 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.844706937 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.843928979 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.844570506 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.845781129 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.843665882 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.845305144 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844382184 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.844121434 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844813046 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.844590116 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.846198657 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.844322717 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.847342288 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.844454671 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.845363466 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.846119763 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.84575899 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.844561679 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846188568 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.84638131 seconds)
  done (took 42.361496149 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.8458581 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.844893902 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.845991945 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.846614533 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.84545847 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.846815313 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.845324799 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.845660406 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.845753187 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.846477102 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846308784 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.846007445 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.845926371 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844718533 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.845199249 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.845861798 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.845676478 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.846781408 seconds)
  done (took 34.998607871 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.847460162 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.846998377 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.847139823 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.846715379 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.848394496 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.84774172 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.846365387 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.848095069 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.847425694 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.846758752 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.847650222 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847848705 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.848072913 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.8470874 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847872912 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.847696154 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.848431316 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.846967821 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.847359883 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.848535149 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.846425841 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846630122 seconds)
  done (took 42.41820447 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.846711092 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.847319674 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.847940174 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.847295608 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.847696672 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.848785501 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.848254248 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.8474545 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.847044856 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.848292951 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.848096957 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.85010844 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.848889165 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.850027573 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.848460999 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.849064523 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.848488074 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.848602109 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.848318655 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.852020635 seconds)
  done (took 38.744904546 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.849682106 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.847654896 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.847977963 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.848928521 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.848823726 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.84992661 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.848010938 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.847705815 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.848366019 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.847868618 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.849349705 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.849683316 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.848926736 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.849741911 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.849359604 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.84823178 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.850483102 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.849434965 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.849163981 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.849408691 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.848983082 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.850741854 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.849813878 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.849027292 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.850322412 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.849752561 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.850029689 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.849426186 seconds)
  done (took 53.554223861 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.850143805 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.850751346 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.849808857 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.850362983 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.851441532 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.850530435 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.849824213 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.851312336 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.849872938 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.850561242 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.849767177 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.850952063 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.850385765 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.850496772 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.851105011 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.851245693 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850015074 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.85049042 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.851200872 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.850242243 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.851230871 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850658157 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.850829912 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.851288008 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850703939 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.851298258 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.851025296 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.852513652 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.851722651 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.850740648 seconds)
  done (took 57.301629266 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.872317259 seconds)
    (2/2) benchmarking "in"...
    done (took 1.873189084 seconds)
  done (took 5.525027247 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.851635671 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.85146005 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.851351025 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.850540972 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.851114442 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.851541927 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.852432261 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.852549788 seconds)
  done (took 16.59186365 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.853235073 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.854822907 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.852083174 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.850970622 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.852304786 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.85688244 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.851301078 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.852074731 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.852094299 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.854077135 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.857783841 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.853899725 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.861398471 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.854835289 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.851779325 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.854644594 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.854673291 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.856052397 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.853142979 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.854074997 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.855598954 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.852886705 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.852260639 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.853716254 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.854320721 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.855652261 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.860655753 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.852349729 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.854063229 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.855079858 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.858609181 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.850423249 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.853672381 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.855508459 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.854422644 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.855405015 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.858505701 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.85181305 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.854447217 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.856415486 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.856079328 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.856347125 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.855617016 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.860462029 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.855472826 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.854980831 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.854132912 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.854775722 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.855094613 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.858003666 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.865050432 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.855152483 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.855541811 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.85548139 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.858506991 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.855394322 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.855481954 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.856864045 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.862898686 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.86092947 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.854947619 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.876457173 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.863630549 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.855481614 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.855088173 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.866455296 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.882985222 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.856506371 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.855473416 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.856368497 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.861623712 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.854595562 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.85667269 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.856492146 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.866998485 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.865930405 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.857551036 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.856501576 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.856223095 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.856493598 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.858222849 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.856812197 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.856877758 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.856819485 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.866815826 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.885231296 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.857628795 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.857790302 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.858534127 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.857961916 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.861912596 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.859538738 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.857931235 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.857167409 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.858802565 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.860230928 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.857884832 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.857954411 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.857835609 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.864411103 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.855733285 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.857913822 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.861182145 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.86786528 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.857064813 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.858463092 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.858293461 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.859897813 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.865580322 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.859754876 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.858832048 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.859245009 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.860156545 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.863153814 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.86019536 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.861750363 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.867849508 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.865391999 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.859273423 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.861853888 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.861860899 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.862270092 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.869645836 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.886535096 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.859433213 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.862685438 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.863879477 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.872322482 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.863610691 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.860432995 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.862780496 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.860095921 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.860930942 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.860927946 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.859296042 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.858832643 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.859033236 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.860163336 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.859938496 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.859484591 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.861300746 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.860164947 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.862244525 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.860059291 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.862234448 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.860673238 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.863151804 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.867132649 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.860209062 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.859759239 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.860367433 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.862096338 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.862623927 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.861069922 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.86076314 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.862502871 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.860291949 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.862507324 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.863220997 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.861820958 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.862589011 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.861639885 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.867973415 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.861735946 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.861118818 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.862761328 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.861670724 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.862304215 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.861746466 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.862356922 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.863250031 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.862421148 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.863764554 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.862921937 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.861887885 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.862581513 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.861204317 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.862106273 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.865353344 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.875353133 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.86445601 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.871447263 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.861076223 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.867955 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.864560442 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.863639387 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.86258815 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.862445217 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.863091562 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.863491593 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.863397866 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.865390378 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.882987153 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.875009809 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.864526732 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.865185627 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.867577492 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.86837676 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.86643066 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.863873343 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.863923333 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.864144212 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.863270399 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.864681822 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.864686209 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.86555029 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.864350805 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.863200687 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.867071603 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.863937511 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.863584135 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.865746992 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.864727247 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.866323483 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.864871465 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.863639383 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.864262227 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.864193836 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.870105708 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.865669589 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.86549578 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.864208238 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.869036931 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.864862097 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.864988042 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.865830978 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.86815598 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.866030318 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.865041558 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.870434015 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.866169363 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.86445827 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.864816122 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.864844631 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.866302059 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.866051635 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.867935811 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.873921844 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.867131967 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.865232723 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.868318361 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.862762272 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.866856697 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.866662897 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.866182874 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.865072013 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.867625907 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.866235478 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.866176667 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.871618087 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.866601704 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.866077089 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.865211431 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.867822601 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.865551722 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.866215124 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.866135827 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.868349743 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.876093409 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.87161421 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.86625387 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.8695272 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.867931253 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.867443826 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.871186122 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.866715718 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.878586304 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.875931737 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.867440744 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.868484735 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.867355961 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.869501834 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.867315605 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.868454667 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.872608314 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.86628624 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.869247875 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.872076431 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.867994519 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.86791843 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.872497087 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.866619415 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.871160442 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.868565361 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.868225694 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.867608881 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.867898985 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.871058494 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.869140885 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.867661753 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.871743567 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.869667566 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.868988128 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.868432362 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.87365343 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.865392145 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.868632032 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.873735007 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.866072059 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.867771004 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.869039135 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.869647019 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.868951658 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.867617602 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.870323681 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.870669383 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.8683463 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.872618347 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.881317515 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.872163481 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.878909436 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.872570027 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.878727943 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.869396873 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.869644522 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.870558386 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.872445563 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.878914298 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.870542827 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.869626533 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.87461672 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.868808793 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.86994749 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.875509673 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.871245286 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.870493631 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.870667528 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.871401032 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.874319286 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.873023619 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.869494889 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.869639293 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.871418282 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.870000683 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.873148478 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.871154082 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.870640195 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.870506549 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.870263576 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.871633049 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.872084861 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.870763178 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.872099918 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.871926989 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.87081217 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.87729992 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.868480846 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.872715926 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.876222234 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.871235323 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.877741393 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.871208274 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.872001292 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.872424737 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.870827624 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.872947669 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.871982639 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.872082707 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.872068826 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.872528262 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.873933124 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.884212869 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.874967486 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.873706656 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.873726366 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.872527393 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.872753269 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.881056386 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.900584944 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.872948053 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.874315985 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.877841964 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.878620665 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.874351413 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.878874388 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.875765508 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.882889111 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.87388064 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.872056775 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.876084381 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.887072036 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.87536015 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.873658283 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.873490798 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.878327249 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.875799373 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.873846669 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.876498316 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.877039888 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.875767555 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.883840297 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.874921157 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.875486379 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.873685034 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.873431322 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.875422067 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.873994299 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.876194472 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.875463715 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.873763123 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.875212905 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.876280892 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.878870555 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.874882302 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.878741824 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.884689126 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.875637086 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.875817021 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.874610042 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.875216972 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.875963522 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.875682029 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.874884892 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.876365962 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.87683838 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.876265779 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.878060582 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.885686022 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.876244416 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.876488676 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.879544967 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.879054608 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.874937733 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.87593396 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.875651719 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.88215336 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.878370447 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.88709302 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.886154057 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.876350287 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.877099425 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.882828817 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.886964851 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.876726598 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.875891534 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.877858345 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.879199625 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.87917479 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.875486083 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.87766216 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.878843927 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.88191934 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.875757026 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.877513742 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.876691964 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.875916192 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.879314976 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.87807005 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.882267721 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.877517765 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.87737995 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.875522849 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.880884878 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.877246899 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.878070451 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.876501286 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.877602296 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.879090551 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.87825371 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.882279723 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.877909522 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.876978608 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.879165698 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.877002824 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.878645558 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.877534086 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.877254504 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.877572229 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.881928371 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.887991878 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.877543996 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.878791498 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.879336527 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.881184699 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.878863465 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.879806654 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.879358153 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.878818235 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.883994482 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.875825713 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.878814204 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.878421415 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.879627763 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.881872123 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.879676503 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.882183698 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.879257538 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.87900291 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.878980183 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.883309947 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.88987289 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.885128647 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.881666361 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.888644372 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.883873679 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.879362978 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.88084516 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.87949062 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.880279477 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.88087701 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.884194536 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.880180965 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.880715829 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.879150522 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.88033169 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.880779763 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.880778585 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.880311349 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.881578845 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.882688121 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.890628044 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.886118491 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.878111382 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.880902889 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.880449923 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.884764696 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.893184929 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.880342569 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.880747375 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.881284637 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.880627198 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.883385625 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.887992609 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.890961856 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.884530606 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.881210058 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.884737004 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.899558544 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.883006165 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.890764032 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.914227798 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.881457665 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.879946451 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.881463131 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.882915647 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.88314892 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.884822039 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.88271172 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.888630822 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.879746682 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.882476561 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.888408964 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.880113226 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.882730711 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.88207546 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.882922892 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.887857084 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.886105896 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.889432859 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.882669825 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.882895073 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.883439033 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.883658132 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.883607861 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.882702472 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.882572294 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.882721702 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.882652431 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.882248496 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.889378414 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.880933024 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.882910763 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.894650493 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.894567932 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.880958811 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.883941597 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.883267325 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.886722952 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.88522718 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.883306473 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.88713676 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.892304953 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.884780771 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.893588873 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.884798618 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.88445666 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.88486088 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.883693767 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.883002191 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.895359887 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.894307461 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.88427195 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.885146199 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.891522518 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.884234306 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.890472085 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.886241334 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.883794746 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.886584587 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.884780488 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.885178947 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.886165679 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.884764209 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.889055916 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.89472735 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.887383929 seconds)
  done (took 1116.881148113 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.884404748 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.884523893 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.885986572 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.885543534 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.884504968 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.885282857 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.887701477 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.885717134 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.885964184 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.886590807 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.886021185 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.886103371 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.885045598 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.886633104 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.886101808 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.886221066 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.885426037 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.886253389 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.886649792 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.887906894 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.885323243 seconds)
  done (took 41.414692328 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.886129939 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.887057162 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.885894323 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.885715982 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.886209503 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.887600744 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.886989884 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.885967402 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.887050129 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.887090913 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.887260073 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.887025498 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.886460357 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.88598435 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.886898079 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.885796953 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.887733881 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.886564116 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.886545035 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.886640637 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.887767754 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.886637408 seconds)
  done (took 43.318927525 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.889002763 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.889014137 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.888180821 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.887668483 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.887906485 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.886974172 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.887410824 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.887982433 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.88831822 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.889798852 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.896446733 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.898608461 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.888946574 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.891252803 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.888727767 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.887635501 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.040528164 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.889016035 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.888304933 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.888440625 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.888407874 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.893271455 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.886296591 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.889260649 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.888409314 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.888004821 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.887334594 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.890067103 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.889620904 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.889771249 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.894888434 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.889038695 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.88771747 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.89374202 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.887455935 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.890653572 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.893514673 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.889525648 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.889930072 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.890337796 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.899522189 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.918255999 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.889959909 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.889195838 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.895852204 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.890353295 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.890530438 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.892423024 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.902115357 seconds)
  done (took 94.620056384 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.890812793 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.890435126 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.891318186 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.890035054 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.892250631 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.891277546 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.889652535 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.890962121 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.890738095 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.890359345 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.89062376 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.890196524 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.890359101 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.889473871 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.892468803 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.893469868 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.891902822 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.889866366 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.890587997 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.889833873 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.890785244 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.890711988 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.891569386 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.890655428 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.890679828 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.893361589 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.892207493 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.891549342 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.891228832 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.89192092 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.891984731 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.890644581 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.88984937 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.890035792 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.888638757 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.891153112 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.890331792 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.890967825 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.891482265 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.89157805 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.891736449 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.891241629 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.890512566 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.890924647 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.890951925 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.889045584 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.892215155 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.892134494 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.889731206 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.89158875 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.892624502 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.891599296 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.890034183 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.89199782 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.891689331 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.891419524 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.891688942 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.890600188 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.891959524 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.891213034 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.892721474 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.892196884 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.892591379 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.89614596 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.892797253 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.891521123 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.893731432 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.895035577 seconds)
  done (took 130.433421859 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.89334551 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.893847888 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.893143474 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.894344147 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.893387861 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.893039877 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.893497644 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.893254377 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.891389861 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.895051731 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.894732012 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.891915591 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.892748049 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.891714771 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.891863284 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.893307933 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.89249514 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.892964742 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.894574717 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.892144582 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.892589459 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.893513548 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.893787534 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.893514141 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.893451315 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.896972158 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.893219161 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.893912329 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.894376186 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.894468465 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.894700561 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.89547655 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.894711835 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.894397747 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.894963101 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.894704869 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.894247755 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.895293209 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.894873858 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.894861441 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.895366977 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.897383762 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.895453475 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.895140449 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.895896488 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.894811976 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.896627318 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.89655056 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.895533034 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.897140786 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.89706645 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.895387177 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.895659879 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.894125429 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.896260097 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.896238392 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.896995376 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.898108721 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.895142302 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.895957943 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.896640763 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.896095561 seconds)
  done (took 119.284826894 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.895837874 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.896350518 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.896714045 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.897467521 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.897271647 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.897048547 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.896891164 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.896635637 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.896827495 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.897263283 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.89940813 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.897429652 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.898283765 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.897788443 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.896889097 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.897696643 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.895989957 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.896874604 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.897758919 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.897660693 seconds)
  done (took 39.767053023 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.896597623 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.898075117 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.897373351 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.897843225 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.899417737 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.898879998 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.897279562 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.899322898 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.898711427 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.899934197 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.898038309 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.898136479 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.899705904 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.897994041 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.898139173 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.898557775 seconds)
  done (took 32.197601985 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.898128781 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.898840632 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.899036869 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.898856067 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.897038371 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.899885657 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.898758716 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.898604182 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.898172802 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.896714518 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.900659157 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.898595988 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.898101719 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.903799677 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.897500383 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.897782603 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.899435906 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.897272643 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.897378676 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.902197225 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.898112476 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.898297452 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.896410985 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.898174511 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.899087953 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.897549811 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.897976371 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.898361329 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.897535776 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.899677205 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.898018465 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.898039472 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.896964833 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.897751886 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.897566856 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.897823627 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.898696164 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.898855599 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.896939328 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.89862852 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.89816576 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.898235763 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.898311922 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.898288859 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.899539379 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.897866148 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.896175801 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.895406659 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.895079201 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.895143685 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.898376402 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.892784769 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.893005176 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.892148712 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.893235314 seconds)
  done (took 106.204540487 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.895900721 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.890838542 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.892000768 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.891167163 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.891632192 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.89179873 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.890077799 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.892174397 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.890416407 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.891106071 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.892492174 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.889891319 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.88888897 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.889379517 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.890530315 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.88980391 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.891475101 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.888982218 seconds)
  done (took 35.857482182 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.889354202 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.889100801 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.890394774 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.888157334 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.890016471 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.890097718 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.890640272 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.893673352 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.890827698 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.891277073 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.890532291 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.888959266 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.89327068 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.889446796 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.889948594 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.888872773 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.889130769 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.890278508 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.892475756 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.889613857 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.889016998 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.889457414 seconds)
  done (took 43.402069299 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.889591829 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.889699249 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.90578832 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.916116736 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.911225223 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.930549884 seconds)
  done (took 13.258816427 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.890332755 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.88877235 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.889325152 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.890096018 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892252658 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.888388502 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.888334268 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.888350988 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.888150009 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893148235 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.889726063 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.888710261 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.889134776 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.88744958 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.890399474 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.885911817 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.885401551 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.885808965 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.884626162 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.884582793 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.886864031 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.88589467 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.885506655 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.885323808 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.886585814 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.88691676 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.887581217 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.887344322 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.887466935 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.886434907 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.88949134 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.887650249 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.887197834 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.888367575 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.887673446 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.889328395 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.888101377 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.886760276 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.887155732 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.88648315 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.886761075 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.888080385 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8887394 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.887557777 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.886944916 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.88792855 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.887535462 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.886076708 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.88764994 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.888143282 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88802337 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.88915595 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.88767046 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.888367174 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.887496622 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.888879956 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.889458544 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89118548 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.888051514 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.887359953 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.888483858 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.886812311 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.88943079 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.887925765 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.887148877 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.888426402 seconds)
  done (took 126.417584221 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.890389703 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.886836517 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.888712456 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.888605662 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.888330444 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.88843752 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.890419484 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.887157026 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.887674471 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.888572821 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.887039754 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.888610177 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.887034681 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8878449 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.887824947 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.888890543 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893485378 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.888177193 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8881765 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.888801453 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.889535903 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.891344148 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.889037463 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.886570846 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.887648331 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.888380094 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.888274802 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.890378821 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.885807694 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.888795548 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.887041754 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.887411197 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.887894148 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.884220292 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.885348795 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.882989679 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.884233381 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.886799103 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.88368788 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.882941736 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.884255951 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.883840802 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.882379419 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.888386207 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881291099 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881675457 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.882490865 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.882261181 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.885820734 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.881637413 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880468091 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.885931779 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.881530503 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.88168395 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880604245 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880194767 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879667557 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.879468198 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879880717 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878838478 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878808844 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877153677 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877251897 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878195113 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880848633 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878621192 seconds)
  done (took 126.239547101 seconds)
done (took 2599.764785835 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.950378767 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.988300015 seconds)
  done (took 15.74405556 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.038717866 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.993054008 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.879596057 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.906389596 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.875076398 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.878152864 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.898934425 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.874014376 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.878326157 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.87896649 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.878994722 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.068800947 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.932098205 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.874755827 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.881400249 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.97057039 seconds)
  done (took 52.525074344 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.881905367 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.879744345 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.894449102 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.880268993 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.880077035 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.891557515 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.908882838 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.884557888 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.915801902 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.893415263 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.951541451 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.88755463 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.879715296 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.9327281 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.894740391 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.894193047 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.976991322 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.958543928 seconds)
  done (took 36.08926729 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.955891943 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.881881897 seconds)
  done (took 10.649307133 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.888011597 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.926720927 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.88121073 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.883749249 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.867937298 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.883872366 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.90465934 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.923044563 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.864424463 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.096398606 seconds)
  done (took 70.92542469 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.887238201 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.881329333 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.885020092 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.882720273 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.875443452 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.877776336 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.882257412 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.882749652 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.562485228 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.929163679 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.888483904 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.892161477 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.879433638 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.881862262 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.877915332 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.90619177 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.024365149 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.878035593 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.878143961 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.886243117 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.878959735 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.932454379 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.89483741 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.884258085 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.914273611 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.551431122 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.888954057 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.888319594 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.989640485 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.876401673 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.879937291 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.090826233 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.888279975 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.342243405 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.150002917 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.881048981 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.892650045 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.885127061 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.874949623 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.996337833 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.878985493 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.882733589 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.854808301 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.12799231 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.970150568 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.923562235 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.182474977 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.892697198 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.879244681 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.912295059 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.880203211 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.878083312 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.898674315 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.398891379 seconds)
  done (took 133.490297804 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.875634429 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.219229102 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.041427209 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.875250409 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.158620702 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079836528 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.878546435 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.919894987 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.873780423 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.101205122 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.127257738 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.979708402 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.873715871 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.87490962 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.871153614 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.870375226 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.029762939 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.94357444 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.873816333 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.872717245 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.900550556 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.11594614 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.992354252 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.875381974 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.902132741 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.085432125 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.991646688 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.976098876 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.649553187 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.875974949 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.94207412 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.874248509 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.873238196 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.871220522 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.029792111 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.965423438 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.955030177 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.874840808 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.874110282 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.873778923 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.53036344 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.077302584 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.966996617 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.000524285 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.123520952 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.077894846 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.648315254 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.873160759 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.602644948 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.036809733 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.10238904 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.101888492 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.994663618 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.874963254 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.119838359 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.875793594 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.87525669 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.120602755 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.093792263 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.972242117 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.87469154 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.876605884 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.874196574 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.113576016 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.876581384 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.968022982 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.875230125 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.87553159 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.976305802 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.972895012 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.100621889 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.083194386 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.901894526 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.233464442 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.373444694 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.120852754 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.93807368 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.122097019 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.87753827 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.873828641 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.95291953 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.720957024 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.128226018 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.115549159 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.119203935 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.90881143 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.594084598 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.875912719 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.100880795 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.094401148 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.134419447 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.121958666 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.113293984 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.189698313 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.875841539 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.876025253 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.102432409 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.997332674 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.876864885 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.223415924 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.10767009 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.435542585 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.904057157 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.182822589 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.005817486 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.878523647 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.503499011 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.87882847 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.106453828 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.915934279 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.881788251 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.877889057 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.09528743 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.860844716 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.877210689 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.763037345 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.937041165 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.8780157 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.111534229 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.879742972 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.144272644 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.880399453 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.110513357 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.085474537 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.905499568 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.049162774 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.125641192 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.877246481 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.12437894 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.118631455 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.989970072 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.14617928 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.757511118 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.879321574 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.164784357 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.878646767 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.884556621 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.048300675 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.88417415 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.016672382 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.879030923 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.170361877 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.898849006 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.107601066 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.879157466 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.132174649 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.910621976 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.926720072 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.882292848 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.003298478 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.883692106 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.713265539 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.034098154 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.88562139 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.877098727 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.429158711 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.882175046 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.035391494 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.108254279 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.898639355 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.952281264 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.539475939 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.880088691 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.961605727 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.901984917 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.260995427 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.882105334 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.130786498 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.880076365 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.883070053 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.879982161 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.117001356 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.112958386 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.881753089 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.879377354 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.785410574 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.882178877 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.879861045 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.061501056 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.212386022 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.87854281 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.082590706 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.882905426 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.0064918 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.885856021 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.947348205 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.21336157 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.881263358 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.879645521 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.882124003 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 7.313565902 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.881892054 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.090540064 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.908893561 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.427945446 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.021368248 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.154999693 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.190294322 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.123406256 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.924956196 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.8857789 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.132849125 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.887603719 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.941522862 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.884256213 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.901605993 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.112325062 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.886345303 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.140630707 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.153868694 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.75956318 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.929047454 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.884858385 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.882600322 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.881371839 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.026269678 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.96751977 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.88536754 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.882850631 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.996174751 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.001179369 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.089437104 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.88956542 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.945633114 seconds)
  done (took 905.936286564 seconds)
done (took 1227.164675363 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.8847127 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.884860353 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.885157037 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.88205469 seconds)
  done (took 29.348679607 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.885968431 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.884045548 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.886301168 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.887755313 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.885749519 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.886094782 seconds)
  done (took 13.127166766 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.011887602 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.885614535 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.884320035 seconds)
  done (took 21.596400247 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.959313469 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.264537129 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.026709199 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.3077241 seconds)
  done (took 10.371719496 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.8865585 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.887332484 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.885942184 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.887290813 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.887045138 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.886185043 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.888030226 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.887235315 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.889593242 seconds)
  done (took 18.800506017 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.742784836 seconds)
done (took 99.797611431 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.374044234 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.143498975 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.953384064 seconds)
    (4/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.186478454 seconds)
    (5/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.181159437 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.9862971 seconds)
    (7/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.052312579 seconds)
    (8/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.130930413 seconds)
    (9/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.234720304 seconds)
    (10/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.906941985 seconds)
    (11/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.498948175 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.902960655 seconds)
    (13/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.888243632 seconds)
    (14/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.109778131 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.778604843 seconds)
    (16/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.989158577 seconds)
    (17/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.888859181 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.750597113 seconds)
    (19/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.946584892 seconds)
    (20/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.030330755 seconds)
    (21/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.131593496 seconds)
    (22/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.186615734 seconds)
    (23/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.922740537 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.23229138 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.192005928 seconds)
    (26/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.985519427 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.286281465 seconds)
    (28/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.062833669 seconds)
    (29/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.071984152 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.976919381 seconds)
    (31/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.986792464 seconds)
    (32/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.377227498 seconds)
    (33/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.892803942 seconds)
    (34/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.135336806 seconds)
    (35/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.2474324 seconds)
    (36/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.102730724 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.890229018 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.294408001 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.05795514 seconds)
    (40/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.887364897 seconds)
    (41/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.216659204 seconds)
    (42/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.762802015 seconds)
    (43/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.375159301 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.997745173 seconds)
    (45/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.948451124 seconds)
    (46/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.564034196 seconds)
    (47/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.027276944 seconds)
    (48/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.888622359 seconds)
    (49/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.155952912 seconds)
    (50/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.892406159 seconds)
    (51/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 3.562565475 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.028554393 seconds)
    (53/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.30797988 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 2.107189068 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.217130222 seconds)
    (56/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.891605645 seconds)
    (57/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.082624464 seconds)
    (58/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.176874172 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 5.619883492 seconds)
    (60/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.912821599 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.068969905 seconds)
    (62/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.891171091 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.141296351 seconds)
    (64/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.908349432 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.010708766 seconds)
    (66/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.889374736 seconds)
    (67/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 4.066101285 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.045456537 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.907168953 seconds)
    (70/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.901319777 seconds)
    (71/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.955029154 seconds)
    (72/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.892158114 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.032133676 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.978172653 seconds)
    (75/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.123596332 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.777466802 seconds)
    (77/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.916869967 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.906819287 seconds)
    (79/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.126030151 seconds)
    (80/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.895616438 seconds)
    (81/309) benchmarking ("map", identity, Float64, false)...
    done (took 3.490172926 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.858984571 seconds)
    (83/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.257465563 seconds)
    (84/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.786657153 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.226924317 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.857187133 seconds)
    (87/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.338563914 seconds)
    (88/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.914655529 seconds)
    (89/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.346705385 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.896779668 seconds)
    (91/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.887916195 seconds)
    (92/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 3.12486403 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.900008267 seconds)
    (94/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.914721881 seconds)
    (95/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.987745475 seconds)
    (96/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.000039887 seconds)
    (97/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.142782635 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.507039757 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.139157253 seconds)
    (100/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.893184277 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.064053345 seconds)
    (102/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.092093353 seconds)
    (103/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.093057763 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.916933034 seconds)
    (105/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.970096754 seconds)
    (106/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.207168383 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.201039497 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.190951777 seconds)
    (109/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.047172611 seconds)
    (110/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.453535136 seconds)
    (111/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.689388863 seconds)
    (112/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.213046313 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.897969417 seconds)
    (114/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.976355219 seconds)
    (115/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.425356252 seconds)
    (116/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.746094154 seconds)
    (117/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.185312586 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.896483065 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.184970614 seconds)
    (120/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.008517873 seconds)
    (121/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.918155489 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.015157102 seconds)
    (123/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.902888976 seconds)
    (124/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.251525747 seconds)
    (125/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.051461598 seconds)
    (126/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.691801959 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.970557139 seconds)
    (128/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.798657948 seconds)
    (129/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.931628516 seconds)
    (130/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.9771208 seconds)
    (131/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.044606943 seconds)
    (132/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.13415372 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.024498243 seconds)
    (134/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.902290303 seconds)
    (135/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.576061458 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.936197176 seconds)
    (137/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.900199092 seconds)
    (138/309) benchmarking ("perf_sum", Int8, false)...
    done (took 2.16071447 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.00103429 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.89797522 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.248784662 seconds)
    (142/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.90046807 seconds)
    (143/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.057557087 seconds)
    (144/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.410626432 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.255889795 seconds)
    (146/309) benchmarking ("sort", Int8, false)...
    done (took 4.783792117 seconds)
    (147/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.198733773 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.152693282 seconds)
    (149/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.023384961 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.199635095 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.91955778 seconds)
    (152/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.101771985 seconds)
    (153/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.737728733 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.042119467 seconds)
    (155/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.079635675 seconds)
    (156/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.998610808 seconds)
    (157/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.895217125 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 4.231976908 seconds)
    (159/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.007824664 seconds)
    (160/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.034526885 seconds)
    (161/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.97919697 seconds)
    (162/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.167262295 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.912583134 seconds)
    (164/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.025209632 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.89404814 seconds)
    (166/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.002749208 seconds)
    (167/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.899933977 seconds)
    (168/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.896922835 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.075354016 seconds)
    (170/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.165966234 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.896675695 seconds)
    (172/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.561122949 seconds)
    (173/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.891734294 seconds)
    (174/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.010359036 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.893139305 seconds)
    (176/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.977862821 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.895581138 seconds)
    (178/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.137548291 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.900933224 seconds)
    (180/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.995980267 seconds)
    (181/309) benchmarking ("sort", BigInt, false)...
    done (took 6.89651925 seconds)
    (182/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.903406479 seconds)
    (183/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.071369573 seconds)
    (184/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.894174684 seconds)
    (185/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 8.26039974 seconds)
    (186/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.920091142 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.813417863 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.025969938 seconds)
    (189/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.898540062 seconds)
    (190/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.049084948 seconds)
    (191/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.902211439 seconds)
    (192/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.944369712 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.896808843 seconds)
    (194/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.411877154 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.997795158 seconds)
    (196/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.975355563 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.898208609 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.802506706 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.025508711 seconds)
    (200/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.974642697 seconds)
    (201/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.903389027 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.375173758 seconds)
    (203/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.960495553 seconds)
    (204/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.077838402 seconds)
    (205/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.063321168 seconds)
    (206/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.987601812 seconds)
    (207/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.201113774 seconds)
    (208/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.991811798 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.897637167 seconds)
    (210/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.135546224 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.96487835 seconds)
    (212/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.190195644 seconds)
    (213/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.833743467 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.220233212 seconds)
    (215/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.201247306 seconds)
    (216/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.988171624 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.138725747 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.902524205 seconds)
    (219/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.32596722 seconds)
    (220/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.008713867 seconds)
    (221/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.901575432 seconds)
    (222/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.316883994 seconds)
    (223/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.968254624 seconds)
    (224/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.909206344 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.635699187 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.205261461 seconds)
    (227/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.926883512 seconds)
    (228/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.151063233 seconds)
    (229/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.28435446 seconds)
    (230/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.238635196 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.90644467 seconds)
    (232/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.935763634 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.9030832 seconds)
    (234/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.344565899 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.700066367 seconds)
    (236/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.911654744 seconds)
    (237/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.369098445 seconds)
    (238/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.999640107 seconds)
    (239/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.701682358 seconds)
    (240/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.938471058 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.152458227 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.700388586 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.2598271 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.953328301 seconds)
    (245/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.574456256 seconds)
    (246/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.91700719 seconds)
    (247/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.233097143 seconds)
    (248/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.224762916 seconds)
    (249/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.298539214 seconds)
    (250/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.234140025 seconds)
    (251/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.918451117 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.323181706 seconds)
    (253/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.93688055 seconds)
    (254/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.415713504 seconds)
    (255/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.070840336 seconds)
    (256/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.064123999 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.531480543 seconds)
    (258/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.065662153 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.251504678 seconds)
    (260/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.004728849 seconds)
    (261/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.017457469 seconds)
    (262/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.015662107 seconds)
    (263/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.061877849 seconds)
    (264/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.022702858 seconds)
    (265/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.81534696 seconds)
    (266/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.919832311 seconds)
    (267/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.298927412 seconds)
    (268/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.125107924 seconds)
    (269/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.941855856 seconds)
    (270/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.948930951 seconds)
    (271/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.160207964 seconds)
    (272/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.226119385 seconds)
    (273/309) benchmarking ("sort", Float64, false)...
    done (took 5.699170895 seconds)
    (274/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.659148633 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.04778995 seconds)
    (276/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.098558885 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.161300218 seconds)
    (278/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.138896346 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.940842786 seconds)
    (280/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.599194512 seconds)
    (281/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.917448669 seconds)
    (282/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 3.457092489 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.064736362 seconds)
    (284/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.058117611 seconds)
    (285/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.000046683 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.911340804 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 3.514182213 seconds)
    (288/309) benchmarking ("sort", Float32, false)...
    done (took 5.610041438 seconds)
    (289/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.105703945 seconds)
    (290/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.915383131 seconds)
    (291/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 3.545557873 seconds)
    (292/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.070562669 seconds)
    (293/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.295251267 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.762560683 seconds)
    (295/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.991021507 seconds)
    (296/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.998929424 seconds)
    (297/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.379198293 seconds)
    (298/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.063746551 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.311937789 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.949342463 seconds)
    (301/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.188395493 seconds)
    (302/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.997421547 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.584882669 seconds)
    (304/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.009198647 seconds)
    (305/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.938592283 seconds)
    (306/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.002437794 seconds)
    (307/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.032450817 seconds)
    (308/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.1588474 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.132615657 seconds)
  done (took 1014.660667269 seconds)
done (took 1016.541330248 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.945168247 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.934910131 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.918053091 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.93996085 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.031850115 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.964772741 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.930553261 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.924733155 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.969196165 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.964824029 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.916662626 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.96289019 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.920734713 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.920691801 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.920202341 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.93605085 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.219089705 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.940764947 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.936277914 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.930704745 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.937574136 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.919792088 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.967019638 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.960119678 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.926816836 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.924853266 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.923429468 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.939463719 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.031666426 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.922414642 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.920104839 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.931513863 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.216389851 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.937996285 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.914364915 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.936488233 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.937694103 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.931106142 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.924510213 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.954641902 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.302973367 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.952398806 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.918324837 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.921229794 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.920367416 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.923571589 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.924168879 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.928886725 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.937219611 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.940841729 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.298883432 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.964260919 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.922473755 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.921247359 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.933604028 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.92066548 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.924173704 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.939096675 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.938536736 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.936876743 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.203977125 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.947769253 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.927767615 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.938394709 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.932073229 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.339579341 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.949522655 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.926471126 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.305196229 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.95506804 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.337358256 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.960256103 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.918152358 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.933468662 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.953383277 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.220550922 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.940700366 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.916957396 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.932651194 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.915261489 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.933322196 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.939805739 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.928225488 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.920884851 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.947143391 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.967354511 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.939380957 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.92402863 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.931730388 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.942948179 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.930591446 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.93759858 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.926905382 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.923242102 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.934181853 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.931158911 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.929072289 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.927200806 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.930501314 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.938073275 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.307261897 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.969646489 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.924466526 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.92064418 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.923140408 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.938803376 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.30538142 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.958259096 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.947187529 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.976378336 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.9278972 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.207497056 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.950220623 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.942908028 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.93916177 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.928597546 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.921534364 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.211374489 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.323027958 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.967254345 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.927195939 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.923060276 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.948187575 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.929488876 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.925453409 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.221479879 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.947544426 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.945008644 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.049182899 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.940052354 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.955302676 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.923104721 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.929268168 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.970037178 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.942072834 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.955038535 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.931777257 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.949152597 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.947226628 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.924986671 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.939818738 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.939432066 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.930437364 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.933167435 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.924526948 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.971710416 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.941386472 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.947634526 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.944122227 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.048313095 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.926445378 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.21301789 seconds)
done (took 301.878813796 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.004976365 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.923671969 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.051309406 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.924850746 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.017184439 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.997313084 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.924849901 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.922483643 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.920673261 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.418106107 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.926072632 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.927457907 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.926220071 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.92277142 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.000028559 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.925496153 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.920946492 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.365036722 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.924707587 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.00643307 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.92508596 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.927353057 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.922005332 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.439551154 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.924515653 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.927109052 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.001804697 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.927009293 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.368692793 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.919862968 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.923323213 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.389956666 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.00227366 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.952076245 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.935727095 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.930657468 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.014304264 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.931270359 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.992417572 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.994392868 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.042835644 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.959067036 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.925482526 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.928833518 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.925138262 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.925868634 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.926638044 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.955794913 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.923316031 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.930287176 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.365393436 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.932461399 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.931341263 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.927214885 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.926025905 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.953315344 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.926808873 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.92402133 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.003643552 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.928381882 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.988105583 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.426685978 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.418410816 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.926979666 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.923778681 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.926433279 seconds)
  done (took 189.02379128 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.992356812 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.999674296 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.992743905 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.925388268 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.975498253 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.993744635 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.926696276 seconds)
  done (took 15.655388784 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.932593894 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.925114308 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.977248607 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.974789869 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.927375287 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.111448609 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.938709429 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.933328947 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.949427399 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.922678721 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.597280498 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.972066288 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.926171778 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.918832624 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.940199608 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.982126405 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.928002352 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.930261862 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.044415568 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.075031574 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.930358677 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.929115893 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.948528625 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.933369053 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.925745371 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.919803586 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.922866394 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.931205117 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.923484757 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.924699881 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.919861002 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.974457154 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.925879753 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.922413703 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.92070599 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.925616957 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.921096001 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.920833012 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.921785482 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.92118349 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.921798816 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.918501695 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.919254038 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.927166174 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.920836626 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.951595699 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.927265667 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.923855307 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.924061284 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.920828389 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.949503787 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.922731565 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.920740978 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.929663069 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.969692922 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.93712587 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.923699774 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.922344719 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.92117285 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.924670512 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.920645856 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.069686009 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.97651341 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.924117888 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.98075235 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.081234978 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.925882381 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.92658354 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.924891789 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.015604471 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.92194156 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.974959441 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.925845306 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.039412404 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.922680336 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.104649151 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.948062144 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.929985645 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.928340756 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.924076005 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.934858228 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.924911502 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.925052744 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.934085332 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.93268617 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.926656217 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.926462106 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.929261841 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.936584813 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.922348455 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.973583448 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.924789021 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.926529193 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.069886387 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.924157999 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.041085537 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.953078636 seconds)
  done (took 211.371074913 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.931598446 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.934870965 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.926934065 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.93870276 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.928592489 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.924876081 seconds)
  done (took 13.43397906 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.928370541 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.928384094 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.926710344 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.922665745 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.930085221 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.925299081 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.927117838 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.930772261 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.929219719 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.929812721 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.923877393 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.924559908 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.925976187 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.925893183 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.931013217 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.925535964 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.922256538 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.926983778 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.924403275 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.925451406 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.134927132 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.924194935 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.923902875 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.926852586 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.935127802 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.925504356 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.937962231 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.924991324 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.924175579 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.93170901 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.928821633 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.927063438 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.926654001 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.930130169 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.931527598 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.926542594 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.928685304 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.926668902 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.925925418 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.929866844 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.930115565 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.928021816 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.92876814 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.926978588 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.927552618 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.936254311 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.930653925 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.940774391 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.925891639 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.925438062 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.928064375 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.924954718 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.928289523 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.926540514 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.929315989 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.936050207 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.931826869 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.924843152 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.928681571 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.930865912 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.932412874 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.92669032 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.930084412 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.932786246 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.932561888 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.927696446 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.933239384 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.932794039 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.927738326 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.927364734 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.928209226 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.92652687 seconds)
  done (took 141.913647649 seconds)
done (took 573.263099895 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.690347965 seconds)
  done (took 9.543243126 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.021541782 seconds)
  done (took 8.985162151 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.307253817 seconds)
  done (took 10.175575466 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.953976941 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.965152385 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.938907993 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.941183201 seconds)
  done (took 29.679401044 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.249817819 seconds)
  done (took 9.116238825 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.960205092 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.935368772 seconds)
  done (took 15.828767628 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.976142574 seconds)
  done (took 8.849386575 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.329097527 seconds)
  done (took 9.204005497 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.960730264 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.957218348 seconds)
  done (took 15.805249444 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.945375484 seconds)
  done (took 8.814670423 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.136216206 seconds)
  done (took 10.09227056 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.965198949 seconds)
  done (took 8.904193114 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.95702694 seconds)
  done (took 8.828024375 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.88361985 seconds)
  done (took 9.755620408 seconds)
done (took 165.433856702 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.954112869 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.938370507 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.941883607 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.944168994 seconds)
  done (took 29.645972503 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.975133815 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.976124478 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.983829034 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.974689764 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.970643829 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.964006002 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.975473576 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.976288394 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.96699898 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.97729788 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.975013676 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.976457209 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.977425922 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.983623226 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.984632642 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.974795583 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.993005741 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.975875833 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.966329296 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.984027132 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.976208767 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.975868499 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.94138338 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.941631636 seconds)
  done (took 49.235293769 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.138146711 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.01297752 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.09883067 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.994786099 seconds)
  done (took 10.117670742 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.940603881 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.008014939 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.995235457 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.988609521 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.994876512 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.047409424 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.997400693 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.156071953 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.068910529 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.071097441 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.950253488 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.96703733 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.971945433 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.992180492 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.048162814 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.944932417 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.949239879 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.058574526 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.007767888 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.127554194 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.945584827 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.999258492 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.998611994 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.000301192 seconds)
  done (took 50.099753015 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.945816462 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.953481004 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.95424888 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.946773889 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.94613127 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.949431771 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.954286267 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.948132198 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.969058537 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.948577851 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.947127819 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.948596241 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.952746713 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.944658033 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.9487312 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.962360711 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.960835621 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.944663751 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.951021314 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.953290729 seconds)
  done (took 40.90346521 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.943139624 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.791895986 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.29082583 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.197125924 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.946293829 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.947259801 seconds)
  done (took 31.987441147 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.958313001 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.94865956 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.945441063 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.999954313 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.084599237 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.953545196 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.947453367 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.957416239 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.989742857 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.010158391 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.965696994 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.971238213 seconds)
  done (took 25.608338498 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.94637174 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.944061886 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.945046368 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.957824882 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.957645564 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.949756022 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.954111259 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.944418289 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.958203512 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.961306936 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.950127623 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.959930745 seconds)
  done (took 45.305944365 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.654445989 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016533535 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.943646615 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.817874325 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.399321767 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.495593661 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.83605476 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.569014388 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.801778431 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.877145015 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.156677267 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.955564872 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.041487517 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.956522257 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225454355 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.420603403 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168322594 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.199065643 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952808676 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.055845604 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.156568414 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162873867 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.23936971 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.956272242 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959546097 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.960308866 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.605830595 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.572313905 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.064131914 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.442041184 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.161668806 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.908135011 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009792484 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.95743565 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.970331912 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.958339545 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958810665 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225665831 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.965487327 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150287113 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031560386 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.203033903 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960002328 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.37686011 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.658746109 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.239733918 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.077933371 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.955162996 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960167932 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.954579584 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.881574682 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040290838 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.957687758 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962997093 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.654190262 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.959493102 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03223035 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.956970411 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160337794 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.76587706 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.646842546 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.955918515 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957017466 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.508881107 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.959996314 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.148775658 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.576786071 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.405507975 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.378310505 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.05315527 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.958263784 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.957691458 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.262129421 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885356327 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.628902832 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.071061467 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.092974084 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.973689231 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.596539484 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252699448 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.367797469 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.528606112 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.878142057 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219735407 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.809427849 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.910369137 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174276927 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.784563175 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.886317764 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162142165 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985945859 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960556797 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.223026935 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.632381544 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.151230124 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.968737409 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.39401386 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975062358 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.961416309 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958659333 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.168769507 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.507045921 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.956640657 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.078648155 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971940195 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.039162461 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.886574407 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.969236838 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.960554445 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.862527378 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.962316051 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916456792 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.09819644 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.791210359 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.962100985 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.898134209 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961799787 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.963290456 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079556795 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.916713516 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199674817 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.249702369 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.627546685 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946659354 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.171106558 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.315569607 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19739383 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.967580347 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.175041813 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.486639165 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.354281846 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.019452249 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.239804822 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.015545678 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.244714582 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.386277997 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034565901 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.647403653 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.663859648 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.177124945 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975819734 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.958013298 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.963357982 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963544741 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.896095722 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.782819665 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.326422009 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.132976236 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.173098059 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.445254113 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.904828148 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.053650659 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231356132 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.094794584 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.959083012 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.603537761 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.388315394 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.764695133 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.047788004 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.119117614 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.263440359 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.015365028 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975761723 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037392243 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980481353 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.969458984 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.308246751 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.332336953 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.962923095 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.962066371 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.913303469 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.966344455 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.963785203 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.495038374 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.927666676 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.964424129 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.972560395 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.839499334 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035656631 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.966045517 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.966851339 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.51937507 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.486886625 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.965089742 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.63079638 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.97642936 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.107174556 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.227366794 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.292279325 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09277803 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.664083795 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.347045409 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.07378421 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.664490792 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.89565726 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.964765819 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.916389531 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966363845 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.969100437 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970095697 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.154981954 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.231916335 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26579935 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.418269405 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.022426052 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166977398 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.575816782 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.989272454 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.964103481 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970252957 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.965316709 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.963546321 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.46119051 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.263404203 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.960262541 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070098573 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.965965557 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090636315 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.977800921 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.890181084 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.973719609 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.967390485 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413560302 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.069798735 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.915313355 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.24271804 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.752527772 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170312518 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012305326 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.981075049 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97186142 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.576156165 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.143589289 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.894617076 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395556044 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08545301 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.624433471 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.539784802 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.526813729 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245512101 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.272530263 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.282317954 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.034129096 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.181363639 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.05235615 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.022960389 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.057751369 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.910351947 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.892972516 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.622140289 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301003611 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.279936854 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979064365 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186065805 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.574042954 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.273332446 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996085548 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.664627558 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341062568 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.938525025 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988059296 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.318478121 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.155588525 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056092232 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969253232 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.920003157 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.293652942 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004502696 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.675332511 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982862719 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.321143914 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.404465731 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.265445906 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.322309357 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19053324 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.976406921 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314611077 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.188915616 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.090808964 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.971921487 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.94244949 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.187869651 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.550390397 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.951205367 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974573416 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.143562392 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.333841359 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.873748176 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.97322508 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.134887266 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311830685 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.973591901 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.289202886 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.330956143 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.067672415 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027530208 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196875198 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.659182614 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343663446 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.524199559 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.43809116 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.971777823 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.898091625 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.669640683 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.171935284 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.97642638 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.939525597 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171325986 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19922283 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.664628622 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.191211943 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.212866059 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.985692309 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.232131041 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044184624 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.067342102 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.25504195 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.392017427 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.214422625 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.198973178 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.510739612 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.187391674 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.417762607 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.13084348 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.971088557 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.176549281 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.187941615 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.185731966 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.342110467 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14871543 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.680190418 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.978053509 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.181359229 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254017162 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03130472 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.330707302 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.151356931 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.058489453 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979175645 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038492794 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.980192698 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981075723 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.330804142 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.51194911 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.989780831 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050760843 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.975717585 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.533989352 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.976236498 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.979481251 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234466256 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30772849 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.29395509 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.954545194 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.971374481 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.978788099 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100271314 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.899536234 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981706722 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.245403809 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.977239622 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393607922 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.206729129 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987599325 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.261753389 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.369377616 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.63896287 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.017682201 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978746661 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.180527246 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266099659 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.164316752 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.172765723 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.248552382 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.301365732 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.006211608 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.333239943 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220377178 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977641406 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.848910508 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.976984346 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104795879 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.17922808 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.242180073 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.482995778 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.642334747 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.317423733 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.824263278 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.980416715 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.582086193 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324022305 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.237218621 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.024553389 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040924888 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.982434711 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410738684 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.775621777 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107083597 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.858089734 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.900921518 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.98803416 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.259551245 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.218281543 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.687371825 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.978783931 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.240478283 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279313581 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239362279 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.026021471 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.899516898 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190839472 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976636841 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.982880698 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.246945432 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184416701 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.222476312 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980906598 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.981812269 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.784779703 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.905628609 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.976495147 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032744852 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.20458671 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999993006 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.491913122 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.678292309 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246639502 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024641571 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980452529 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.24171269 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.49315173 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.510070713 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984618851 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179956337 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.977928306 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.360254757 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.980076594 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.416624492 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.364888945 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.980303666 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.512474575 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.302552278 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.250284558 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.910007811 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989692208 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191906197 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.908653353 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.010113171 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.959439279 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41726585 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290926407 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.711376237 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.535646761 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.978775749 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.981482283 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.420939608 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094285767 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417205798 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.07564619 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002318512 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.498936604 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.695064979 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.264936008 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.222238578 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.513827818 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.64469994 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.985733871 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.976887321 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.981263259 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.901481011 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.162908814 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.167925045 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255801365 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.008945413 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423065592 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.097762165 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.338967188 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110215492 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.160806127 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09740706 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.501859737 seconds)
  done (took 1709.189809994 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.987530814 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.056114586 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.014681799 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.994367855 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.978269843 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.997958927 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.06508122 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.992018602 seconds)
  done (took 57.995896466 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.980736072 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.999284416 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.988071377 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.983174783 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.987579357 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.983925798 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.150597001 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.992744646 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.985407727 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.989950751 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.990123311 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.981050414 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.271662476 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.003341831 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.007991775 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.980110539 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.985875751 seconds)
  done (took 76.175478239 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.983332982 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.203122323 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.048828434 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.989825738 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.946941125 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.996065085 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.948490278 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.047562068 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.992798881 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.228410343 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.286245813 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.00118258 seconds)
  done (took 91.58566379 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.999612172 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.987013637 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.988132454 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.988312436 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.989016608 seconds)
  done (took 11.874741568 seconds)
done (took 2231.680102707 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.218913228 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.042797018 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.084999228 seconds)
  done (took 6.038886507 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.134102656 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.180831168 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.291715986 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.051733063 seconds)
  done (took 10.577620725 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.295504813 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.3527877 seconds)
  done (took 6.557857929 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.305984716 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.009700173 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.369592402 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.986707546 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.99026692 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.987351534 seconds)
  done (took 22.882431851 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.987645635 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.986460552 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.986770905 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.986389018 seconds)
  done (took 9.861629229 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.98641717 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.711885174 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.987520763 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.998499803 seconds)
  done (took 21.597368668 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.131851678 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.102166075 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.130718548 seconds)
  done (took 8.276417785 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.128773986 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.835454311 seconds)
  done (took 6.876308811 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.128829325 seconds)
  done (took 4.039177387 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.015049489 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.257220013 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.480783738 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.510694151 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.624734863 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.75588099 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.285920917 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.205471377 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.421262171 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.422402534 seconds)
  done (took 25.892378294 seconds)
done (took 138.414901847 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.318053859 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.010677589 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.187524448 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.334211157 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.216024017 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.187531087 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.206349451 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.32697035 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.013878866 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.001040689 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.340220004 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.213899623 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.151429299 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.000118772 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.159197864 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.001616224 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.209507912 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.336345613 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.017709017 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.237910627 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.213793946 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.985220408 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.178174158 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.994016858 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.211535754 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.139274717 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.524217143 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.000712053 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.157317774 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.533299661 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.139279469 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.379102328 seconds)
  done (took 171.840174754 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.992754996 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.985815365 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.988286471 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.985475165 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.420869168 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.988063433 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.98897596 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.988943724 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.426516028 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.421675178 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.987824059 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.409730932 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.988446511 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.989019684 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.991297465 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.98550044 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.60098174 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.986947123 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.98593624 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.985922983 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.985675339 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.246847594 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.990775232 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.256348271 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.593144589 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.989748707 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.988034113 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.98744437 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.991011563 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.989438754 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.988830154 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.987336439 seconds)
  done (took 213.010862686 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.989605743 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.990576799 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.990254479 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.989809725 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.991588126 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.992586321 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.989156492 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.992128562 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.792649642 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.782806995 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.990840185 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.991590733 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.990768756 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.989229286 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.992398489 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.98693286 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.988599416 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.99138865 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.990956502 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.990533408 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.99023857 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.648524517 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.9899039 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.655708478 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.993160185 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.991745227 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.990438317 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.989110375 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.991182568 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.992315942 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.99090901 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.992814099 seconds)
  done (took 224.537688919 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.229705846 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.992795531 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.993645705 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.990587417 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.994137417 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.99290365 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.977895576 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.24081244 seconds)
  done (took 20.330069825 seconds)
done (took 631.639380623 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.392275041 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.21435162 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.170853037 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.01802289 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.294704774 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.060604837 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.014461826 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.079712832 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.853833927 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.090360078 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.669770167 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.036709209 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.760114425 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.038237136 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.140176953 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.070106023 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.598236872 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.703020914 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.157766501 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.091338289 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.193693198 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.972245553 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.09302366 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.899622317 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.687410261 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.01161463 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.074639643 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.605811507 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.026484439 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.174577357 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.695096158 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.347180085 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.027684606 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.01760135 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.067954924 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.048171537 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.274740108 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.025853015 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.140007506 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.757123738 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.115740846 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.766259172 seconds)
  done (took 108.397802774 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.006850494 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.002833166 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.000350536 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.001744302 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.012191757 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.001226543 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.004311206 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.004749529 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.003258706 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.005497644 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.003385398 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.012512223 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.002283656 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.011263761 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.000662439 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.004280655 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.005444564 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.012686358 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.003931932 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.00129703 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.00289936 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.007563377 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.001053253 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.005615649 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.005735548 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.003423717 seconds)
  done (took 54.063620595 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.995372617 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.169630551 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.242947876 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.016035224 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.002145053 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.000506326 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.018367586 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.005999348 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.999344144 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.00097962 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.089665113 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.004517377 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.019600752 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.243905721 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.016082469 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.997293106 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.002418109 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.002035179 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.180551366 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.016183212 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.019958327 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.003334582 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.02072332 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.01138801 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.002614486 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.000030228 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.006240121 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.501121386 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.008678069 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.09360978 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.044011203 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.022933459 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.439173285 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.256362583 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.052700736 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.006718975 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.001289668 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.09571955 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.009228387 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.002644298 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.019950675 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.010782668 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.250382292 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.528185776 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.016769513 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.002824292 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.508622407 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.107636195 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.038451484 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.006889396 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.251169051 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.018595337 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.004533472 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.003141328 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.036616877 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.016612151 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.002493215 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.36701924 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.015122777 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.01985979 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.007023229 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.002859069 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.192629041 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.01119395 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.173893229 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.012980217 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.011666408 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.001027945 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.25489715 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.018006769 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.5539964 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.017171498 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.000382623 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.092311437 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.175532919 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.53219532 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.016026519 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.191328687 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.456430251 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.028715297 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.01047768 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.489947033 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.032402694 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.010315009 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.003752796 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.00279803 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.005659525 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.047560682 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.021315719 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.457920875 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.543767082 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.385542732 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.028769903 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.015569224 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.007272138 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.363376603 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.011426275 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.004742607 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.241352489 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.55011695 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.018293362 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.011540985 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.523229661 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.018587531 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.022890791 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.012288672 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.257686039 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.023173207 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.047458086 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.00732553 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.013657589 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.005608882 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.028553377 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.012165127 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.005484493 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.516456737 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.113749969 seconds)
  done (took 248.397946379 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.008867571 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.003371457 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.009484867 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.005142731 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.001113907 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.008214124 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.007142566 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.005848255 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.003826269 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.006629891 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.005469105 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.004713224 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.004366467 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.012085857 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.008776785 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.008324364 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.611456829 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.007863929 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.008554979 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.003669628 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.660658046 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.011695437 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.003408484 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.003597085 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.009984781 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.006495286 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.019506643 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.008749418 seconds)
  done (took 171.39381356 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.00950164 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.117894738 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.0209736 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.037957508 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.016571049 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.00734765 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.105978222 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.022329249 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.012657971 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.007874869 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.010568419 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.06782748 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.015493342 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.107617965 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.040208632 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.11495633 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.111663115 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.013481504 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.007688195 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.012349783 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.036336745 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.020453835 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.071503428 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.132567447 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.030119157 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.122872376 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.027758642 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.008585369 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.009817254 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.120536289 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.026186328 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.073395649 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.036648054 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.031902148 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.126517887 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.124434436 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.114490757 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.112429134 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.015746604 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.010625675 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.010714008 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.014530806 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.126130713 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.02933642 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.012576161 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.126883666 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.025468603 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.012771895 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.012489927 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.012483745 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.022023541 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.026437896 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.073012174 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.139697026 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.04749294 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.036500925 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.110055613 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.143152176 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.011291538 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.109038387 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.017413991 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.125163293 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.027040076 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.01608549 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.015823679 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.016198127 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.041929493 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.120379708 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.116681249 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.017232967 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.111336072 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.045737506 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.021231695 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.013060843 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.010938865 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.122585537 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.128206918 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.045141175 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.053123943 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.046313252 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.022483436 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.010252265 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.014689102 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.031441496 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.016940662 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.128440993 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.126416415 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.019798112 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.014818123 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.013605532 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.012972849 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.041104496 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.133813357 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.050184479 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.120813723 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.077276941 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.084561162 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.027311981 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.029532167 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.020999355 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.075687039 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.025775573 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.026689421 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.329648472 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.073520289 seconds)
  done (took 217.795688003 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.419780794 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.059999365 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.072547543 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.335932754 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.37201879 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.15821827 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.057852916 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.063124006 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.093190062 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.285264202 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.123534718 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.07851414 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.050571622 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.036383708 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.063306459 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.097179305 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.07161079 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.397195703 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.26374147 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.243931129 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.055472612 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.334311346 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.386709594 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.666709979 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.108819369 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.466514214 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.687738393 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.230729792 seconds)
  done (took 66.223297969 seconds)
done (took 868.186773645 seconds)
SAVING RESULT...
DONE!
