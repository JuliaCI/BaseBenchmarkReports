cset: moving following pidspec: 31878
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.466547187 seconds)
loading group "string"... done (took 0.620463081 seconds)
loading group "linalg"... done (took 8.009823923 seconds)
loading group "parallel"... done (took 0.184495943 seconds)
loading group "find"... done (took 1.217383156 seconds)
loading group "tuple"... done (took 1.930155216 seconds)
loading group "dates"... done (took 1.313645728 seconds)
loading group "micro"... done (took 0.321094202 seconds)
loading group "io"... done (took 0.991852854 seconds)
loading group "scalar"... done (took 40.920808455 seconds)
loading group "sparse"... done (took 13.01953637 seconds)
loading group "broadcast"... done (took 1.065607105 seconds)
loading group "union"... done (took 13.567078369 seconds)
loading group "simd"... done (took 5.119686926 seconds)
loading group "random"... done (took 10.260234852 seconds)
loading group "problem"... done (took 1.937838197 seconds)
loading group "array"... done (took 23.403989474 seconds)
loading group "misc"... done (took 1.840061051 seconds)
loading group "sort"... done (took 3.635675401 seconds)
loading group "collection"... done (took 18.723757156 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.53216064 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130147538 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133074139 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124683318 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.154099604 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.122300463 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.131997821 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090831089 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.819916614 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.155335922 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123506854 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.443509756 seconds)
done (took 5.285831961 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.179331178 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087590864 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087727699 seconds)
  done (took 1.311034382 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069498362 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130158859 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070648369 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.071632194 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071727069 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070187507 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069915297 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.07038025 seconds)
  done (took 1.690994952 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078444845 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.07355811 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070147307 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.0722054 seconds)
  done (took 1.432517403 seconds)
done (took 5.830002984 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.816274279 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.22207378 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.194316707 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.430592581 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137124308 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.169315922 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.650666123 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.323964822 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.19492008 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084875292 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.114526173 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.354360089 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113824677 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.649196476 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081834016 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096543216 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140389623 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.440023095 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.070973906 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085742358 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092311894 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132744906 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.093582237 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078362518 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150789679 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071754166 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.141406195 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083787076 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070696405 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.225632347 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17581567 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.664146571 seconds)
  done (took 10.531244062 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104922296 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.105244667 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07313661 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130659365 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103994381 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073653406 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079610007 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07120114 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095887236 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.135612808 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.097014527 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108546172 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069114554 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07288606 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.089428732 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212046732 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.085008005 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085889141 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075274686 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.084176621 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.113197225 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082808556 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085431264 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085444737 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.13370386 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.184787337 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.103880569 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.103617809 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072550435 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087385404 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118696347 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132591022 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069375886 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070777446 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.132609215 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097996758 seconds)
  done (took 4.801410971 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.049870062 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.149200276 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094835735 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.141295502 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068765011 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113697506 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069610434 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085746821 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.217171637 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.344238689 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.090968777 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.099536576 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.644482285 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115413834 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111329226 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07237341 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.075350977 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071434253 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.585303478 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102156759 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112250803 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086258239 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07427218 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073529024 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.359662698 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072251777 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068415929 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072451102 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061037176 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129866456 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072074383 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.983865196 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.169036571 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070530178 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10524398 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.29494971 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095766136 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.149319271 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073401011 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069556053 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161855553 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.069599285 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075541436 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06962122 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089088319 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108294314 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124055141 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.072327378 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071203311 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169435296 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069351388 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084156705 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.109404746 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.157773937 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.084187232 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071168173 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.268980535 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094573732 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074699416 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068909057 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068928241 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.213678531 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131521175 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071907213 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070399588 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07252754 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073110808 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364539696 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070218588 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.194177522 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071849855 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080570273 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073995798 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073826743 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077355156 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076400158 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093370149 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069990258 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078723973 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069919494 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069705453 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070950346 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087498649 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.40343079 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070584334 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072699966 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068275155 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093604263 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.201191444 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072058986 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.070818743 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104746298 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07362643 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070799613 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.111954071 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070989701 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086970927 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072607009 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.117830029 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070650247 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.113913767 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072827878 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104343625 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074555891 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101922591 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.085227891 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072028987 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.452695225 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069397619 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.069509225 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072910791 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069826751 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072942214 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071398811 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08375035 seconds)
  done (took 22.604878546 seconds)
done (took 40.125208512 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.271168151 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080458418 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077636469 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077906944 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07809022 seconds)
  done (took 1.820359259 seconds)
done (took 3.033717507 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.128686804 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105909271 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068115331 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102132894 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068798284 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106213374 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106084543 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08124045 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106078993 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068285407 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102894419 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068366278 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067908948 seconds)
  done (took 2.414480582 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088544593 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088572706 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074146411 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087457361 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067795486 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087471978 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086151364 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093749944 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086378926 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07691628 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067483823 seconds)
  done (took 2.110345966 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087371276 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.090211006 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074296616 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086939744 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068054665 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087256435 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086707352 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091519059 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086565597 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078498473 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067859835 seconds)
  done (took 2.107639073 seconds)
done (took 7.833226963 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.082312477 seconds)
  done (took 1.27587913 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.607412804 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.148917658 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08588432 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.118936186 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.198901743 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123364509 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276091777 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.09132481 seconds)
  done (took 9.032450706 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.106776148 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073773099 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072318112 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072315454 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072512696 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072477836 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.075490278 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.074024502 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075697596 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.075021233 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.076268444 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073909845 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073099065 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.075290948 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.076653349 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076298913 seconds)
  done (took 2.491170843 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097253341 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095818919 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.077523321 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078622903 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076811401 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076236777 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077903895 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077995485 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074881843 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07675093 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078251794 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076962538 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07575288 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06873352 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078588934 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078990328 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074974591 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077646426 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078171063 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079129748 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078700342 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068093166 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075542099 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078007732 seconds)
  done (took 3.184229085 seconds)
done (took 17.18544781 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109595067 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072321251 seconds)
  done (took 1.385349577 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085158527 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087883316 seconds)
  done (took 1.383796685 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.087350963 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069611319 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094159793 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.082055916 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070422043 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069154361 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091829094 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070230073 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069688485 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070374965 seconds)
  done (took 1.985958057 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.0719984 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.082296404 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073870025 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085641915 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077009004 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067916973 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075675381 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071965603 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080835742 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066524913 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075468239 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086733722 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07528462 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088877675 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075324829 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072723182 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074491728 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071204525 seconds)
  done (took 2.587395223 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069481239 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070937028 seconds)
  done (took 1.355232161 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070696258 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067059016 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070244365 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069581444 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067320785 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066176392 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066952875 seconds)
  done (took 1.688204751 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400013201 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.123425072 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.337543368 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077395291 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.088701624 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.272193083 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.07111819 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074977896 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074681599 seconds)
  done (took 2.776628633 seconds)
done (took 14.379781431 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.0845893 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.09112218 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.101247151 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.395177356 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095522784 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070157231 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.118245506 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.196119241 seconds)
done (took 2.37631372 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217655046 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.723104419 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.453882528 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.220191011 seconds)
  done (took 2.614675752 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.362216789 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093719478 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.064406158 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073372944 seconds)
  done (took 1.818109322 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07044829 seconds)
    (2/2) benchmarking "read"...
    done (took 0.073213947 seconds)
  done (took 1.365766334 seconds)
done (took 7.240131902 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070365993 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091015523 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.070143295 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070425669 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.067845299 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.070227002 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.067284459 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067853857 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.070344264 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069935021 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.069524403 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.069865857 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07055144 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067207383 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067368437 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067105929 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069871524 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067154148 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067972309 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067181365 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067628719 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069656028 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067235765 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067240594 seconds)
  done (took 2.930219891 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087934209 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069991044 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075570879 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075452121 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073084709 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07470732 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075057909 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069751977 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07552836 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072811203 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072963839 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073580061 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.0719683 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073467286 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071736304 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073427428 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074611813 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069802052 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071818055 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072892643 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.188934838 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069448526 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072858799 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074692152 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072841788 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072643045 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072066798 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069852058 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074714938 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073296327 seconds)
  done (took 3.547613543 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073868889 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066925421 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068492043 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074580995 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067232879 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068272002 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.0672841 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067288883 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06786686 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06670873 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068224342 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067203449 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067644339 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067913274 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067835134 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.071658123 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083646501 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067250044 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06867412 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068222215 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070529364 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.067789788 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067275951 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067254513 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067522367 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066514766 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067624589 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066730046 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067933202 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067035408 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070112996 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.071930807 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067123944 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074052963 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070962617 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066569743 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071633497 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06700617 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067938827 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066786808 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066735487 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067284409 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067020322 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074903328 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06741612 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068936172 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067542009 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068330855 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067650151 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069376875 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.067664408 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067016431 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068888787 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068060637 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071428791 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067342157 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068147142 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066762402 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.067926541 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.0669022 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067059291 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066632949 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.07014505 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067692292 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.083100633 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07509883 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067911411 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068957187 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068437537 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070245865 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069252506 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081814401 seconds)
  done (took 6.211250765 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094204683 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092796424 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069760341 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069139551 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065326155 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067750304 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072997064 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068284861 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069167725 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086281477 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067624243 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069165312 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068785594 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072125503 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067950684 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069092252 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076136289 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065858048 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067430374 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071365492 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067956207 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073165988 seconds)
  done (took 2.834490745 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.161340444 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074496088 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109559074 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079064772 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073561291 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078489595 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07322864 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073808067 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073369454 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070985874 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070979919 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073786523 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07310225 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071255725 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070962488 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071234487 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074376494 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071179691 seconds)
  done (took 2.681359323 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081303259 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069584094 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09149021 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069627372 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069808808 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072412595 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073883576 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078023527 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.07174992 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070049087 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07759791 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07192027 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071915715 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069512343 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072331931 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070059955 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071774156 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069636586 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077247492 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074011222 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073762815 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077369596 seconds)
  done (took 2.862584517 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084172874 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071402483 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085231546 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072209758 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065818041 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06766101 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.074026465 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069343177 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074301172 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071397065 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069978206 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068004301 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07207308 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069974552 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072543148 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069854863 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072403288 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069981882 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071885736 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066068017 seconds)
  done (took 2.67782513 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09068874 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071514522 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073013882 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079340457 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071090941 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072196068 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079133677 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071366741 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071274667 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092497163 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071780437 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071699652 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079013814 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075721444 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072164729 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078659327 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07859674 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079348537 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072190242 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071760851 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092424639 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071855762 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079016402 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072236209 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071520793 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071354307 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071320968 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07609739 seconds)
  done (took 3.370180403 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071109848 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069749513 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06773369 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067338559 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06686209 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067007885 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067168607 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067736697 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069641535 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066953869 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06964345 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070211719 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070201425 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06950872 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070870441 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069609219 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069916029 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067747633 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067009671 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067055663 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069821668 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06985674 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069506566 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067153408 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067205759 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.070938181 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067171991 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067289043 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069647872 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067560016 seconds)
  done (took 3.303013977 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079200174 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077287876 seconds)
  done (took 1.401174572 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066829755 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08428142 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067355169 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074360848 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073375707 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070767382 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077214446 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073385363 seconds)
  done (took 1.829018782 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086604603 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.08361957 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.074326697 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.086294918 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.083769927 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.090249653 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.14559808 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.073245958 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.079391389 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.070598648 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.089579069 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.071408413 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.079776775 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072623507 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077998557 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077111155 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06773215 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.076086608 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071882774 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068515444 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071307805 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079608362 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073081702 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065036116 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071834831 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093407334 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082099953 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069334782 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073645029 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077827166 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077277308 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064142293 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.07067833 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.071009446 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067851016 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.081300194 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085201229 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072759742 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07961226 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071051921 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079965007 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064858225 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075166392 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077071349 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080579166 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070376782 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070905326 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065042956 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068535592 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07512421 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065602431 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070973786 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064627634 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077497175 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073848527 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081107299 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069730759 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072525565 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073511445 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074469878 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077623109 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072976644 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073177964 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070089812 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080434139 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075424207 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079091923 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065066768 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064832649 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069102115 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080100481 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094277449 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07657758 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070892336 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071327034 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068465427 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07360434 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071016154 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076352031 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077558289 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070637124 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075806998 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07896364 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07106344 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073113243 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077866195 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06847776 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073421326 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06875989 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086479535 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069052099 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068237187 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.069200716 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08082937 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07346204 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069506616 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068022103 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077313076 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06365665 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069886883 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070161556 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070866412 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079679301 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07327697 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074006209 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078332327 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076732014 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069985219 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072399505 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065657775 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07027435 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069132808 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076733161 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06345118 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071797526 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.0708978 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069834128 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077313761 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067301323 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068826662 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076668154 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074931757 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067527919 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066419336 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072089409 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068863153 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071990856 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077788392 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067460937 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063749555 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06375018 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072558421 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068614956 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072281795 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0737622 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072190616 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063751842 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066512428 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072881767 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078239008 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069399701 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070115679 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075413782 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070909433 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.068488348 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075835219 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071562457 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068636878 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074949443 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070074961 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064259438 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071388488 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07215259 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068362981 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07222748 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071255093 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070656652 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068697812 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066425928 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073353153 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069252657 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068759629 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069500295 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067504295 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078263731 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070940075 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06314997 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065154584 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074663294 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066118606 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067301417 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067180499 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069824768 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06873733 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065821242 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067698772 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070934901 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076405786 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071204233 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069980989 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073317717 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079272505 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068426567 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070912866 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067382573 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068206168 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068736027 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076186929 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073489816 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072378456 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070725536 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065793754 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073266487 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07584599 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067213858 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066070354 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068197461 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071771549 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074571062 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071494087 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068741174 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067513629 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06934108 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070860883 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071204835 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069420611 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068295664 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07425451 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06653359 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07366327 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069515319 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078390875 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071349889 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063801155 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071013078 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067069721 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075364275 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063264195 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066118114 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068320964 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069437864 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067342441 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071620644 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062101861 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074815552 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07560943 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069232948 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068408211 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068066388 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074775304 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069778742 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071827658 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072888955 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.306936417 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.084495169 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071918991 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.077169482 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.084487288 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.072447762 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.067026846 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.078684021 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.070824201 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.07154105 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.072230046 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.071947872 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075855814 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.080082394 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.079075051 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065364877 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.075063353 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.070738181 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.072025765 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.067365021 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.076995821 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.075793887 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.074149268 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079904987 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07287682 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071830941 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076211407 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.071650769 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.07225928 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.072658189 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07547069 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.073679847 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07482252 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.071070867 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.07431094 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.071252329 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.069424385 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07354706 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.072548926 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071501014 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077780629 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.07206404 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071639656 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.074546751 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.072424883 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072993266 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.072249327 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071914556 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075391419 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072589289 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072601851 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073845719 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066863473 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079046122 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.07041956 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07937179 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070861623 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068292212 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.077561675 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073750518 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.076207884 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071969257 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071732103 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.07254579 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070999028 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07347344 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077821052 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068961064 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082025671 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078732701 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072025544 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073739323 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071008576 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072663931 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.070020277 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071509947 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071439184 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071686679 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070732581 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075678615 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073935754 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071754425 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072609923 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071110663 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071045556 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071724563 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065299159 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.070887852 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070390154 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072525118 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080046098 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071393619 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.07031604 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069784239 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071449999 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.070061328 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067552163 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.079117288 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079206763 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.071593598 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078241182 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069639436 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072072766 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081436799 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064535941 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068414416 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066829098 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06771297 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077459172 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070304167 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079665946 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070387662 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069742925 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06777646 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070465259 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068822196 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064208406 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06757445 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073336001 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069231403 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069640232 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.203800437 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074006045 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072128678 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081427808 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070611762 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.073039064 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071087686 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068014813 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070059588 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070192852 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073235761 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071660323 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06837489 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06728328 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070165377 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071570891 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072193299 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070783736 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.073269344 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078833246 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070994841 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074055305 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074054333 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065106657 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074020433 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070853691 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070350009 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070387702 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074865088 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074254268 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071592002 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080494638 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.07051419 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071563775 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071445522 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068390265 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070292811 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070253485 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069999252 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069664634 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071119171 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079010527 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068277494 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073626818 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07129567 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.071123494 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077646384 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070662859 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073723963 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076504475 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.071313468 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072287025 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079045778 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074410989 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074533033 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070932388 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072152386 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076464794 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069363354 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077599646 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071261846 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071294814 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072116867 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.069273795 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070407338 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069879805 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069676779 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077013771 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.07155451 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069328377 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070157678 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067908277 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071511118 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072676279 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07836377 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072701627 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074234422 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065296834 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067982179 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070958775 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068400107 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072273185 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073414569 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075989716 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072729106 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071237133 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069336089 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079400048 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076329077 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074288698 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068399128 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074093268 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071146374 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072639826 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071918291 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.07045595 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072582959 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074373483 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072442181 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069732481 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07811181 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074311354 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071191779 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.072624704 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072256074 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071117018 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064762872 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069719611 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072442777 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074760957 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072116708 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070118531 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080411922 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067804491 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071219085 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072953209 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069406469 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074852814 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.065082666 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071306102 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070599644 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07027606 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.200368389 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.070295712 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069553646 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073990338 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.071203529 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065068724 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082561989 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080003552 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.073244107 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070176626 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069218182 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066021543 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065969672 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070723841 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072349776 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073014405 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.08194812 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.070321489 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069625787 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065329305 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070954644 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073873164 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074461944 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067219934 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065852391 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070374622 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074603202 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076533858 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069427087 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069591377 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074066704 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.074113865 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067225796 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073741296 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06734573 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074464891 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082273715 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070424824 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071135672 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077166378 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077835733 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070828523 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065152193 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071072985 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073666243 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071051717 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071119544 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071363728 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085654365 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073807233 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069435763 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068837124 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073372347 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.07008372 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078618362 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071150051 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.07081052 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075790645 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072205259 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077958943 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073532656 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077487999 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074551914 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074139481 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069977607 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07068484 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068938406 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069896311 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071302274 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070650102 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074548141 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.078361843 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06998517 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081433178 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07940411 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072821951 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067065876 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.071016391 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070911379 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065923337 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071470131 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.069101336 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068820779 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068678315 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069671772 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.07185649 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075379274 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071216306 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070702406 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070209279 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064362668 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073663195 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072759165 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071049989 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067181068 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070653977 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070923491 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074714466 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074081352 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068664517 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072641931 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072375875 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071499145 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066090482 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07679555 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069324847 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071782515 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069257682 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070307068 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070191988 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073469443 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075063486 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070742145 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073325564 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07375192 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071811646 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06721548 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067062621 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07564813 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067942803 seconds)
  done (took 44.903943867 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107251049 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06738491 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066026077 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066358574 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07806074 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066995373 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065788321 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067256436 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067064283 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069066948 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066542709 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065617119 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074054307 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08162977 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077421587 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070719132 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065984363 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067205241 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065620037 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066819418 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074595378 seconds)
  done (took 2.887029218 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077883619 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.082200683 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079577046 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086359851 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075316971 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074463289 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079427992 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074585308 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082313293 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076620988 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082358525 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075327089 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.077037642 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.077088786 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076401793 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074683001 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084692391 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074634816 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.075165062 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07951141 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075016467 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078913192 seconds)
  done (took 3.068872983 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.072066222 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070393896 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071949654 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.0661969 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069743553 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065636768 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073474764 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068225646 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073335292 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069471059 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.069925328 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069436092 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072120422 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065177821 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071050393 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06811264 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.112456832 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073722283 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070556771 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071412609 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065694873 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072291162 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06555862 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065471146 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069380537 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073542485 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.071060369 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068713407 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.0701262 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069401319 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070247612 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068250087 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071854242 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070929685 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.070468487 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069223083 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069927727 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070024628 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06518962 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068258499 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070813578 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066372899 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070494076 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071425084 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06867368 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067774654 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.07276228 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070139998 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065092819 seconds)
  done (took 4.806862371 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083266676 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.114913108 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.071318116 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093912373 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083660902 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076748956 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074154139 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095240903 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067450768 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068578229 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085521005 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082718681 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069484266 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07443624 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076780478 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069617723 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070291774 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068198396 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072985737 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069181021 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073392274 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076960312 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083694144 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081985561 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073416949 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068349307 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068542657 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074746512 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081396487 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073665758 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074202656 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074649783 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084828285 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071331882 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068563567 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071787253 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085209239 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070294405 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072613335 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067260511 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.07186226 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.07366797 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076373122 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085819195 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070002551 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.075038057 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069487475 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066900042 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081707763 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072215292 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077471013 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.08352713 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073353236 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069442898 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074558941 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083956145 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069548141 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067654386 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072556174 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081215013 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06758554 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073351898 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082124069 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.07194152 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076226101 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082795768 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074835221 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07350814 seconds)
  done (took 6.667119779 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080676102 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.099988961 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087650073 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086898973 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07947149 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079853555 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079513883 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079927222 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079394137 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084520687 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080145616 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.121096745 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.0751048 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082340695 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079577043 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079482004 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.080081117 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080041065 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079783791 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079952225 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079824294 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086618663 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079952136 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087330434 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09242261 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.074878363 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079237076 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079442696 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086881157 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079378233 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083885873 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079070589 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079273617 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086854373 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083262967 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079113648 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069231374 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079236367 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.080241507 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079578488 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0747315 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086968553 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079703322 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075654209 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080329241 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079649249 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087206381 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083653752 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081525881 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084013929 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079500862 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087826987 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079990375 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079700733 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08702885 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089923447 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086442193 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086919364 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079966994 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086546155 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087590369 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089361342 seconds)
  done (took 6.514627929 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08772809 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078436787 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08612926 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06542254 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067953148 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075964527 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068150013 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068353009 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077210422 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.078147295 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079994272 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075761238 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078726674 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080159275 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075609615 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078369385 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075625286 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075596268 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077748652 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075197136 seconds)
  done (took 2.906113099 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07935645 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088089436 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.07062608 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076220538 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073822146 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075744302 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072589203 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073925037 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07091527 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073029862 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.080332659 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079740597 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071029179 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074832914 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079384181 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075062214 seconds)
  done (took 2.587301233 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08841049 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07714596 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084726902 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070634586 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.07049383 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.067024102 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069834849 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065217766 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066188112 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081992484 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.070386879 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.08085965 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069891809 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068925811 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066475278 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.074994888 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065851066 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067802156 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.070133253 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082800194 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073656597 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068175452 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073081401 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070231302 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072434959 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074458595 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069492919 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069906414 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06706688 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069566287 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072466799 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072853998 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066488557 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06763917 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068779108 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066645478 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069427799 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070252825 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.075069092 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069401803 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067821101 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071910706 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070415636 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071680401 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066639225 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070540287 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066057405 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071498892 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067142513 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072268677 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069959428 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072770881 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070602831 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07787297 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072712879 seconds)
  done (took 5.300720072 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083765626 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074174388 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065830754 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067991093 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073521103 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071013449 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073513185 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071362525 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071355753 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067882248 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071366804 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072872752 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07117289 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073148961 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070880554 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073408767 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065462824 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07096345 seconds)
  done (took 2.674684162 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.0761284 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069726113 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.077346095 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069774968 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070161586 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072183609 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065612279 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068197784 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06879847 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070104752 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069971987 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072657686 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070689726 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072362245 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06966105 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069677135 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072358568 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068565414 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070435671 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065899572 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073086731 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068918019 seconds)
  done (took 2.931443326 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.099135178 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.087561342 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.147073834 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.083068674 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089500098 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075707118 seconds)
  done (took 1.961856834 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09644519 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105556053 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070752298 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072948442 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079687466 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073653355 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074322285 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073847252 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082108713 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079606284 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073891484 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082125299 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081903694 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081158193 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07967273 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079537287 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074117506 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074532881 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070674918 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086684398 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073815057 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082044284 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074283094 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073533469 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073736889 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081233642 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082000721 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078992881 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074130901 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082908989 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079000968 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074062867 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082584122 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080218344 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073384011 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082114375 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073826056 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087329107 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080366364 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081637229 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073631245 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079826337 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082515219 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078148298 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082093469 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074465145 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078445938 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074282252 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074362422 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089654235 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079903207 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081823801 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079790867 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082609177 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082787366 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090258849 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080108 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08190387 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080570997 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080227362 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081298225 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080305265 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081167825 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079899341 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080112296 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081975216 seconds)
  done (took 6.638074306 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108939152 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071477751 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075081785 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079641248 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081366738 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073818266 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074354272 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074930993 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074339987 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071577592 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112797301 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074322003 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081427017 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081699381 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073665453 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074136634 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074565661 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081222174 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071706095 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089141134 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074600418 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081012932 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081753204 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081715263 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079632641 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079689355 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073815252 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073642917 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074686733 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073528206 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078277278 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074138416 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082027274 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070816314 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081517112 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074292681 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073942353 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078276295 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073657409 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079272477 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081853802 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087499419 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073781397 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073976257 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079409524 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074270214 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073838644 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070917306 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073623982 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070337628 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079814245 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079133489 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079432683 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081865884 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074306603 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073899913 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074018148 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074334192 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074915313 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079885047 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081278991 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073766205 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089209001 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074078699 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074740403 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081714371 seconds)
  done (took 6.544995443 seconds)
done (took 135.262873588 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.194852436 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173508311 seconds)
  done (took 1.744224572 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072361726 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104202945 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081046858 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133024939 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070600528 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104359719 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104185369 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082091065 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070152181 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070177311 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070750131 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073680328 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135383057 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071157151 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070368173 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073177379 seconds)
  done (took 2.776435493 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103435926 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169842943 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107531079 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068777294 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104807813 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076994721 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068857376 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079385156 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075202269 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069203077 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076757673 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074540044 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069122942 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074313663 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075586192 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076812668 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068590257 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076494349 seconds)
  done (took 2.907686068 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103258238 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09542308 seconds)
  done (took 1.592027882 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.166437609 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.139149015 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.210759737 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.366011766 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165734492 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.154124129 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.150352341 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.149650945 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120622093 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.143395234 seconds)
  done (took 3.155751168 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105841359 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.160888732 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.281974127 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.12348301 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077119279 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097143399 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124682789 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082169627 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084493573 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084833784 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084519918 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081095371 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10551256 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076948439 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078002838 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080616269 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.108276318 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076683188 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079301868 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07961059 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106012589 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070320224 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076997914 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077547533 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081201903 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081548942 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070319615 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070323214 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080287407 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079048817 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080516917 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09670433 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081069844 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.111373575 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075932537 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.112258358 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081019801 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07819617 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079470008 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.078059147 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081827408 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082043664 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077232961 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080447527 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070440056 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.08164047 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070116792 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069834085 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081569903 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071295018 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082400111 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080973125 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.110952176 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071795999 seconds)
  done (took 6.266408847 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110858105 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112497788 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075558494 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.120723349 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11096914 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076420742 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110507796 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103268967 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111330518 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074597655 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07276874 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074804596 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086158551 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.087062359 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.122123804 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.114237709 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077891413 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075911569 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112979773 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.112333836 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072883543 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104165954 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097713834 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110375315 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071546988 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075099194 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072307704 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075107696 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080827089 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.083493602 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073568304 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.0850789 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.089382259 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08224935 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071477228 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072082451 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072933068 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.083265809 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083238408 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083235796 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081372342 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072491475 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072093202 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074372819 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074312567 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072182872 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082970296 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.084959001 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.08288691 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07445903 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074487763 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.075022803 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073898576 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083930304 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081699246 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.085046773 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084639226 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07317592 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07369221 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076845058 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084419272 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083996088 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084252065 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074426616 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083446564 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073432007 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084116596 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088490962 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073243999 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07419656 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073810599 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074193606 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074010085 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081728789 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.082047412 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074197971 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074165002 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072651318 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084185652 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083230988 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072459522 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080971393 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07175615 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073034358 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074104979 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074895171 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.081830852 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.084134843 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074221013 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071845487 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073239749 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072817699 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070944014 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.080331082 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083197032 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.082633048 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081931061 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073146448 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.08301054 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082390422 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074202323 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.082986904 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.202745311 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075856909 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074414722 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08351821 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.082686852 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084827531 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074893198 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072957008 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.083094271 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085613299 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073008896 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.083576102 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085283171 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08492409 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072713494 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08529722 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073397613 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084103108 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074923546 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085097398 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073318699 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08436004 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07313368 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072904932 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073226786 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.084342039 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074232209 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073300206 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073889618 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074453104 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.083840999 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08710536 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074628071 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082815771 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.081806646 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074628488 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084481476 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073445289 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083194009 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074809287 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07417286 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072159758 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086212748 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075087637 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073527052 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073757041 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.085353278 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073001876 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085212578 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08177793 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072349923 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085023914 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085606084 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081794606 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084794191 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075149254 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073926535 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072641279 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074093537 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081254271 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083810222 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074551 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074144047 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.082502011 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083920243 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071895223 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081786214 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082558695 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082329108 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072749559 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073908991 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084578686 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.085644388 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.082994644 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.083016848 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082812669 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07275532 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081552321 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08201012 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073381523 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088961941 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073309778 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.086674409 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.083247819 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081112281 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083349023 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.085425424 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.084573495 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084689856 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.088093863 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072745397 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072601325 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.083267845 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07222771 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073000845 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.081977315 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073538471 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073925179 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086522553 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07270474 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.083321092 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071947548 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082539635 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07093295 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072973926 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085789845 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072001382 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073054508 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082644122 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072964013 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.08019062 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082885139 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080838892 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071183362 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073431967 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081876765 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081470367 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07165149 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070754391 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073924534 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080343689 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079756871 seconds)
  done (took 19.573346197 seconds)
done (took 39.416391664 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.218346936 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.160590951 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.181086478 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.123502365 seconds)
  done (took 2.184281347 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121648852 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10701524 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.097000829 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069269049 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103712052 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069451244 seconds)
  done (took 1.999751474 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.319336976 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215946065 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.193207148 seconds)
  done (took 2.154646815 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.216287569 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.20058342 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.460226866 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.282369427 seconds)
  done (took 2.704239781 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.151114096 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093188021 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.072392408 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.089066862 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13888428 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165059221 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104956664 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.130334927 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083866316 seconds)
  done (took 2.515453568 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.154029126 seconds)
done (took 13.17289018 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.133056817 seconds)
    (2/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.243711185 seconds)
    (3/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.105691437 seconds)
    (4/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.228058505 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.094665298 seconds)
    (6/309) benchmarking ("sort", BigInt, false)...
    done (took 0.209115067 seconds)
    (7/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.094223088 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.076087877 seconds)
    (9/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.106327387 seconds)
    (10/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.080450512 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.083112291 seconds)
    (12/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.086328152 seconds)
    (13/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.22091659 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078239827 seconds)
    (15/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.173916967 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.202891949 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.115656186 seconds)
    (18/309) benchmarking ("sort", Float32, false)...
    done (took 0.138975578 seconds)
    (19/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.180581676 seconds)
    (20/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.213726536 seconds)
    (21/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.114229923 seconds)
    (22/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.188200659 seconds)
    (23/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.227549849 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.078121603 seconds)
    (25/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.177587846 seconds)
    (26/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.076482084 seconds)
    (27/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05463302 seconds)
    (28/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.188705435 seconds)
    (29/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.168089243 seconds)
    (30/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.100802955 seconds)
    (31/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.172059698 seconds)
    (32/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.076642244 seconds)
    (33/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.0794819 seconds)
    (34/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.079345565 seconds)
    (35/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.086055916 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.168310051 seconds)
    (37/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.055209821 seconds)
    (38/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.102544639 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076141885 seconds)
    (40/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.160542633 seconds)
    (41/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.251702258 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.120024367 seconds)
    (43/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.202547042 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09741846 seconds)
    (45/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080424027 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.095764121 seconds)
    (47/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079000708 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.077090164 seconds)
    (49/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.216248333 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077987591 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.077572243 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069826851 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.105989234 seconds)
    (54/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.201815291 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.189655371 seconds)
    (56/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.057069208 seconds)
    (57/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.164089996 seconds)
    (58/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.058611785 seconds)
    (59/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.085358034 seconds)
    (60/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.11852122 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.300800686 seconds)
    (62/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.162129041 seconds)
    (63/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.055197637 seconds)
    (64/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.077737272 seconds)
    (65/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.176194127 seconds)
    (66/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077942246 seconds)
    (67/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.054928473 seconds)
    (68/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.202723448 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.096958108 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.182341192 seconds)
    (71/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.171718033 seconds)
    (72/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.229578293 seconds)
    (73/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.190923297 seconds)
    (74/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.148209396 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069415794 seconds)
    (76/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079749872 seconds)
    (77/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055409959 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 0.071044659 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.150057323 seconds)
    (80/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07854838 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.097419809 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.243301887 seconds)
    (83/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06817264 seconds)
    (84/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.080162177 seconds)
    (85/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.079032897 seconds)
    (86/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.073243567 seconds)
    (87/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.121433976 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.149985136 seconds)
    (89/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.055357983 seconds)
    (90/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.099188399 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.077956479 seconds)
    (92/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.107782287 seconds)
    (93/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.055481029 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.134793295 seconds)
    (95/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.074679836 seconds)
    (96/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.076324197 seconds)
    (97/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.131345391 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.098812253 seconds)
    (99/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.080756531 seconds)
    (100/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056966853 seconds)
    (101/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077129948 seconds)
    (102/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.0811696 seconds)
    (103/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.086867296 seconds)
    (104/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.161699963 seconds)
    (105/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054626401 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.093882854 seconds)
    (107/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.070899729 seconds)
    (108/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.1218285 seconds)
    (109/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.078093282 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091025676 seconds)
    (111/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072912199 seconds)
    (112/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075031652 seconds)
    (113/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.054254454 seconds)
    (114/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.056268655 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.152989889 seconds)
    (116/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.226114332 seconds)
    (117/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.05580998 seconds)
    (118/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.152397706 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.195455351 seconds)
    (120/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054739063 seconds)
    (121/309) benchmarking ("sort", Float64, false)...
    done (took 0.13769901 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 0.145469392 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078335407 seconds)
    (124/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071723356 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076993616 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.0976259 seconds)
    (127/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076652727 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075758459 seconds)
    (129/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077612399 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.099483354 seconds)
    (131/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.085790968 seconds)
    (132/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056627287 seconds)
    (133/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076541772 seconds)
    (134/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.081331701 seconds)
    (135/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.163508777 seconds)
    (136/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076469315 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09674994 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.093610292 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06961122 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.071027644 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077794711 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069707445 seconds)
    (143/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.214324759 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069595677 seconds)
    (145/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.055249234 seconds)
    (146/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.072331965 seconds)
    (147/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.116156764 seconds)
    (148/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054489372 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.070474177 seconds)
    (150/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07795143 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.08182318 seconds)
    (152/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.161499428 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.187270395 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.055225098 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094374613 seconds)
    (156/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091178143 seconds)
    (157/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.106053566 seconds)
    (158/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053983862 seconds)
    (159/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.057111885 seconds)
    (160/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.096323078 seconds)
    (161/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.081046047 seconds)
    (162/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066883545 seconds)
    (163/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078955743 seconds)
    (164/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.070419097 seconds)
    (165/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.082476889 seconds)
    (166/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.126521617 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.069723806 seconds)
    (168/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05569573 seconds)
    (169/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06711988 seconds)
    (170/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.066281055 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.149712955 seconds)
    (172/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077061115 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.070302612 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.144659689 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070048988 seconds)
    (176/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.079609695 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.095199754 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115580139 seconds)
    (179/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076554078 seconds)
    (180/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.183810658 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.145866681 seconds)
    (182/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067580828 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.094882625 seconds)
    (184/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.077142901 seconds)
    (185/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054418849 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.116164023 seconds)
    (187/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094274936 seconds)
    (188/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07670083 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.099978937 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.096331153 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.145970248 seconds)
    (192/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054604032 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.069739768 seconds)
    (194/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.231320579 seconds)
    (195/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078448311 seconds)
    (196/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.082268555 seconds)
    (197/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080425497 seconds)
    (198/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078978602 seconds)
    (199/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.08118038 seconds)
    (200/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.05475125 seconds)
    (201/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.067039561 seconds)
    (202/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.068530705 seconds)
    (203/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.055372455 seconds)
    (204/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.055370284 seconds)
    (205/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094575723 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.070070931 seconds)
    (207/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.108737678 seconds)
    (208/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.056304509 seconds)
    (209/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095676792 seconds)
    (210/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076415805 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070795443 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09693768 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.155194136 seconds)
    (214/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.076034702 seconds)
    (215/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.069251471 seconds)
    (216/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.055539904 seconds)
    (217/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.079455362 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.101581669 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098801084 seconds)
    (220/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083146579 seconds)
    (221/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085707242 seconds)
    (222/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.056076073 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.147536134 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138665637 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.117126841 seconds)
    (226/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.214201541 seconds)
    (227/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071955767 seconds)
    (228/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.071006468 seconds)
    (229/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.056271911 seconds)
    (230/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.192205767 seconds)
    (231/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054725309 seconds)
    (232/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.068808901 seconds)
    (233/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.068141094 seconds)
    (234/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.151971863 seconds)
    (235/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054974843 seconds)
    (236/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.070019247 seconds)
    (237/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070859422 seconds)
    (238/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054336682 seconds)
    (239/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074659627 seconds)
    (240/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05538486 seconds)
    (241/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.12538435 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141329675 seconds)
    (243/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.075978351 seconds)
    (244/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.070191588 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.107063732 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.069704882 seconds)
    (247/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.168911534 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070191275 seconds)
    (249/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.067791257 seconds)
    (250/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055259423 seconds)
    (251/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054395765 seconds)
    (252/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.07576734 seconds)
    (253/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076160845 seconds)
    (254/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.056223018 seconds)
    (255/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06964573 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076843253 seconds)
    (257/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.112387749 seconds)
    (258/309) benchmarking ("sort", Int8, false)...
    done (took 0.148937224 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095720244 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078053545 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.108289558 seconds)
    (262/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068425456 seconds)
    (263/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07791886 seconds)
    (264/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.076084746 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054620226 seconds)
    (266/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.070359998 seconds)
    (267/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.055118938 seconds)
    (268/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069613979 seconds)
    (269/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.202476527 seconds)
    (270/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.080297369 seconds)
    (271/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067945372 seconds)
    (272/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.055480822 seconds)
    (273/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073756187 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.120346476 seconds)
    (275/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070680901 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.09179961 seconds)
    (277/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07097642 seconds)
    (278/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.108235745 seconds)
    (279/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.056290546 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.071416018 seconds)
    (281/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071814538 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077769989 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06809327 seconds)
    (284/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079362026 seconds)
    (285/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056798014 seconds)
    (286/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.056224452 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068331913 seconds)
    (288/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070646829 seconds)
    (289/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054666925 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077460223 seconds)
    (291/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.056292488 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.072081075 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076504539 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099382113 seconds)
    (295/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068845539 seconds)
    (296/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069241649 seconds)
    (297/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.189680253 seconds)
    (298/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072180102 seconds)
    (299/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054748491 seconds)
    (300/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.056328737 seconds)
    (301/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054466334 seconds)
    (302/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.068114742 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076043975 seconds)
    (304/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056926511 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068991125 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069084345 seconds)
    (307/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068691975 seconds)
    (308/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072377975 seconds)
    (309/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076345083 seconds)
  done (took 32.714884914 seconds)
done (took 34.158765134 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.091647916 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097524472 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.08025135 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.098524054 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084925398 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.080957155 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077423623 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082869536 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084341737 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.086081202 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082996594 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058318722 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07920459 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078880169 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079547675 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095538421 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083257399 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077413752 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07758081 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069106555 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078325241 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06958994 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071375758 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058185808 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.083460221 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075881333 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077199255 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078854404 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.070428533 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069527359 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073184241 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.078857416 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.070063396 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082590404 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076894312 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07757464 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079353201 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080948899 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071864727 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069545219 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079256318 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069788491 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077843034 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077945192 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076327821 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075713896 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07740454 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081870505 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094923849 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071784385 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078720756 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080637 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080072375 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.077810921 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073951275 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077422301 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075302443 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095148059 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077820329 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072135758 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.079147954 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078887216 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075769799 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.078113711 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077348748 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.080474805 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079944901 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.076506569 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079276258 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076608694 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.070007515 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076749579 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073121278 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.070218617 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080678856 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.08234882 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068623938 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07596682 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077483034 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075551201 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069120896 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07160817 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.074184906 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076403163 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071679212 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.058670713 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073862041 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076649192 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068276315 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078039679 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076604662 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07741834 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071131077 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079804031 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068986155 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074883787 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.070408915 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069841933 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.07158288 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07378944 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069170423 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071977872 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.079102967 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071843986 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077215213 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083178161 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069095387 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076133747 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068282594 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068472088 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083733738 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079097611 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069184986 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071258721 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068382598 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076271121 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06842276 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069108426 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069538066 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.069754626 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075576229 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069036332 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071788367 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076755092 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082336439 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06892818 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073221681 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071153928 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069559555 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075404383 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.204910713 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.071059732 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071988315 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066611152 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072050667 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070123266 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077009883 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07247734 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.078066942 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071223231 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078317468 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075114187 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075868973 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075227037 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068157864 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063596405 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072094239 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070871864 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071307714 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06940561 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071753212 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.07001089 seconds)
done (took 13.182657313 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07061433 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146372099 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.101686275 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100059799 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089631613 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.07052507 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079855921 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103900265 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072033802 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.105835878 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092212663 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090915846 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.119126625 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069132539 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06985986 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.074450445 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071255053 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085723435 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.104166176 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091675973 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.11951224 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069383911 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.097557823 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093674682 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093186902 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.108673961 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071431972 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074149664 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073561705 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.097262821 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092960545 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074863823 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070923733 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102866662 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.098514707 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088022822 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070707135 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087559368 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070568435 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069595198 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071530966 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103591247 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084804959 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.085578322 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073861669 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.080651426 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.07128596 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087727567 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094150206 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083242728 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.090403241 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.106097588 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072713975 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088187813 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06846171 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.090824233 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080833611 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072400421 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069970753 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078361777 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069808086 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073523191 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084931194 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084266853 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074391557 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08887312 seconds)
  done (took 7.16677767 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089306985 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096494474 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088570087 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087833958 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069977182 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070285346 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.07022681 seconds)
  done (took 2.108477344 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071625878 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092451727 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.094652683 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094236359 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085685429 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092779867 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079959198 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070811096 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.09285071 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.072273009 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092765073 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105424069 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073911605 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077894685 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095260672 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071050785 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.096125037 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070197428 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073988051 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094790351 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073081941 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101235346 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.075016808 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.07115168 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085449252 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071173038 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120416708 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075916704 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072399649 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.07365668 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068928382 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.112334548 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084802313 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078948859 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071460614 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085838589 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085696706 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06914413 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.088171034 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079880183 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085095883 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071959384 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071944689 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068565285 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075145053 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.082249708 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072200361 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.07103194 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073081664 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091424936 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.072244594 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085222748 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073409927 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076381452 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073278933 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077374535 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082145814 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071643528 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091089146 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072942024 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088931725 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088283961 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084966196 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087428079 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073042147 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.085396836 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084756391 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072977611 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072899581 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074667812 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08740526 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068703878 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072754259 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081805044 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072566578 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094607956 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094732061 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073283475 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.085130015 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071293566 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070960729 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071927478 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.095405879 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076365057 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070520316 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075087445 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074133191 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068930685 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069937305 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074593189 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068699235 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072577894 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074223926 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.074365023 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073985706 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087784353 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073117585 seconds)
  done (took 9.295702696 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073474396 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072220282 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.074365443 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072540692 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071752856 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071533214 seconds)
  done (took 1.990609649 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098210733 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.073867127 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084424636 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07524518 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.110636613 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.091100261 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091683036 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081833083 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088314783 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083458587 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.091231879 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092594819 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096962842 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076691082 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091823537 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075184324 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091576948 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078520994 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083023406 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07651014 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090852665 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076094772 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076919299 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085654841 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079801443 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076086131 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082886941 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082646645 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082705104 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082418323 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076106261 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079499576 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074441093 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081992744 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091956436 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074466978 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075477436 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081465457 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075949504 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080057039 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092390547 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076664922 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079012154 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081174536 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081801311 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074383841 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081173483 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083960403 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090999734 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.0814561 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.080678922 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075170365 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079329235 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081131235 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074805168 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081607781 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.080758339 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091603662 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076434089 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075331191 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072995823 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080119559 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081450181 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.08068133 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084888893 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.08139747 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074954314 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076482645 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076881689 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075491203 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.081978456 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072845998 seconds)
  done (took 7.433581287 seconds)
done (took 29.518055861 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539423071 seconds)
  done (took 2.062993028 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.635805156 seconds)
  done (took 2.181068154 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.054983246 seconds)
  done (took 8.600172957 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.404635771 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.511360819 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.755486909 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138549717 seconds)
  done (took 3.393335527 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.725648268 seconds)
  done (took 2.281621808 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234071984 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221820407 seconds)
  done (took 2.020185131 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.386715336 seconds)
  done (took 1.934179392 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.162697619 seconds)
  done (took 2.712390056 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.267015966 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184692799 seconds)
  done (took 2.002520204 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.49397113 seconds)
  done (took 2.043796443 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.903561128 seconds)
  done (took 6.455461484 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.223876462 seconds)
  done (took 1.815658698 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.245358904 seconds)
  done (took 1.798236016 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.755284613 seconds)
  done (took 3.309997138 seconds)
done (took 44.163259938 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.087300906 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.089364819 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.088999379 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.085405354 seconds)
  done (took 1.893241148 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.08142867 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077157151 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.080557361 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076588011 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081291127 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.0774192 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078149961 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080011807 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076428497 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.076827223 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076542683 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076839167 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078738191 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079009997 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075565176 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079652437 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080497102 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076682561 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.079565885 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076721426 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074601 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078993763 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078546496 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075367573 seconds)
  done (took 3.430703993 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082116731 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077658058 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07917984 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.077275522 seconds)
  done (took 1.879061954 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082192939 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096233087 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093857995 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081823949 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09644587 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091466675 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.07320023 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07292653 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075009397 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.081307547 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.071948936 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101025625 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.093344248 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082412185 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.083763139 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070200428 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072742647 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092032887 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082807835 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082588261 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075767073 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082032315 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071874725 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093175565 seconds)
  done (took 3.560348489 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.090558973 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.109817049 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085970791 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093581656 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097018378 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069440182 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.091584705 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095938297 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.132445142 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069164255 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074208202 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069495339 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077415431 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068904642 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085213951 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.11263198 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11617894 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073194262 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101763384 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06966668 seconds)
  done (took 3.353372899 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076883861 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073500878 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071975145 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070414556 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081748432 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076710056 seconds)
  done (took 2.022752852 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072678847 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072853152 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071815122 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070555624 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076934936 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072261187 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069747727 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072581854 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072228533 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071818046 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071595338 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069549944 seconds)
  done (took 2.431037491 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.207201549 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072689934 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.072210506 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069834983 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075167763 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.070337816 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086211439 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.07203442 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096448278 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070774829 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070871682 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072577971 seconds)
  done (took 2.605324078 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213159494 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080349673 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24416575 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157603967 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115185332 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119913782 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117669885 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118056441 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.146942173 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104846639 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172226242 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172248559 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112944016 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142000722 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09382361 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.104405607 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15935586 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168310573 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110061521 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175729972 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150115182 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130967485 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151814219 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106406732 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109807252 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126394826 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075908381 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084889363 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175958461 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138920281 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148896688 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116072251 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096457842 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181416735 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177015608 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145640901 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152776766 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088658487 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.106540027 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.138873637 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204600128 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092701294 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166830723 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253974361 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085685074 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13798418 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123133448 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.123603134 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.109815886 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094164065 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15182039 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189066851 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.14133157 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092193822 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129080763 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118125766 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.11955431 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11860804 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187663588 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168760986 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133089157 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075380083 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113912806 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155382171 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136581035 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.113008066 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.129120134 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095421442 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139483411 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158805891 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128429405 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148462414 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.122418018 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092743772 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122697959 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144397756 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13204712 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16544807 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128340355 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076754482 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127625044 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105577652 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084781146 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.152763387 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079849829 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179556514 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103134847 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110606565 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130250294 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1132762 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112930779 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166021848 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14934584 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.249885108 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070427046 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110421531 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.125645393 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150735741 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091584379 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112331026 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121684191 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081462807 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141863445 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079558127 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127722955 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079023413 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129102572 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133875184 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081675351 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127206295 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109251263 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10457823 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137647404 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163654157 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092545528 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087462276 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173972474 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126272736 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107711612 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148361758 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160412028 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103453676 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104534394 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155000162 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184138986 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09289372 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16658302 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110578112 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087340245 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092225466 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127282976 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115747947 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.129000159 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085586712 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.121840636 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172322465 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078944463 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099673982 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138858721 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082287689 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084560048 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108628613 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108732243 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099374402 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.104111363 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.106200816 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140186753 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127302714 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109186957 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127162355 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247892696 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177033051 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092798184 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106892978 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108592773 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.074264494 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.140652684 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161457694 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082868273 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171034498 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.127442629 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12207099 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123335895 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088200151 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14517771 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083721985 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074485819 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151380949 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113672576 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114587185 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.154128704 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120543406 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.130866927 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.126305283 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138081718 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134603131 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.13428791 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109384506 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091329035 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115328607 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131366544 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077327916 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095658997 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083878048 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108507714 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100333655 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087412055 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146703542 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128447291 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115184921 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115630659 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100616671 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151265756 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080410813 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132493662 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.122879237 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099480337 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.155477879 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154922059 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135531359 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102628535 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142831716 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073507749 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077761975 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091067598 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.270979615 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087702788 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088018641 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120987704 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15102173 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134345329 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141862331 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129089166 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125288655 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159861289 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073548751 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.123777512 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151342387 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126050782 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.110093506 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095006189 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103481998 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145977762 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111873497 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187464139 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117073666 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126366292 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15648873 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.104839816 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083348021 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106328645 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138927891 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108199022 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147422749 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10303705 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092638092 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112918029 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078772806 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103311728 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131303282 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12287263 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137987085 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.120260775 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136811578 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08169171 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119830782 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125199635 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126143469 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068311549 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123840379 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164417539 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098504707 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122022084 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155698501 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083016141 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.139451302 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177356334 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.29480012 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090078953 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112876105 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123569549 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132823555 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124786657 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145386242 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111468817 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143298153 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114172602 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090695843 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092720608 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102299975 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10979113 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099448412 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109250687 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.118382275 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09921617 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136304293 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107228729 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115035856 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122309529 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.103738519 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.0955321 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100620249 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180742748 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123111725 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175838657 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104238114 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147051674 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167655177 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078613836 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082848804 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081591107 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144443997 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088388387 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134084008 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.112210207 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122324922 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128548436 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146213213 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100342007 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072399805 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11482151 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137199255 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129801948 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10339203 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107463751 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16665744 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104614962 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08323233 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117667257 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120339109 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106720225 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174913199 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064950236 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109103521 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079567002 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083834727 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129646193 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152518824 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08220109 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10614995 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120188449 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116499034 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128282967 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101792861 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111005666 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12849638 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150512466 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128402265 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091696694 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11261859 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127646602 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154565531 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106872674 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.099262131 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171853635 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152044164 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159592721 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089939427 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114266089 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114068085 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11051071 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136860304 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085780723 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162953731 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084530932 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137151719 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105349959 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090060535 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129415128 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.110860925 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09008709 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147000478 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118276186 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084753558 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079731088 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118409263 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119986589 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107432117 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07823693 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139121215 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076755494 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132148272 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155082681 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081979089 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105066901 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096326248 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079338327 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367602416 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109770111 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093391827 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103767029 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177723727 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091833511 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155398094 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139125327 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117936138 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140680109 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108215072 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.644659954 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.083516272 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156906921 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121132842 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180645128 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105276949 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122339741 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114964556 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127469642 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151143002 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108894656 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.191111795 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137557841 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.121410723 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084047708 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107705375 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108801815 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.092364145 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11393299 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117606179 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119080797 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.096691125 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.120261665 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128201793 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087148961 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100766235 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15951718 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120713751 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147950181 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146017555 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090452804 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121788152 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141157353 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083463751 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.124116749 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156844735 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109945691 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103740091 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084451556 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104261885 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315120212 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078444875 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164878091 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126284975 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112587229 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116442681 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116429663 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136736747 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111928039 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125073061 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096411305 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.112445136 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117955223 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08579045 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080914744 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112080044 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116069903 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101708555 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102707194 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.101280403 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154778893 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077294161 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103522344 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120797688 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147940254 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178548767 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.09257624 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087142722 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122710475 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118955164 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.117702953 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125771828 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083172203 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086882441 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084264992 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082418669 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113316456 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117749245 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119484384 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114391587 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16821111 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087859681 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.240653954 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09993571 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109190082 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074086259 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.083072988 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100118213 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102657958 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111605585 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114968473 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164184668 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099882251 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093534685 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094593613 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077575371 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086862446 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131469443 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113339489 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273488983 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106499197 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066483888 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113395682 seconds)
  done (took 61.019649569 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.113100742 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08644315 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.10005696 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149287789 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.127912497 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205859178 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158253737 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194186269 seconds)
  done (took 2.83756636 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07237812 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.100252282 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107775916 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087557283 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071192174 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072812533 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.236263758 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086663168 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070492163 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.10099693 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082391125 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.073051115 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.442435414 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070566416 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071793852 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065580297 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071529675 seconds)
  done (took 3.580300481 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.406745377 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.621911442 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.361256081 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.080487159 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.939698631 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.09381636 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.158611895 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137678374 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082652118 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.528556119 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.412024652 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132892446 seconds)
  done (took 18.660408187 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084423157 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078877264 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093327608 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093189409 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.082836672 seconds)
  done (took 2.134353755 seconds)
done (took 110.997933679 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085623018 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.615905456 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056719138 seconds)
  done (took 2.405422879 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087195354 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089922433 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08924218 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088559116 seconds)
  done (took 2.066229846 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078328511 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.081417281 seconds)
  done (took 1.864357263 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.240583498 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17166254 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100734174 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086828953 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083793351 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.083608121 seconds)
  done (took 1.964208186 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07661352 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078886161 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077145385 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079947581 seconds)
  done (took 2.017461535 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080871657 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055798074 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.0583787 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.06214025 seconds)
  done (took 1.962570977 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091787451 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083548947 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082696256 seconds)
  done (took 1.96465258 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10593249 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090625272 seconds)
  done (took 1.90319026 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086255065 seconds)
  done (took 1.794331365 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.0985098 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.105522537 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136118086 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115599842 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.144248154 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.113748413 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089548905 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089795271 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080575609 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090508645 seconds)
  done (took 2.770658262 seconds)
done (took 23.012992382 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083400046 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.374050921 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.3649553 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093611296 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672509187 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360834949 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.992360314 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097012385 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120170702 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070927355 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089325542 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652753274 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983425107 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.333407907 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.970031897 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.332947375 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653995668 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071699315 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071369315 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071144601 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.976599535 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071744532 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072334734 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071979657 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652930578 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37620557 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072016124 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.333845983 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072790449 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073828007 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359155609 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072456736 seconds)
  done (took 16.360742218 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074634683 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125131542 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076897461 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089312889 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074114728 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074237362 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074947867 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07321698 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.142990025 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071542987 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088837944 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071480136 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075146459 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071854473 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092196706 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072508673 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072849573 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072602627 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072143605 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072460897 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091380002 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071998994 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072523337 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072314841 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07176172 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084801037 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072405041 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072182372 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072933357 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07486213 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075266566 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072762567 seconds)
  done (took 4.265441909 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118785542 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129734905 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078350022 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108432489 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115863386 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073972025 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148623582 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098537262 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132409054 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072245789 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089515039 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071830634 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108001864 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072521913 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092428614 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072316052 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072681803 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073010016 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072276608 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072197274 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092187751 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072223273 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072289762 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073221712 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072596729 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086772589 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072334804 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073086027 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072999289 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07448694 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076188323 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07298583 seconds)
  done (took 4.506754083 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076814398 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079796029 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087915797 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088622669 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074269592 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076051683 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077192459 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.073567827 seconds)
  done (took 2.359564696 seconds)
done (took 29.205793564 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08361768 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072886233 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.077211834 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086315673 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077341854 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082037109 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070631908 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.079569008 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076262244 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077246705 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079366886 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070809006 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.075574093 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.07028088 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07792297 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071834405 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083345091 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076529453 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08353735 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083505326 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073979566 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077604554 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079887168 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083901229 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083271518 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083122543 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082002724 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07691655 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.07244404 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07472683 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081682089 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088237452 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073050793 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084258574 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071614212 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072240204 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075674705 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.0720753 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083413247 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.08063564 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073145162 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080269469 seconds)
  done (took 4.985069711 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092670112 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097826101 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089469576 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065493134 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.071280624 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06996322 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093478899 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063670044 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063102543 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.09293894 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059288867 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063480778 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.067258283 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057170982 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.064411701 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060540977 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.066026116 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059306067 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.064570734 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.06389897 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094119557 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057126308 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081680891 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.067404667 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059729671 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065731316 seconds)
  done (took 3.585789396 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078141673 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088972166 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.105725899 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136235756 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110594364 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083596487 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083956188 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.099599065 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.093420753 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071133386 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074687278 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.097336231 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09433809 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077994576 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07153655 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.090076928 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.088734966 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073057862 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07752981 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09845996 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091244927 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090468703 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.10046275 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087955089 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070796778 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073987167 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07541242 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085073798 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074589552 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081539773 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07519753 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074838556 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.073731035 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083882977 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.076015182 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074103811 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.099062426 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082244971 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084049685 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072109375 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079706459 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072539823 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097421281 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131523382 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.07332812 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.081322198 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076431251 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083048057 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071393443 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092005175 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083393162 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070936555 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074811307 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070647611 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070879612 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074744396 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073147597 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073856169 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.08015943 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07807444 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.097482549 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076856202 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088644371 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071117194 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079475587 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070423432 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072703593 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070547441 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100255043 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073580275 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116390238 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072362056 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072730788 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081175263 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079377058 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077678768 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071044646 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089188486 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082430735 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075092786 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080357748 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075028458 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074002938 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.095518287 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.0742368 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072903866 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.072609163 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077710559 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075041829 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073043795 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085078 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071202581 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074435095 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089294334 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.07138994 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072971329 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077677084 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075717485 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070636278 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082865596 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076118789 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072036206 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081412717 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071671564 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075237654 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084856845 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078214889 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070969986 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076327785 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077431339 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072825947 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072745763 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07418729 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.074214176 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080656461 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078549861 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07700775 seconds)
  done (took 11.223701734 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.171100948 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.163200357 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074452009 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.155036475 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081464951 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083892993 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.157031212 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099541783 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071844833 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072857143 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073014829 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115452712 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.11129932 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121240634 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083239307 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071722229 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088931964 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.120182044 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158953179 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153431167 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08909267 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.084669879 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075752645 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073113891 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074562222 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083473518 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090491975 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083563618 seconds)
  done (took 4.645037076 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085151814 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.110954808 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079784142 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.097236104 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096216376 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072354464 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.074942912 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073780349 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086169324 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082279109 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071679458 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077655892 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079359068 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07487501 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072546871 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079205186 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079206092 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.073347078 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075019478 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077071764 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082538332 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097335641 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075963669 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070861887 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076590746 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072202303 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067701691 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088565816 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072669367 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.100147529 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069960782 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07789535 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086905992 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073038914 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071972312 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072077975 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07139908 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071818775 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073394844 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070019774 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070401142 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.0609914 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070692014 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082724721 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078937945 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060462756 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076448958 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.077187154 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.077800982 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068871176 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07513998 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074384648 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075188044 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080321835 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076439182 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.078116861 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073254721 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.078711043 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.08162095 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071595192 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069537352 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070626166 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076696494 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069445407 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08128188 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.076316737 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070563437 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071649012 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07368656 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.080016944 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071367665 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076583585 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069259155 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073449391 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076702847 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074714685 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073173553 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06981894 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071495094 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073172427 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058589854 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071680322 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056624727 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075155239 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069681838 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070033255 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073337296 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076912492 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08368656 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.073580482 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078043616 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073383311 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071009716 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074806157 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064427025 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075695287 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083580008 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086782427 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07148795 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069486999 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085322971 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.076884774 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071001164 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059374673 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076460228 seconds)
  done (took 9.703505456 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095162632 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074124783 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088887323 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09486875 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092725862 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078635924 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082796985 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073139441 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088082453 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.078178978 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.08165952 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071773565 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082328503 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081934179 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.073773719 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082397199 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076358048 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089224089 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087899897 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071646628 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080851645 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084797463 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.095302785 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085825076 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084840707 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086631805 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.095120901 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082638006 seconds)
  done (took 4.111797917 seconds)
done (took 39.974333439 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.801858272 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.062590491 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.81041149 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.171378602 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.894410582 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.993026304 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.885917189 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.824079285 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.96642813 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.839813918 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.085929465 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.015621767 seconds)
done (took 66.089978503 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.86829417 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.950479931 seconds)
    (2/2) benchmarking "String"...
    done (took 2.037440008 seconds)
  done (took 5.727302095 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.098899971 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.47077718 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.055702606 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.806197708 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.81407917 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.12573745 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.63025861 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.336248825 seconds)
  done (took 30.981906629 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.00505448 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.024997585 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.523229425 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.547252641 seconds)
  done (took 15.892925848 seconds)
done (took 64.392518787 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.823975603 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.831451957 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.815454787 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.79086571 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.868102251 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.812610579 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.954395929 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.819392628 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.807365336 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.792352234 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.810426481 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.293644127 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.818253774 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.943981296 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.824623281 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.818775173 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.879325736 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.306571703 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.970063201 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.821086902 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.816714786 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.842265606 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.812182383 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.819223466 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.833355699 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.809393452 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.20917613 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.810865845 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.64374713 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.811836059 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.852215201 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.138631595 seconds)
  done (took 204.944476133 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.809287922 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.859640637 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.95560727 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.834513176 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.382986676 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.99631247 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.919612892 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.428558048 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.81318464 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.821818886 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.943844338 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.809676736 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.963465868 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.757318348 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.838827641 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.907477789 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.009148362 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.984709508 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.844086325 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.968624358 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.830300385 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.758698947 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.741298023 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.939682321 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.846721639 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.830422747 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.821136393 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.827334122 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.011090673 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.98046164 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.824400094 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.850753542 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.018641973 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.684413428 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.829659573 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.839270573 seconds)
  done (took 171.228740265 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.991977964 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.812220929 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.811168772 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.811428897 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.817030243 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.812971379 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.947744296 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.943690522 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.440072373 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.453125971 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.815301699 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.811153752 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.863706417 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.624659153 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.812682303 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.878765367 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.825682475 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.813262125 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.827181953 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.840138965 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.812178666 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.813721017 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.941778954 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.823829146 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.844602063 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.823569167 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.812369798 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.818371505 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.183209847 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.813205505 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.818611967 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.055907815 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.813663182 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.812288009 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.669983592 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.431978412 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.901327267 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.813956585 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.818364021 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.816805629 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.031950591 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.813137407 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.81410752 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.813869968 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.816695095 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.964844063 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.816610378 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.947047841 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.813862474 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.297805393 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.813447917 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.814395494 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.60769011 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.414053758 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.817208697 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.813171734 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.816835367 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.813268577 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.813469168 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.814040988 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.819403158 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.5020765 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.88951644 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.815823874 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.817432294 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.820649082 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.815869393 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.026108558 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.818323442 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.814585486 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.871726619 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.945977083 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.939536279 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.817822487 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.881716038 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.90882561 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.815644361 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.815344577 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.815597527 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.815141553 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.895588524 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.815423382 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.943426407 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.822975121 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.816415796 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.866115136 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.884717675 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.816127793 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.661805514 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.819386893 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.814782662 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.083053892 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.882367574 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.816863414 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.816066277 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.816214178 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.944003817 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.939838672 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.532640914 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.820110231 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.468006576 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.988274631 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.021844582 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.817898674 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.032153253 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.817586846 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.908375619 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.822669268 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.818174539 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.817064555 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.851724673 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.818161674 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.87579021 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.816480981 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.190195954 seconds)
  done (took 406.667688448 seconds)
done (took 786.628899656 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.484280722 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.449688993 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.56965667 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.469888418 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.444174947 seconds)
  done (took 14.169372618 seconds)
done (took 15.921385701 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.911465878 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.913491168 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.842540396 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.909274213 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.838776837 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.909981568 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.89201732 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.843274296 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.878017958 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.843037403 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.881202462 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.844185691 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.831208018 seconds)
  done (took 26.09035639 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.065781039 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.062298018 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.888737663 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.070262987 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.865090632 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.05706493 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.984631722 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.976584801 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.973104558 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.836388488 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.833922141 seconds)
  done (took 23.366871716 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.065409552 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.073324737 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.897509137 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.076832961 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.868992334 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.066255105 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.986798396 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.979278059 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.975777537 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.836445733 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.831921812 seconds)
  done (took 23.412292293 seconds)
done (took 74.620165314 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.827629529 seconds)
  done (took 3.582401199 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.853632982 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.025533155 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.83556684 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.83587604 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.827679527 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.828046621 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.836869193 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.827461008 seconds)
  done (took 16.626075104 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.828108982 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.823768998 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.824464188 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.823925977 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.823675845 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.826774695 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.827424187 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.825539482 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.827514036 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.827316993 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.828255072 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.825087585 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.825499672 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.827865575 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.828057174 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.828997342 seconds)
  done (took 30.977491053 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.827306205 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.825286109 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.824906631 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.825636619 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.824981907 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.825345349 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.826606531 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.825404566 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.825555191 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.825895737 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.826336073 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.825988352 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.825704751 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.826342491 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.827000804 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.826518363 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.826042775 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.826052384 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.830647015 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.826444109 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.826094791 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.827285515 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.826645725 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.827744114 seconds)
  done (took 45.589673353 seconds)
done (took 98.529510826 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.596664626 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.495075068 seconds)
  done (took 9.847662926 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.832023958 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.830083174 seconds)
  done (took 5.474036058 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.830226594 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.829746846 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.829250244 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.829631001 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.829050016 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.829291526 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.828697949 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.829856685 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.829811483 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.82915062 seconds)
  done (took 20.050870845 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.829700451 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.830209514 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.82720203 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.830341943 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.829366767 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.826864885 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.829460061 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.829720297 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.830171686 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.826903938 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.830682159 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.826794069 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.830252232 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.827736928 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.830499615 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.827748628 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.826985869 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.828058524 seconds)
  done (took 34.676382594 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.83112447 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.830115117 seconds)
  done (took 5.418682769 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.827796246 seconds)
    (2/7) benchmarking "second"...
    done (took 1.828695914 seconds)
    (3/7) benchmarking "month"...
    done (took 1.827342201 seconds)
    (4/7) benchmarking "year"...
    done (took 1.828616806 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.828731999 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.829349868 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.828222116 seconds)
  done (took 14.55756677 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.831733734 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.987834643 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.056774916 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.479879155 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.832507832 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.835080849 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.831308786 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.834732523 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.836010758 seconds)
  done (took 20.285421304 seconds)
done (took 112.06745387 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.640055585 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.829082594 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.07525589 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.875643047 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.876367997 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.122781615 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.853985571 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.138353545 seconds)
done (took 43.170335155 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.830915351 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.202487182 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.189834753 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.851138718 seconds)
  done (took 17.003049773 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.813656452 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.365139477 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.868070048 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.423801207 seconds)
  done (took 20.259176487 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.204637214 seconds)
    (2/2) benchmarking "read"...
    done (took 2.173743988 seconds)
  done (took 6.143486465 seconds)
done (took 51.996669113 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.832825821 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.83362928 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.832967333 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.833298752 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.829638192 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.833267542 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.830899515 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.831216899 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.833959167 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.832672656 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.83407571 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.833124695 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833914208 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.830677329 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.83061713 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831938025 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833710495 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.831063972 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.831282086 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831205854 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.831574827 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.833657677 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.831105327 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.831725924 seconds)
  done (took 45.735012455 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.834717121 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.833278739 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.834794726 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.834946901 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.831221524 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.835208158 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.835157591 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.831639527 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.836258836 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.835687784 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.831773888 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.831656156 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.835810496 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.832356826 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.835656102 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.832422752 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.835031286 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831851928 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.835094165 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.832693217 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.836186352 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832486726 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.833594131 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.836348217 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.832770002 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.832272498 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.836265093 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.833561996 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.836860895 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.833352245 seconds)
  done (took 56.782985857 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.840884724 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.843680659 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.83592872 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.835627348 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.835506678 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.836341629 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.836194133 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.836161453 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.835970828 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.835493304 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.836658004 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.836226263 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.836332564 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.83578394 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.836134032 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.836591188 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.836667707 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.836561147 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.83819789 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.836808437 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.836626068 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.836595396 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.837033904 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.837296067 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.836473135 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.837873233 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.837282075 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.83742784 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.83656133 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.836942421 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.837569038 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.837764189 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.837512146 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.837829544 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.838698969 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.836340154 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.842188689 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.846175707 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.83777536 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.838044436 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.837941628 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.837851573 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.836981545 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.837630895 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.838169587 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.837644422 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.838332971 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.83802506 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.838271208 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.839136925 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.839016265 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.838938519 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.838690524 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.83852722 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.838852926 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.83762108 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.838775887 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.838754766 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.839334671 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.838296282 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.838640324 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.839297249 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.838780137 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.838788536 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.839219545 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.839411404 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.839425171 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.839875342 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.839088341 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.839730401 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.838976754 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.84017455 seconds)
  done (took 134.101518682 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.838983017 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.838164643 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.837173084 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.837393139 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.836343346 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.839624081 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.837254571 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839986559 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836545326 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.840032356 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84031784 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.837078645 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.837819911 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.840989724 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.840529146 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.836744187 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.841092583 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.838259125 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.840557225 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.841280365 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.840924883 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.838370375 seconds)
  done (took 42.222044252 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.84145651 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.841450662 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.838699466 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.841525172 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.839057182 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.841058806 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.841381179 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.841571479 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841914948 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.839227279 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838681588 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840904768 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.838075011 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839446182 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.838814005 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.839019137 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.84259895 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.838541251 seconds)
  done (took 34.891684678 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.838354636 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.839413092 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.841266875 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.83985982 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.839918646 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.841666611 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.838674913 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.842227584 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.842293389 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.83851981 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.843366861 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842796194 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.842320677 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.837967845 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841731686 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.840021056 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.842331356 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839486134 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.843077009 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.839962227 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.840123748 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.843144084 seconds)
  done (took 42.266980937 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.843038998 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.842216378 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.840894511 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.840625716 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.839728925 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.843333922 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.843423485 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.840198639 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.843884369 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.844161899 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.840344306 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.843592645 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.84082981 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.840076483 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.840350559 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.84029267 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.842749533 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.841029544 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.843258407 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.84078375 seconds)
  done (took 38.604495391 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.843856817 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.844163514 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.84545951 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.844983674 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.844741532 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.844895599 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.845012607 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.844765129 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.844902567 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.845638106 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.845863022 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.844364844 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.845214079 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.844955551 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.845996496 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.845800298 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.845581214 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.844541503 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.846508456 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.845805358 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.846093236 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.845411365 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.846355885 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.846380316 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.846300582 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.845541508 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.846749288 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.845671946 seconds)
  done (took 53.443295885 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.845937316 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.846284647 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.842370431 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.843264616 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.843037089 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.842501742 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.842710581 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.842979128 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.845868825 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.842833418 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.846600663 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.845795574 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.845361278 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.846313947 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.845823408 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.846421721 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.846701696 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.843171186 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.843445016 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843903238 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.846664619 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.846694599 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.847035601 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.843835406 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.843337877 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.847350247 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.844474507 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.843952733 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.846700686 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.844140257 seconds)
  done (took 57.118525587 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.864277812 seconds)
    (2/2) benchmarking "in"...
    done (took 1.864160675 seconds)
  done (took 5.500813236 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.843504229 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.847165388 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.848508696 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.843801616 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.845112102 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.847304556 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.846897845 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.843812395 seconds)
  done (took 16.539252601 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.847571664 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.847479967 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.847104928 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.847958102 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.848559401 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.848616617 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.854070917 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.848380038 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.849422382 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.848994566 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.855416911 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.856395319 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.85141355 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.848861339 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.848543506 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.849921914 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.848671441 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.848695522 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.849500128 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.848830964 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.850309005 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.851403883 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.850876049 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.846907081 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.850663939 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.859812726 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.853445019 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.850239907 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.849064129 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.853227031 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.849502095 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.845589058 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.851207224 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.85052513 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.849976579 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.849946891 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.857614239 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.849343761 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.855787871 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.850005886 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.849673871 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.846638544 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.851439778 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.851139012 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.851414723 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.850988647 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.849933879 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.847558731 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.850283088 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.855665666 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.856624849 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.850281888 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.847160009 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.853273905 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.851991822 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.857043966 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.851667654 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.853978673 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.859637707 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.861238636 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.863264105 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.858932399 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.852856197 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.851030353 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.861004556 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.87594575 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.85724215 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.848010524 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.848178101 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.850375171 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.857788305 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.86505277 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.861589644 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.851725039 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.85111391 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.851907527 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.852931601 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.851295401 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.858992592 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.855572751 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.852138443 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.852902463 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.861963113 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.875417472 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.852663784 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.85252324 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.853205903 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.853168976 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.854281945 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.863103574 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.853205726 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.854024046 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.852283692 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.852856723 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.8539249 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.853029711 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.8519647 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.853776327 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.849865286 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.853357905 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.853265149 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.855984239 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.863338855 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.853210254 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.854137659 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.858242664 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.853304 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.853564058 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.859724055 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.854570113 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.853755653 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.854946026 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.859455241 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.850670032 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.856887072 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.862953462 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.85448599 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.855606163 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.854612314 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.853488421 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.863299125 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.880982306 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.854475276 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.854165998 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.859216845 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.86663805 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.854062924 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.856901675 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.854527748 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.851933406 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.851375877 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.856829373 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.855658095 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.856395439 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.856524826 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.856705087 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.852123597 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.854976857 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.855772789 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.855973658 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.855989081 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.857828393 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.856708798 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.858557445 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.856851791 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.85642715 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.862373531 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.855553319 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.857395064 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.856486166 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.853268536 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.85562719 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.856918753 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.858412898 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.857329443 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.856569473 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.856176934 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.856300125 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.856228725 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.855729983 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.856445304 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.857252246 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.861633418 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.857047701 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.860546124 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.856681593 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.852850639 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.856449133 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.856314597 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.85869233 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.856880334 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.855016253 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.859487037 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.865399502 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.856450389 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.856276946 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.860875066 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.857332938 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.858065317 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.858212132 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.861894768 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.866278533 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.857942447 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.864161305 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.857662546 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.858135114 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.858156084 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.858536224 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.858763231 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.858647171 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.861169334 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.86662425 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.871651578 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.866930777 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.85895591 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.861201685 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.859335057 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.862025577 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.861396341 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.858412307 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.858565552 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.859060158 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.857569949 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.85862169 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.860061018 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.859121485 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.857571143 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.858733474 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.858855446 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.859672752 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.859217924 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.860272919 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.859292788 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.856129544 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.859385496 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.859855822 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.859148937 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.85545608 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.859169853 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.859339886 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.858875093 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.860250429 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.86689014 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.856357614 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.860912251 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.861511184 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.859121331 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.85917924 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.859549756 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.861290879 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.859403509 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.866488197 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.860194007 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.86112247 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.866500536 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.859387126 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.858936663 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.862171864 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.860644616 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.857449386 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.863401486 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.868702393 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.860939339 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.861794685 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.861238256 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.860471032 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.860891537 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.866816413 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.858023932 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.860394783 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.860870514 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.862269452 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.857570957 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.86295625 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.862072591 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.862841065 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.864773155 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.860886288 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.861393525 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.862577383 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.862108922 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.860975525 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.862584432 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.864285002 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.870945162 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.8657452 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.861934962 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.864249626 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.8636183 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.865663721 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.862401756 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.860839977 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.862614941 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.876073141 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.871978688 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.8679791 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.863174872 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.862009024 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.868105599 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.863557135 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.866263074 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.861886161 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.86321822 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.863044169 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.861663324 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.860254794 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.864064018 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.862451649 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.865016047 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.864864769 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.867197181 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.862210144 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.863139661 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.864330597 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.864114569 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.863326722 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.864010844 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.863750504 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.865740394 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.866356526 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.863408189 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.863488557 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.870279956 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.864160331 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.865429561 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.864913843 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.864181014 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.863830831 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.865992816 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.864230728 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.867669722 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.872187209 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.867599278 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.873632494 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.866092927 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.873168255 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.864814859 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.867581145 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.873664327 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.862152701 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.863372167 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.86496896 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.86534109 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.870842223 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.865539405 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.86601126 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.870746091 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.866114994 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.866186117 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.8646339 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.865879165 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.866659459 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.865470784 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.872581017 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.867093304 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.869381749 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.868272284 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.862585848 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.86529618 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.865174449 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.864709733 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.869309406 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.865924 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.867105973 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.865733688 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.866400188 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.86613814 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.866269065 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.865479696 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.863022481 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.866631205 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.872954248 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.867843668 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.87109182 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.866730434 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.875405662 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.868338992 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.874767202 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.867088622 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.86803056 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.866982503 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.866530424 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.867531112 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.867135617 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.867466089 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.867086378 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.867484596 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.871486101 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.868254473 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.868445055 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.869051345 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.867944056 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.867394633 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.877485447 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.891432218 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.868754996 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.872413578 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.864153629 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.869087129 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.872639713 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.868246297 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.866953527 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.870324329 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.878248122 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.875873816 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.868240471 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.868097733 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.868607752 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.868749261 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.868212475 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.86755736 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.869135775 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.867750089 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.868237832 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.86801432 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.871987475 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.868386543 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.869151088 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.869289367 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.869944059 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.879971308 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.869825381 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.870179976 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.869722264 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.870292518 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.869781273 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.870794155 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.869544189 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.870448862 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.868829786 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.870609005 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.876784526 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.877133659 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.872258019 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.86920182 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.870718755 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.870251831 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.870194836 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.870031754 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.870428721 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.870016171 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.872392231 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.869906596 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.870680455 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.868676827 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.869299085 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.871160824 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.870042039 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.87285323 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.877930785 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.870993195 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.866782335 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.869552266 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.870557323 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.869450023 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.8717809 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.877815329 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.874084899 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.881497583 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.879237585 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.874738111 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.870691598 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.874095067 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.879027532 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.870578144 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.871889832 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.870946274 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.872193841 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.872680703 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.875141395 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.872220471 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.878458007 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.872672425 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.872420067 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.879411151 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.873064323 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.871980705 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.872386941 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.876275529 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.871822117 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.868362378 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.872013603 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.872387258 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.878938819 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.874983805 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.872304806 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.873751101 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.871323236 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.874409414 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.878274356 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.87241218 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.8738079 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.869268025 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.873905865 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.874001866 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.872659323 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.870925418 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.871609909 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.872187904 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.875563968 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.880578337 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.869027064 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.875671022 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.872960298 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.874472917 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.874885415 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.87387383 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.870572888 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.870570743 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.873649954 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.873236636 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.873637425 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.876081332 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.873566925 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.875124644 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.874811569 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.87433126 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.877035954 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.884722498 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.882767413 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.870953274 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.87387704 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.87531744 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.876244897 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.875261805 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.875670462 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.875190847 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.875935183 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.874842545 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.875810671 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.875795422 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.877482061 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.893348864 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.87521612 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.875280783 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.875486473 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.879013248 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.875813123 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.872326173 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.873850404 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.87667275 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.878324443 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.883865337 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.875796302 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.882604103 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.87581258 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.876552375 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.879857469 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.878678947 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.885620462 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.878190698 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.876410148 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.875007436 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.88142155 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.892504373 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.875802656 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.886959486 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.906283579 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.87769211 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.877920923 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.877217152 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.875424149 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.876868181 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.877330168 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.876001263 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.876676962 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.87606072 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.877190314 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.87834989 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.884039272 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.877739364 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.876015676 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.875930326 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.876706861 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.878059241 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.873915546 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.877178757 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.876898675 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.877820791 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.876397653 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.877778016 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.878099989 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.890816931 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.888318615 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.87723276 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.878886546 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.874645317 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.881598818 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.881461779 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.889310232 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.885826939 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.879046958 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.879132515 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.87898407 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.878115509 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.874128356 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.879137739 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.877993018 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.879415915 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.874600941 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.8915256 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.887909304 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.881124654 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.877538859 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.877669323 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.878166655 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.879464406 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.87700418 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.87630515 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.879061468 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.878080826 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.881326637 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.876714962 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.8767348 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.88013384 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.884378831 seconds)
  done (took 1113.589275069 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.874918604 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.874070415 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.873722456 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.874740183 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.873916171 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.8738947 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.87480998 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.874365326 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.874145543 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.873900884 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.875128869 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.873933138 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.872129589 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.87296813 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.872548385 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.872225275 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.873529231 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.872702124 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.872936772 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.872393853 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.873163289 seconds)
  done (took 41.148918462 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.877078814 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.872486493 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.873477521 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.877019315 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.872561445 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.876909727 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.872919557 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.875922329 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.87699701 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.873244578 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.875027239 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.871404591 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.868875676 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.868660593 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.868487545 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.873019023 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.869786462 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.866857542 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.869543708 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.867982734 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.870475627 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.867136633 seconds)
  done (took 42.988037279 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.869275599 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.869467764 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.869115553 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.867614213 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.868745135 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.865174708 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.868897473 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.868595912 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.868750494 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.869199257 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.868370566 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.870051212 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.8752971 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.875003646 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.87178341 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.868178794 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.012831985 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.86925501 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.868934855 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.869195708 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.86605807 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.873609502 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.866399895 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.866622979 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.868368643 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.870856129 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.869531945 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.870479213 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.870362299 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.871636561 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.875517538 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.869121245 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.870380863 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.871995396 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.870357424 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.872585054 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.874870391 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.871130099 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.868166802 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.870501116 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.880869525 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.891081417 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.870849437 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.875431859 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.869529181 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.868814588 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.874427536 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.87976986 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.866819706 seconds)
  done (took 93.615493648 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.870551729 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.87316707 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.86847365 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.869648691 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.870375935 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.870287253 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.870321926 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.869873167 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.86767033 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.866578479 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.871301423 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.867517896 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.868055029 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.870127501 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.869914311 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.868008657 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.868054373 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.869207963 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.867830578 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.868007826 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.867778596 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.870388195 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.871677729 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.868624029 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.869602065 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.867769948 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.867635922 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.871110004 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.868071053 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.868616024 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.870311068 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.871228789 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.871495426 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.869337266 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.866794255 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.869541461 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.869185886 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.867316982 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.870417532 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.864307934 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.865769211 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.866247361 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.864805848 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.865172876 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.863503927 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.861508539 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.860647475 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.860854314 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.861513605 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.864203089 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.863547188 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.861558085 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.86462072 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.86176652 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.863845897 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.86401951 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.859764389 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.859127701 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.863006581 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.860534912 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.860880849 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.864533984 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.860986709 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.865132784 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.863972292 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.862406745 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.862498327 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.864328854 seconds)
  done (took 128.72467116 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.863148274 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.863467105 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.864698696 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.863533417 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.863503075 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.864171251 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.863759754 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.864546751 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.864119377 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.864093767 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.864973801 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.864724852 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.864489495 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.864710062 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.865775907 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.865239998 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.865451069 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.865702267 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.865460302 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.864571767 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.865551203 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.864606688 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.864867877 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.86497878 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.865690765 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.865544359 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.864882349 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.864808161 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.865617387 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.865921933 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.867121734 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.86513293 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.86597638 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.866031529 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.866144277 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.865261271 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.864632614 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.863964159 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.865589614 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.865563164 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.863112931 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.863636509 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.863363167 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.863514147 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.863280861 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.863621159 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.863712528 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.862184091 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.861944073 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.863329339 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.863010444 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.861792325 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.861673922 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.861667336 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.862029848 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.864119052 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.859975058 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.860020754 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.859431827 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.860948293 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.860427953 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.860179398 seconds)
  done (took 117.357053188 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.856795704 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.858989962 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.856378685 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.857237772 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.857707792 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.856457896 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.85697795 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.858164301 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.85861933 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.857836743 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.855388022 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.85490477 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.855200375 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.855561049 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.853092499 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850603096 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.848559056 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.848997112 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.852150745 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.849655831 seconds)
  done (took 38.883488258 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.847690835 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.851618881 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.848116049 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.848494008 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.851619607 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.847500971 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.85087864 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850884036 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847769874 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.851393008 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.850874423 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.850515601 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.847274114 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.847949646 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.850364389 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.848964783 seconds)
  done (took 31.369447692 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.846742574 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.850152091 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.850502207 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.851426165 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.848117416 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.847245218 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.850876209 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.847678656 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.847861875 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.851248111 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.850900219 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.850166622 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.850685942 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.851767575 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.848158779 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.850538371 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.848497694 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.847777185 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.851052828 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.852930469 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.848060964 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.847715032 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.850685624 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.850722395 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.847728262 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.849467413 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.847044554 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.847507596 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.84689412 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.85002954 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.848404512 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.847105421 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.846736622 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.8472462 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.850170168 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.846543825 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.849927519 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.849232826 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.849707388 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.849605203 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.84923279 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.848756945 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.849582722 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.848018222 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.84493947 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.84852982 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.846744636 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.845897404 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.844921483 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.846850975 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.848185901 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.850148425 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.849296039 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.848693272 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.847508567 seconds)
  done (took 103.459387441 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.848367113 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.84908372 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.846224446 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.849107398 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.849762746 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.845597211 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.848088715 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.846646878 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.845137551 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.848166405 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.847051348 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.847630947 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.845694352 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.847311349 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.845904293 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.849013329 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.845441821 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.845636931 seconds)
  done (took 35.023800045 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.845218607 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.845512512 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.848194027 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.845464584 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.845329186 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.848038426 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.846121898 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.847794142 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847957872 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.847223293 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.845004287 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.84834224 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847422862 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.848169205 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.845572401 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845764469 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.848767012 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.847894276 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.845368985 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.846244709 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.84913614 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.848019071 seconds)
  done (took 42.407475501 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.847206763 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.847606661 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.863118552 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.868012064 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.868392085 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.880807339 seconds)
  done (took 12.948475495 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84538289 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849541802 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.845212169 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848902266 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848576293 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845484556 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845607844 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847910146 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84916452 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84562929 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845783013 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848776307 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849164197 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845365563 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847720427 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848333592 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846541578 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846798395 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845652352 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849011936 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845646622 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848248032 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845274421 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846991666 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845241474 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846089939 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848348668 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845956141 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84690603 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848098718 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847874349 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845090192 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848168122 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846537377 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850235136 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848977331 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846454725 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848287653 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848629825 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847967248 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.847899193 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848926672 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849143263 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846560988 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84970914 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8459895 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845892087 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845358652 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845473699 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84828947 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849014454 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846560582 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849049491 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848688384 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847969957 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84968859 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845495618 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845702666 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849414586 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846655279 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846214887 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849625926 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846267466 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846579211 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848639955 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845919578 seconds)
  done (took 123.700292412 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845849862 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.846125199 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845246144 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846794246 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846588784 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846867381 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847215632 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846463287 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846693981 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846609775 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849785908 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846170799 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846890167 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84694943 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846258547 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84701508 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846467724 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846860434 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847233761 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850967239 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84733903 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848184322 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848324423 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847645814 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847379086 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850475882 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848496082 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847684676 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847942813 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848925635 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84764513 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848099036 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849442069 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.847856841 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847865371 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84800116 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848616724 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848562138 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847889716 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850059005 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848103986 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8502778 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849058446 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848126895 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848336638 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848481083 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848245368 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848032577 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850616605 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847659549 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848939525 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848093784 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849936123 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84879111 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848298677 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848900555 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848091776 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848575103 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848835565 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853058977 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848141062 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848579095 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852466886 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849213721 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850073259 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848963104 seconds)
  done (took 123.758826853 seconds)
done (took 2577.941278421 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.918708987 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.85973803 seconds)
  done (took 15.555406277 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.016572756 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.965344238 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.851381804 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.882408229 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.851576069 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.874688924 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.864404372 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.850954828 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.849559197 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.849975121 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.851471321 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.038554593 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.853804037 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.852344684 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.853918371 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.948369392 seconds)
  done (took 52.036710395 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.855487924 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.857756019 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.867922783 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.859005488 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.854597289 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.866754568 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.887651284 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.858509396 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.890226418 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.867032715 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.922005491 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.865186801 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.853716917 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.902456096 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.868475322 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.869298136 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.945876307 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.929311672 seconds)
  done (took 35.601948356 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.933222262 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.856749222 seconds)
  done (took 10.575127263 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.876748012 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.860045521 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.86702226 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.877461553 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.879989541 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.883548081 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.858435085 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.863808409 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.872697724 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.881170982 seconds)
  done (took 70.503161048 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.862795754 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.858264951 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.85906978 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.856193038 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.850193146 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.851162887 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.856007907 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.85416762 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.520554944 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.891276748 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.861846601 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.860722444 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.857188724 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.858350109 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.852727889 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.880108424 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.948127841 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.852474089 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.853193185 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.861486673 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.857184946 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.91118385 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.869739294 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.858050783 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.885036827 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.518743583 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.862676978 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.862294805 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.946952555 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.853220585 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.85581508 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.856051397 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.859183267 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.224064899 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.154492336 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.855186798 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.8703501 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.864141097 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.852602782 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.955964492 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.857762802 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.86359479 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.512238761 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.137534265 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.953211052 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.895869364 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.178076521 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.872443595 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.859985179 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.883337878 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.859403413 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.858610617 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.870135664 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.340391344 seconds)
  done (took 131.449825346 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.851125731 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.204534015 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.023523373 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.853418141 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.142938856 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.063193139 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.853844454 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.902862207 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.853903237 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.084307022 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.108606442 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.963639911 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.852724893 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.850220725 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.855382149 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.851430946 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.012865383 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.926707743 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.854831003 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.851255527 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.884823299 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.098254028 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.979461791 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.855056811 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.884542594 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.067959437 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.980533794 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.96172594 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.64680019 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.851932542 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.918833832 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.854253816 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.849641139 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.852844741 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.012355354 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.951811926 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938661978 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.853957161 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.851682051 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.850873902 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.52540259 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.055702488 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.952618136 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.997785368 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.053191693 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.063362335 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.638262302 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.851757126 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.598420895 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.020953049 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.087926291 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.084771376 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.979044295 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.855535876 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.176637184 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.853067789 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.855354419 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.106906636 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998505118 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.957783768 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.855625657 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.851918514 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.85278104 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.101511204 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.856023921 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.953755446 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.855095451 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.853127389 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.953665804 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.959193461 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.996269353 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.06995336 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.889341078 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.806824855 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.39302366 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.104808907 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.924271245 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.108359773 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.856505445 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.853740052 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.936875269 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.70339698 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.112045394 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.106299156 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.110634799 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.894177629 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.581451047 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.85453875 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.085155177 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.080676051 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.109043872 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.062114856 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.097381448 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.190527516 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.854053816 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.855178762 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.088642138 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.994466169 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.857492869 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.21030608 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.102966843 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.425237157 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.879643351 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.166721591 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.990939663 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.858118402 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.501622257 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.856613409 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.082420532 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.899824303 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.856568235 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.857340712 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.079481401 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.834144516 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.855377184 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.721413086 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.921959433 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.856526605 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.093060459 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.859164549 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.122240484 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.859979342 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.097885665 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.029647856 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.891793596 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.034079418 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.062029988 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.859165356 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.107118221 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.105373038 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.975443 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.133873952 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.758457988 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.859982168 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.15001371 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.859420796 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.856260891 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.031172211 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.858746249 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.007150166 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.85830723 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.146371188 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.883453077 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.093524541 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.860443221 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.115256639 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.89497034 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.911038652 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.859486988 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.987940071 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.861406495 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.695716619 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.020724677 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.858443715 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.857792428 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.412409325 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.859692218 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.018743893 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.094371289 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.883851333 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.932522603 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.531471727 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.858154859 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.950166961 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.886762856 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.250399155 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.858575497 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.113211716 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.860637826 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.859029493 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.859345277 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.10389995 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.100384366 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.863183665 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.858688254 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.757617457 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.858159425 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.859167439 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.044096526 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.207901069 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.859221523 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.065253919 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.864551524 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.990958983 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.862582021 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.944237916 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.201033317 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.85894591 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.859899705 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.86038347 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.859301782 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.861267649 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.073054658 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.889285033 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.396940069 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.000525417 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.131952311 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.175377033 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.112055509 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.90854824 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.861441266 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.119264057 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.863951715 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.927787735 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.862726953 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.885633318 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.096747932 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.864037245 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.126574144 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.142411423 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.899428845 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.912421057 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.862913445 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.862022816 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.860634209 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.010236112 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.953324008 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.862848605 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.861720177 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.978529032 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.987343686 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.076326046 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.86284991 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.945827983 seconds)
  done (took 901.102622661 seconds)
done (took 1218.601292062 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.861845218 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.862181851 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.849648191 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.862655943 seconds)
  done (took 29.229363248 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.866926392 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.864195555 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.866120435 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.865331035 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.867459286 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.864739557 seconds)
  done (took 12.984417951 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.87924809 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.862614501 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.86205791 seconds)
  done (took 21.395355124 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.934065581 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.249365707 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.974793906 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.31313165 seconds)
  done (took 10.261890703 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.867922308 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.867889679 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.867723651 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.869252152 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.869701682 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.872047154 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.870427327 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.870694986 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.872275577 seconds)
  done (took 18.62221515 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.334089217 seconds)
done (took 98.620972262 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.151310022 seconds)
    (2/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.330635013 seconds)
    (3/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.966547522 seconds)
    (4/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.066646412 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.115667564 seconds)
    (6/309) benchmarking ("sort", BigInt, false)...
    done (took 6.8741434 seconds)
    (7/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.887287324 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.01530024 seconds)
    (9/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.725593493 seconds)
    (10/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.876635769 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 3.32038879 seconds)
    (12/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.453750044 seconds)
    (13/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.269903742 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.903229384 seconds)
    (15/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.027385653 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.877827098 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.832184454 seconds)
    (18/309) benchmarking ("sort", Float32, false)...
    done (took 5.589123373 seconds)
    (19/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.922287151 seconds)
    (20/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.515497625 seconds)
    (21/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.891290872 seconds)
    (22/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.118149718 seconds)
    (23/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.177414313 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.905133248 seconds)
    (25/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.154527245 seconds)
    (26/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.958336668 seconds)
    (27/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.163570697 seconds)
    (28/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.881784637 seconds)
    (29/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.110337011 seconds)
    (30/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.700498391 seconds)
    (31/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.025256106 seconds)
    (32/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.353916488 seconds)
    (33/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.931146748 seconds)
    (34/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.872068997 seconds)
    (35/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.756201713 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.981964368 seconds)
    (37/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.969195607 seconds)
    (38/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.876923636 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.977478171 seconds)
    (40/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.043549461 seconds)
    (41/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.862661713 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.272613309 seconds)
    (43/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.697706693 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.853851566 seconds)
    (45/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.97407158 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.253460918 seconds)
    (47/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.887158871 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.123953292 seconds)
    (49/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.188862704 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.149114527 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.122511802 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.166711711 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.831435901 seconds)
    (54/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.140225751 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.19070693 seconds)
    (56/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.019666986 seconds)
    (57/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.955684926 seconds)
    (58/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.138764722 seconds)
    (59/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.104433109 seconds)
    (60/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.323548886 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.938805664 seconds)
    (62/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.051185967 seconds)
    (63/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.976287712 seconds)
    (64/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.265514161 seconds)
    (65/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.98281924 seconds)
    (66/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.903765504 seconds)
    (67/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.977710427 seconds)
    (68/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.299160462 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.569003311 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.027247284 seconds)
    (71/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.326356657 seconds)
    (72/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.864646713 seconds)
    (73/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.1377969 seconds)
    (74/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.978528713 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.187143455 seconds)
    (76/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.982138279 seconds)
    (77/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.265721113 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 5.577107492 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.87853065 seconds)
    (80/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.984616736 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.248154557 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.817534124 seconds)
    (83/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.106150607 seconds)
    (84/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.903970828 seconds)
    (85/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.900494283 seconds)
    (86/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.033525409 seconds)
    (87/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.204570285 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.878154698 seconds)
    (89/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.23888243 seconds)
    (90/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.797341993 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.110762938 seconds)
    (92/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.992955402 seconds)
    (93/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.866511196 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.056257281 seconds)
    (95/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.954245703 seconds)
    (96/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.970251641 seconds)
    (97/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.950488019 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.500693163 seconds)
    (99/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.880324788 seconds)
    (100/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.953119678 seconds)
    (101/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.97384872 seconds)
    (102/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.878049524 seconds)
    (103/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.463698445 seconds)
    (104/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.121308351 seconds)
    (105/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.047192974 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.839599277 seconds)
    (107/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.890231903 seconds)
    (108/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.94099499 seconds)
    (109/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 3.453548688 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.082406032 seconds)
    (111/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.939943579 seconds)
    (112/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.96177239 seconds)
    (113/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.946679899 seconds)
    (114/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.308337164 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.883372618 seconds)
    (116/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.858999502 seconds)
    (117/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.285074979 seconds)
    (118/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.251828151 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.881697889 seconds)
    (120/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.981104705 seconds)
    (121/309) benchmarking ("sort", Float64, false)...
    done (took 5.63650825 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 2.105765762 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.900522012 seconds)
    (124/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.974728403 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.130861333 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.524392003 seconds)
    (127/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.975316475 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.097189571 seconds)
    (129/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.134046144 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.877388752 seconds)
    (131/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.48602727 seconds)
    (132/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.871038469 seconds)
    (133/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.059241242 seconds)
    (134/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.014442601 seconds)
    (135/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.060155819 seconds)
    (136/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.912596829 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.24340302 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.048574333 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.108939975 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.881969437 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.980317112 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.563380155 seconds)
    (143/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.866961429 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.300773982 seconds)
    (145/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.200938718 seconds)
    (146/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.984326519 seconds)
    (147/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.004384576 seconds)
    (148/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.19497192 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.278103054 seconds)
    (150/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.902591072 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.217673652 seconds)
    (152/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.98680984 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.886749057 seconds)
    (154/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.233752407 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.051943847 seconds)
    (156/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.905968378 seconds)
    (157/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.949432455 seconds)
    (158/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.455949378 seconds)
    (159/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.201604059 seconds)
    (160/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.633536854 seconds)
    (161/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.83688946 seconds)
    (162/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.085593761 seconds)
    (163/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.968704282 seconds)
    (164/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.881061638 seconds)
    (165/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 8.132332065 seconds)
    (166/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.900939682 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.1794291 seconds)
    (168/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.172451448 seconds)
    (169/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.015480892 seconds)
    (170/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.022698247 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.982629383 seconds)
    (172/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.906348859 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.206366889 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.885227501 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.204253418 seconds)
    (176/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.918571277 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.809327633 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.870975052 seconds)
    (179/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.993577254 seconds)
    (180/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.794066461 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.977161503 seconds)
    (182/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.938646316 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.931604953 seconds)
    (184/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.897257954 seconds)
    (185/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 3.479643352 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.871732916 seconds)
    (187/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.961641599 seconds)
    (188/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.99701228 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.932458431 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.882918948 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.079250354 seconds)
    (192/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.073819514 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.21481024 seconds)
    (194/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.91153384 seconds)
    (195/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.963616762 seconds)
    (196/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.902277767 seconds)
    (197/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.695991488 seconds)
    (198/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.077426123 seconds)
    (199/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.967207096 seconds)
    (200/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.121833516 seconds)
    (201/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.339750895 seconds)
    (202/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.147774872 seconds)
    (203/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.98854286 seconds)
    (204/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.992446112 seconds)
    (205/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.972618551 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.212890626 seconds)
    (207/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.991210322 seconds)
    (208/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.157294768 seconds)
    (209/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.923076881 seconds)
    (210/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.903288032 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.883926089 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.778669508 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.889956164 seconds)
    (214/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.911152387 seconds)
    (215/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.926673395 seconds)
    (216/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.148890245 seconds)
    (217/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.996680524 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.899858794 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.011666185 seconds)
    (220/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.585647963 seconds)
    (221/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.732589261 seconds)
    (222/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.874072813 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.320154535 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.909861011 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.870439037 seconds)
    (226/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.959324063 seconds)
    (227/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.066007478 seconds)
    (228/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.886909084 seconds)
    (229/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.931333895 seconds)
    (230/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.887241931 seconds)
    (231/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.195431422 seconds)
    (232/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.824576293 seconds)
    (233/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.08280087 seconds)
    (234/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.261080276 seconds)
    (235/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.96200334 seconds)
    (236/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.890293286 seconds)
    (237/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.019457222 seconds)
    (238/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.229563983 seconds)
    (239/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.904627791 seconds)
    (240/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.979133567 seconds)
    (241/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.425035379 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.013928588 seconds)
    (243/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.363486543 seconds)
    (244/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.987465257 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.966126621 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.161313661 seconds)
    (247/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.030531893 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.572363893 seconds)
    (249/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.120843493 seconds)
    (250/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.076236807 seconds)
    (251/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.086602506 seconds)
    (252/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.376757381 seconds)
    (253/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.050593178 seconds)
    (254/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.326863483 seconds)
    (255/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.020156096 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.916124983 seconds)
    (257/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.872172114 seconds)
    (258/309) benchmarking ("sort", Int8, false)...
    done (took 4.975944076 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.535321695 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.231193034 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.959855532 seconds)
    (262/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.983367429 seconds)
    (263/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.903752022 seconds)
    (264/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.029563439 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.201166696 seconds)
    (266/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.894486152 seconds)
    (267/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.105716272 seconds)
    (268/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.169451584 seconds)
    (269/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.551350201 seconds)
    (270/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.026221712 seconds)
    (271/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.0829288 seconds)
    (272/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.985052585 seconds)
    (273/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.051839155 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.982117823 seconds)
    (275/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.933287729 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.821729444 seconds)
    (277/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.00493155 seconds)
    (278/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.970215262 seconds)
    (279/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.415490155 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.15534959 seconds)
    (281/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.089134949 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.996018107 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.969806852 seconds)
    (284/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.897201355 seconds)
    (285/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.871969229 seconds)
    (286/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.442079864 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.09519547 seconds)
    (288/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.987241114 seconds)
    (289/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.328191363 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.58873749 seconds)
    (291/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.872547011 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.283112468 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.024668058 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.0076118 seconds)
    (295/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.971814993 seconds)
    (296/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.062799414 seconds)
    (297/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.893413963 seconds)
    (298/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.890060438 seconds)
    (299/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.497092674 seconds)
    (300/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.394105107 seconds)
    (301/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.809214914 seconds)
    (302/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.056512243 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.927242433 seconds)
    (304/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.241500548 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.253737248 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.283431313 seconds)
    (307/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.279025274 seconds)
    (308/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.954869404 seconds)
    (309/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.914880456 seconds)
  done (took 1011.343065757 seconds)
done (took 1013.433970535 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.922645648 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.917380127 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.901496575 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.922955764 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.013684266 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.929639198 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.911822761 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.903452841 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.948668849 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.950876415 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.900789645 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.927975036 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.904788678 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.902230542 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.899659975 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.915867366 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.216867415 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.935367017 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.918828391 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.91051994 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.919832767 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.901117554 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.951140398 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.928673091 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.906056953 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.904931963 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.905381842 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.923751701 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.0149815 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.905916485 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.904498837 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.91402669 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.216162887 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.931961834 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.896409549 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.922662414 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.914521378 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.913143586 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.907138515 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.935557187 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.31288709 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.944370653 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.906030161 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.905346229 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.903763625 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.908040859 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.904554727 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.909781215 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.9179851 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.918553529 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.31041347 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.962041674 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.908871805 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.905799027 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.915525881 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.905811866 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.907637851 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.920538583 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.924317328 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.921894483 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.21146604 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.937067353 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.90641557 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.922248027 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.913279726 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.347064432 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.939078941 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.909563395 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.314165584 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.949912447 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.347213468 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.953944788 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.905734349 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.92094056 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.93753646 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.218883097 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.928533567 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.904778247 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.914709725 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.904335125 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.914365735 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.918592141 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.910206291 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.906124526 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.919776585 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.934053479 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.915078129 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.907994103 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.915282482 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.926843172 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.912614649 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.918389187 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.908587778 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.901337292 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.915267023 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.908624121 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.910212552 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.909920257 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.911386444 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.917938044 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.311773471 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.964275144 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.904518351 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.903330191 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.906294228 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.9213255 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.312721536 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.94928629 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.928468685 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.955581095 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.910259594 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.21529228 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.939796123 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.923887072 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.915694392 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.909960239 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.902297956 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.212331296 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.343019763 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.961827645 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.908004207 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.907064836 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.924373511 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.90926943 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.904622449 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.221782802 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.938050315 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.922548283 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.029513817 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.917931051 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.94095773 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.907530332 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.910281127 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.936709147 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.924271087 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.939882652 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.910553403 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.924867234 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.924625692 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.904395828 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.92160759 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.918758206 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.908923586 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.913455608 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.902221157 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.938262231 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.921961552 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.922063977 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.929746676 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.031099168 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.906938541 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.215179424 seconds)
done (took 299.513606875 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.980637782 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.905190516 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.009092001 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.905727535 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.988748752 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.992018982 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.903016406 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.903480455 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.902815744 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.281254119 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.903051494 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.903577358 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.898427893 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.902834334 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.989614308 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.906220409 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.903437937 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.245065105 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.906906122 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.978478464 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.899690233 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.903362981 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.906195837 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.282854166 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.898800911 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.902687708 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.977942934 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.905693248 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.248185437 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.906176857 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.903705523 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.248420864 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.997644431 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.925371725 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.91841243 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.913722669 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.989762518 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.911868926 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.988885919 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.98806092 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.005724699 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.946846058 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.904929434 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.900938139 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.910350674 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.908253566 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.903611475 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.935514444 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.903069178 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.90490967 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.246353658 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.918337393 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.906801188 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.905426626 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.904669182 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.939446224 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.904949733 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.910383132 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.999671849 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.90912853 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.970813743 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.286137568 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.284571881 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.908152038 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.905428505 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.905740051 seconds)
  done (took 186.787109776 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.974553626 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.980784576 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.976244808 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.91395914 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.958017765 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.976841997 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.913801348 seconds)
  done (took 15.525243488 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.915717333 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.909043861 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.962454038 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.961719741 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.909071449 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.086951888 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.909290363 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.920540804 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.906720753 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.962792763 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.911153971 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.909864821 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.915978074 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.907071408 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.96143208 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.920925522 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.026719825 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.911260414 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.911290308 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.061079582 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.906185514 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.916804588 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.970768062 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.922899403 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.9103521 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.915960597 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.587178778 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.911296745 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.907589639 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.910382407 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.907232599 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.95266207 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.910524104 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.911500957 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.907175551 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.073692461 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.911563004 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.908111799 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.911178366 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.911092939 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.910418886 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.911374342 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.91174602 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.90887465 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.911876091 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.936778822 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.910232364 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.911823571 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.91140686 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.91293209 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.963163686 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.911274174 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.908707568 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.9096715 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.96813772 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.917558699 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.913020877 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.908784515 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.91169471 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.909256762 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.063351613 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.963591046 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.911140644 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.963871159 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.913152875 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.912491718 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.9122086 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.911967759 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.01056469 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.91167544 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.964263759 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.909425798 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.074531413 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.936465867 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.914322304 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.915503131 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.915359181 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.913510793 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.907484823 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.919548668 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.910015314 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.914360953 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.919681543 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.910700302 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.909441377 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.065243954 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.048616491 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.910991431 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.92649107 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.921050434 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.910509745 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.968211091 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.913683452 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.911518432 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.981602911 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.032404486 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.978356457 seconds)
  done (took 210.215841124 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.920006791 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.922955906 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.915091625 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.932440224 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.915661419 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.914330382 seconds)
  done (took 13.356776142 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.916924818 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.915019735 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.914937521 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.915715787 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.914162022 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.915473607 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.91619935 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.91617847 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.918728232 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.914579916 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.914384307 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.918952372 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.919168143 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.916638733 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.918207612 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.917088677 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.917739613 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.914409395 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.916398645 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.915306992 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.063237757 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.915023899 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.915049161 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.916987999 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.921173091 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.914347441 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.923853749 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.915111117 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.915165958 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.924487413 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.919698281 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.917091345 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.916611819 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.921271731 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.921577745 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.916704044 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.919960794 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.919761011 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.913481423 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.917485791 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.919810954 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.916059067 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.916143369 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.920702116 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.91777792 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.922659084 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.924542287 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.925419056 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.918571736 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.919870225 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.920538612 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.917203051 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.918299239 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.922163142 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.919007762 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.923343231 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.925321498 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.918732519 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.917314711 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.918386111 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.918303452 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.918103086 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.91895612 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.921967449 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.923876715 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.920670939 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.920234753 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.92207827 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.917862858 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.917098941 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.921548032 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.915580746 seconds)
  done (took 141.111417679 seconds)
done (took 568.840560334 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.08078041 seconds)
  done (took 8.919345105 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.117977606 seconds)
  done (took 8.99743387 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.370840746 seconds)
  done (took 10.217903126 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.936293508 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.943404048 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.924959409 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.925253691 seconds)
  done (took 29.594912079 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.98776235 seconds)
  done (took 8.831067651 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.936112728 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.914540257 seconds)
  done (took 15.724011989 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.039686414 seconds)
  done (took 8.88505808 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.021603446 seconds)
  done (took 8.890057874 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.927927148 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.943505479 seconds)
  done (took 15.72685458 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.89835969 seconds)
  done (took 8.741951325 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.522337019 seconds)
  done (took 11.451970849 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.933454753 seconds)
  done (took 8.875936763 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.984144957 seconds)
  done (took 8.827916875 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.934939824 seconds)
  done (took 8.777610349 seconds)
done (took 164.301816162 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.917982025 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.916354821 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.915539303 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.914507448 seconds)
  done (took 29.507373171 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.954851763 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.955271244 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.955879136 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.964496395 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.957331178 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.955685444 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.945926868 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.946118686 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.964616358 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.957419273 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.956878912 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.956418937 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.953426467 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.946733138 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.956235408 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.958012927 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.966795214 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.95617269 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.946998823 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.95946854 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.923253269 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.965571662 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.957653783 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.921516661 seconds)
  done (took 48.727000156 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.121629624 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.994866203 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.075738585 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.99245812 seconds)
  done (took 10.029029553 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.973280889 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.975699651 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.987234855 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.02486657 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.052078367 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.983885758 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.944709066 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.943973708 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.930811817 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.974344341 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.050901136 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.972561527 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.068730654 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.921550368 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.10543407 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.922501839 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.922775235 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.973516353 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.025217255 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.044531381 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.922528358 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.975235714 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.978985524 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.972249339 seconds)
  done (took 49.493275113 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.921137263 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.930321712 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.927783591 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.921248822 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.920902721 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.922259474 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.92764253 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.924247866 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.942650209 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.923273407 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.922109074 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.92456014 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.920620406 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.92292721 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.922852652 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.934912449 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.936466374 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.922538045 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.926555788 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.928372709 seconds)
  done (took 40.369645096 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.917401586 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.772624057 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.270300183 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.172987847 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.919216431 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.916927679 seconds)
  done (took 31.816865445 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.938174293 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.929817216 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.924511844 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.982195646 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.063413243 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.931247668 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.925334658 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.936608106 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.971741513 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.988935704 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.948132794 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.954519588 seconds)
  done (took 25.341177402 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.921084712 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.920461344 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.921797558 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.937917323 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.935265394 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.933108509 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.931444902 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.919016882 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.941211 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.943986534 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.93312749 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.938461475 seconds)
  done (took 45.02623653 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008813909 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.80849567 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.970338556 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.639697798 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.456705259 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.130814871 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.445285767 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.261629261 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.923139242 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193477067 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.849844747 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160144353 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.176210508 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919681192 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.011640149 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.365106458 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.221430189 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149538536 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946634663 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.574907915 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038652592 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.458711589 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.611328443 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.044906282 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.132156363 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.054959564 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.182362307 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.881050665 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056439166 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960023337 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931063727 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.921047455 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194572089 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298436499 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04112364 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930920297 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.583561338 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.638657388 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.907219745 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.723759074 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.766646218 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.052341466 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93004607 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920570689 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.855865648 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.456235195 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264776707 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.926329138 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.624685767 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.921925426 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932423466 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01303527 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.925575567 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.738404773 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.876490841 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.202673955 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.919666739 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929980098 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.493894555 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.975460986 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.563005547 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.860035721 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.017154828 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.580494952 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.389131684 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.071764102 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.927051361 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.926540021 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857301525 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.652932142 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046239364 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.069262999 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.943891049 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.573775871 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248043762 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.928430831 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.004446667 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211899924 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.724682642 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.862441923 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151357798 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.881757166 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860756358 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.771390978 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.857467663 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.190136696 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960549504 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.545739241 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967117695 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.263769517 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.934770155 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946660749 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93156868 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.150540895 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.811743872 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923754773 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.669881313 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211045547 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947023154 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.265184978 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861346013 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.933115644 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181545829 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.136248035 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.057545373 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.473958444 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090074976 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925689721 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.012497306 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.739850511 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.038533706 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.205791885 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985042835 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.99533251 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056933961 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.883398721 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22833866 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9523701 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.097519906 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.920204314 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191174889 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.240063269 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.179014419 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010042321 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.929004207 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.926265978 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.625655619 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.55363537 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.15306381 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.928180574 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318135704 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.039595914 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.928218921 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861839377 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.548205092 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.903906792 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.040789633 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.152756817 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.770249625 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.306753358 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86286587 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.072981178 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.044784127 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.150185908 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.583118194 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.011613199 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189389442 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307517712 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.139815536 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041082092 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952665897 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022103649 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949766967 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.238770923 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.286688531 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.932462194 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.933348333 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.680423861 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.998591922 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931535755 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.933616572 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.759393813 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230932281 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.95884232 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.938922805 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.819799654 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.943601597 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996700813 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.93487793 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.939785209 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.43262251 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.682187328 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.941020627 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.58427676 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15429291 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939874692 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.700157793 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12540568 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.013910986 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.215439968 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992519388 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.866800154 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.633408408 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.635807568 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929972214 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.866751905 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.930743375 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940471014 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941012309 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.128485914 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.220233958 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.979200777 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.679411672 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.049857062 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942877032 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.936313768 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932424563 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.422529602 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.011305306 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.443531278 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.043143058 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068335907 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.945536921 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.865793946 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.935357394 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.936789568 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.93270696 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.89030611 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985908603 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.615369736 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39402791 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.193882872 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.585029538 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949821203 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.714355018 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.064829727 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.964306117 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.705656785 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893241785 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.022250117 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003369481 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.943113939 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.688894408 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.706196035 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.503108595 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251500411 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.247672885 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380076108 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.295741984 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.256660009 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.276073273 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169663638 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.463831462 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.993992093 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.280066757 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.882168626 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022917168 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.592126229 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.293243554 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948881911 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161920966 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326218951 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.789312616 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099180432 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.143991752 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969116806 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.729622465 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.962321405 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.139062627 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087904756 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.717587212 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.166465765 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274733334 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.752247289 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.04830493 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.934953984 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.642097594 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020784416 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.645234309 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.298015427 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.451362695 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.930312512 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433439266 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.942592012 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.379126211 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.289944479 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.249089121 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.026217327 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870788512 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.94481694 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.945097939 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.933861732 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.911082262 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.789068138 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.187288078 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944930634 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170248453 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.190480786 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.196318795 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.844420252 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.940806099 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934566215 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236314629 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.604807655 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172928805 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.257370586 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.503515626 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93937823 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.869204604 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869486361 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.637988513 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.936198783 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.91198186 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160259242 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.046029857 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.887575336 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.295819953 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245322133 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.189905779 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.948445281 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.214288929 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.216303042 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.67279485 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96381627 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.036648131 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.7100804 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.645950035 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.158404994 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.17108846 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.76762703 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.167053905 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.993990857 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.904965453 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.93464483 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.150109668 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.158513386 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.937968936 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193187599 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.660084457 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.945199683 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312090823 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996635241 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.959257494 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.154804223 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.028873517 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947255003 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017325757 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946765612 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.947141085 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.946766148 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986300709 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.999896621 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.076114287 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.951913171 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02861267 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.033540407 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.522859851 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.946986627 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242900797 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314753525 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.272069386 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.001402498 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.937096841 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941765481 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871081066 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075215633 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.383001537 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210019899 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.068221737 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.080960741 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962099078 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.751911789 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.211509621 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247120333 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212860157 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.834753559 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937435504 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.044916332 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.163142945 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948503164 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.149335465 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169314378 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.261588763 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.410902912 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.061213448 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375528733 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212631366 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.30940779 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.938533098 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.528786627 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.94945142 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.711833269 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.980055462 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.942908683 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230594714 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949468989 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.319978929 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.96126416 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.14065988 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.455367369 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.721027248 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.308075951 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.933882888 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.005690591 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.224420784 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.347792424 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258883059 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007273225 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951291225 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.666784195 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078728409 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.791772639 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.16510485 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.941263078 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151523412 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.652001693 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.950678406 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234985945 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256939871 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.937925892 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.788963371 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956183571 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.950923627 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.166064858 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.208453019 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.194785156 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95131627 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.94338708 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.757067953 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.231820831 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003918096 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875491796 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.944261472 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042308928 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.189144177 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.960934835 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.458883947 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.644969198 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241718201 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.861769632 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963245623 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338666599 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389384247 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290091274 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.466476286 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172956129 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.503653664 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.787898786 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.31316989 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.947043218 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.333763943 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.319699294 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.948282615 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.431888418 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05350343 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.221984429 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.268871198 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.960557957 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717602433 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.993794656 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167006518 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.543334867 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.88650569 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.951943325 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.004165811 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.943355336 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.074879012 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954668928 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.837308083 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.767991713 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.778457292 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.436682919 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.950594615 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.93885001 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.773164399 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.492101545 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050186711 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099441071 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951006047 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.657005098 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.237357838 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.201064267 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.445820588 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.01064287 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.948932324 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.945557803 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.873483836 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.143829959 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.143321203 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247806496 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.283412171 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.052709142 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.949047167 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.160599279 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156855609 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.9896247 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109917204 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355060175 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05380194 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.865536581 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.66149398 seconds)
  done (took 1716.229987661 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.973249783 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.97305347 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.994153564 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.974287932 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.980804641 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.010463002 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.00629849 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.013393387 seconds)
  done (took 57.799131207 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.943968412 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.16214973 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.953582985 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.943485488 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.971927596 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.945441892 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.15462385 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.956206846 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.972091062 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.955839619 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.945912855 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.954727893 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.338230562 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.968602785 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.945266764 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.946620305 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.95700095 seconds)
  done (took 75.925023065 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.945930016 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.1251108 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.982095897 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.961999774 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.810451124 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.959012689 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.886854299 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.956076836 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.948875462 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.113059856 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.286651119 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.000791794 seconds)
  done (took 90.850904548 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.960039034 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.951721971 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.952032908 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.952227726 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.953369156 seconds)
  done (took 11.649162512 seconds)
done (took 2234.621265036 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.231070832 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.168236665 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.181263224 seconds)
  done (took 6.222588106 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.095999066 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.14307109 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.264125308 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.269562308 seconds)
  done (took 10.649919236 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.234358886 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.323208314 seconds)
  done (took 6.431111623 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.271940374 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.960695878 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.325730424 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.945782161 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.950515714 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.949807411 seconds)
  done (took 22.725230771 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.95131857 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.954211918 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.951005922 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.953428492 seconds)
  done (took 9.685097516 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.93187276 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.676271283 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.933629989 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.947056308 seconds)
  done (took 21.363861185 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.699596231 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.347828826 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.694065348 seconds)
  done (took 9.616371364 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.676581573 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.595461184 seconds)
  done (took 10.147222348 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.202023025 seconds)
  done (took 4.077917745 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.980912665 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.222064049 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.519180687 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.511394972 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.607028744 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.19307732 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.297794647 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.195544979 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.397940674 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.437838825 seconds)
  done (took 26.239186219 seconds)
done (took 142.821755922 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.596424714 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.978432833 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.153979209 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.320757314 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.191590789 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.154361819 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.171059152 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.312956375 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.851483541 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.84370614 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.330042013 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.190170125 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.117498161 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.969654249 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.121088265 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.968280441 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.184453733 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.441497777 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.042839899 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.250116317 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.190991254 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.966033168 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.157650696 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.978305144 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.186964502 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.102620532 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.507091689 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.971410626 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.179307824 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.518672542 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.105984636 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.381783552 seconds)
  done (took 171.314942564 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.95305489 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.952783651 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.952953549 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.952543758 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.250277811 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.95342649 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.955116808 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.952028552 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.019028386 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.996220183 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.953419677 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.241121767 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.954684495 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.951528385 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.954708926 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.953254477 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.159003058 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.953408434 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.953756711 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.951976995 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.955041922 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.10329947 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.954018176 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.110925435 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.125343578 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.954743673 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.953034166 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.953601183 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.95350357 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.954321507 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.955159706 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.954333204 seconds)
  done (took 209.772592426 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.953293587 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.956773534 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.957076732 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.956699802 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.9555946 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.95435331 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.95793218 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.956613353 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.452048815 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.45537474 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.956078736 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.955865393 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.955347171 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.955043353 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.955890383 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.953912638 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.955448957 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.954116268 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.955652221 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.957207662 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.957854331 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.592327492 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.966689237 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.613516576 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.962046341 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.962704274 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.955686374 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.966926471 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.97057408 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.970243893 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.974287966 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.957210662 seconds)
  done (took 222.842317126 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.146600412 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.962394184 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.96292997 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.955249042 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.965303927 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.961407515 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.970357117 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.146476373 seconds)
  done (took 19.976759882 seconds)
done (took 625.790432676 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.468653415 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.312556259 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.145741308 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.990220498 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.22570512 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.023321746 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.984485691 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.052721097 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.713324046 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.060230614 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.679594187 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.010286741 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.771292331 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.013588745 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.109932625 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.042281543 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.576586807 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.668181698 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.163598056 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.043938958 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.158183216 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.929720769 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.067679098 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.759006358 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.793743476 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.979617791 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.154620922 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.583613203 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.995724392 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.151296401 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.719613632 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.389404086 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.999492422 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.982057443 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.039209904 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.019603786 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.327370995 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.997916428 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.109378134 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.73629485 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.050962501 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.599630835 seconds)
  done (took 107.48502179 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.953403735 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.952290917 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.951478542 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.952391192 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.953199297 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.952824118 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.949971345 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.950793565 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.951324655 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.95010436 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.952877493 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.9526601 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.950661951 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.951714472 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.951010397 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.951733371 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.951946712 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.952964373 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.950761801 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.951635 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.951922848 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.951621916 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.966268139 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.951377459 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.95167849 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.9523528 seconds)
  done (took 52.66042908 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.965397262 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.135207913 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.21721654 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.987756759 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.966673549 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.968705987 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.985859083 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.971129676 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.969080085 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.968797965 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.06402691 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.973307434 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.987331956 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.207326812 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.985720416 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.967167094 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.96729189 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.966832188 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.143523029 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.984874205 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.987648395 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.971322362 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.987139539 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.98110829 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.96966732 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.966878272 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.971177066 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.428854862 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.977425873 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.063597875 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.025572179 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.992340876 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.404539427 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.216607489 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.027044527 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.977362043 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.968282974 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.065698483 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.973888644 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.967819248 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.986906606 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.973594111 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.207978633 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.477798125 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.984728214 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.967891469 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.439980952 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.076329335 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.010482566 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.980753904 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.209353973 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.98807183 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.969475457 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.969731994 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.00501605 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.977387116 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.973667469 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.329438961 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.983572315 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.9894008 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.97577234 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.970314714 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.148105566 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.978428685 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.13593598 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.980142758 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.976066893 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.972471431 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.208394137 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.988501065 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.481680923 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.986536385 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.969842889 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.066128892 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.141236298 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.472530384 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.985503576 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.148803241 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.423100985 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.995157623 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.976571653 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.424074611 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.001121422 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.978582273 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.971951082 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.972136221 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.971788027 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.014217715 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.986884347 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.414400046 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.486353581 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.340881889 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.998089351 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.98663467 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.970297915 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.326934416 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.980300896 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.970398586 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.206090668 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.495803886 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.988339137 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.978932221 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.468937848 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.988782115 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.992265602 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.979736851 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.213129054 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.989758672 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.016570231 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.972322428 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.978483349 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.9737666 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.99136838 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.978926447 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.974770393 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.458771409 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.091146942 seconds)
  done (took 244.213243071 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.971555211 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.972892288 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.966543279 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.970920758 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.966686602 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.971522897 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.965120041 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.965782455 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.971493068 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.967160945 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.967324701 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.966358822 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.968883381 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.97320696 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.079288927 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.974496782 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.579106546 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.966465226 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.97046682 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.96665688 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.715752509 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.974055012 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.968371279 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.967030249 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.968748657 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.968896754 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.973190958 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.075229225 seconds)
  done (took 170.611408668 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.972861422 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.090777523 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.991630068 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.002667007 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.981752697 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.97192861 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.000749335 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.989292862 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.979754658 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.971049185 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.971720531 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.03623302 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.986311573 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.074414783 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.006850639 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.005426034 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.08295721 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.98244908 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.972125162 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.972142396 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.002791065 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.969509606 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.036997771 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.103182364 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.995357754 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.092736253 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.979299376 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.975116784 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.973452485 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.092769841 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.989606467 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.036240586 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.003726902 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.992263727 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.097357133 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.094806905 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.083403557 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.004876192 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.978972612 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.972678878 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.97210879 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.961242116 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.091860407 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.994283296 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.975744966 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.083206029 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.995051551 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.976013617 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.984053854 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.972808833 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.988754528 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.994033657 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.042590604 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.109678265 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.01124801 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.001310748 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.001052158 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.263894326 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.984138321 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.077814459 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.969292306 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.095298371 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.997068007 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.963325433 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.974512148 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.980191616 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.004454463 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.006665864 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.083371768 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.985020433 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.078130369 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.013303645 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.983156024 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.97428769 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.97741688 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.096826668 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.097384494 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.011726949 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.014693546 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.009003576 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.972319702 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.975746921 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.963861283 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.994631436 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.979539966 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.094717615 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.098025966 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.985188642 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.97843179 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.97793965 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.978798186 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.002609731 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.102841659 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.017575191 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.07538341 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.047595472 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.055068529 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.994130089 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.990395036 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.980181366 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.041609109 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.995738001 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.987144758 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.312331538 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.048063366 seconds)
  done (took 213.862648098 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.4541922 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.032684819 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.036709382 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.313807308 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.408442479 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.827100415 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.02534905 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.027718761 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.05168573 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.217075975 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.101138161 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.046524982 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.013711115 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.00161751 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.026256384 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.051053156 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.037930038 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.369893244 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.149670486 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.110838612 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.009361169 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.304471896 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.348465341 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.42227968 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.06318174 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.36648736 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.695768745 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.169669702 seconds)
  done (took 64.590259739 seconds)
done (took 855.306953692 seconds)
SAVING RESULT...
DONE!
