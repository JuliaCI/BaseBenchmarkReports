cset: moving following pidspec: 30574
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.413534232 seconds)
loading group "string"... done (took 0.512718677 seconds)
loading group "linalg"... done (took 8.574236882 seconds)
loading group "parallel"... done (took 0.176484035 seconds)
loading group "find"... done (took 1.402029697 seconds)
loading group "tuple"... done (took 1.991661522 seconds)
loading group "dates"... done (took 1.344668543 seconds)
loading group "micro"... done (took 0.212515391 seconds)
loading group "io"... done (took 0.583958244 seconds)
loading group "scalar"... done (took 42.260589292 seconds)
loading group "sparse"... done (took 13.466188641 seconds)
loading group "broadcast"... done (took 1.096929522 seconds)
loading group "union"... done (took 14.630232818 seconds)
loading group "simd"... done (took 4.893786437 seconds)
loading group "random"... done (took 9.884195895 seconds)
loading group "problem"... done (took 2.090821634 seconds)
loading group "array"... done (took 23.400990192 seconds)
loading group "misc"... done (took 1.071723771 seconds)
loading group "sort"... done (took 3.534641222 seconds)
loading group "collection"... done (took 21.032126236 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.594301411 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138611063 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150271684 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.178767309 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.207827375 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.141650352 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160464811 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.464338828 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.025155579 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.23295238 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.128879445 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.53358986 seconds)
done (took 5.71673808 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.228309959 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.076921555 seconds)
    (2/2) benchmarking "String"...
    done (took 0.129790204 seconds)
  done (took 0.910782725 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076189802 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.176268685 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095522178 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.111638422 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.112072406 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.113361675 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095613086 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.11103399 seconds)
  done (took 1.521751001 seconds)
done (took 3.452886847 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.770076338 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.827499504 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.496058981 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.126352825 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.160441432 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.13306416 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.317190661 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.163988032 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.10902908 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.118347402 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.178698754 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.35367876 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.42505672 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.945189415 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.095912457 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.130846058 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.081575583 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.700839054 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081679657 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.13276682 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.517193923 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.115768238 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.121674644 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.12710443 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.217688713 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133045175 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.192091696 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103175642 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.689244562 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.101932422 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.187161584 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099081736 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.165936328 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.233590375 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.079979082 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.11004916 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676330638 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.189786959 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.114818125 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.096493954 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.674380982 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.078592457 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.200164153 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.110106593 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.112642658 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.195977299 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.123868461 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078695562 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.10219601 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.090056648 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.175474533 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.456376172 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.1076932 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.149025292 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.110938845 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.687836902 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.095587542 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.157813221 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124668473 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.11424677 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.100399968 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.118688072 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.167447004 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.126569641 seconds)
  done (took 19.827636735 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.119311769 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.143096157 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095228315 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141311619 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138566241 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09876098 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085036789 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096248564 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.111822308 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.186396648 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.1373284 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.147465488 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093488546 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081351006 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.122408868 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.253041752 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105869848 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121790572 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.082535327 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.109067077 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141634786 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097525187 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111748349 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094692032 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17319691 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.22202774 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110375382 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125701409 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095588076 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100446085 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144642274 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.163406689 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075072655 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.095406469 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.182305923 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121516198 seconds)
  done (took 5.248767949 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.203114812 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.126489838 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.193389919 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.180011278 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.152477932 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.169155553 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120970102 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.269507589 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.196112529 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163392911 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130857236 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.118246098 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079140805 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097969292 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079833014 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.807644021 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.189295271 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.150531412 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.125923209 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104025747 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083027958 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.377036134 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102348067 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083558969 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103601517 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.072394332 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.174190329 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104684764 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.256098151 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.102670305 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.111241802 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132179341 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198679457 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128342838 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121291773 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104501378 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081138636 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.221414766 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091822232 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.116891471 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096823807 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10482281 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137311072 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.139251757 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099921999 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.092891312 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.24649084 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082845 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.116724005 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.047358307 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.200097365 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09581892 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09878385 seconds)
    (54/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.130912825 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099534329 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104030046 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081397926 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.099468738 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.344742095 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.29530626 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131812514 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079895342 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078070628 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105077949 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079903705 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.416111473 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087823675 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.908513305 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.094784082 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156650312 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10129755 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087856265 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103836899 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102700479 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101804898 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098135228 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081790853 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078826795 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096919247 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08483886 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.10035676 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.118331281 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085698304 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096220263 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147346752 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.115966976 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117573307 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10967063 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102081095 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079416135 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131101184 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098716102 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083180182 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.143933587 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10492708 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.099709122 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101457024 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144311542 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098249493 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.175608342 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.09376395 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12498156 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.085296001 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130195966 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.121284701 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079590166 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102423446 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.07997605 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.098182135 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147445623 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.094654658 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079659372 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101966844 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.092914203 seconds)
  done (took 23.77604996 seconds)
done (took 49.557463107 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.434040805 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.112723647 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.11253004 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.112064536 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.109410895 seconds)
  done (took 1.663873026 seconds)
done (took 2.423713916 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.331548788 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.204141571 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08731992 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.197522654 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088435253 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.202188779 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.166910481 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100657212 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.21317506 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083021008 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.191820987 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083574427 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105445936 seconds)
  done (took 2.843426602 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092213 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118187044 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080680347 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108675799 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074688943 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090861691 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108693008 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.136092673 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090610827 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084856422 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092893877 seconds)
  done (took 1.83285557 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091993894 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116499826 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080429003 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090912035 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093550978 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091033094 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109145772 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101842432 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110308413 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085627282 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093171433 seconds)
  done (took 1.819748977 seconds)
done (took 7.243584169 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.152591838 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.849173798 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.104480717 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.198455179 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.345436678 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.223638451 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.650703248 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.116735865 seconds)
  done (took 16.58430321 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.112193906 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097197075 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097516708 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097412281 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.080574756 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.099515795 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.078595451 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.095753684 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.082017132 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.096988784 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.082728572 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096159124 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.081345726 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095452417 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.079043102 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.098135407 seconds)
  done (took 2.296057859 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.116099269 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.114292872 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.102904464 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.088524613 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.10244434 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100957646 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.086029547 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.100781705 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.083241846 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.098515156 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.08943925 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104134734 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.086637587 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.098524298 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101209316 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.090511747 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.098540674 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.085462532 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.102656214 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.085975193 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10508746 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099737991 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087411473 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104482862 seconds)
  done (took 3.201464731 seconds)
done (took 22.83735834 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.166702403 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083770945 seconds)
  done (took 1.009386777 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.101278285 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.118515115 seconds)
  done (took 0.987187732 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108353934 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097386253 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136551343 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113475975 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081810988 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080031777 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.131060595 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099240781 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081447428 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.09704206 seconds)
  done (took 1.792012994 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085197324 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100291518 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.08988692 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.118319172 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108399623 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082652768 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.101596583 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085174384 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103103734 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080239569 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104158909 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100949637 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.104102227 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117435569 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.085643176 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.103542866 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.106954875 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.085098163 seconds)
  done (took 2.528127831 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081151734 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.082156451 seconds)
  done (took 0.932287727 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083281357 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094266252 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082518969 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099233482 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078958936 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.09433349 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079797252 seconds)
  done (took 1.381728821 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.485081242 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.184865657 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.329799937 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.113861216 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.133010442 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.362873617 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.134572509 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.094613014 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.111946195 seconds)
  done (took 2.762174111 seconds)
done (took 12.156707446 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091446945 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.133463028 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.60709278 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.116592175 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.078004799 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158228132 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.259888291 seconds)
done (took 2.215481072 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346082527 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.123822559 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087811211 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.07906347 seconds)
  done (took 1.403102257 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079150963 seconds)
    (2/2) benchmarking "read"...
    done (took 0.08409494 seconds)
  done (took 0.937291891 seconds)
done (took 3.114350734 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078162444 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.077455693 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.091790215 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.077451127 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.091697977 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.075246221 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.126254303 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.076344275 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.095229208 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.077358463 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.094804074 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.077925172 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076312983 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093392329 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075181022 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094197458 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.075274051 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090650527 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.075231489 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074724348 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.094393896 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078343924 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.091626561 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076706858 seconds)
  done (took 2.84570595 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103865621 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096676079 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084028922 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.101620392 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.082439457 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.100949777 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101099207 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079016469 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.100807229 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.080927159 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099278728 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.0816646 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097159061 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.082454983 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097466099 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.082877814 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.100992941 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078736636 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097430444 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.08193579 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.100706584 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079107 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099640121 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1025165 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08252848 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09992396 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.080726981 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096460112 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08407905 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.099299974 seconds)
  done (took 3.533343308 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085672426 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.075087671 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093348729 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.08729516 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092432164 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079434476 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.092931179 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.07962266 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.097286366 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.076249446 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080490577 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093047358 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078541419 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097449227 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080459037 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099604427 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.093844957 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.095627484 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078923497 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.096427729 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.081634716 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.095449492 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.079155091 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.074687226 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092763904 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.07476994 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093164316 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.075362083 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093313627 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.075846587 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.080266126 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.099418594 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.074818928 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.106171142 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082803119 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.092111344 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083795402 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093447816 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080371876 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091955368 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.075681636 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.075087872 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.095717097 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.086979807 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.096158429 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.077051651 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.096304052 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.081045807 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.096182866 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.083122038 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.092544584 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.079534764 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081116574 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098024335 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.080654112 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.092635285 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.077366859 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.092648459 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081016867 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.092369744 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.075592817 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.074803186 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099693869 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.076180904 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.116813996 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087560954 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09501041 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081041731 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097123071 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083589925 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09892168 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.09396242 seconds)
  done (took 7.06663623 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081657129 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105030381 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.077874396 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094636892 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074479321 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075767947 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101128899 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075994841 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096303581 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095181477 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095358676 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077189322 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09559325 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079388139 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094480335 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.077735055 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104146061 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074170519 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.094596065 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080100673 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093984803 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082741944 seconds)
  done (took 2.713149131 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.220506768 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102534059 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139649476 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094309887 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114493425 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112782829 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083194067 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102717533 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100578428 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087013851 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104145713 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083540014 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11467217 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10408601 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086653599 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105838048 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082848628 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105882928 seconds)
  done (took 2.732310853 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09261462 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098091664 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103203573 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097748537 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.079542356 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100152482 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085518525 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113312419 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.081290896 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097567736 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.107309632 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081503425 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.09891805 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079916319 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098728369 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079901365 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099759165 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079979916 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107852824 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086419673 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103695362 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090572266 seconds)
  done (took 2.84964398 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097376525 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099686697 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100185604 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101530262 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078565513 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098594955 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086866587 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.098097875 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.08845921 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099465917 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079286209 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098128373 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086479608 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097294974 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106485952 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080217894 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099336017 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079569949 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080495834 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.096592251 seconds)
  done (took 2.642141739 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121402484 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112716302 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094529605 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123090028 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112400304 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.097538246 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123754976 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093138247 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112189932 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125594763 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094470672 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111458481 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10650606 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12097058 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112866698 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105586697 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123556661 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123903472 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094241571 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111706223 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124890166 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095302361 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123231329 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093902907 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.112366519 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093767714 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112437337 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120057059 seconds)
  done (took 3.888329282 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079108397 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078614661 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095351466 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.076051598 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094672074 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.076674588 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.076302854 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096358313 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078676606 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095605125 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.078874075 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096454678 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079161591 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.078246674 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097259834 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.078267617 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097597106 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.076618673 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094509393 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076628903 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.078701804 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097449741 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.079043571 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095242918 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076371116 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097024017 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077195268 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076571678 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096894583 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076576362 seconds)
  done (took 3.34221685 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.087204989 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108600104 seconds)
  done (took 0.990779978 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078248083 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114954629 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077186422 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100385304 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085849236 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099023002 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.089851106 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10479752 seconds)
  done (took 1.543915389 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.105220683 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.119379262 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086774066 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11082246 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.098736527 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.11715369 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1624773 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086400913 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106288165 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080598942 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118006903 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079487347 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106749126 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08436154 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107818731 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094425225 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099277031 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090576284 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.10753772 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082939272 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104686709 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11515592 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091127219 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.106026698 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083319282 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110686534 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093750367 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.110515417 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084631946 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110936124 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08710353 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092276259 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08595012 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104612577 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080857425 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.117776511 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117114103 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08597379 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108420434 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086865462 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108636639 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.078893469 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.109846078 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.087642884 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111731889 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.08596629 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.105643225 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079269163 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099408503 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084960637 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097474207 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084237743 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.074118587 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109559446 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.108500896 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098603132 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.102313545 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085261258 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.103847018 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.083333319 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.107185405 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084324891 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109116197 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084584919 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109844448 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089029925 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10766166 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078501367 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09359296 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081353109 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.10877831 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105346752 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111379766 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.105150791 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087727546 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081635032 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10553128 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105787928 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089350833 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110626497 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085390582 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106918733 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090709857 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103024979 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084515068 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106871299 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082745458 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.102718866 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08142938 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120541061 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08291427 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100635406 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081072012 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110403112 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084812882 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103596473 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081303505 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108578424 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075639891 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10528699 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086829941 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106205897 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092980248 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105929528 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087386846 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.10887336 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091926591 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105245165 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084657469 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09642955 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087334251 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103272556 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089546438 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093973812 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086524164 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.103923828 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.087199832 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111236934 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082692275 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.105716596 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091717994 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.111460604 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083619359 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096347218 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085288209 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.104779469 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091615277 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.111673936 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.083834695 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.098349633 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079101071 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.109570058 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085464516 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106858498 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086810498 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105381574 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.074787885 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101512575 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086751252 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111128775 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.083905944 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.106784903 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110034742 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.088239992 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102625339 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.09112053 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102707455 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08083863 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.109213185 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08556508 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.098013011 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091497136 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103153275 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083291106 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103853383 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091181853 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104306385 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086873861 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10322109 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.0864553 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106185217 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081209846 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105047398 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084593925 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113023832 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085068119 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.09815546 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.078192283 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.08794794 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101142773 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08527281 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.100490263 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.0866545 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.106107655 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082510054 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.103986256 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085898445 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11802746 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095268703 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107419411 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107782286 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093374788 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.106139817 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.089383896 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.105348579 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089082649 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.107746897 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090551133 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107713102 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087359571 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104498645 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078017905 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.1070926 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091902155 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100516716 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08212601 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081064022 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106025662 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111847132 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086514349 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.087069257 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103081487 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087096898 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110694766 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104403487 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.086060278 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081205682 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104995854 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.090165843 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107165024 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087688788 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112151708 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106182514 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080508194 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110588768 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08378058 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108598696 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080442926 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081600468 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.10064921 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.087612958 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.104422114 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084767981 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095118841 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091467888 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111324906 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.086648442 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.101015764 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086328721 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11483427 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084489798 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110410112 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086113306 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107582487 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119377221 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081322406 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.113360294 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09405551 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.105121025 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075383255 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107742349 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084090446 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099877609 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085151535 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084165996 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10661692 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088081647 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108124928 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.074600791 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104557674 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083522611 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101141921 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079909114 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.110101712 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.08632346 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.106002048 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113642874 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088269122 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.107268885 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088880981 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.105079692 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.087382631 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.107027314 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087916368 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.106973765 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084872518 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100214204 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08684101 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081718013 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.102331875 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.084061353 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.106203152 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086997351 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107997685 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085132114 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110749463 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105553879 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087550327 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.12331855 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08339272 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.101915138 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087265097 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108321892 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08510107 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.106119478 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080061454 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110865204 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08581434 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112325375 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085437101 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097444447 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.086939557 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105420038 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.088039679 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.108061632 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.088414462 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.104800126 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085788463 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105838973 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095267925 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102206943 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093047457 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108285887 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08810552 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106995649 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086867162 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.105389137 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081773438 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105396276 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.088110363 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.106381461 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085581974 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107762738 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086625074 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.105599453 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084274847 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107874859 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08714 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.109665506 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.075644168 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.101679764 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081989207 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.107238023 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090937639 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.108194309 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084469321 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.105129078 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088463195 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.10553976 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.078348972 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.111601482 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08924641 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.108022076 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096579465 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10207227 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086261094 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116816242 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076089723 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.104657758 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082893194 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.102416151 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091799619 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.108896836 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092420372 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10668923 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082357227 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098579632 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088807745 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.104424398 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.075863947 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.102338916 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090292014 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103515902 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085301006 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087237476 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.108987622 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108555104 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091036091 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104888166 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085886118 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.107035857 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079022674 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082170849 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.10190934 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085769775 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.108500706 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082847146 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098428016 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.086560054 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.106541281 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086530446 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.106251661 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.08467553 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112503101 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087028458 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106408199 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092457829 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09680606 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086142254 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.106183334 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086324807 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10220179 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088100925 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10810323 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089592994 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111076576 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.08627385 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10895221 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086748849 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.103618176 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086395174 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.106857101 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087381242 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102570063 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.088803899 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113429351 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083216983 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.107078927 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087439536 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.103913577 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.088186597 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.108183821 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08766946 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11091477 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.087349716 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.107271431 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090461866 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.107603013 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088061989 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108617174 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085425026 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110837376 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082056457 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.1138912 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087648036 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10895221 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086077972 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.103645567 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08687276 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.107171666 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086276743 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.113443647 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.089201902 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.103493534 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082466657 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.103830899 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086773491 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113018573 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09251713 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.107393698 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088130679 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101004151 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079464105 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109079245 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.082876371 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105647264 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089787751 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111861462 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08727022 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.104532217 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085286387 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112215367 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091060812 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109829163 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083341444 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109426867 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.088725964 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.107501984 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083963902 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.105981421 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089403279 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.110405009 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.0852564 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102984774 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096508864 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.112510376 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08963065 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105930438 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088504546 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.106419836 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081051105 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.108417444 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086938305 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110626412 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.08631538 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107839611 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116767269 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082935967 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.106284 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092874591 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106967205 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.092564498 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.101716985 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088031511 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108826296 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089611162 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.101473858 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082933909 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.103577829 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087745849 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08296677 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101453982 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117420242 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092547127 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107970065 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086329667 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10600503 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081857195 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081190083 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103612319 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089541914 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105761416 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114900777 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083077895 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08234305 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101037417 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087621556 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108706351 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.088937866 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100560636 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.081408741 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103772301 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088004917 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114143854 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08558254 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.107648133 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088025362 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107690646 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084491422 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113343979 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.078777649 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109100425 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098845764 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.109773742 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089194888 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.11000048 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113270232 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.089300887 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.101729129 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.090016798 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107025851 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08871078 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.109316313 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.089978635 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123688269 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088340738 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.103344326 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085962708 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.107678889 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083761157 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115645279 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089887707 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.109711859 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090187916 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.107319225 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090391061 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115125656 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089976809 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.111016005 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087785422 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.107102115 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087150468 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.105946777 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085985494 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.110826525 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089726908 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108091869 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091649987 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.105259383 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100030836 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114842802 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088912205 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099792705 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084141376 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103870794 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082151776 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.110073469 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081481138 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.106046202 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.086030607 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.086109074 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.110729869 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109883294 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087628882 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.11120394 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.087729852 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.076673548 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.112179322 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.108091664 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090406109 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.080097796 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.109335727 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.089300848 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.112620462 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.114340808 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.085241197 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.10868992 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086460345 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110489904 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081979584 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.110752618 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08666759 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085855897 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.104488587 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087875909 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.109844613 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088809847 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109902174 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090341799 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108177603 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.091409561 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112411262 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080078786 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100581256 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090372502 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.105167543 seconds)
  done (took 58.568432177 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14969429 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088217919 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078746321 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101110818 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1266643 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082877949 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099173694 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083392935 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103996506 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09283181 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099717569 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079326661 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121350083 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127927952 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125354016 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094244224 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099635808 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083837313 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09898382 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083501699 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119991338 seconds)
  done (took 2.983715562 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104163499 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118500298 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117251758 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102213461 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110075493 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117638085 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.095627262 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117828339 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.121585196 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091470241 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121958738 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117571074 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091484949 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112029956 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110719391 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09451891 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.121315077 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110478511 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.098026741 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.116089273 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114863181 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095150699 seconds)
  done (took 3.241571043 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.091598387 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.086548564 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.111953318 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.081416288 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.107609608 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.08105783 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.113360859 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.08379028 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.11349034 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.086910552 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.10528503 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.086881287 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.112956524 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.08064532 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.106007978 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.08324718 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.113203088 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087539098 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.110113255 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.081288591 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.127022565 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.081890717 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.103169117 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.084748736 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.117398967 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089100599 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.107073712 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087330607 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.104748597 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.087887289 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.104273007 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.089367996 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.111559248 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.084426192 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.104474504 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087446073 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.087631995 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.102347437 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.083914145 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.111983907 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.082717556 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.10941988 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.094943806 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.105195212 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.083263926 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.110013487 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088221857 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.10184118 seconds)
  done (took 5.504790191 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.118483087 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157589353 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085035683 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.146962206 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.124354184 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096727241 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.109922203 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.1467306 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.080652037 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.108408853 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.126705452 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.100564071 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108755139 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.114713863 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.09101411 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10765761 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088817643 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103610699 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092985902 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107462283 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.114017715 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090890493 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122501817 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119732803 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092745782 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10720385 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083768797 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.114275542 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.120439674 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.09425263 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.11418415 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.095209483 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.124434135 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110051217 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086502214 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111375857 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.12518569 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08831701 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.110573408 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.081835682 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.111468486 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093242748 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112189165 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.126352993 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08833775 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109716605 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087370971 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101725381 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119004793 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.09060623 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117909443 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120985031 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093310095 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.108921624 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093316724 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.123135618 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.108085746 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.086703339 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.112260785 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097811968 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10256971 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092573693 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121557049 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.110057501 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.096130904 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.122092801 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10919439 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092888384 seconds)
  done (took 8.272320808 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115138817 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.114700502 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126604946 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104126082 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113999588 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.092564716 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114896324 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.113737865 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094056252 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121490815 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092479987 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.163023849 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.111137611 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120247314 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.093238833 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.113944195 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093082083 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114506745 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092982611 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114864606 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113485093 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.105205215 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.114118284 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125119232 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126617839 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.09051713 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114154365 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093410586 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125173053 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113722371 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105858267 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.113669326 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113477941 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104804389 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.127685994 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.114408665 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08730635 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113790346 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.093359558 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114253159 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09086043 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12695465 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113404607 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.090561963 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113721494 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092530351 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126387651 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127783295 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121335902 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100224451 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113916057 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125575285 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092649906 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.11419836 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.12588403 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.13463888 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104676629 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125659669 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113926586 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125084293 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104675528 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.134639684 seconds)
  done (took 7.805404839 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084535968 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083465271 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.103446135 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.082676606 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105790473 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082025737 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083899228 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.105846717 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083634604 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.104743376 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085021678 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102269029 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082396256 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083590852 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.103412545 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082036652 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102930275 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082288212 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105824935 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082382065 seconds)
  done (took 2.687109863 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093321258 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126071533 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086241023 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114662128 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.088606225 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.11400609 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.086103792 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108563535 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088178691 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108162921 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118932574 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098239813 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106168257 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092635452 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118628235 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113243323 seconds)
  done (took 2.520750356 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.106240389 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.126646601 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.131238548 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089708002 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104395962 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.092472772 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.108790682 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.080368194 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080404088 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.115078233 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.111524944 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.091111324 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10988517 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082908825 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.084291196 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.112246474 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.079749141 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.110656745 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087443969 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.132427861 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.11097087 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.088468833 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.109912756 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086878449 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10928625 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091097084 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.11358018 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.082621296 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.10574979 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.088413858 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.110119142 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.092730163 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103789965 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08984063 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104702207 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082383449 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10906836 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088365567 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113096568 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087935432 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.10405214 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.088300101 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.109534815 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.089909324 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.102392385 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088730971 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102565219 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091519792 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.108376705 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088030973 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.108773809 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.09333986 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.113369981 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.096641552 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116193823 seconds)
  done (took 6.366972362 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100273756 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110546144 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090571726 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103817736 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088645305 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.114492475 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089673544 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108295191 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087798763 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.103766888 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087893971 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110099612 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087456775 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110101612 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087453384 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110489882 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080109125 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107698809 seconds)
  done (took 2.643634498 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091108131 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084523921 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.114329037 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085345657 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.106713375 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086698624 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102135567 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.083517621 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105547688 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084862301 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106602014 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087396806 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103863813 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087151531 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106383295 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085139432 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108224492 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083289225 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085052843 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102502774 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087008636 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104711639 seconds)
  done (took 2.955172793 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.102639931 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.137713862 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.098482642 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.1487565 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.111223538 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.089079784 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.120590755 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.089389252 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.128899169 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.088412051 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.110239542 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.088643087 seconds)
  done (took 2.179266921 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109902236 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144670721 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086100597 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11034999 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12086229 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091021418 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111226155 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09046564 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125333706 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124659935 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090812657 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124786606 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124449703 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122947706 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099202374 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12037012 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112427387 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091007348 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10777659 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113140096 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113556721 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125521038 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090443088 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112486391 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11189775 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103348034 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125697361 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124914745 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090886285 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125901264 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121213629 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090827947 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12652787 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125139878 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088137227 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125648734 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112265071 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136719523 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099870467 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123932834 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109293149 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099691994 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12654127 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120148211 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104410265 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112335762 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119861847 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091214452 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112016253 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141889719 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121425061 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102284629 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12067465 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125669235 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104125039 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139624065 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126186518 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123133898 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12081424 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126168022 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101909203 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121420914 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124400577 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125077135 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099618042 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124180848 seconds)
  done (took 8.413609096 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126209349 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10933323 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090826806 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126617002 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12347052 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112779951 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091465465 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112794474 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091658246 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108930468 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158794625 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090847691 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124150198 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12453161 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09046412 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113057464 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112724704 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103555145 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109022226 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140573508 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090673101 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125421606 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124575191 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123827955 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125224735 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100629867 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112478633 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090687599 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112385763 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113461118 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098455542 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113200262 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124090324 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087799096 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124284315 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091179515 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113092834 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120482993 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091682942 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121777885 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124332796 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135009917 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091765073 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11289732 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.336682588 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107856088 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112967753 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08770403 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11316609 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087996983 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126240654 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127099527 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126457301 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102418543 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112497676 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112756061 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091582648 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112473089 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09038001 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121556203 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124440577 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091947032 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140730654 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112980316 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091825061 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124659413 seconds)
  done (took 8.46161428 seconds)
done (took 157.527385231 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.103810631 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.142823435 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099874656 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170863318 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081159576 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.141981544 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114903788 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.118146223 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.085565198 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.107833169 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.086108676 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.110723494 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.15255496 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.102257955 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.082407635 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.110555548 seconds)
  done (took 2.681192375 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.183395986 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.295568345 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106652418 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.11430933 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09202923 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112283293 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.091714014 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.114508875 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.088114255 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.119407108 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110802101 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.088049942 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.119499377 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.089418432 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109357804 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088213183 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.11917441 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088257156 seconds)
  done (took 3.005990472 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118222954 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.154366728 seconds)
  done (took 1.15415861 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122771844 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.187987553 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297599769 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156354779 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.113281111 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129834836 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.164171317 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127954028 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.205450402 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132666384 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.109276583 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.114827002 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.1401279 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.097763208 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.117552573 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.092376705 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142167339 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117466441 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.09432623 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.11704316 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117804389 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.118841958 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.097655004 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11706207 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.189868026 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132614489 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.09371443 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.11601392 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116598579 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094254207 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.120966205 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.107303403 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.130000751 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.193542693 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.09926747 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.187818072 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099315283 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114542533 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094887883 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.114766439 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097525339 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119747243 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.130167076 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.092758398 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.115581578 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.101331927 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.116125672 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.093801387 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.123873839 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.125248507 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100513893 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.121764735 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.16796351 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.124961174 seconds)
  done (took 7.74462776 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.799795727 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157324021 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092915446 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.90236254 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.141922268 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106458334 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.805994227 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135337863 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.237574846 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.823733269 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101911489 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129889463 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23418724 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.253409768 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.140456664 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313402312 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.695365797 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102799511 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.143025242 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15417372 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099402028 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145511145 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.134931418 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.464086352 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.114052389 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092305236 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120529999 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10574108 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.185656104 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.090962498 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118322664 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.187726659 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.27030303 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203573779 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.089670733 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.114304852 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092074113 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.178331825 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27178235 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217028982 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.174830059 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08768125 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113709757 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105050477 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135885569 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11090411 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.170256435 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.180059816 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.180303835 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118751688 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12882326 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102007445 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127288724 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167272046 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.112124039 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.326175309 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.34613353 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114636997 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101042655 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.134764771 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270140926 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.092203372 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23063006 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142429599 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196696726 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.115630584 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793827225 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.168812648 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092190327 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124333243 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098862165 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121661766 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127432135 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173893792 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.394911903 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107737557 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.118741701 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090814303 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233851657 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092410696 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114619719 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.169784921 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093323021 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.1247522 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131039394 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105743001 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.200780054 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.251990697 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129914915 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101126187 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120052956 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.104158787 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116790026 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.216537674 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225020011 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.15694181 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209860662 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122041785 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164361714 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188496956 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102372027 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196090426 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097175589 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133673016 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128592005 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.197174032 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144567608 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.114459808 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097792522 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123216976 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149853291 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095642627 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123248602 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.176569519 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.491261033 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187584492 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.086930552 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.119732192 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102420129 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165813176 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123066116 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265736415 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096856337 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169790663 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116536384 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.107448837 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099324672 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.170708563 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130167535 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124898165 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105069452 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124692196 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.255654805 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226278591 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127471478 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226220503 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.180280802 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119646472 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174594484 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118518938 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168516567 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096759708 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122362954 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112603309 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.757216373 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122782867 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117877603 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095377856 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.200782765 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112670235 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093305961 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.115123146 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089597778 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.79539093 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.093175758 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.112355985 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.093881948 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124914245 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.100834952 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122444803 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098125251 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.189315056 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232621647 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100969189 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11945403 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.090772778 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.164621669 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115584258 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.093823849 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.116473656 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.093199129 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126495881 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11970827 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094442546 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.173995716 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.157545413 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220365566 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.577340167 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.087189254 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.112170821 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229968705 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086923085 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.308794385 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09545042 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.227912133 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166224889 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.106274409 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.338753406 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.169097011 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197773217 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.09263289 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19258314 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08466786 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122038246 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.1663958 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092254739 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123012133 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.165130698 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.1332292 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10786931 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.157338959 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110150796 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229471802 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.084854257 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.196105021 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.089316014 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125928203 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.315956285 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087680939 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133401047 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164606842 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116640901 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.09109603 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.730632184 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.087875211 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122844901 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097195268 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.226325027 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164163318 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117642652 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.117778071 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103192553 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164332815 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.229640485 seconds)
  done (took 44.632989446 seconds)
done (took 60.092641304 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.322493979 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.26968215 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.295575865 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.196293009 seconds)
  done (took 2.067809684 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.185848847 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.159040962 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12805511 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.113826613 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.159673528 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.089386033 seconds)
  done (took 1.740507678 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.480792936 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.377255416 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.341861722 seconds)
  done (took 2.10946956 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.25944623 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.290037454 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.327087543 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.432736957 seconds)
  done (took 2.31998443 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.212690513 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131925889 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.101994024 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.143888597 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.178719805 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.183201114 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.149190498 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.15890549 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.134353125 seconds)
  done (took 2.343564881 seconds)
done (took 11.488205352 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.173973944 seconds)
    (2/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.130434109 seconds)
    (3/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.275391299 seconds)
    (4/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.272537317 seconds)
    (5/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.2990629 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.135836862 seconds)
    (7/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.175343043 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.105656785 seconds)
    (9/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.250822476 seconds)
    (10/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.245947865 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.12416731 seconds)
    (12/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.141462468 seconds)
    (13/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.128597207 seconds)
    (14/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.143026242 seconds)
    (15/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.119227762 seconds)
    (16/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.128821171 seconds)
    (17/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.198419509 seconds)
    (18/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.251352356 seconds)
    (19/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.105084014 seconds)
    (20/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.201450277 seconds)
    (21/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.198769092 seconds)
    (22/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.129076192 seconds)
    (23/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.176441682 seconds)
    (24/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.214791761 seconds)
    (25/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.250612421 seconds)
    (26/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.204043644 seconds)
    (27/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.106340916 seconds)
    (28/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.165701245 seconds)
    (29/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.181730101 seconds)
    (30/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.229655693 seconds)
    (31/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.093781681 seconds)
    (32/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.196342382 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 0.227148192 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.164142557 seconds)
    (35/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.206080578 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.10264372 seconds)
    (37/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.141986775 seconds)
    (38/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.227288254 seconds)
    (39/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.208245405 seconds)
    (40/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.098275002 seconds)
    (41/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.167199115 seconds)
    (42/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.121539111 seconds)
    (43/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.133189477 seconds)
    (44/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.130451574 seconds)
    (45/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.221192827 seconds)
    (46/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.099146084 seconds)
    (47/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.207378349 seconds)
    (48/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.124111617 seconds)
    (49/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.222499038 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.097931241 seconds)
    (51/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.127303537 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.122523095 seconds)
    (53/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.119142455 seconds)
    (54/286) benchmarking ("sort", Float64, true)...
    done (took 0.234747693 seconds)
    (55/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.253413004 seconds)
    (56/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.159643292 seconds)
    (57/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.1022276 seconds)
    (58/286) benchmarking ("sort", Int8, false)...
    done (took 0.198135791 seconds)
    (59/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.123272922 seconds)
    (60/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.104774268 seconds)
    (61/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.129658647 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093230389 seconds)
    (63/286) benchmarking ("sort", Int8, true)...
    done (took 0.224380921 seconds)
    (64/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.109750773 seconds)
    (65/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.201210839 seconds)
    (66/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.077507819 seconds)
    (67/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.197300532 seconds)
    (68/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.184888301 seconds)
    (69/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093286684 seconds)
    (70/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.105677788 seconds)
    (71/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.192109482 seconds)
    (72/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.104374989 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.145693884 seconds)
    (74/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.089772841 seconds)
    (75/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.136226899 seconds)
    (76/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.095213643 seconds)
    (77/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.199328782 seconds)
    (78/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.188671665 seconds)
    (79/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.096033744 seconds)
    (80/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.07931266 seconds)
    (81/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.126109965 seconds)
    (82/286) benchmarking ("sort", Int64, false)...
    done (took 0.084941271 seconds)
    (83/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.099803344 seconds)
    (84/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.090153082 seconds)
    (85/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.113659176 seconds)
    (86/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.100711798 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.147849309 seconds)
    (88/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091986745 seconds)
    (89/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.174466891 seconds)
    (90/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.137066051 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.094625461 seconds)
    (92/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.112243339 seconds)
    (93/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.083432192 seconds)
    (94/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117887271 seconds)
    (95/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.073749562 seconds)
    (96/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.176698746 seconds)
    (97/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.136997143 seconds)
    (98/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.090663322 seconds)
    (99/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.117389048 seconds)
    (100/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.195059249 seconds)
    (101/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.100478295 seconds)
    (102/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.178620792 seconds)
    (103/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.153250052 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.099295733 seconds)
    (105/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.18092552 seconds)
    (106/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.16745927 seconds)
    (107/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.09321945 seconds)
    (108/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.158307092 seconds)
    (109/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.184291716 seconds)
    (110/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.159166548 seconds)
    (111/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.158477717 seconds)
    (112/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.121652196 seconds)
    (113/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.073865933 seconds)
    (114/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.243907685 seconds)
    (115/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.099088586 seconds)
    (116/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.073941005 seconds)
    (117/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.124257964 seconds)
    (118/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.076808304 seconds)
    (119/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.114411631 seconds)
    (120/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.076410474 seconds)
    (121/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.108342962 seconds)
    (122/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.169534783 seconds)
    (123/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.090255248 seconds)
    (124/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.118787492 seconds)
    (125/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.098640732 seconds)
    (126/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.179425114 seconds)
    (127/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.187416074 seconds)
    (128/286) benchmarking ("sort", Bool, false)...
    done (took 0.196345791 seconds)
    (129/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.124763013 seconds)
    (130/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.166569438 seconds)
    (131/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.146515986 seconds)
    (132/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.115772439 seconds)
    (133/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.096318755 seconds)
    (134/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.115788827 seconds)
    (135/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.099688909 seconds)
    (136/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.13055802 seconds)
    (137/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.096049918 seconds)
    (138/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.108821187 seconds)
    (139/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.151471326 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.121210039 seconds)
    (141/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.084986638 seconds)
    (142/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.145727851 seconds)
    (143/286) benchmarking ("sort", Float64, false)...
    done (took 0.176787806 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.101388435 seconds)
    (145/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.123359663 seconds)
    (146/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.078778328 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.120194071 seconds)
    (148/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.098242032 seconds)
    (149/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.11920151 seconds)
    (150/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.146427972 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120444997 seconds)
    (152/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.115064502 seconds)
    (153/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.099418592 seconds)
    (154/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.116448948 seconds)
    (155/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.080598778 seconds)
    (156/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.102351269 seconds)
    (157/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127636484 seconds)
    (158/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.117787932 seconds)
    (159/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.083046184 seconds)
    (160/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.0796142 seconds)
    (161/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.121889343 seconds)
    (162/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.138369094 seconds)
    (163/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.098504835 seconds)
    (164/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.123691802 seconds)
    (165/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.082724747 seconds)
    (166/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.080312004 seconds)
    (167/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.106442622 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.106191053 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.12192417 seconds)
    (170/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.082750799 seconds)
    (171/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.102224262 seconds)
    (172/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.079787659 seconds)
    (173/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.128803733 seconds)
    (174/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.103847385 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.122735717 seconds)
    (176/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.078470988 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.122380053 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.098238809 seconds)
    (179/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.120800511 seconds)
    (180/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.091127901 seconds)
    (181/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.156226624 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.122323153 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.098288459 seconds)
    (184/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.182228752 seconds)
    (185/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.095693561 seconds)
    (186/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.213826692 seconds)
    (187/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.129004554 seconds)
    (188/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.107482131 seconds)
    (189/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120464198 seconds)
    (190/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.096346014 seconds)
    (191/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.100438232 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.097774871 seconds)
    (193/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.102004483 seconds)
    (194/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.096169165 seconds)
    (195/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.115835898 seconds)
    (196/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.10449442 seconds)
    (197/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.107454445 seconds)
    (198/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.108903355 seconds)
    (199/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.145382348 seconds)
    (200/286) benchmarking ("sort", BigInt, false)...
    done (took 0.238334505 seconds)
    (201/286) benchmarking ("sort", Bool, true)...
    done (took 0.221906873 seconds)
    (202/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.120118649 seconds)
    (203/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.08120075 seconds)
    (204/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.119267115 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.107336484 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.130234817 seconds)
    (207/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.081239968 seconds)
    (208/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.107066957 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.098072558 seconds)
    (210/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.141551746 seconds)
    (211/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.138301821 seconds)
    (212/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.108931832 seconds)
    (213/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.103429789 seconds)
    (214/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.077883149 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112067405 seconds)
    (216/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.108402863 seconds)
    (217/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117519824 seconds)
    (218/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.104900487 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.111612146 seconds)
    (220/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.092150362 seconds)
    (221/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.125740557 seconds)
    (222/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.141118379 seconds)
    (223/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.087336168 seconds)
    (224/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.120979373 seconds)
    (225/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.09646343 seconds)
    (226/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.082216853 seconds)
    (227/286) benchmarking ("sort", BigInt, true)...
    done (took 0.28067146 seconds)
    (228/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.080765472 seconds)
    (229/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.085784135 seconds)
    (230/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.112644322 seconds)
    (231/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.080474656 seconds)
    (232/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.123657999 seconds)
    (233/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.08031299 seconds)
    (234/286) benchmarking ("sort", Float32, false)...
    done (took 0.177467465 seconds)
    (235/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.099288521 seconds)
    (236/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.105291541 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.097747555 seconds)
    (238/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.118917528 seconds)
    (239/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.089192306 seconds)
    (240/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.129436725 seconds)
    (241/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082034568 seconds)
    (242/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.105430223 seconds)
    (243/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091136617 seconds)
    (244/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.131400437 seconds)
    (245/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.106659508 seconds)
    (246/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.104865225 seconds)
    (247/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097571202 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.124543055 seconds)
    (249/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.081052861 seconds)
    (250/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.117849731 seconds)
    (251/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.136653287 seconds)
    (252/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.104586819 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.09790775 seconds)
    (254/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.130451747 seconds)
    (255/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.093973631 seconds)
    (256/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.121970975 seconds)
    (257/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091367277 seconds)
    (258/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.179012561 seconds)
    (259/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.109000053 seconds)
    (260/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.169705881 seconds)
    (261/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.186578464 seconds)
    (262/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.097071442 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095273406 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.113887173 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.091357467 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.120274337 seconds)
    (267/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.074211625 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123461988 seconds)
    (269/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.07323687 seconds)
    (270/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.080257743 seconds)
    (271/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.122759786 seconds)
    (272/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.07320381 seconds)
    (273/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.117153092 seconds)
    (274/286) benchmarking ("sort", Float32, true)...
    done (took 0.229433381 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.118877751 seconds)
    (276/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.076202355 seconds)
    (277/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.0785178 seconds)
    (278/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.163355158 seconds)
    (279/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.138083842 seconds)
    (280/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.077282615 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116505602 seconds)
    (282/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.075056666 seconds)
    (283/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.080477293 seconds)
    (284/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.103946532 seconds)
    (285/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093628498 seconds)
    (286/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.113747517 seconds)
  done (took 38.495866192 seconds)
done (took 39.410000544 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.10018952 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.151450423 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.098626816 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.145816196 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.130346369 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.108662418 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.124337133 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103022757 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.130532411 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.106573432 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.126974869 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.085533233 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.125114144 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.099220381 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.121000226 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138607476 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.101648167 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.118599459 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.088321399 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.112165354 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.088521698 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113538958 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.090182115 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.10397332 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.097460312 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119194147 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.091714607 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121034126 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088759828 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112657315 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.088846572 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116288011 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086756622 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123366819 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.091236315 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.113711826 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096619867 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119485107 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.091573711 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113698652 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.093617987 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.113773813 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.093364061 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.11806481 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.089085172 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.113097191 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.087888374 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124486672 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115071524 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113658162 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094106602 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120118621 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096677728 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117373648 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.087521287 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.11264438 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.089848277 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139828688 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.117440049 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090840121 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118034505 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093556494 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.112086981 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.088633561 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112697592 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.096338848 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.120987422 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.088501629 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.119769928 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.091741518 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.108407378 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.089572072 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.111759068 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.086787113 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.094593773 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.119836441 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084485767 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.11345338 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.0922769 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.114907154 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.088922403 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111398649 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.090779696 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113671444 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087269079 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.10410952 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.087397691 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.116658937 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.089103067 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.116604993 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.091246459 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.116913964 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.09179681 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.126428139 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.088800127 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.115732091 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.090350191 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.118254598 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.093436536 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113728657 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.088744087 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116210977 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.09344144 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.111338367 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.089666868 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123849673 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087028863 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116101137 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088188455 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.113067689 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102709835 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120153193 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.090041218 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113868169 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08719721 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.117424461 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087029814 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111869605 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.105011389 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.114129041 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.089711735 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.113513778 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087731578 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.116374957 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.099042812 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.109830499 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.087739908 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111408798 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.089744762 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.118219834 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089461339 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.112653844 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.091458459 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.112471052 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090833359 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.116049477 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.096845901 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117029534 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.08890756 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113048661 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.088683454 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.115004632 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.090653596 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117246333 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.087107613 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.107241474 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090995397 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090820287 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114856621 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089574792 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113333943 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08499938 seconds)
done (took 16.905772719 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.098849846 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187321116 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.146062885 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.149644547 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.145808156 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.106254024 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.125369814 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.145142765 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.09764497 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142501104 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.145303773 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.111470175 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149821818 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.123599915 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.130597985 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.095572103 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.120200174 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.106258904 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.153333829 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.142801608 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.146327965 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.097017207 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.142164159 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.139977572 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.09479476 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.149308398 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.123696858 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.097583393 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.124816494 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103985896 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135929078 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.125257429 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.09757685 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133232448 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104666845 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119684598 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.130992407 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.092171907 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.120298606 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.095932883 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.132671676 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132332759 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093086021 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.128786818 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.120523259 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.099605237 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.119492886 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.094921768 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.120930994 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.091027524 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125592229 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.14156593 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.094014654 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122928495 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.097859855 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121420891 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.123505648 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.099338732 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.122924857 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.099254105 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.120143869 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.122125051 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.100331551 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.137658047 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.119800189 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.098782172 seconds)
  done (took 8.940914369 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.109551573 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.148828725 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129810822 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.102396963 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.123044655 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.084908015 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111251059 seconds)
  done (took 1.784676997 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.086596373 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.145112147 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.12545161 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.150372735 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.144226093 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.129179426 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133916207 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.091900619 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.139542633 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.121595741 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.116817947 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.173475535 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.117238401 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097881938 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.14760833 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089811283 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.148571194 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.11336287 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094354027 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.143732288 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094829278 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134061473 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.123645663 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.087820668 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.132279865 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.088181264 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.176548519 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125579072 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086067378 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117888835 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091936131 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.181798956 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.134307968 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.096110769 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110046109 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.113395343 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.134066128 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.120722775 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.111532035 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.116175328 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.10734949 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.119634717 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093976748 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.117883727 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.095622349 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.126588606 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.128565227 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.095848067 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117775513 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114597187 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.122131566 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108441738 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.113274536 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.091370675 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.121276925 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093315697 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126177969 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117105887 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.115265441 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119761244 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112134934 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.137658714 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.134501058 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112514487 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129167027 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.133444131 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.108173338 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117095001 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094417196 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119454863 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.113082119 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11625637 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.096615203 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.127265019 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125275692 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113714332 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.143777899 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092837342 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.129712299 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.091578752 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115511895 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.087301759 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.128823663 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092803119 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114564255 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103980103 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123660213 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.121366319 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.091300537 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.134862334 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.091581647 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.123890286 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.098136308 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115329611 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126831972 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.114555011 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.12333256 seconds)
  done (took 12.36508901 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089685226 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.091099762 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.118814851 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.089248008 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.113942857 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.088741324 seconds)
  done (took 1.574730715 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119469915 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116596228 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102828035 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120761391 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155860166 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.111676598 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.140207192 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100982778 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.132864575 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127393873 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.111928791 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.141236508 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.14640787 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.094903152 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.1383307 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.095101642 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.137867411 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.096373605 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127139459 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091894073 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.130868769 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119833427 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.092463883 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134628346 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.096002661 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.121473659 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.09510835 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128192281 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.102031234 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122581943 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.119592312 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.097110141 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.121656872 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.097652277 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.137870991 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.124123348 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09055372 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122670727 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.097284415 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121854512 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.113302722 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117858676 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.101850725 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.124452141 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.098757144 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120617206 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122949369 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.094347372 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.136903715 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.098740452 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123214163 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094858752 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121968069 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.098041792 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121322506 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122168537 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.098577157 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.137731616 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096714468 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122421288 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.091750302 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121743393 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097452519 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122829298 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.121634536 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.097825421 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120551253 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.092690901 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117895028 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095751173 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123425441 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092343913 seconds)
  done (took 9.234782082 seconds)
done (took 34.868680581 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.670993457 seconds)
  done (took 1.651944046 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.823318039 seconds)
  done (took 1.806391496 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.487116086 seconds)
  done (took 18.497658063 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.486526292 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.585731824 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.984498785 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.164912278 seconds)
  done (took 3.20582728 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.962209264 seconds)
  done (took 1.966207981 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.299284043 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.265241191 seconds)
  done (took 1.55589372 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.81337006 seconds)
  done (took 1.811413673 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.524206979 seconds)
  done (took 2.518914432 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.351144047 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.198728548 seconds)
  done (took 1.557129572 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.580140131 seconds)
  done (took 1.580431911 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.669392682 seconds)
  done (took 15.676293037 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.242000614 seconds)
  done (took 1.256821918 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.293461396 seconds)
  done (took 1.295077852 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.611406601 seconds)
  done (took 4.612658952 seconds)
done (took 59.986950772 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102508682 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127298552 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.100895623 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123164762 seconds)
  done (took 1.448639368 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.1082894 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123880619 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.098962343 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121754962 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.103690194 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.122369964 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.095912031 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.165091157 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121565473 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.0975706 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12251086 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.095293332 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.123135465 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.094015159 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.119683253 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.097260007 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124548056 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.096235684 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122683043 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.122088509 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.0938178 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.122580423 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.098387397 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.12069107 seconds)
  done (took 3.716666943 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.098713633 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.091797138 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.121038173 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.091023587 seconds)
  done (took 1.410616181 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.102029657 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.134420978 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.10745284 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127431702 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.108714838 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.13299492 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117878495 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.091562011 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119363319 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100884549 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117915496 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.111515713 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.133724373 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.086280601 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129040056 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088629404 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.113945147 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.107161141 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126739208 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128242492 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.090728545 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126036973 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.098884613 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.131658853 seconds)
  done (took 3.745127417 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.173017022 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129118943 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140117913 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096918733 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.166810232 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142602112 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08987801 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141908925 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.09019399 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.127659553 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.09385334 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.168860752 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.126444619 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.093994266 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11801389 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.122836687 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.099337867 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.126207872 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.093193938 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.130160852 seconds)
  done (took 3.482319808 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100701136 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.121578471 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088440003 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.088828607 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.124030972 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.093993424 seconds)
  done (took 1.627888327 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09030957 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.088869883 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.114784077 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.085218246 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.117032852 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.086437877 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.110518704 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.087162778 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.087284876 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113000094 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.085455807 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.110896899 seconds)
  done (took 2.193956235 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.379837293 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.115823917 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.114865269 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091072031 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122575604 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089549704 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129267947 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.089856091 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.145685454 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089641423 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115942614 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092277981 seconds)
  done (took 2.588985575 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209702305 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094912056 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263704973 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.375056316 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131540576 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164194619 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276703977 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162230591 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.209544105 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110509318 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220248925 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13106725 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154005026 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179383147 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139035443 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.1772605 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176592 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20100715 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148278152 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206110896 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163200404 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166796595 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179993496 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151994871 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134902446 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13095271 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118654429 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126587877 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173047743 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170460717 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174102758 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148538507 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110876538 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227689908 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212757026 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205743678 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.303617331 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132694418 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.18656234 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.181607455 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228011878 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139911953 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195858228 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155053628 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130257327 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1822626 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158978359 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.183015923 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104546579 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140324164 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184260639 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176085247 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.205850869 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110860431 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.326258557 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122929761 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.146334106 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181710276 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186010289 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216613638 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166865123 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.093811227 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185049485 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180459247 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179083501 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.144341813 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.166624481 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125045664 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175895979 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194053909 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178610219 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167161166 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.212715659 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109467111 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164759794 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169004949 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154605692 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178960991 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161239251 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120815508 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124089651 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137594758 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128061107 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.158001054 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122577832 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20208685 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134961801 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.189033695 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203416895 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15790128 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162400875 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165323707 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166537942 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147837214 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.091374521 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147177289 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.161025615 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159125883 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103544958 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156662441 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144270834 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126856802 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154012332 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096491538 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15990329 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.134046844 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167828635 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165843124 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101194407 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164223711 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149876766 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.159009802 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17260107 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186713178 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104574458 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132050906 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193917801 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159712903 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136437603 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175566202 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185020867 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.165614272 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110068545 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195913219 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193289877 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113191504 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214603692 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114435108 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133950015 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.150613685 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15933062 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156088735 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12886524 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129495723 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.154782785 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193120218 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126720191 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108670205 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175165173 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126091025 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128866777 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115681336 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136070431 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.142557065 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.119868013 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138860356 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15657718 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160882499 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154384568 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160295755 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113851126 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218789199 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104536081 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.160550163 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148070337 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117756692 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.17932163 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185978453 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101759292 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227881227 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.169482931 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197901708 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166464584 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132136171 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177936195 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100052259 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119755777 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16853676 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162158624 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162813593 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.18324742 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193574691 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.164969189 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.154470402 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151703905 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167344514 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.176211886 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155446244 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.146590616 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133773686 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197014295 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.094928843 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123362988 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.099288138 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14319015 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130395604 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105252488 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182304404 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165267957 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213714539 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159964072 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114268614 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181438172 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.126105109 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166263295 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.171903679 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139846264 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.18387613 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182813822 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168277699 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143813172 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177947718 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.091724447 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123126405 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.105421726 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164530904 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132903655 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105984542 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142123812 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181015847 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175777301 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150687856 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228461774 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169488443 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194082477 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.096478988 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.164068215 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172950118 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159391648 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183696893 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107359252 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.159462396 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178318317 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144323626 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188946734 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16289382 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170030283 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226351374 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.128940846 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130859119 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150641805 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171227709 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140035384 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137552145 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145844082 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13582649 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155282105 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.105082775 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126226759 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183953512 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145443249 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182457266 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.156992742 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172615683 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126506435 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142004769 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133038222 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147382285 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.115697491 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173243058 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187183233 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144199942 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159281778 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176709077 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101387385 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308776843 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21512036 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185744256 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110320115 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142972435 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161936579 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1591623 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164874994 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179592769 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144195479 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182886849 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160385363 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.114206857 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1357375 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147399583 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121701577 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.150209397 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.134075273 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.153568394 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.144976779 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187241795 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142927862 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130806445 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164756487 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148995163 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147703654 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114559754 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228678998 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158314249 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178643695 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.127416963 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.16542326 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229469311 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096449096 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129362402 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.098475974 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179447199 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133546057 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159239988 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.18386006 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197185474 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15736489 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166272583 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139095431 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.091140365 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160060031 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150135195 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223085301 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113969041 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136792856 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192261868 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.151543744 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101292539 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163159729 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309599141 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117584601 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175156989 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.117501201 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274488448 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097077102 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130297323 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159742036 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172537118 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137840974 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.153418992 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163355294 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145071866 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160207121 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110101655 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216018934 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204676786 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17182244 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175503583 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.144210329 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157828567 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164984805 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177750169 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144490806 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.116456153 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161969067 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183361072 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.186445405 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.134264221 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164515765 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164961026 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161023692 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174422355 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133439378 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200843099 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102414244 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19647524 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111640531 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124993485 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161922112 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.184358797 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131744138 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178211264 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159725859 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104232788 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127362232 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151338566 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131319212 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142420253 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.132484517 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181106574 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.096915216 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162294277 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180551196 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131237879 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155335715 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117663128 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13765976 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143520841 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145107982 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107215573 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.171333405 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182507227 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129509752 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178473263 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177768061 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167212834 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16097289 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14365127 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.638042071 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128629696 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181884044 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147639483 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1846793 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118953904 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166537105 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162142399 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150669758 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169306457 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150687657 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.21973632 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168073622 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.158232973 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101909679 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145704706 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144089057 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.101372914 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150637247 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163792861 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141890301 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.107960858 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.157448877 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146029594 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.14593069 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110311356 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212240847 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119495497 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212818723 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150385136 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138199741 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167171741 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173609853 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131972601 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.161859011 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1724046 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140083923 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121574752 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.130771754 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134346586 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180297037 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.095261116 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162113014 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164469271 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164882039 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164244911 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.104546931 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159974173 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142939653 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162575972 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129777825 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.125428473 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157408206 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130553909 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.098015562 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154523938 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159635479 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.159173844 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125804595 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.141902218 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180741246 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125045133 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104456412 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287654745 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155593299 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219266716 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.122171084 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135017256 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144902182 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125984493 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.125177488 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16066008 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.129208224 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103004905 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.131724164 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.180636714 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.152901577 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156645825 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183674261 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16416768 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202540714 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.105648824 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.265760668 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140503101 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154089122 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.101500103 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129557395 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142547485 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105655096 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145142352 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190423518 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180326831 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.152076878 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.142979584 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097502607 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127636092 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103659263 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160881676 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155056677 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160373368 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142777881 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.08809744 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145340862 seconds)
  done (took 76.609330875 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145414205 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131957903 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146729604 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.19369768 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164231243 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239568711 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.203856196 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.22459976 seconds)
  done (took 2.550981324 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.104917159 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.155639475 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.137838255 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.122969128 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.090251693 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.330369828 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.136758876 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121634505 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.147141463 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.131238902 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.091773434 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.561777165 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.096478632 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.123309233 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.112515483 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.089493893 seconds)
  done (took 3.64538724 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.223832352 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.531155997 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.017153828 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.230164388 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.222368105 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.170905684 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.744157936 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.160785575 seconds)
  done (took 12.40220142 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.126740359 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.139066264 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.133480447 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.16203538 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.117554657 seconds)
  done (took 1.787766581 seconds)
done (took 118.208071019 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.09492934 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125353699 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.095399958 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.126424973 seconds)
  done (took 1.526902093 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.11252099 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.087361761 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.111885082 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.078152267 seconds)
  done (took 1.486384256 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.431485574 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.108253706 seconds)
  done (took 1.677282862 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.118843624 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133147067 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105564229 seconds)
  done (took 1.463061217 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105695962 seconds)
  done (took 1.21522276 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097756937 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.097976059 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.139444176 seconds)
  done (took 1.44578397 seconds)
done (took 9.921622418 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118692544 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.439632002 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.387434774 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136490556 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722744272 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.378040066 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.058266849 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155285241 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1356535 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117715727 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105778158 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.698425002 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.079385932 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.340921111 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.062730913 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.341465722 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.672536948 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119232424 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095176316 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118913307 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.039520739 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.089012169 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.090153491 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120160722 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.668898509 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422859312 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0891111 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.387908 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117550087 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094548455 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.40676208 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.090062429 seconds)
  done (took 16.993451104 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103010552 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185137878 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097758669 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11972678 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.093439444 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.120700724 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099362364 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.13234165 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17989397 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.089174816 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13623077 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.08867621 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12402301 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.089565192 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141791219 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091123749 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.120502477 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091291176 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12566946 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090909558 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137832782 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088626898 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.1195567 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09173413 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.118433196 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101686635 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.119663619 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.102985044 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118497071 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094371504 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.123707989 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.090357876 seconds)
  done (took 4.740449172 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146929219 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.187245176 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126436159 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124983663 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168311693 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119094778 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.174283599 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.156225852 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184028287 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.118840772 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.106781808 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.119394721 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125519989 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.120153836 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.110939846 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119943616 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09294908 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12119986 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096687079 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120046229 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.109952726 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117423572 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.091983532 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120704637 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.090311628 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133125378 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.090376212 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.13212965 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117358344 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09584521 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124904103 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.091309746 seconds)
  done (took 5.070626178 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.106543846 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.130740665 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.106986333 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.136007108 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.092690981 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12672052 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.099737055 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121858932 seconds)
  done (took 2.040875005 seconds)
done (took 29.956369173 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117809952 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.103805428 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.13426547 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.103825938 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.1292123 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.103942167 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.118527392 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101701066 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.138320861 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.099974184 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136234467 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.088366616 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.120627982 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.088918655 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.131752996 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095949834 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133648449 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.099135795 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.138807872 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.105402687 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.120113264 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.101752721 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.099490336 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.139089637 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.138370736 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.10948995 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.135496511 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.095921261 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.119012706 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.091377504 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.133545017 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.119791308 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.128246643 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106043733 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124970405 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.093509569 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.120208619 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092424608 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134101137 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.101372601 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124934265 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100829017 seconds)
  done (took 5.922151908 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.124776511 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.165565976 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.097140797 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.120140264 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.091113832 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.15800048 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.161298796 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.098490791 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.122744613 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.11596127 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.145024281 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.091125183 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.120872846 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.091621135 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.118975971 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.091159617 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.142988067 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.116836358 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.149913946 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.12147234 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.169699437 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.150785086 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.125577315 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.144084046 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.161070092 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.157719304 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.1133936 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.155930961 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.120335587 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.119899921 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.1497382 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.122687799 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.122435751 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.090552151 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.160029351 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.13107995 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.147742848 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.159777468 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.155275161 seconds)
  done (took 6.227351774 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.105401957 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136134865 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112822365 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185516829 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.128293489 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.132913165 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.10072366 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138043179 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10625406 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118647737 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.09122259 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150803275 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.138208173 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.09801837 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091604057 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134521432 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.140090391 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.092418756 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124310342 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10947914 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137617854 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.104695076 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.132718744 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.100752934 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.118448736 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099181755 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121924233 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.106080977 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123621463 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.098249882 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.123316561 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.094872077 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12234116 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.102027067 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12239799 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.098892242 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141753808 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098690698 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131078174 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.124350367 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.1313316 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.094191416 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141651041 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.159584043 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091082254 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126472799 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.097218387 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.099070348 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.118443957 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108478195 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128496166 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.090154332 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.134838949 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.118782038 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.089507414 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104757989 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.120750936 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09317764 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126691105 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097318992 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.139903684 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.094144758 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134951049 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.091191692 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125651771 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.090085285 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.119652366 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095386452 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140978013 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097076095 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.158226457 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09208179 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124806389 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.097964656 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126356873 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10907562 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.118579851 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104270747 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132361598 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.097198065 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129752086 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.094454504 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.123576458 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.108116286 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.134525495 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127062504 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.096479472 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125532487 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.093917423 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.090951602 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134141601 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093548858 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124254082 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.107198553 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119961632 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093457669 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126991359 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.095067434 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.11899213 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102198665 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.12465035 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.089881206 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.12998777 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.091034646 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124115877 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.098967527 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.123641011 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.090433312 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124163085 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.09813515 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.119278054 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094233215 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.123430433 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093230818 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132891157 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098034704 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122841528 seconds)
  done (took 14.543823188 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.242631694 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217074863 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.192733278 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.301931758 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.142618048 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.117697905 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.215230996 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.165798337 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.090871774 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160414975 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17661896 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.189934669 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.176892861 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.187479444 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.173543265 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.12211975 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.109717214 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.174530461 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.217888285 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.298284268 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.140306618 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.105406771 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162040648 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.162247182 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.110137839 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.136672002 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.144025026 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.112859758 seconds)
  done (took 5.878149224 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.113866584 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157657505 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097718819 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146136119 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148701101 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091866875 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.125741562 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.091313629 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.133974074 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.105697762 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.122442781 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.098633365 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.12663833 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.100321374 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120596273 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.099901043 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131725411 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.100228933 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123323348 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.095343176 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134539083 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.10822057 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125926464 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.093291051 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138034412 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122878751 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.093584152 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142089609 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.127184161 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116491031 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.118298957 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099572795 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135498395 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.091412333 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.093645407 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.123271973 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.092501447 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.12295161 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.092569048 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118723345 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.090422847 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.111736017 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.092895584 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136001577 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.097236642 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.118660828 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.095728423 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.126415164 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09809612 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.117509553 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.092763447 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.093815538 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.124849561 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.102474606 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.124166897 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.09821371 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.125388983 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.092446131 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.130131617 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.093711431 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.118179687 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.09214158 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127530631 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.095153404 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129748686 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.09680591 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.122289276 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.092815485 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.125871045 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.097872293 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.123651517 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.099028118 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.117992485 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.091916092 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.13070285 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.099434548 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.094341317 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12186906 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093975749 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.12027623 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.079960697 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.119828399 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.078361682 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125435484 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091192419 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.092771065 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.124345093 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.096848963 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137100345 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130959053 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.099213841 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.120034539 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.093466437 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.1252368 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.089118353 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095311593 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138619715 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141321524 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.089825731 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.119412191 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106924349 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124297967 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.08943401 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.084416067 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.131373789 seconds)
  done (took 12.850277804 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139877253 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.176014112 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122497398 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.110214175 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156070311 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.162880703 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.099971418 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129144984 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.575612035 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.109501845 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124860785 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.100286654 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.124249543 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.106391999 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162326984 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.131461095 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.092086573 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.135692958 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.096598748 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.174363879 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.140221794 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.130273344 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.161062747 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12477593 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.096541636 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.15842132 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.164998404 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.10451909 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.133687587 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.132777843 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.134474481 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.165223525 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.133151716 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.125969499 seconds)
  done (took 6.089499188 seconds)
done (took 52.624333221 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.211976085 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.446201222 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.200679553 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.205757626 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.21894526 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.236710992 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.210615288 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.402543655 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.969566362 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.196058359 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.207046312 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.209659527 seconds)
done (took 27.853191028 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.283596957 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.36603721 seconds)
    (2/2) benchmarking "String"...
    done (took 1.50360305 seconds)
  done (took 4.007229056 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.209226254 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.206589893 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.446062858 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.205854254 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.203687931 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.218216932 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.20765875 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.210756614 seconds)
  done (took 15.831421485 seconds)
done (took 25.468852959 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.26107583 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.41385373 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.457273569 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.218253275 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.204693193 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.205262371 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.205850757 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.253759561 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.213304853 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.208489822 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.233067789 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.470571117 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.227908374 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.59141409 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.205185528 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.22369137 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.221511926 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.442732559 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.217720086 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.19665277 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.206846005 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.198869485 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.227718851 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.244184867 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.221066384 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.221120364 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.246806212 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.215336782 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.416797313 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.217855966 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.248484961 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.206926278 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.247695761 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.209785548 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.311542507 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.231528115 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.404232905 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.216626391 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.200727224 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.223676898 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.409138212 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.608181989 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.205764768 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.232238563 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.210390139 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.262354587 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.196802438 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.921146849 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.212145994 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.206297067 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.214583533 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.600786107 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.213665435 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.213450159 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.216899744 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.458057753 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.241555955 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.240343285 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.250633658 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.218461024 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.205528676 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.222537411 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.268638653 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.214570895 seconds)
  done (took 143.971242939 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.211120453 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.213880893 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.211308439 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.234477489 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.205800919 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.213719017 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.212186691 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.210969934 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.213454909 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.211991745 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.20638739 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.207439279 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.213253498 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.20866146 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.212763241 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.228445271 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.210773519 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.211128339 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.207327523 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.209732072 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.230570835 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.208737315 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.224284853 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.207157934 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.211192145 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.282206434 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.250413297 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.239785451 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.212034484 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.211064425 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.255391386 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.271590395 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.800998539 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.065230531 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.21947281 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.227320623 seconds)
  done (took 80.510643669 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.211976891 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.210757135 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.210249855 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.24340589 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.213316004 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.771109241 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.769412782 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.936297619 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.673196054 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.531287496 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.459594385 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.208459782 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304706096 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.220478961 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.20984924 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.227138935 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.236420878 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.212738933 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.210588657 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.766245904 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.228247104 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.34090826 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.377188368 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.221046777 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241316607 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.611065871 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206704124 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.245105152 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.54082813 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.253098775 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206176015 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.591637383 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.50202789 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.322263248 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206371795 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.239535237 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.212425508 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.494360231 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.209177534 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.212135565 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.210990317 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.212369384 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.870987816 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.208762934 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.749446106 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.211811467 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.130002172 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.204370915 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.210183059 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.511703074 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.880934091 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.224364893 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.210282132 seconds)
    (54/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.209746162 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.209143212 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209747745 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.210191501 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.23987682 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.213545603 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.582832462 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.31874587 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.212471211 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.211647437 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238972139 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.2103551 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.26836528 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.22788017 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.805432538 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.287632204 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.312305685 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.744196643 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.211148881 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306841189 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323352211 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.205897664 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.208437424 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209529605 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.212651619 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.320304946 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.205649511 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.211822313 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.601237786 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.374805824 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.220062001 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.449914138 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.306341665 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.206580311 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.561837092 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.211367502 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.211471479 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.933614503 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300358445 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.206396243 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.209882482 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.211379796 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.598439427 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.739724578 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.439189807 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.2111066 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.742352548 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.21025806 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.60638676 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.72507771 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.859106321 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.212893811 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318804623 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.371428265 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.217441194 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.208127079 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.400926002 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.208614108 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.263690572 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.204801439 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.605654208 seconds)
  done (took 366.545259272 seconds)
done (took 592.162346996 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.914670869 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.863475973 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.991822495 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.887878807 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.863161547 seconds)
  done (took 10.652932955 seconds)
done (took 11.785455057 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.388099801 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.386894753 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262660638 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.388424467 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245060035 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.404500856 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.368638509 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.22872357 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.306863499 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.28216383 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.307973165 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.258580348 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.241001557 seconds)
  done (took 18.20171244 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.53705644 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.20812987 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.28374613 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.542821728 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247471064 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.540774147 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.410238992 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.222372247 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.412646557 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246267817 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224401967 seconds)
  done (took 18.010424295 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.5414333 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.207219062 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.287678768 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.541758842 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24766171 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.554393375 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.41015884 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.223596904 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.405645027 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.223834554 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227324107 seconds)
  done (took 18.007029519 seconds)
done (took 55.352076784 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.252033032 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.374831949 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.233497083 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.225890059 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.219255056 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.222053042 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.225431456 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.218341237 seconds)
  done (took 11.104484096 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.217642451 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.216510307 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.219156688 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.218237973 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.222250036 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.219841283 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.217613654 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.219848594 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.219555297 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.222597738 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.221499985 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.218151692 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.219617255 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.218727066 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.218430719 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.220742526 seconds)
  done (took 20.645750282 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.21949997 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.217815393 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.217595016 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.217760191 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.218730516 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.21894116 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.217521433 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.218182581 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.220195957 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.21865437 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.218804524 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.219772698 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.218492273 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.220372372 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.220527645 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.219863984 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.220373662 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.219014809 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.225062552 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.220618199 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.220267902 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.220479055 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.219398283 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.220841208 seconds)
  done (took 30.406023852 seconds)
done (took 63.290568673 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.221308607 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.212615537 seconds)
  done (took 5.56998552 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.279231082 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.281840673 seconds)
  done (took 3.699004985 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.22399674 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.221752602 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.22309817 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.221687916 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.221959416 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.220967743 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.224787838 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.225319192 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.221783333 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.222640819 seconds)
  done (took 13.365928674 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.22223477 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.223241109 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.220921033 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.224400581 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.221659008 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.221767318 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.223617757 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.223571775 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.222543964 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.219328248 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.222610663 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.221386149 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.224664269 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.223318587 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.222566364 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.22071131 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.222859803 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.222875688 seconds)
  done (took 23.142754438 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.236134712 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.244734395 seconds)
  done (took 3.619237934 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.351265024 seconds)
    (2/7) benchmarking "second"...
    done (took 1.265044143 seconds)
    (3/7) benchmarking "month"...
    done (took 1.331248524 seconds)
    (4/7) benchmarking "year"...
    done (took 1.319789227 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.264221435 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.241426247 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.262380925 seconds)
  done (took 10.17304703 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.226940819 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.420770507 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.510058065 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.777804301 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.224447407 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.229010629 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.105545166 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.229070207 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.230022026 seconds)
  done (took 14.092004707 seconds)
done (took 74.798402503 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.21408037 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.23468279 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.220178046 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.224677843 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.51773377 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.260057375 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.21874779 seconds)
done (took 16.031704236 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.204979626 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.207461307 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.202617012 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.21980419 seconds)
  done (took 9.974824211 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.218192771 seconds)
    (2/2) benchmarking "read"...
    done (took 1.529766371 seconds)
  done (took 4.88648008 seconds)
done (took 16.004737552 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228572336 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.227049047 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.224504799 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.224940298 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.224060605 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.224257275 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.226878939 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.225473214 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.226833654 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.226250893 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.228649854 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.225893086 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225521024 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22383692 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224939732 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227563974 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.225863058 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223267738 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.222703788 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225335083 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.228386212 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22716421 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.22537846 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.225699587 seconds)
  done (took 30.561404403 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.228104559 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.224680402 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.227775241 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.228359869 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.227996052 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.229557069 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.226934711 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.226703575 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.229048835 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.229735965 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226169748 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.224631941 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.227957341 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.225526882 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229147572 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.224331663 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.229523231 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227789799 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227787164 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.227495882 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.227395771 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226415397 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.227339904 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229640146 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.226144858 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224982377 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.229517938 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.226660825 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229288132 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.226379453 seconds)
  done (took 37.966032567 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.232405903 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.235834287 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.230237251 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.229795243 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.229285231 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.228463302 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.229156889 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.22869319 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.227410361 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.231234816 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.228347765 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.227055672 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.229156949 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.230760891 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.229057724 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.230665397 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.230509276 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.229204527 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.228789051 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.230655442 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.231159132 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.229084488 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.231603611 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.230646835 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.231345469 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.231499477 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.229830516 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.230622982 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.22970361 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.230291887 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.230622605 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.230852275 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.229774333 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.229332887 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.229748293 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.231776796 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.235177978 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.240754088 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.231934453 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.230701971 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.230294595 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.231816857 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.233531872 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.230356802 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.23222741 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.232519386 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.232516314 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.230365697 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.232458045 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.232475975 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.231193097 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.232985794 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.230990557 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.231907033 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.231932237 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.2318533 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.230230815 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.233149647 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.231328651 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.232916553 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.230548143 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.232793371 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.231989378 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.232155901 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.231240194 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.232733254 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.233488321 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.233575902 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.231432253 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.23144023 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.232067908 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.234604849 seconds)
  done (took 89.7935775 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.230840252 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.230309424 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.228881471 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.231618468 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228655576 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.231640524 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.231059104 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233993495 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228999228 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.231745137 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232419073 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.231049679 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230230884 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.231699531 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234655998 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.230982204 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.233573308 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23092666 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.234159839 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.235010046 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234174833 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.231867527 seconds)
  done (took 28.246626422 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233373522 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.235185251 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.23172048 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.235136376 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233046548 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.237999649 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.234412608 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.234859759 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235143571 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23201305 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230307571 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235300422 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.236259444 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232189709 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231149052 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.236537533 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236287104 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.234115677 seconds)
  done (took 23.364360403 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.23248259 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.232314928 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.237616928 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.234908959 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.232980799 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.237412017 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233021591 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.236153979 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.23570984 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.233052844 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.237054358 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236681392 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.237596946 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233670367 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236337244 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.23325944 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.237059575 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234123739 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237592465 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234103695 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.232645316 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236880593 seconds)
  done (took 28.322381321 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237044977 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.236338348 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.234439857 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.234001269 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.2367177 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.236465981 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.236965249 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.23461064 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.23971765 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.235327017 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235345661 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.239068222 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.237862237 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.234506145 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.235754247 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235997475 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.238288761 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.2364987 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23971064 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.235104058 seconds)
  done (took 25.881170721 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.237238473 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239006325 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.240466108 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239265925 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239749061 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.239423687 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239222894 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.237503253 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.23939917 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.23918391 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.237235856 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.237299451 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239603012 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.239164963 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.23984888 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240370752 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.239856464 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.238459565 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.239368748 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240825494 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.239629089 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.239968541 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240925368 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.238739347 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.240879134 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.239861565 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238936172 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.241037974 seconds)
  done (took 35.854725822 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240410552 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.239700731 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.237381529 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.239245902 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.238876708 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.240342234 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.240892279 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.238476534 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.241947989 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.239611144 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.240827547 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.240138636 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.240803086 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.242785338 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.240447943 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.242313182 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241753048 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.242079528 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23786278 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240040159 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.241539247 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241236173 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.242816642 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.238833916 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237880897 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.241104285 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.241626618 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.238375434 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.243240979 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.238391469 seconds)
  done (took 38.366434308 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.285123251 seconds)
    (2/2) benchmarking "in"...
    done (took 1.284784707 seconds)
  done (took 3.724638063 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.238457116 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242318749 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.241728007 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.239564369 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.240817986 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.242024658 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.241367217 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239911022 seconds)
  done (took 11.081540086 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.240748838 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.24120263 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.245191599 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.242407108 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.245179991 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.239197219 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250125185 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.257562181 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.242606753 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.24421935 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.248222286 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.249014674 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.24592291 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.242520669 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.242572629 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242200264 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.243212783 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.243962402 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.242273206 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.245110548 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245575359 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246180407 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24671078 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.240947358 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.245187384 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.256470969 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.246672206 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.246076943 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.242348987 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.247075865 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.241457445 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.241069792 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.244777968 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.243694329 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.24505124 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.243098932 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250427563 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258223361 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.249388842 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24374996 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246779967 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.242412762 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.244830394 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.245134323 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246797701 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.244763117 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.244357289 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.24209129 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.241160184 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.248783416 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.251905277 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242479413 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.24239043 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248008264 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.244418678 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252680876 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.257989637 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.248963088 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.256265053 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.254327536 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.255352895 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.268386035 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246540294 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.246948699 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255371606 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.269163709 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250914522 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.258355089 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.244861558 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.24756581 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.254527263 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256213137 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.269055867 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.246986024 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248414604 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.245699595 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247634727 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.248833548 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254806824 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.26545074 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.245151097 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.24484446 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257272232 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270888354 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.24684727 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.249956123 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.249254857 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.249209119 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.249323119 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260487492 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.261561652 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.249197158 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.245009918 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.248351094 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.247900757 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.250468077 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.249535702 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249806674 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.247484613 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.250362397 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249865809 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.251692437 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.260095067 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248828312 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.24850385 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.25397703 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.248354638 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246918918 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.252463339 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.250494645 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249683341 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.249574133 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.256670535 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.248187978 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253506565 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.258515646 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.249624381 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.250155142 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.250335905 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.250703861 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261365452 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.279010082 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.256938191 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.25245147 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.255672953 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.264892737 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251524603 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.254137343 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.252290618 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.249407724 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.248599706 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.252440461 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.251560535 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.251392214 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249339708 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250860163 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.247666429 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.250767542 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.251581016 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.251250874 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.252138301 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.254011911 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.251528508 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.253898667 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.252613886 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.251799196 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.257135087 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.25194696 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.251031709 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.253226119 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.248676236 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253261138 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.249983536 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.251647455 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.251038858 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251678438 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.251761318 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.252959499 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25152 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.252429438 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.252794321 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.255039438 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.255220517 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.253905355 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.256498839 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.252640224 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.253514687 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.252812489 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.25502206 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.251866937 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.253957681 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.254189687 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.256335258 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.264620055 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.254568061 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.250901591 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.256392433 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253961801 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254738129 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255604409 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.257476435 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.263143989 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.255146553 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.259937098 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.253736099 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255755922 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.256069367 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.25577063 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.253277687 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256670555 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.259855762 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.264944027 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264504567 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274398084 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.256372596 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.261312502 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.25589304 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.260771334 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.260001312 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.25737592 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.255423909 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256345931 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.253678969 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256703843 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.255643986 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.255512376 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.253321302 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.256365764 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.257633723 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.256306566 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258088704 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.255030977 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258034801 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.25395973 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257335737 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255606594 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.254811501 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.255901685 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.254296247 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.25552633 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.258444663 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.255387469 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.262721533 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.251739371 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257853109 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256863019 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.256844394 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.257068045 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.258234147 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258743868 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.25436322 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262785062 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.272316377 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.25662934 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26191671 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.27267717 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.258523027 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.258768267 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.259818983 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.254312554 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.260228506 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.267340712 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.257015382 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.257887867 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.258111749 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259240078 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25987115 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.263261205 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.254278664 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.258085719 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.260195881 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.258823823 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.259751576 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.26043138 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.260464045 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.259046028 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260392174 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26074091 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.260306727 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261437838 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.260341956 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.259885348 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.25913006 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26244771 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.269996918 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.263926243 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.257402239 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.261795391 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.260934635 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.26488158 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.260979318 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.260170841 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.260016558 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274239281 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.283681535 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266656688 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.275868334 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.262148512 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265005588 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.275369785 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.264188333 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259158037 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259784325 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.258246057 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.260560925 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.260211585 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260643519 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.262606042 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261414633 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.260384323 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.267090848 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.26294049 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.259470069 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.260943801 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.259767546 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.262963944 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.261869001 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.264653828 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.264699694 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262490303 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.261232426 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.261005725 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266688114 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276036843 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.260876921 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.261135466 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.263842093 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.260567937 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.261854259 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.262562143 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.264675137 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.269900438 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.266973472 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.271622266 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.265024313 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.269625584 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.259761232 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.266003703 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.270755878 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.260224664 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.261128857 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.264182609 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.261974717 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267940143 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.277008515 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.264026259 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.266399812 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.263344279 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.262128406 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.264846836 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.262647923 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.26587016 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.264812059 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.271140415 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.277925887 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.267014784 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262319234 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.261868216 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.264048498 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.265166515 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.261343773 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264088512 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.265006637 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.264874652 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.262935275 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.262854032 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.263890308 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.265851436 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.266052626 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.262604357 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.267753512 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272825821 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.283589995 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26992936 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.266747202 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.270775851 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.265340654 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271963439 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.282468975 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.266978716 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.267944699 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.266527422 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.266173713 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.265174386 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.264345167 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.267284067 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.266509738 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.270470936 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.266699616 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.265849622 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.267270934 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.265512862 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.265839419 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27482126 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.290322583 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.266663129 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.27333687 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.265724431 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.26683078 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.272804589 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.267431627 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.265492667 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.269828764 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278519852 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276175399 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.267643335 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.269544514 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.269074797 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268700191 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.268632278 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.269877781 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.268458424 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.268135604 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.268668687 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.269513661 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269429699 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.270349127 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.269708585 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270470496 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.269121887 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.278803448 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.268250592 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.268588203 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268595806 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.271046655 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.265888951 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.270708616 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.269195036 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269628163 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270544478 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.269594399 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.2749243 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.276620336 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.271969776 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.268272258 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.271797095 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.268835998 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.270763819 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272268893 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.269875724 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271463688 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.270846837 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.27027734 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.271506043 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.270782367 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.270211226 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.27062877 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.271336399 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273375659 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.276496354 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269832033 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.267676636 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.271571593 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272147561 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.268320613 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.273607552 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.276281246 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269742898 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.281424707 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.2791056 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.274041804 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.268637952 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276346479 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.275957169 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.270923704 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.271334645 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.271990781 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.271104443 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.27097503 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.273881009 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.27265828 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.276023221 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.270464312 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.270743009 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.281360109 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.285850374 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.273697135 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.272980584 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.275759513 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.271626434 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.267508538 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.274379252 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.272023942 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278008003 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.28889599 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.27343374 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273582808 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.268626498 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.274836449 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.277130892 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27433727 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.272915159 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.271432253 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.27218296 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271890635 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274821845 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.272055614 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.273371235 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.271765321 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.274188148 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.281715421 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.27220316 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275290073 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.270795712 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.275561732 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273577537 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273697773 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.271922838 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.272448872 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.274348947 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275060114 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.272115447 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.276370109 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.274679387 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.272760337 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.275069604 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272987932 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276109295 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.28527759 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.281775357 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.271701037 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.274200819 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.274026422 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.275699061 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275474704 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.275261595 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.275498747 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.274961075 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.275142261 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276286904 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.274148528 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.279950947 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.290594396 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.288532418 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.276603457 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.273325062 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278057425 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.273746223 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.272906967 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.276602691 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.276097625 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.278668303 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.283479323 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.276915166 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.282166726 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292173919 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.276663881 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.280762944 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.277720959 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.284317935 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.278570049 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279325761 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.277150852 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.280089912 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.295104931 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278668978 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.286776688 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.306274465 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.2908426 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.276991187 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.27762132 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275235275 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.275698688 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.278119288 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.278459176 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.279682832 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.28012176 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.279906048 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.277929784 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.282674357 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.2783707 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.278265375 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.278603465 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.278003282 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.279338421 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.27631193 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.278706856 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.277872742 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.278782355 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.281874638 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.278372099 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.278745526 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289717679 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.303845502 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.280821118 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.280419926 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.278284781 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.28193594 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.280792725 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.289212953 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.287680931 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.279612623 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.280243878 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.281030244 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.280170125 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.279731499 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.278703003 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.280495368 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.280379388 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.279355704 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.293463445 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.304508209 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.28396509 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.277539409 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.282816397 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.280635549 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.280781293 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.284173783 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.280281243 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.282429199 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.282070119 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285822069 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.282839315 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.283320363 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.283523156 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.292652492 seconds)
  done (took 754.552745217 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279751465 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281702236 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.279085594 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.281699574 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282465686 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281527446 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283035236 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.281606678 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.280216797 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.281744497 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.280858482 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280050183 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.28263057 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.282792298 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281194232 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.280725131 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27963202 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.281683461 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.28196119 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278687648 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.283057077 seconds)
  done (took 28.096959847 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.284304723 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.281914373 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.28242858 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.284755242 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280299697 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.285888337 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.280543819 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28660165 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.284798021 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283201592 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.28592851 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286391881 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.28213248 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.283291187 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280932408 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285372952 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.284529053 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281801837 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.284741384 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.283073146 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.284629263 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.282661417 seconds)
  done (took 29.434744527 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.286358647 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.285660816 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.285634963 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.283724524 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.286014963 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.282514007 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.284529075 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.283998464 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.28694373 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.284930062 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.284745515 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.286197856 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.290997368 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.290814166 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.286078525 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.28710044 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.286584626 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.287737881 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.286031857 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.284216215 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.291191497 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.302919003 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.285354276 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.28531132 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.286543567 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.28750902 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.287487974 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.284576516 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.286393408 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.290874749 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.287982974 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.286711068 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.288041144 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.285811217 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.287629944 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.291264098 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.286395477 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.284503043 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.286860309 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.297190548 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.310640958 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.288657611 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.288268417 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.304527466 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.287352063 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.292009213 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.294028823 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.28377556 seconds)
  done (took 63.033145102 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.2888108 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.287389788 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.285973172 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.28849329 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.290066022 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.288646457 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.288007899 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.289878591 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.286798672 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.286393759 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.286522075 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.286783171 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.28752272 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.289283256 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.288466819 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.28693996 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.285603135 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.286739943 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.287492515 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.286804528 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.288663586 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.290223342 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.291980396 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.287431267 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.287596317 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.285763112 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.286668188 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.29024311 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.288398982 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.287390491 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.289644433 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.289974784 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.291183517 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.287058508 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.286490533 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.290524166 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.291148163 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.287772517 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.288571693 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.287776472 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.292001319 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.291164793 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.290079859 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.289997447 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.289352761 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.287894078 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.289122556 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.28709253 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.288201288 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.292410134 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.290113287 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.287710386 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.289328506 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.287604832 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.290509438 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.292982993 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.289775777 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.291348738 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.291115134 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.287177241 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.288055071 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.293098453 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.291178023 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.289649481 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.291529498 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.289623881 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.290673302 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.292869951 seconds)
  done (took 88.848253388 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291629874 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.290415536 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291391527 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290308952 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.291764069 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.291078751 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.288183553 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.289603999 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.291689033 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.290124295 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.292871629 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.291244626 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.292003898 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292380833 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.293931577 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.2922572 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.294493261 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.293201022 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.291234422 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291669085 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.291237962 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.292890859 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.292459641 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.291104074 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.2937345 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.295720939 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.292813632 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.292483603 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293321064 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.29094506 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.292549552 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.290521404 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293876514 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.293215341 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.291563464 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.291910782 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292302006 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295382921 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.294758085 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.293310418 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.294998279 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.292238196 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.293050572 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.294298857 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294495718 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.29171099 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.293131616 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.2940269 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.29641101 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.295645871 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.29360896 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294931014 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291401227 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.296273694 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293267351 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.294741898 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294741652 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.294794897 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294072528 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.296488452 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.29289989 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.294564624 seconds)
  done (took 81.36154267 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294730301 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.295529066 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.292972227 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.294123849 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.296393852 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.294015522 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.295561543 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.297110912 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.297811773 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.297387412 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299732834 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295693584 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296289809 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297669801 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.296538648 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296038331 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296172286 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.29585089 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297816967 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.2970569 seconds)
  done (took 27.130271234 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.295509125 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.298240115 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.295242619 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.294175347 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.298795742 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.293126506 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.2990421 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298610325 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294661722 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29609143 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.29644594 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.298434317 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296028761 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.2941171 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.296913811 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.298287505 seconds)
  done (took 21.949479899 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.296181578 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.297652062 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.296686568 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.297433617 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.296987368 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.294496158 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.301892662 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.297369584 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.294924474 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.299185209 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.296894694 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.300381785 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.301130435 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.297569312 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.297624949 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.299421706 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.296460169 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.295696223 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.30076462 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.298430793 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.295233736 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.296591065 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.299668851 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.299751197 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.296517009 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.295465904 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.298994691 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.300185789 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.299794057 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.30220988 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.299758462 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.298700003 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.301134757 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.299942636 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.301930171 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.297550985 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.301974076 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.299871972 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.302441096 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.301724654 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.301229298 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.297858762 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.301845382 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.30492424 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.298640293 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.302939549 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.301747669 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.29964812 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.300911604 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.301939771 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.304354337 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.302548491 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.30288027 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.301210695 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.301823631 seconds)
  done (took 72.678654411 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304025765 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.303022156 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.300807064 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.303052648 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.301743304 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.300782636 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.305067746 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.304065407 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.300578402 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.302637107 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.301265591 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.303913405 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301325632 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.304961687 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29972137 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.301707707 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.302472006 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.29992375 seconds)
  done (took 24.652382472 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.300722268 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.302017327 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.305425927 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.298708451 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.302377726 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.303770377 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.30202696 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.305517874 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306432991 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.300526494 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300543588 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.303262966 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301893026 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.30524991 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.302953313 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30156003 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.30569076 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.303083393 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.302120608 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.301851945 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.304263232 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.303700758 seconds)
  done (took 29.874876426 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.301570715 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.30327896 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.301519392 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.317661251 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.321597825 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.302168043 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.304484751 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.302951352 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.325133958 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.357797311 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.347493409 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.324835902 seconds)
  done (took 17.019085537 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302893608 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306511081 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302632669 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307147437 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306723312 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303097296 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305550373 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305194445 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305521244 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304065762 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302796288 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304963776 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306692304 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301964593 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305525405 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306679109 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306639416 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302635767 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304649735 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307335433 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303297574 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305391067 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305048784 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304836731 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305264876 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306206988 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30929707 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303250769 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305605278 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307725889 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305921854 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306056021 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308320315 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306451735 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31013706 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307056448 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304595882 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307777583 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309800079 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304715007 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.305081497 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306235985 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309026196 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307500967 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308387044 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305715405 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306917161 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306615699 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306098647 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309566497 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307992239 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306740755 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308887501 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311135197 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309756667 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31048495 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306245235 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306657195 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309243659 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306522127 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306292278 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307539561 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306435854 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306858779 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31041212 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308015425 seconds)
  done (took 87.4413273 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308557483 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305033595 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305916067 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30680804 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30634143 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307015122 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304658331 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30572421 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308342106 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307775403 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308895821 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306136238 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30894061 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310581695 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309345284 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309052382 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308266044 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306390491 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307902648 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311888604 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308354892 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306886853 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309316607 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309419535 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310571979 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31028705 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307499601 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308560316 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307983111 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308951657 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309001615 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310216433 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309990213 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307064124 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31007434 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311052648 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308957187 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309153564 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310207528 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31032583 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310290803 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311794897 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312179364 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308733518 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310339522 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311564499 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311821213 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31078838 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311774906 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310063702 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308938003 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31253488 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309824806 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310889641 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311176739 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31090849 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311078448 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310741589 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313104853 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314927758 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311843339 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311413086 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313669276 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31169663 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310485504 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312155542 seconds)
  done (took 87.652013893 seconds)
done (took 1768.028575804 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.475742184 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.430469367 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.310431845 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.316725845 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.304008508 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.334741015 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.314940326 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.30585234 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.312548729 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.311822375 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.310351601 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.498618288 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.306137344 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.305707964 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.311462082 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.404950768 seconds)
  done (took 26.776106848 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.343051843 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.321006976 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.426947842 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.33191634 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.342900692 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.494635041 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.369121843 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.316213722 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.480289338 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.358912379 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.308578266 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.345415693 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.316347558 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.308118771 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.334802282 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.494840694 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.558580264 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.310863967 seconds)
  done (took 28.983478175 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.748260217 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.328333956 seconds)
  done (took 5.298627582 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.337491256 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.317754269 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.318370405 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.317486536 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.30851775 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.310007644 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.317561023 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.313745269 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.315449369 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.43585885 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.320467297 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.330533286 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.336256478 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.320860841 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.316134409 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.355872744 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.462132561 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.319203303 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.315654745 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.323357719 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.317702997 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.422093573 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.359738956 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.31567126 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.438491381 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.321864485 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.320149623 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.326395896 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.456536481 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.318619919 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.31905906 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.3192161 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.317731396 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.212266254 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.810586789 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.324852521 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.336547796 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.330112242 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.319107853 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.468247675 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.320255544 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.326512628 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.310528496 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.809975656 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.446714292 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.434286975 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.336359143 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.32022098 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.321614757 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.381067352 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.319714953 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.322410391 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.363477458 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.104640391 seconds)
  done (took 84.402176972 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.319466786 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.311435943 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.487582224 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.337351418 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.306583738 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.312023631 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.331189235 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.587975419 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.322244519 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.306583712 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.593470852 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.850584337 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.331200457 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.353695943 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.211908182 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.361953839 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.314140183 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.314677513 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.328136172 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.304012227 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.851489744 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.314711763 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.312407927 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.584136111 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.348091175 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.802125898 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.306194303 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.312258834 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.312089598 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.304434176 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.813317764 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.331204933 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.364776457 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.309351559 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.569827235 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.680666928 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.635502577 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.311024204 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.349602127 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.305724028 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.32834388 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.793947282 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.65904815 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.309714261 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.322953377 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.807901425 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.307079565 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.324621575 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.323057959 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.558099063 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.310207632 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.322053721 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.313943369 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.313429392 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.314403618 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.315057445 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.38679631 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.80229495 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.308318068 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.316083752 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.313355995 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.314889788 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.316673249 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.31575876 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.322448919 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.657803892 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.475250432 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.319217709 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.660516935 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.802549374 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.322990234 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.886613201 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.330661624 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.344007387 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.342371003 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.314492862 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.334004975 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.808704661 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.347859516 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.309438032 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.6516165 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.319437705 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.592420637 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.326047797 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.317409498 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865244936 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.319957145 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.401103685 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.313077952 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.331794265 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.314815496 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.31916528 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.579823741 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.351874801 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.316669045 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.312910596 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.366373708 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.310984687 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.311824335 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.31851756 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.877236714 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.335466436 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.317185236 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.317795355 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.317941234 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.310527838 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.317815116 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.319301054 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.577590487 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.317986793 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.320777828 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.321029241 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.309173331 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.324951564 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.569569415 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.327961481 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.619584433 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.310997127 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311942776 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.31658468 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.318254828 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.380218148 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.310877651 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.317364663 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.219102821 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.575069461 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.335443762 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.3180229 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.318351273 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.319832588 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.308933951 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.319588029 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.397491798 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.317728246 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.052993241 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.359444227 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.346558399 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.319547922 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.324875316 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.319700374 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.315579531 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.320877575 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.607561979 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.579741086 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.485111929 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.313236537 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.312662673 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.042840024 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.330709063 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.491872334 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.338620229 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.312860237 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.564590848 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.51111573 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.31938149 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.315130864 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.316089135 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.575077458 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.316043509 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.63924482 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.834504986 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.330768681 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.324940402 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.060039337 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.010314268 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.323452737 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.32157671 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.589822008 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.331626216 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.322903462 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.322518265 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.333642701 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.314217173 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.340948938 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.319342336 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.318838585 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.321483269 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.450090668 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.509371409 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.338022209 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.320484758 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.805219009 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.318847927 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.315684162 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.326725218 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.318046055 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.322808333 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.37572096 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.325419575 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.352572776 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.323083468 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.327227526 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.83075119 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.315638661 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.324610973 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.515898323 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.988421912 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.332467919 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.335312791 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.323176895 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.207920764 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.827402197 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.342314243 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.622255118 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.317338249 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.359878243 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.324013905 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.379880779 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.828535793 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.316648225 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.323192142 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.959523104 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.33208036 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.851591351 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.321699552 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.329732614 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.891350644 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.334361409 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.324222767 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.316787138 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.318588081 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.608537989 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.321899043 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.337234741 seconds)
  done (took 493.899454015 seconds)
done (took 640.578399209 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.32436619 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.327605283 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.315030662 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.328257076 seconds)
  done (took 10.530149211 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.336788788 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.33267317 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.332594835 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.331971318 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.331918707 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.333171402 seconds)
  done (took 9.239361739 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.325257534 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.32739712 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.327102122 seconds)
  done (took 8.218845451 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.527826176 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.344257462 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.64534109 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.352876629 seconds)
  done (took 9.108373239 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.333203424 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.333653187 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.333193105 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.334548294 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.340641361 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.338234174 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.336331688 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.337524322 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.337472322 seconds)
  done (took 13.260900812 seconds)
done (took 51.59418959 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.344368345 seconds)
    (2/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.395802035 seconds)
    (3/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.313583663 seconds)
    (4/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.330220812 seconds)
    (5/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.31588296 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.588675931 seconds)
    (7/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.346324854 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.3851185 seconds)
    (9/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.313882038 seconds)
    (10/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.324239169 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.354815691 seconds)
    (12/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.91660047 seconds)
    (13/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.414060552 seconds)
    (14/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.327187735 seconds)
    (15/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.449902285 seconds)
    (16/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.519048846 seconds)
    (17/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.231371327 seconds)
    (18/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.332002924 seconds)
    (19/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.346371734 seconds)
    (20/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.317744811 seconds)
    (21/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.328322838 seconds)
    (22/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.337196207 seconds)
    (23/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.315327389 seconds)
    (24/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.296405939 seconds)
    (25/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.324095856 seconds)
    (26/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.374881527 seconds)
    (27/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.327575407 seconds)
    (28/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.32798921 seconds)
    (29/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.189097776 seconds)
    (30/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.335424968 seconds)
    (31/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.310724628 seconds)
    (32/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.32532792 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 2.331539671 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.225447689 seconds)
    (35/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.054868432 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.436072846 seconds)
    (37/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.360947471 seconds)
    (38/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.315486809 seconds)
    (39/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.178643205 seconds)
    (40/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.358395696 seconds)
    (41/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.332242616 seconds)
    (42/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.174248499 seconds)
    (43/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.323082149 seconds)
    (44/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.342062552 seconds)
    (45/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.318630622 seconds)
    (46/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.352273944 seconds)
    (47/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.659787454 seconds)
    (48/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.331968834 seconds)
    (49/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.341731347 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.506720653 seconds)
    (51/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.413966279 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.596681908 seconds)
    (53/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.458279177 seconds)
    (54/286) benchmarking ("sort", Float64, true)...
    done (took 2.331541587 seconds)
    (55/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.318050274 seconds)
    (56/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.084986056 seconds)
    (57/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.329879814 seconds)
    (58/286) benchmarking ("sort", Int8, false)...
    done (took 2.345001449 seconds)
    (59/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.413416938 seconds)
    (60/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.356660273 seconds)
    (61/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.340670794 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.388028841 seconds)
    (63/286) benchmarking ("sort", Int8, true)...
    done (took 2.329731715 seconds)
    (64/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.314923627 seconds)
    (65/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.316706145 seconds)
    (66/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.658415466 seconds)
    (67/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.508347448 seconds)
    (68/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.315844374 seconds)
    (69/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.153904417 seconds)
    (70/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.320413322 seconds)
    (71/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.460676822 seconds)
    (72/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.466935421 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.885917288 seconds)
    (74/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.078009988 seconds)
    (75/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.155776725 seconds)
    (76/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.443609298 seconds)
    (77/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.320960494 seconds)
    (78/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.238407881 seconds)
    (79/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.340653334 seconds)
    (80/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.320518156 seconds)
    (81/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.33207826 seconds)
    (82/286) benchmarking ("sort", Int64, false)...
    done (took 2.32849047 seconds)
    (83/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.324782243 seconds)
    (84/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.358211452 seconds)
    (85/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.381976599 seconds)
    (86/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.313886086 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.343870736 seconds)
    (88/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.576147552 seconds)
    (89/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.371922429 seconds)
    (90/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.334557357 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.16687152 seconds)
    (92/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.335930958 seconds)
    (93/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.358805836 seconds)
    (94/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.373702243 seconds)
    (95/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.320224975 seconds)
    (96/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.574287606 seconds)
    (97/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.333169191 seconds)
    (98/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.335797055 seconds)
    (99/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.33288838 seconds)
    (100/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.271633814 seconds)
    (101/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.381386511 seconds)
    (102/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.439180468 seconds)
    (103/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.674211936 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.733660596 seconds)
    (105/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.339402554 seconds)
    (106/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.321329531 seconds)
    (107/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.399874212 seconds)
    (108/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.331536997 seconds)
    (109/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.319865179 seconds)
    (110/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.470451517 seconds)
    (111/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.460458136 seconds)
    (112/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.553976776 seconds)
    (113/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.177809309 seconds)
    (114/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.334272318 seconds)
    (115/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.322735673 seconds)
    (116/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.277666302 seconds)
    (117/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.349151775 seconds)
    (118/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.323647281 seconds)
    (119/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.826027164 seconds)
    (120/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.323569878 seconds)
    (121/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.862911148 seconds)
    (122/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.328881957 seconds)
    (123/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.332665455 seconds)
    (124/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.351445019 seconds)
    (125/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.460997351 seconds)
    (126/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.335111169 seconds)
    (127/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.330716666 seconds)
    (128/286) benchmarking ("sort", Bool, false)...
    done (took 1.856421331 seconds)
    (129/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.360370596 seconds)
    (130/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.578675343 seconds)
    (131/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.595094667 seconds)
    (132/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.108385604 seconds)
    (133/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.33766939 seconds)
    (134/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.160286979 seconds)
    (135/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.366279257 seconds)
    (136/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.372764548 seconds)
    (137/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.422301128 seconds)
    (138/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.082722796 seconds)
    (139/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.360262087 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.080418817 seconds)
    (141/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.325496092 seconds)
    (142/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.634656714 seconds)
    (143/286) benchmarking ("sort", Float64, false)...
    done (took 2.335403712 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.720307182 seconds)
    (145/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.461882501 seconds)
    (146/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.090397373 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.706793137 seconds)
    (148/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.382424788 seconds)
    (149/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.357149437 seconds)
    (150/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.339311399 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.335593084 seconds)
    (152/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.110417529 seconds)
    (153/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.367130442 seconds)
    (154/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.473027861 seconds)
    (155/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.325036294 seconds)
    (156/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.443066275 seconds)
    (157/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.361240495 seconds)
    (158/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.422273457 seconds)
    (159/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.37318794 seconds)
    (160/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.33669789 seconds)
    (161/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.367373371 seconds)
    (162/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.330823688 seconds)
    (163/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.358719395 seconds)
    (164/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.319573797 seconds)
    (165/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.319559402 seconds)
    (166/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.343406 seconds)
    (167/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.323349639 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.168769547 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.660022272 seconds)
    (170/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.341584896 seconds)
    (171/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.661188523 seconds)
    (172/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.325214724 seconds)
    (173/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.329561188 seconds)
    (174/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.366389293 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.730087928 seconds)
    (176/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.342266377 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.221273215 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.359021756 seconds)
    (179/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.405383145 seconds)
    (180/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.350955447 seconds)
    (181/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.904195314 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.959354863 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.222468505 seconds)
    (184/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.34408945 seconds)
    (185/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.460925829 seconds)
    (186/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.331028646 seconds)
    (187/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.382638529 seconds)
    (188/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.423777105 seconds)
    (189/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.351880423 seconds)
    (190/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.349713533 seconds)
    (191/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.324102422 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.957262094 seconds)
    (193/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.916626922 seconds)
    (194/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.351761627 seconds)
    (195/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.839264956 seconds)
    (196/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.461784641 seconds)
    (197/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.325420648 seconds)
    (198/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.348874786 seconds)
    (199/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.383735049 seconds)
    (200/286) benchmarking ("sort", BigInt, false)...
    done (took 2.340256492 seconds)
    (201/286) benchmarking ("sort", Bool, true)...
    done (took 2.337204928 seconds)
    (202/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.399256659 seconds)
    (203/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.326561385 seconds)
    (204/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.466981144 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.335498076 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.574752566 seconds)
    (207/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.336373888 seconds)
    (208/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.323396632 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.33446809 seconds)
    (210/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.342916144 seconds)
    (211/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.333438151 seconds)
    (212/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.372981014 seconds)
    (213/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.689848402 seconds)
    (214/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.334320483 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.35901097 seconds)
    (216/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.342298523 seconds)
    (217/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.368399855 seconds)
    (218/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.337959372 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.387094374 seconds)
    (220/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.47856505 seconds)
    (221/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.377098427 seconds)
    (222/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.347445422 seconds)
    (223/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.779439915 seconds)
    (224/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.34099178 seconds)
    (225/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.449113974 seconds)
    (226/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.339118688 seconds)
    (227/286) benchmarking ("sort", BigInt, true)...
    done (took 2.341954893 seconds)
    (228/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.33828545 seconds)
    (229/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.324001589 seconds)
    (230/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.373846359 seconds)
    (231/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.32307764 seconds)
    (232/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.386859978 seconds)
    (233/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.327996433 seconds)
    (234/286) benchmarking ("sort", Float32, false)...
    done (took 2.347930042 seconds)
    (235/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.369253818 seconds)
    (236/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.334274496 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.341072427 seconds)
    (238/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.420648931 seconds)
    (239/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.226624671 seconds)
    (240/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.074661451 seconds)
    (241/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.356038303 seconds)
    (242/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.330280098 seconds)
    (243/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.548647222 seconds)
    (244/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.365317781 seconds)
    (245/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.454661871 seconds)
    (246/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.328910342 seconds)
    (247/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.352527039 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.368856019 seconds)
    (249/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.327981356 seconds)
    (250/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.41772413 seconds)
    (251/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.677838292 seconds)
    (252/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.33067499 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.219235218 seconds)
    (254/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.728535937 seconds)
    (255/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.368375799 seconds)
    (256/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.400615523 seconds)
    (257/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.551443225 seconds)
    (258/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.348948382 seconds)
    (259/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.332398636 seconds)
    (260/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.325287684 seconds)
    (261/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.322805466 seconds)
    (262/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.485283776 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.42198192 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.426228025 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.457029789 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.674315269 seconds)
    (267/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.83939947 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.344273106 seconds)
    (269/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.485562332 seconds)
    (270/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.334279098 seconds)
    (271/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.078284831 seconds)
    (272/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.510421882 seconds)
    (273/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.33971048 seconds)
    (274/286) benchmarking ("sort", Float32, true)...
    done (took 2.337768122 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.379282737 seconds)
    (276/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.840599038 seconds)
    (277/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.337390888 seconds)
    (278/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.327338763 seconds)
    (279/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.161171266 seconds)
    (280/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.942380135 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.359173567 seconds)
    (282/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.867328994 seconds)
    (283/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.333822709 seconds)
    (284/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.326259737 seconds)
    (285/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.439374639 seconds)
    (286/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.406853613 seconds)
  done (took 566.352337591 seconds)
done (took 567.591197346 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.377944372 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38783799 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.35748237 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.375225864 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.46604353 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.531989135 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.368399323 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.358489367 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.406600562 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.407147164 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.357477415 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.534139925 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.357044557 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.356169055 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.357119942 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385250827 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.345035522 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.357250004 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.372629307 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.366031653 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.373123916 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.354675895 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.407400997 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.532466331 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.363194993 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.362499714 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.361092325 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.377275717 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.469275724 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.358238208 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.361823608 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.367847152 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.346805556 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.350637494 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.353831342 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.378195264 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.368107709 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.369119716 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.365367571 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.390857417 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.347516188 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.348614642 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.359832341 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.360794432 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.361550922 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.362088051 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.36114213 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.363522418 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.386967222 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.388242869 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.344942202 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.374232615 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.364128869 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.36106544 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.370539402 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.360620344 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.365810172 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.392102551 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.378914291 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.392964782 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.361149421 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.359773577 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.364408014 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.375172984 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.366665918 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.347698793 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.348885752 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.36438568 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.352002644 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.357754398 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.348766417 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.360073521 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.36131106 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.376741472 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.391845164 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.351515203 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.347083867 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.362247323 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.368322557 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.360073718 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.374019005 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.391034287 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.36756965 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.363739986 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39346222 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.539562269 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.374746515 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.362114546 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.372186851 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.382950299 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.370571603 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.372151055 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.366490198 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.358108991 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.374865961 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.365935009 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.364027424 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.366229931 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.368036222 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.37175963 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.348940582 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396875919 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.361058541 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.36006075 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.361827575 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.374450576 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.350650304 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.379456706 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.387187005 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.411696199 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.363075973 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.362622615 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.366473676 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.397063343 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.373248018 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.368105194 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.357997398 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.360870909 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.351016396 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.378138775 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.364986387 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.363746175 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396991838 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.367477104 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.364675334 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.357179183 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.367089497 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.393408382 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.485590209 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.376963329 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.396924005 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.36454326 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.370162918 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.396897145 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.400641818 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.397048925 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.36890752 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.397282918 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.381533896 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.363660498 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.376349375 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.374121163 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.367062892 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.370590568 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.360558398 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.400065705 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394270789 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.395986861 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.387829194 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.485553862 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.362934163 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.365699742 seconds)
done (took 226.59763321 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.425536787 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.362514661 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.463937086 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.362245389 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.461158322 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.461306358 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.361755861 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.359153454 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.359382812 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.742129471 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.361048724 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.36117502 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.360690173 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.359798178 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.445579547 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.361624131 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.362608367 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.705622469 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.363478051 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.432118371 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.362520602 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.36265816 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.365527088 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.745759031 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.360439539 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.358557186 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.432758727 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.367857055 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.714631414 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.3579707 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.361180886 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.713156142 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.454645323 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.38401252 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.373732651 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.372865151 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.464987958 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.382927868 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.445709637 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.443816877 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.466287529 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.403483841 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.358758183 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.365521611 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.365049083 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.367250141 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.364804554 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.394048214 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.366962483 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.365017131 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.705913144 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.37663795 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.36550845 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.364799721 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.364073067 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.394945025 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.364836038 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.368964062 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.454878025 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.368004561 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.429543373 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.750524308 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.746698059 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.36763989 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.364176027 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.366832255 seconds)
  done (took 106.533424872 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.431872559 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.442095861 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.479253673 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.383518987 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.418650982 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.480920226 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.383519986 seconds)
  done (took 11.288541876 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.376421838 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.367748816 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.418009887 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.415796738 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.36950179 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.59689148 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.369993723 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.37819605 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.366060373 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.443744042 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.36892789 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.369419808 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.375680551 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.365716867 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.418788481 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.378836225 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.481891544 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.368754089 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.367048991 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.521669835 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.367758564 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.375692909 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.44305867 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.381983468 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.370040351 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.377626565 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.332979627 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.369567864 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.369173223 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.370035756 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36917602 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.479070312 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.371308605 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.366116314 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.367693438 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.529063938 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.371096888 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.368369525 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.370854063 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.363223073 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.370669811 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.370342664 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.372603894 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.369781692 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.370886246 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.396170955 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.370729624 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.373250781 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.372752582 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.372792258 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.448481295 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.376301788 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.369302633 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.370149089 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.449512002 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380170182 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.371510803 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.369884019 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.374218293 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.368943674 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.522630145 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.418446647 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.373128327 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.421406074 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.3729499 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.37403622 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.374479938 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.375136327 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.462921199 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.375286264 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.422071444 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.37199817 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.597154707 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.395499226 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.374502409 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.377440799 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.374537922 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.372644117 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.368695019 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.377795981 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.369108438 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.375281837 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.379472362 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.371947127 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370471829 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.560652883 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.528569061 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.372584206 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.38549288 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.381519558 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.371348119 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.448848244 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.376054163 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.369877676 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.424767326 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.488698702 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.452998347 seconds)
  done (took 141.854306141 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.379884889 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.381566109 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.379703358 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.397085042 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.374815577 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.374274012 seconds)
  done (took 9.560253024 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.375674397 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.378438941 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.376207306 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.376920898 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.376222472 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.374997581 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.377243398 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.37588063 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.378180854 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.375673728 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.375957708 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.379641906 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.378931964 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.376550057 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.374586908 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.375355175 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.377496919 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.376415837 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.373868462 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37457582 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.372442289 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.37683508 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.375637101 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.376405485 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.380311861 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.379428928 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.384869416 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.379465253 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.38019432 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.382859392 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.395366719 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.378193288 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.381201945 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.384480098 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.383068389 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.378162811 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382110467 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.379447875 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.379868077 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.379468034 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.378133795 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.380766134 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.379372264 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.380776195 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.379998748 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.38257049 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.38515544 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.386066664 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.378429083 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.379333611 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.380592052 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.380983889 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.37790174 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.380222591 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.377239242 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.393813378 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.38434363 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.378449782 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.376907802 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.378626887 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.379429435 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.377454464 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.37810675 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.381804039 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.375376609 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.381117886 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.379474979 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.383369546 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378395732 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.379513466 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.380157607 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.378381813 seconds)
  done (took 101.586626165 seconds)
done (took 372.086185117 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.810593559 seconds)
  done (took 4.089353052 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.46021113 seconds)
  done (took 3.739757817 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.546848694 seconds)
  done (took 22.8372376 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.445258562 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.399015189 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.383582067 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.382630752 seconds)
  done (took 10.89023973 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.628715617 seconds)
  done (took 3.906653953 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.373237195 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.36740059 seconds)
  done (took 6.022143586 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.685370625 seconds)
  done (took 3.966055378 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.798530286 seconds)
  done (took 4.086414392 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.37327645 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.385719566 seconds)
  done (took 6.050520803 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.360703453 seconds)
  done (took 3.642090595 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.326804364 seconds)
  done (took 16.610052243 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.38812881 seconds)
  done (took 3.676200598 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.416456302 seconds)
  done (took 3.699887955 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.943274857 seconds)
  done (took 6.224082715 seconds)
done (took 100.71927236 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.372355005 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.376370943 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.378602116 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.375138458 seconds)
  done (took 10.781089035 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.416303535 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.438576708 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.418001544 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.427968616 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.419807123 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.416560243 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.41124802 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.408344892 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.428578358 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.42566467 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.41932898 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.417963041 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.416276024 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.407571069 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.422406323 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.424183069 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.433437859 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.416359011 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.407060234 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.417859633 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.382599688 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.423849335 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.418808202 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.381207 seconds)
  done (took 35.283204891 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.877563503 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.452388835 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.532776278 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.43459484 seconds)
  done (took 7.57900881 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.435453449 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.432911846 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.446443559 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.484915688 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.562094074 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.445518231 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.406484053 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.4070621 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.393361013 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.441105789 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.512943028 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.453301839 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.531079441 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.384809504 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.571949383 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.385274459 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.384204883 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.435850995 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.486440414 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.501705722 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.384170959 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.435754088 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.439273621 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.452972616 seconds)
  done (took 36.094769705 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.38254894 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.401998882 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.381893004 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.381883054 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.392445073 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.383178837 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.383945618 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.385663165 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.384508167 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.390172328 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.382618321 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.398151276 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.385943834 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.384735398 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.390966778 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.386148083 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.39174413 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.383320029 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.384934193 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.391708275 seconds)
  done (took 29.0319633 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.373394596 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.375171022 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.730671328 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.633334501 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.376973293 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.379637348 seconds)
  done (took 14.15252337 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.453203742 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.612004845 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.385482074 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.740574697 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.823686096 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.387146189 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.385719181 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.636006269 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.950524457 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.928046344 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.443364797 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.453713519 seconds)
  done (took 20.485272852 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.389150423 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.378029635 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.385624058 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.396925853 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.44064828 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.404754577 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.393107265 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.379597079 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.44193771 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.45835253 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.405847409 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.439986796 seconds)
  done (took 22.201035698 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467969414 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380224271 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.382318311 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421755182 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383050136 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.588863939 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.408775795 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.111570449 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.397421649 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652667732 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385877268 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469879435 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.638116646 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390047887 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383380904 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.367052909 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611331302 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890181344 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384504928 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38846356 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410092697 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390913518 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3799661 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.600068911 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386496025 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382598607 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.645596903 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383136964 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671669546 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396565439 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39300545 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384483361 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65811753 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053887153 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498116865 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.599894586 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383094961 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38461478 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.386807177 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.385928861 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38617811 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389162005 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392314991 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386183737 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382866327 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388374161 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111444582 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.401813995 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.38153425 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381722474 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643679494 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482505711 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.390613507 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383050766 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388013337 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38405137 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.390605635 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47936273 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954381284 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390906212 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391653588 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.385798853 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394121546 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387465799 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017690966 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.386829625 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.389654573 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.3869837 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383819286 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377241179 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404486503 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386177091 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.40612358 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383819654 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093926724 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392010509 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387859773 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952418814 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389151693 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.388910503 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61381207 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385923123 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384704268 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.383878409 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388081114 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.117363792 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38866717 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.372410794 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428545642 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.128174906 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.614042553 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404600489 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411823619 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.612870024 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.371950733 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386452781 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.386201109 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388233496 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402389264 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.110365955 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397693669 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.385690436 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640167038 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.597647074 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399055167 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.389778388 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88981618 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419477296 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.403981669 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39388568 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.605909299 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.978311683 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.406356049 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397372837 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40799079 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389173908 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152238935 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395994456 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.489015459 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395225181 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658266366 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.191597008 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382919846 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456162562 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392524959 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38984281 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396471348 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389087414 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389797277 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.595346705 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409064521 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.422161043 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.389533142 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390470425 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.388342531 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401104726 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.396512189 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.614474578 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391771402 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685112418 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391936161 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389534301 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382527752 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.608735173 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.388593306 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.728776464 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65182741 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406458558 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404826441 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401870006 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410804449 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490999123 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415035149 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.397130985 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.649105882 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.399111269 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.396535428 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40003193 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395292304 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399882184 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.40036614 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410275179 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983847644 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370665734 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384841648 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.28564754 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.408110972 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462360072 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400821415 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612782489 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.40231544 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398140889 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.399944769 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.394541536 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617085386 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404598987 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.396818797 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477361141 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.891419415 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.000381337 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409683006 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.394358311 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.392018544 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.390888779 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393603361 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394176182 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392837584 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.610755553 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.411656433 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409104084 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.984742665 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399745467 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399731451 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.40113701 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.405525505 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.401234974 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394323551 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.402287885 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406999188 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405917938 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.403780403 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538440484 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.408781413 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394836322 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.912192485 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401232312 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393993947 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398986127 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433920759 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403189376 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215089654 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64786966 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394412944 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657621251 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.400812523 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.413078815 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.394098212 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398740429 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409495165 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.40843008 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403595499 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.407036384 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.407920399 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399130312 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957923777 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1457436 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941567088 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398844993 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.409907669 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.3970996 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.165097575 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40714285 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394185271 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638490619 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.169625279 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413552438 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894143652 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.419478811 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164274863 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657773574 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626043247 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397529182 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.402030499 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.660415131 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612227937 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433755404 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.407513428 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398658957 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.374989653 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963556539 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408201026 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477477946 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160017892 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420294593 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.403422249 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.473882684 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.416524623 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821751995 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417153264 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398304903 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390350606 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.428562466 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224634747 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394561254 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400896206 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032835443 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404617697 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.902273913 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417911516 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.62034261 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.412289558 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.404206877 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.400126115 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.410293944 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.653911376 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657752313 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400729761 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402701176 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943713693 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.257962697 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.405283624 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401032769 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171415961 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406504924 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.686411587 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.406007813 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.398999514 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424110406 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399079668 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400270059 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.395408599 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409152724 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379676694 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902943666 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.404829793 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400988887 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406240007 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245521784 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.660574646 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.414634776 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.993230882 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.628535446 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408877621 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430874296 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.409367874 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417906823 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.393188095 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405220259 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.642550395 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475991033 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.629768238 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.408481409 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.393375087 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.475556513 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617510767 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404207775 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.421562003 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662265675 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.403725831 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.424372114 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132930673 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432039605 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.418020177 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403706954 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394141652 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424899291 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474800101 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621088353 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.413810906 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.414702526 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822924764 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436664248 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406339981 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.417781955 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498296875 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404297512 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.42027673 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.179557604 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000887547 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160791611 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.010956897 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667632385 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40774333 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40563136 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405685303 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545871687 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406488875 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681619439 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405595925 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.418780812 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42683764 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418239759 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41269437 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617948772 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678696395 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405602294 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41900353 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404930547 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.405729835 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.414286683 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.617558336 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91975455 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990379481 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410580635 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412778272 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.170460485 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696871877 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407712272 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406795817 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405256512 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.407365227 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.429095055 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.4136325 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404176926 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554355629 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66439338 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087394132 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.436124182 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.436053807 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.180341078 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404247353 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.677021863 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409838651 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.630179968 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.006618434 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.12001243 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673773198 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476338773 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630407518 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.40688139 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55482091 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.414823495 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406163673 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405107216 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253075025 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.406960012 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.417071021 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008425201 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674576824 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.412917497 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.414123863 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432183561 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.416567104 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.630779162 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153434187 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.634929634 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.419641762 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408552282 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408310929 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008966247 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673042434 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408630932 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.405773877 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656630283 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.410946459 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433582434 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.860412673 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.408015151 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993982819 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.382258325 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430996309 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408328815 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.125684834 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012866662 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.410756026 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926097921 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409005643 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412049753 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683804602 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.415575902 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409004121 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692662772 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.413291699 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.418755426 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63227994 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.007418443 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186060676 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.434397453 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411360067 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.429497203 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409665257 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476334596 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412874466 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411220577 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.846845028 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.431706405 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411748427 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415419258 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.41795682 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413081745 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.409194165 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411887239 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.408384761 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.43099301 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.414453014 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414276221 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509159252 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98842001 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427645284 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.078980828 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.743011302 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.669417875 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421683753 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.398439764 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.414389285 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412922882 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414123562 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404598303 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416603421 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000308721 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.424780429 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.424154181 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.416783667 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.628453006 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627116218 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.413195674 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637407187 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425456696 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428785887 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.398961302 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414124723 seconds)
  done (took 986.323179966 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.434573635 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.455261618 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.452168953 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.432539959 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.449419954 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.453433076 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.486675551 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.43666382 seconds)
  done (took 20.914235719 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.420008691 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.425660307 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.417022566 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.425086757 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.415073137 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.900299426 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.431669417 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.425747035 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.424764934 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.415446664 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.422033724 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.108351832 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.439515202 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.414951671 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.407268355 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.42338995 seconds)
  done (took 33.240416348 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.423699866 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.556627001 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.428775931 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.46349143 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.417009312 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.406993844 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.655029732 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.434689868 seconds)
  done (took 27.103257403 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.427148628 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.428034132 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.429278183 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.426431006 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.42858447 seconds)
  done (took 8.455188123 seconds)
done (took 1252.926996325 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.420481856 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.426343277 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.420864685 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.426870509 seconds)
  done (took 7.013102527 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.404671466 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.396929601 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.397070468 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.408724865 seconds)
  done (took 9.926848329 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.134511268 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.076744419 seconds)
  done (took 5.52961462 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.418479304 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.181506673 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.155521394 seconds)
  done (took 8.075534422 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.723106585 seconds)
  done (took 3.043623496 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.824675233 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.78448083 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.608318296 seconds)
  done (took 6.539732263 seconds)
done (took 41.445529613 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.418870861 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.660263382 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.576727072 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.415058886 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.588763874 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.575106547 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.1494131 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.422108208 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.415353243 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.419311524 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.410172599 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.587113731 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.202492238 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.671744852 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.202334409 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.664565193 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.580622083 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.418662996 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.424748621 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.4239551 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.157279842 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.416317339 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.422321017 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.41032529 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.570556261 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.563068716 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.427457043 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.658259561 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.418484854 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.41463922 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.556220972 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.415855314 seconds)
  done (took 83.978388513 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.416226301 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.41178171 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.414163885 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.416562035 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.418284711 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.414708697 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.414134596 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.408394209 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.413212802 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.421202223 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.411525693 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.412109689 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.412394197 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.425000123 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.41180862 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.409088502 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.434077632 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.418314736 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.411633259 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.425529872 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.411899603 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.424894728 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.41288435 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.411003908 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.410662644 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.412859319 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.440823173 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.411476432 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.429915128 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.41224424 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.435925812 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.436436124 seconds)
  done (took 78.692427612 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.421047522 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.409957024 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.430352563 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.411573451 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.428445049 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.420472588 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.413090754 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.412649478 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.441657155 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.420980264 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.413104241 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.413663709 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.414665888 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.414350416 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.414175459 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.413305946 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.413589038 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.414561008 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.417307744 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.412749462 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.41585608 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.412334975 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.41884556 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.425183316 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.414901448 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.415015625 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.42577537 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.412169303 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.413669666 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.430728025 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.424243989 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.422573598 seconds)
  done (took 78.710514918 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.615893284 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.431200383 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.430798264 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.386002863 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.431470628 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.429228995 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.4099076 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.622992894 seconds)
  done (took 15.082256911 seconds)
done (took 257.781696484 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.421950718 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.426368085 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.634409428 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.451763926 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.424844585 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.469167996 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.451962622 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.651795967 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.440963853 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.670454028 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.442021596 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.450167946 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.433402664 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.448850032 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.710252693 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.577050135 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.321093597 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.426448367 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.773310681 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.442609387 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.698964016 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.431391677 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.703862953 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.40936411 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.444171229 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.429385967 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.427461631 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.312486135 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.46765483 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.785174702 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.434031054 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.413637259 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.511464714 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.531510741 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.645877934 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.589067923 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.424718456 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.512801472 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.653040414 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.424865205 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.42560226 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.229837989 seconds)
  done (took 85.302513817 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.431462533 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.551017354 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.432729049 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.434229294 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.43589578 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.555613813 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.530908585 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.434827645 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.433620261 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.433303568 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.430623111 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.435430482 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.433021515 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.43414045 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.435820266 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.434476178 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.432872386 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.437085501 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.435098747 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.482871147 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.559343314 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.460855159 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.42900743 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.433261583 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.538970952 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.572411881 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.434157912 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.429139591 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.479077516 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.435306022 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.44177505 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.484930388 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.436256992 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.435313741 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.55124523 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.539788429 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.460003134 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.437714393 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.553870809 seconds)
  done (took 58.50889855 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.438584447 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.693395253 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.863493567 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.44082669 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.436563483 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.438674653 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.514483872 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.439682849 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.439305604 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.440670072 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.594698778 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.440983511 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.471907249 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.889926157 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.440066459 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.438199573 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.437258676 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.436304627 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.702638608 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.447830212 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.535984418 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.440514229 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.514244383 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.448444371 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.45843158 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.438244096 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.443987916 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.013389939 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.444513512 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.597383499 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.240175461 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.513168212 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.987120215 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.875815278 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.241774251 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.439131194 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.440109673 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.599903413 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.441683724 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.440421111 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.516734542 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.442234189 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.873860968 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.121348725 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.457883035 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.436974032 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.03774517 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.603556904 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.689889124 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.44917884 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.903376302 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.440860286 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.441526838 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.441265243 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.685521475 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.447951738 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.436901329 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.055762784 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.461567108 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.520784493 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.444674409 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.440193969 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.708484386 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.439575985 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.697853485 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.442242993 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.449717515 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.461730509 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.874377284 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.445735752 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.14341541 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.458970794 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.442162033 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.597937698 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.700769818 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.076816683 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.446184337 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.711707236 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.006035198 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.520128656 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.447801308 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.000241317 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.522907411 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.446057791 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.445158832 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.444064735 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.441004933 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.488845933 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.51738546 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.080443926 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.140360935 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.084451166 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.541677918 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.45802799 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.444532545 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.061669121 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.46034244 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.445281042 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.875703806 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.146260123 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.465398975 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.451639303 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.1453316 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.464883278 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.52424068 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.452295741 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.887888903 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.446063674 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.488999854 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.44619174 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.450968817 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.462109444 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.52097987 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.448307627 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.445184959 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.11819505 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.622071201 seconds)
  done (took 189.64506958 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.438356023 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.443573078 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.451516385 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.428914405 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.435770931 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.445752647 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.436494335 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.438004534 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.445660306 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.437510091 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.437543636 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.441870798 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.439599178 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.457706054 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.444511763 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.445179708 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.43925835 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.440960557 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.439422361 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.429525357 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.437179303 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.454651216 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.4400368 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.430870991 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.43707218 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.438321217 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.45309364 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.435349579 seconds)
  done (took 65.683117557 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.44706551 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.016929166 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.450544899 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.576426176 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.468497965 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.44323795 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.575419459 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.503046053 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.447558898 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.445597572 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.443679868 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.754798821 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.44851114 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.972293914 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.640147852 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.581145271 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.97107567 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.461662602 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.44581391 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.443442151 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.579177788 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.458662101 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.75631229 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.024257841 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.451406355 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.024499213 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.441155662 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.449534211 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.447935621 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.024059449 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.451017175 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.759719124 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.527194194 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.509684953 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.02706613 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.97603176 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.994161367 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.599115361 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.440721323 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.44745126 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.449813292 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.439743849 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.025294963 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.453120122 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.449184271 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.02367022 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.468656473 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.447568741 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.453481204 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.448124275 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.509252938 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.510510907 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.759746591 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.03056261 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.528354771 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.462346433 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.581412179 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.815154071 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.452501478 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.975913089 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.456869585 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.018420659 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.462122956 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.438975581 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.450876263 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.455268272 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.599672358 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.583008286 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.971416253 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.467806261 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.974725991 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.615179113 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.451569024 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.449481164 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.450414067 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.017532371 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.971089386 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.618876221 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.584145557 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.641259631 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.445268284 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.448097129 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.440709421 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.527015454 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.449928221 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.034528672 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.993114368 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.467608625 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.452186485 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.451304725 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.453236799 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.629298323 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.046113299 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.530286848 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.973807341 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.78067898 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.758701813 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.447091772 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.513462231 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.466399606 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.761233896 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.449264789 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.509795936 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.896410202 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.76160731 seconds)
  done (took 171.919525167 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.70971636 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.480875731 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.544131997 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.604736752 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.052962523 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.040412254 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.450768872 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.573812159 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.563498608 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.712277102 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.449231612 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.533046938 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.670887309 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.532528287 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.172179492 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.523979806 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.548489001 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.602266885 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.587483531 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.462372691 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.118742238 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.751881502 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.646853897 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.482320915 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.563214049 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.265780919 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.044289253 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.014227142 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.623526849 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.452242363 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.982038562 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.452418758 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.382877662 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.141972594 seconds)
  done (took 67.088325066 seconds)
done (took 639.473224831 seconds)
SAVING RESULT...
DONE!
