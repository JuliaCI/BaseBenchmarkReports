cset: moving following pidspec: 14079
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.265519008 seconds)
loading group "string"... done (took 0.560845464 seconds)
loading group "linalg"... done (took 7.000442505 seconds)
loading group "parallel"... done (took 0.16245991 seconds)
loading group "find"... done (took 1.125249887 seconds)
loading group "tuple"... done (took 1.953131568 seconds)
loading group "dates"... done (took 1.242048312 seconds)
loading group "micro"... done (took 0.234392921 seconds)
loading group "io"... done (took 0.945732645 seconds)
loading group "scalar"... done (took 38.357015519 seconds)
loading group "sparse"... done (took 12.391056804 seconds)
loading group "broadcast"... done (took 0.973049468 seconds)
loading group "union"... done (took 13.265861104 seconds)
loading group "simd"... done (took 4.513205368 seconds)
loading group "random"... done (took 9.108036256 seconds)
loading group "problem"... done (took 1.936860205 seconds)
loading group "array"... done (took 21.635519814 seconds)
loading group "misc"... done (took 1.943569399 seconds)
loading group "sort"... done (took 3.312177212 seconds)
loading group "collection"... done (took 18.448146006 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.535579732 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139104958 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.115592324 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.137031515 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.181988926 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.130729721 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.139835298 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084114726 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.897262991 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.156883056 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136163116 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.471801288 seconds)
done (took 4.864468988 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.195314245 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084871235 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095255515 seconds)
  done (took 0.858499823 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064421724 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125180023 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.079309687 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066278146 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065236695 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079396082 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06564423 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065100024 seconds)
  done (took 1.232456538 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072602188 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067281484 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082563133 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066203093 seconds)
  done (took 0.975401518 seconds)
done (took 4.021887781 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.895844467 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.236897767 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190028322 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.445972123 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.146594347 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.18383761 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.670275234 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.3310093 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.208345395 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098387158 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103336212 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.374884292 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105742419 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.66906868 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074343669 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.104008787 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.159941672 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.438521889 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.07997366 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081515863 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102047157 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140123648 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.09871918 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075939673 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.167918933 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068515067 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145043324 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.093485636 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067242305 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.239820647 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188915262 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.693926974 seconds)
  done (took 10.402513808 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095427307 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.115371094 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068298326 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137683116 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.116310391 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070079755 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070133485 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.08193593 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090302579 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.157582376 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112936482 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104489975 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080232845 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069439173 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099247901 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.208979263 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105221363 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083473949 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085554755 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.073727339 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120018339 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081738541 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092371912 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076705993 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.150369034 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.193019913 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109515953 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.110083299 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067723848 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079164628 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130174306 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.140419978 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068680688 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080864835 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.137745829 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109456044 seconds)
  done (took 4.472839694 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.052015805 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.170368688 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089872283 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150353517 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084699893 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.124363986 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065909266 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098914085 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243208168 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.101711594 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.47025112 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11156587 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.12336081 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082467673 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.084247489 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08419459 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068623644 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065663864 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.532437902 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107710344 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134866233 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.100314602 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073337104 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084787471 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368550734 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067391246 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065755001 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083781229 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059278672 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.062832587 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.142436953 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084295288 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.186105122 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.107203466 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066498469 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119206252 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.184889513 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107608227 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121032749 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065807006 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064308046 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.166416863 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09021161 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066310604 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104219169 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102935927 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118416734 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.082670063 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066476591 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062967684 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.179364321 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08100756 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081531465 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.890740839 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.16518198 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076217502 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065158682 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.282037809 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099748002 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066954562 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062729828 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.244912513 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.152038444 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067563794 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.088759939 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064766556 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066331651 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380604258 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067055111 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.791423041 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068123683 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07574751 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084484883 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06693636 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087514672 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071223853 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100213872 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06595347 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.066071807 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082208482 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06478824 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083484211 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084296055 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.204291341 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082165591 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065857372 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078480222 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085552154 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10914835 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069839168 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064537343 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114927363 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067975129 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083030753 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.099805481 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082932532 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.098480869 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069304262 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127722008 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065615335 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.136213713 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067953682 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.110510683 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071128432 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113790065 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093275276 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071449116 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152684369 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063245618 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081232411 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065986115 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.063584472 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083796181 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067040031 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097392931 seconds)
  done (took 20.811924597 seconds)
done (took 37.424077003 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.297022163 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.089051849 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.089815666 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.072547548 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.089248944 seconds)
  done (took 1.398311469 seconds)
done (took 2.131225075 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.145078026 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098463627 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079087084 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094920261 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06258086 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115355074 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112740003 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.079591901 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114172406 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.062588658 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10980364 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063137867 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077037148 seconds)
  done (took 1.974895119 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081219031 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082787277 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084517559 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080107984 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0775797 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081446046 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07771357 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102698888 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.078548946 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086158204 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062959273 seconds)
  done (took 1.622646114 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.079559573 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081637391 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083211247 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.078592383 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077117979 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.079996989 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.078450891 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099287893 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.078253553 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086751738 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063834835 seconds)
  done (took 1.621383016 seconds)
done (took 5.941965888 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07718983 seconds)
  done (took 0.803955087 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.697012905 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.405807519 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082046954 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.130702663 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.231996143 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.150619938 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.429764606 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.107828242 seconds)
  done (took 10.145035031 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.111515547 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085032521 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071314555 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082946914 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068504156 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.08513683 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071072894 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067917289 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.082044663 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070216148 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082127126 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068608433 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085165401 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071301517 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070615262 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085202992 seconds)
  done (took 2.054711096 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.102888875 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.101281506 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.089037727 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074444861 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087682623 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072384588 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090259777 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073977322 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.085627789 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072194141 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089268294 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073722216 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.086861945 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065404456 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.088056556 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075690411 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085112832 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074344561 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.089134612 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075339344 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.089590301 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065378281 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086873961 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074124957 seconds)
  done (took 2.807921943 seconds)
done (took 16.544036405 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.129573177 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074568943 seconds)
  done (took 0.938894025 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080383299 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096268707 seconds)
  done (took 0.918041417 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080438357 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.07946156 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.086695175 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.09067026 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06640323 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080670202 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.099548626 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066402095 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065620741 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080569057 seconds)
  done (took 1.537462407 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.066623251 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.091494925 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068770064 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09539861 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072744911 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.078481891 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071813781 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.082348606 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077306106 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077212693 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069809721 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.097127545 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070549622 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.098663573 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071751247 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082206034 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085432123 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066773617 seconds)
  done (took 2.169288639 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065227132 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066666744 seconds)
  done (took 0.875942129 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065821616 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062964696 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080571188 seconds)
    (4/7) benchmarking "year"...
    done (took 0.0663437 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077832815 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062197899 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078358214 seconds)
  done (took 1.238709739 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.39276793 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.107868312 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.241413077 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086498833 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.101415263 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.272058434 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082344222 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07019729 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.086444614 seconds)
  done (took 2.223457506 seconds)
done (took 10.641803584 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078539091 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085650891 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.108502597 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.419012118 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.103844331 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066373874 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.141431123 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.20419929 seconds)
done (took 1.953097643 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.123237963 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.594137672 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.39481835 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.208744006 seconds)
  done (took 1.94725226 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.367772357 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089141571 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073096697 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066114799 seconds)
  done (took 1.350240778 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065803354 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068915521 seconds)
  done (took 0.88762009 seconds)
done (took 5.056808496 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065962083 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065374509 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078603325 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066170272 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063219752 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078450508 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098419265 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082040307 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066053571 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065422262 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.082303745 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065723896 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081850292 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063375662 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063340448 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081206818 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063500555 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063566829 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078429823 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064713189 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063258415 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080242901 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063412405 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078678797 seconds)
  done (took 2.510939755 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083953015 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.081886071 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070891413 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086970478 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069784464 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087100855 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073556656 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066570458 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085985159 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068055171 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084774528 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070029143 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.082345656 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070506608 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083688388 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070557834 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086599564 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06732161 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068026985 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.084805507 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070435072 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081447178 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070124203 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085414621 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069372798 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084395861 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067709835 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081726642 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071186868 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085184735 seconds)
  done (took 3.064302571 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070104727 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064248221 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079716291 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069886585 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06367851 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080165941 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06349511 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079748907 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063901443 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063936603 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080921067 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063429771 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063937576 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079925089 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065086004 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082419407 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079962316 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063763217 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079006752 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063777499 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066324596 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078964865 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06387329 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078597982 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063710953 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062731424 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079142035 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063226494 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064029664 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078913795 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066557737 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065841226 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.078965766 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070155132 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082886413 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063397667 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067117523 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078882574 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064553873 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06302679 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078849003 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063625531 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078734486 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069950262 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06477101 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.080974319 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064206095 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064224946 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079300207 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066681322 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078812564 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062946562 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065898601 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.07990481 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067521107 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062941859 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079389545 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063300843 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079288564 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063354361 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063868074 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078517366 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06626834 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06443194 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.093496958 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070261186 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078408313 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065271601 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064508911 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081138361 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065510842 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.093235469 seconds)
  done (took 5.877624401 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.113537504 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088904007 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08193878 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065695315 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078354677 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063567387 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067377872 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079025292 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065977109 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084894829 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064663422 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064806046 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081197358 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076815011 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079667165 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065220405 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08437287 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061599021 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064203354 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082558011 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063917676 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082350721 seconds)
  done (took 2.419484295 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.181720798 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086649159 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107172828 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088735547 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067401716 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088872138 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069335812 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084349177 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069454251 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083647256 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067878714 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084683975 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067308561 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083222329 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06816382 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083049139 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069354698 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084041362 seconds)
  done (took 2.294849157 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076393184 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065665052 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104633516 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065656079 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081568487 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068290685 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086968368 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073393844 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08361694 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066124811 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089516744 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068814456 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.083800419 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.175203023 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068560834 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082039179 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067998872 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081407635 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074397728 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085908772 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070848371 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089189334 seconds)
  done (took 2.571613743 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079872117 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067400658 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099297587 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084264091 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061984869 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064706257 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088026763 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065962378 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087812565 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067257389 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065750806 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081704204 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070556853 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081411517 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070531657 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081921257 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068474508 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082268719 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06768173 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062586485 seconds)
  done (took 2.262408465 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086897361 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083050584 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067939735 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090288237 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06785645 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083112664 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075240169 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082440252 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067339116 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106495118 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06700515 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082607644 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075601205 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087832112 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066964158 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089200082 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074453998 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090353063 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066411486 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08215607 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106422524 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067275766 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090549142 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066453241 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066688291 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083022066 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067336354 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087431457 seconds)
  done (took 2.995577263 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065884207 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066580423 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08004088 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063785191 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063868499 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.079992054 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063770855 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063307674 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082041853 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064029148 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065711475 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.081245206 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066285462 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081782603 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065488579 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065687874 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081718509 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063564268 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063391855 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079443573 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065838469 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065313965 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08122643 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064067692 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079155769 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065279158 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063802625 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079348637 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065910556 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063885076 seconds)
  done (took 2.867524651 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075321253 seconds)
    (2/2) benchmarking "in"...
    done (took 0.090339341 seconds)
  done (took 0.935830122 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06339297 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079821713 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079574761 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069754721 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085764713 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067018926 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090091888 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069636242 seconds)
  done (took 1.372178276 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080567759 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07713438 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083346765 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.076475807 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.092862601 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082469507 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.153131198 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083589796 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072760919 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080842554 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079367571 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065196144 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.088433814 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066641493 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.088510018 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072442338 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064091632 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087312736 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068247552 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080961952 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067982105 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093226268 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068611346 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062523361 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083907094 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.07502989 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094132398 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067378097 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085592173 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073509288 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087369445 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061475054 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067529366 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083304907 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065157834 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.091888826 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080592839 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08539347 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075035968 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067357622 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092438698 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061522926 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086362579 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072424927 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091555614 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067197059 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083111045 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061227471 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06430796 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084212534 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06186692 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066372425 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077159343 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072770553 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085620824 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076364915 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081577247 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067074651 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069293803 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08492856 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07307956 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084387611 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068375169 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066224392 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089189769 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071217626 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091260901 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062108395 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061155687 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081175318 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07685972 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104344903 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072640244 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082694929 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068019302 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.08068488 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069773 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067092994 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08818581 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072620251 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082402919 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072237711 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089727433 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067288824 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068483178 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089680295 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06458518 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084021493 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064930208 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098554118 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065665114 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080541678 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064063493 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076071265 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08546541 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066297234 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079898554 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073062041 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060699475 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083501547 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067526799 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083706465 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07680336 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087295297 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071922089 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091685595 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074311775 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066186583 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08553393 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063241356 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083093095 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065629835 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072514143 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077883418 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069674739 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083510372 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066929269 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090577246 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064316575 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06655493 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089524198 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071792562 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080752339 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063091535 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06861843 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082156749 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07043199 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090189951 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065953374 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077408609 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06121046 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069450376 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.0829581 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069938171 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087038098 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069363004 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061309474 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080329928 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070781338 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091125455 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066999173 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083200853 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071775409 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067066447 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081655588 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073020835 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085067625 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065703174 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088351505 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.0670437 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061946589 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085783097 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.0696264 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081906113 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070017932 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069396092 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085065433 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068095121 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081053651 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071687043 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08375522 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065203025 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06635437 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081320275 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076646231 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084519974 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061177553 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063436824 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089720031 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065067045 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082450814 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064966725 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068797149 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082767553 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064979593 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082756399 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067820477 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09297901 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070397757 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06707617 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088528888 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077665881 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082318293 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069130558 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.082715024 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067143258 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066881758 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091386537 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071530396 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086893618 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069581725 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079757762 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071326253 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073376693 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082094367 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065536545 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081315245 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070007604 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071424706 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086302032 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067045853 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08102843 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068099658 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08590524 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06871624 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06671113 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082061425 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071026588 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.08218975 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072217416 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084339382 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076456335 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086300302 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061767539 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06945308 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08121073 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072821438 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078775555 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064930713 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066146254 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084058196 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066139266 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069320186 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077659962 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073349195 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090934652 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066631198 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065559888 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082926929 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073109069 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084474171 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070644184 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086217456 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07243044 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09321834 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066272007 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070224214 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092740878 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067093386 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077282409 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071486425 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065406898 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082074227 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065987138 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081255595 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069796498 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090864709 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073074174 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061158131 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08553798 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065430624 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065211827 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078290718 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07096201 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.085249283 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068533097 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089388768 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068004887 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066936781 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086761672 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066958431 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.083972861 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067609645 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069929266 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083454078 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069280007 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082118614 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069468961 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065482862 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081018873 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068322144 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083136207 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066818092 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07075324 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082559479 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066836586 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084957975 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067862189 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084329926 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06698221 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065689428 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085639813 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068292336 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066190412 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08544169 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062047037 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089935044 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066222455 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090031883 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066634419 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063715159 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088063519 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068833866 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.087511562 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067490119 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084022624 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067579621 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065922834 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085339142 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073265886 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08089901 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07672775 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091004481 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067233471 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068930571 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083334379 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068414846 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065336628 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083955963 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067273715 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082908842 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066567525 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087223819 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069238524 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067186194 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084760196 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067071858 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082435629 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067824571 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061726646 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082441292 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066298465 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065948321 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092697858 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067038272 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082541616 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066176049 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08382196 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065626522 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063504989 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090522225 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075051939 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084107966 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073178565 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082350119 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068772892 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09346892 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063792309 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065255883 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081529757 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064921342 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089600252 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066477059 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074911636 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083499929 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066253891 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080655225 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06688696 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065084802 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077761862 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064450659 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087347949 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065403049 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065884028 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084079524 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070525999 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08439945 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076037758 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065204919 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084076586 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067081092 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080165127 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066011598 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065196557 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085727354 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067714843 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081394731 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064874925 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066510413 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084405531 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068561883 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083116287 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06829001 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073050091 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083237251 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070197887 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086046323 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061790117 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06880587 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083400874 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066277876 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08261011 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069898784 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069404725 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084645724 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075064334 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083237335 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06756114 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08317121 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064484727 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066544657 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083077197 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066969402 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.083292814 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068184554 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073558684 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080915934 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069963777 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082911986 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066823184 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073107591 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084102962 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070053882 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089959807 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067026536 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084662038 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07475586 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086871916 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070058116 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067680721 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085292203 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072358951 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082610445 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073494875 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067774732 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084678254 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068929064 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081497073 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066930319 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066377092 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082363454 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072773447 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084628379 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065905511 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065492342 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081385953 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068106213 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086650612 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074606711 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085702789 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069725437 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06272378 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081748966 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068456196 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064479703 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084755619 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069994586 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088867654 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06916032 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.08401726 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065564892 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075293896 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08941309 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070424211 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081511372 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070372743 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066874595 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085732914 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068074021 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084189253 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068822595 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070626475 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085594293 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065825553 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089931327 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069830214 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084820067 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067787071 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066957302 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084607897 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062665778 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084541284 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068651211 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071178706 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085880875 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067156861 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094005318 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064792581 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066673127 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087255248 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066213057 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.087995045 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063260664 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084569724 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068232191 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068018396 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079313524 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066382324 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064491283 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086102005 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066154431 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079331107 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076817606 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092080531 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069720029 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065893613 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082142843 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062328151 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078631806 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067049748 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068154518 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085740902 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076620145 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082788825 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066364113 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06226378 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084705797 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069861959 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.087420588 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06441483 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062074476 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083329671 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069859298 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089808705 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065617341 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067094237 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087283911 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069636062 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081702197 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070196922 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063012457 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087590571 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079467473 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083818496 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068147519 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089702549 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073958448 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.08490181 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061928472 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066961586 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086903046 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067334746 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084041749 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068632021 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098980769 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070336113 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065631987 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082733935 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069488401 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083381984 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075006147 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067910896 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084481627 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071638921 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086087324 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075098219 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08663587 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073854514 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.087037627 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069978523 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06548418 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083951024 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065026429 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064922571 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085023429 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067694065 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088270681 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073602123 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083152785 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077328769 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.092988815 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068671864 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063014742 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083406808 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066850168 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079295452 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067941115 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064544728 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082139834 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065773988 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082718371 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067619355 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072255319 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085520557 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067858042 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.084005221 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061762341 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068627715 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08672929 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068789785 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063647287 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085089453 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068248155 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087733652 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070186156 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.081612253 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068078719 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068438397 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084785392 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062855115 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09064101 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066249107 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06938193 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083187527 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067507917 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066819543 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070604538 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071202428 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085677446 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069150434 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.092458964 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069142861 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080882809 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065041628 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072048682 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082564516 seconds)
  done (took 45.770339022 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106246561 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081213971 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063079204 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080285678 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07343854 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081234183 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062517559 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062569132 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080608828 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065688355 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079504474 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062241138 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089043315 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084486823 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091631384 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065891332 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080292145 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063278487 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079754739 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063197997 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088938223 seconds)
  done (took 2.416845805 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.0747054 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.088258584 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072168463 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094051443 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068078887 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088126545 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072573946 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087929189 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093365588 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068234664 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093727348 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070915272 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.085409096 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067066382 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083938108 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071119739 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093423462 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068726239 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.088045782 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073480447 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088225151 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072560593 seconds)
  done (took 2.577457229 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066702897 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066099443 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085569686 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062102799 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065598625 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.079080177 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070608112 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.082204552 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070044131 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065277734 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083021038 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066047565 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085386335 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06583628 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066296145 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082458736 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.137953773 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070122884 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06514635 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085342588 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061836831 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085935118 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06278237 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062010026 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.083505391 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070010486 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.084377276 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064591456 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06531734 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083117729 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065809912 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081677069 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067308342 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066407338 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082985079 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066026178 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06500752 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.084358313 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062143789 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.082337792 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067020752 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06230277 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084413019 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067720722 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06376284 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.082071045 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068157137 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083696417 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06160828 seconds)
  done (took 4.427368291 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082969443 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.139018076 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086315144 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.120962429 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081549638 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092250439 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070654922 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.120155429 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063140194 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083864739 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.10071757 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080014611 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084613491 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070615347 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.089933112 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065853382 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084461913 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064957677 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087410167 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.0657647 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.087945498 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073356779 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.098180845 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079221572 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087059619 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065000941 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083787089 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071198018 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096101318 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070871687 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.090056974 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071497005 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.09940342 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068187799 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084159144 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068186546 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.100279051 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083499287 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067833281 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064244402 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086084786 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070610792 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.090661583 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082335545 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08410889 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071590901 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084732408 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063567733 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.096958827 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068633237 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092194532 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.09752218 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07014034 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08438618 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070245814 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.098744101 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066492229 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08183882 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068829198 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.096171941 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064556557 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087817183 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079739129 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.085827281 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073116652 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098190893 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071642992 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087891891 seconds)
  done (took 6.556632196 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074910785 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090612018 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080713436 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098048208 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09041462 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072587435 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090279904 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072873844 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.090339198 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076894615 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090859283 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110673091 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06759829 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.092483584 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072830955 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090280894 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072283827 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090418717 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072546412 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09080185 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090766603 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080333873 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09015235 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080798421 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119687789 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085272977 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073084713 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089894813 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080427764 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.091473366 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101152391 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073906013 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090177521 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080394073 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.102045111 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089487974 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066681755 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091085308 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072331715 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090291185 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068227399 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098381222 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072637223 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.086238028 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072075999 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.09065212 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.098507208 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083790263 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093173872 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095266158 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073062305 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097736196 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072046381 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091153644 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.098407516 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104576142 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098228403 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098309653 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073074753 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098652555 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098062336 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086980255 seconds)
  done (took 6.19816363 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086612974 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093258655 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.07613773 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.080889085 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063984383 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088899258 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064824799 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.081829397 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075402962 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092150622 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076760649 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087173887 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072639243 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095032189 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088466371 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072456007 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088108924 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070375882 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091980224 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070508397 seconds)
  done (took 2.444636993 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075975294 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10118524 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067466255 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072188939 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08796748 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07165988 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.087113495 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06985871 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085674269 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06994685 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093650832 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07600699 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085682185 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072338105 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094003987 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072597776 seconds)
  done (took 2.111250565 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078328773 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.095214923 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08121784 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085463613 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065586673 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08195554 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066902516 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062065895 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081944236 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080713546 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085014233 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069392663 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.085891451 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065039472 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063130968 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087806023 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062843849 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082274339 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067315294 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.098867874 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077715507 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.083378617 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067135653 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067711611 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.086664957 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071464398 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.086020152 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064029834 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083198636 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067454992 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084351553 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074142342 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.081260898 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065232054 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065317988 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082130596 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066632726 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084958441 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.0701472 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065475162 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08381041 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066091311 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084582652 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068298018 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081061459 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067091464 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062759112 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091069761 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065160406 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084322449 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06644762 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086062695 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068279391 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.0760375 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088844798 seconds)
  done (took 5.011799887 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080367991 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069184444 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080872165 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06475728 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088283936 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068362811 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068986787 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087292281 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068708609 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082622626 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068169576 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087520757 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068623162 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06938971 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086477281 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070045285 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080808236 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069101617 seconds)
  done (took 2.191500933 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072008513 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066190995 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093001945 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067375194 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085202643 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069781681 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06288711 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084683607 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066196518 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084912667 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066913843 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06877788 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084057968 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070227761 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085077506 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067768981 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068958761 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084116243 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067812045 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081207074 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069318479 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06489988 seconds)
  done (took 2.463951781 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071792393 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092826197 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.161564196 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.105936944 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081616528 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.098845658 seconds)
  done (took 1.447387634 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089822029 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097922296 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067359946 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106630285 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073774585 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086632351 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068865184 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086530848 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077415136 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100117821 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067361626 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096006492 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094841655 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079034048 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091869048 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073496639 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087063501 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068128273 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085770779 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085215742 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088485174 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093866032 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06924418 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085929671 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068556823 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094244789 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075713877 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0998341 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086047495 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076528672 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091596891 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068297463 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094643869 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100001888 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069989298 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095032029 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069034054 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103717051 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073471059 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094992251 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069243191 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093504348 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095364034 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073932056 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094075373 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069189875 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090721066 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068056867 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087402129 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110815634 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074560735 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094413699 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072601819 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095701618 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094218413 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110647584 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081020196 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094951424 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073285846 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099842301 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094420749 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073914846 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094672907 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098801233 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074110429 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094185727 seconds)
  done (took 6.492522439 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081536475 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104672073 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069227946 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09997949 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095596186 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068750913 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087491594 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068682826 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086394319 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068338435 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126042568 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069101802 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094505704 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09447774 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068889028 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086394427 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068492473 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094725298 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068196177 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109884338 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086849745 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076477974 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09440418 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093766997 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080956053 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092137688 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068058357 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086408834 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068387958 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087011221 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07235864 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087130999 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09551166 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068066752 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094339145 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068570545 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086187803 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074119684 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086545717 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073969874 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095051504 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10420676 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068224137 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086700547 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081029768 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087254782 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068463822 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086358372 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068937341 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08642733 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081347488 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10085467 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099381226 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075523524 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088573744 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068387397 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088545564 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067378212 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088380719 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09217388 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076712789 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086507141 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111526074 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069192364 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086965145 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076886633 seconds)
  done (took 6.384335318 seconds)
done (took 126.419206153 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.20271435 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184599554 seconds)
  done (took 1.226796418 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069511729 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095429891 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097763151 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127968726 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086020058 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100108352 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118423696 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079711069 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066271477 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085856833 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068021041 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087554838 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132089489 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067013358 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086443526 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069225371 seconds)
  done (took 2.277876947 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104814298 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.192973845 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108203402 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066259021 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098218948 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077998417 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084933892 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07744789 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.09045664 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066635536 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076692737 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095190851 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065287498 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094841622 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072884559 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096982873 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065197971 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097756199 seconds)
  done (took 2.478979488 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107704596 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144261709 seconds)
  done (took 1.097460828 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.203113971 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.122236106 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200149436 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.414027156 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.203755593 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.275836164 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.172604601 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.170519487 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.15582008 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.169053134 seconds)
  done (took 2.926700746 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100878484 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169789536 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.308813497 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.136399304 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086828666 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.113598872 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.136878639 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.108216947 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08198825 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100906422 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079456666 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096608793 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.11758998 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075858669 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094047781 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07716167 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12011842 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074282672 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096004507 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075986482 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116991846 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06738959 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093925398 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07384237 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097099284 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078389838 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085313261 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066938673 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074677811 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094555497 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078043283 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.111172937 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096494636 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.128815356 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10066232 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.12880591 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077317145 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090195962 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075552843 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091177977 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07717868 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.094982255 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.084743419 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.095619627 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066576229 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.095117235 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06727755 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066098938 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.097893713 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07635524 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099287027 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.096615813 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.126714099 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.077567864 seconds)
  done (took 6.14599234 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.748581144 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.131485484 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070955785 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.801789792 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110159032 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08369583 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.712306305 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116330645 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.206388099 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.769799954 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087424125 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098289984 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.197939368 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.211845898 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.925146581 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.263926558 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.631824323 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104015881 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128924204 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.130568947 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137922942 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.151551322 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.143781353 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431219918 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096417299 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071690702 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.134295365 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.0960787 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.138373903 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.103444947 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072924713 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.15200567 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.224614403 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.17571208 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074605764 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09155064 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070729002 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.144359988 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236137745 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.185471448 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.135657668 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089460082 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070962718 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.137573219 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126999683 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088938253 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138404498 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.14912854 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.145350083 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09267203 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076646443 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.138596224 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.157454788 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.139762736 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07924779 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.290045359 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.277932489 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070780849 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119144964 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102855362 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.213817668 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102175123 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.174124258 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134963544 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.183649186 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068943253 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.745724951 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.144673013 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069505422 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096200976 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118183182 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073954356 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.156074162 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.121737012 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.367719613 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.139354329 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094997659 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069401886 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223719157 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083442054 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090387297 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.138928559 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075755103 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120583016 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.142496019 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.16419361 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.144323882 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.209018978 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138880498 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134517134 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094202925 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12323587 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.075672946 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.186962188 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189690044 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.136471397 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.18213647 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.157252611 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.138880007 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146315551 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076282154 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.167593354 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096977959 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100560321 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1362854 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.187231179 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.120161354 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082124885 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093958087 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137946865 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.123659267 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084245627 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.157988436 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.146881357 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.45028253 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.1445646 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088739504 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086178484 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136024296 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.13768004 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096586889 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.230257766 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100482795 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.165397563 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11902978 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068500081 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118529359 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.138600441 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09794453 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099737501 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.156245912 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077078876 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.210736606 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.187054607 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077551581 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213042244 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.159726597 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075395571 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.145865899 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118448421 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.14258324 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097300699 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136070659 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073910182 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.752681945 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.141021556 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120528095 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093974163 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.170200869 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071755857 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080778765 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103408619 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067429997 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.762689605 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104694044 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080755937 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103421295 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074653162 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11981146 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132316412 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094070066 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138027718 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.197702852 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07560057 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117963053 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101901113 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.136402347 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075358002 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102358416 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08152997 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104837724 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121251125 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073384999 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10418366 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144503569 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.138173521 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.189048983 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.537730155 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091953955 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08322524 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.195748551 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069183318 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.258821674 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134188759 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.195088438 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139167448 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099563517 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.256654474 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.13997862 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.170810284 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106807062 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149252722 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067407404 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.155549047 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.139909807 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071225431 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095640279 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.138565404 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.14328563 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.139858138 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.929478805 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0697609 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200075544 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089672147 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.146676983 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09539279 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077300449 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.264730506 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07233398 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144008056 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.161295493 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073087437 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102312762 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.674947752 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081857357 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.15804848 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074400147 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.18970792 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.139905247 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134767386 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135163778 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096796796 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.138140676 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.182590982 seconds)
  done (took 39.97568853 seconds)
done (took 56.970115856 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.269756967 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.188167389 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.240341415 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.143503538 seconds)
  done (took 1.784944401 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.148038457 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105392367 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.117190464 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.085162803 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102938599 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086027052 seconds)
  done (took 1.511966773 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.40885952 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264914144 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230864401 seconds)
  done (took 1.774897614 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.293859083 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.225957714 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.445580387 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.29308485 seconds)
  done (took 2.233738473 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.189252885 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11275872 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066840967 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105904415 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.156629621 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.25104834 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126141769 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.186483302 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07946091 seconds)
  done (took 2.189145905 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.19550874 seconds)
done (took 10.560527726 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.340987365 seconds)
    (2/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.248520688 seconds)
    (3/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.286736152 seconds)
    (4/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.132590243 seconds)
    (5/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.209234936 seconds)
    (6/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.148999927 seconds)
    (7/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.271477552 seconds)
    (8/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.163258045 seconds)
    (9/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074770864 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.095197583 seconds)
    (11/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076747607 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.099489787 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074743366 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.159469244 seconds)
    (15/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.16707694 seconds)
    (16/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.103641671 seconds)
    (17/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.242431525 seconds)
    (18/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.245730983 seconds)
    (19/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075401939 seconds)
    (20/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.104145008 seconds)
    (21/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.222929524 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.201575592 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072569975 seconds)
    (24/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078271541 seconds)
    (25/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.115544199 seconds)
    (26/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065479157 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.118941383 seconds)
    (28/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072362315 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.074036477 seconds)
    (30/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075136182 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093621995 seconds)
    (32/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108558022 seconds)
    (33/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078389696 seconds)
    (34/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.159805197 seconds)
    (35/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.108144718 seconds)
    (36/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.107002728 seconds)
    (37/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.096640707 seconds)
    (38/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.07238209 seconds)
    (39/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091064595 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.132070046 seconds)
    (41/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091750452 seconds)
    (42/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.25102825 seconds)
    (43/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.223740676 seconds)
    (44/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076621962 seconds)
    (45/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07803521 seconds)
    (46/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.075031688 seconds)
    (47/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171759816 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.190276122 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073336766 seconds)
    (50/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.14252895 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.092549919 seconds)
    (52/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.097424401 seconds)
    (53/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.233029182 seconds)
    (54/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.07607669 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.144007739 seconds)
    (56/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.053750496 seconds)
    (57/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073627912 seconds)
    (58/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089784955 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069313657 seconds)
    (60/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.279761919 seconds)
    (61/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.09892492 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.076021665 seconds)
    (63/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.239728572 seconds)
    (64/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.218102273 seconds)
    (65/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090776088 seconds)
    (66/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.104970313 seconds)
    (67/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.094739092 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076488353 seconds)
    (69/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063252203 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.108847875 seconds)
    (71/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076920547 seconds)
    (72/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.09467357 seconds)
    (73/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078376805 seconds)
    (74/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.239994028 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092621489 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.1124819 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066681991 seconds)
    (78/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.211843414 seconds)
    (79/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.253741798 seconds)
    (80/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069174529 seconds)
    (81/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.088684392 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.099720575 seconds)
    (83/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.160314491 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.06657793 seconds)
    (85/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.160353952 seconds)
    (86/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.122466605 seconds)
    (87/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053095506 seconds)
    (88/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106904269 seconds)
    (89/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.130684488 seconds)
    (90/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052818691 seconds)
    (91/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069540498 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.116113027 seconds)
    (93/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07591413 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.109393203 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.130024264 seconds)
    (96/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074509404 seconds)
    (97/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.253140157 seconds)
    (98/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07572759 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.2479786 seconds)
    (100/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052391071 seconds)
    (101/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092991183 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066807467 seconds)
    (103/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.251716994 seconds)
    (104/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074690882 seconds)
    (105/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.24753092 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.11082983 seconds)
    (107/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061619477 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074117447 seconds)
    (109/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.085768944 seconds)
    (110/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.215177224 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.09512465 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073531648 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.11547994 seconds)
    (114/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053497061 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.192337527 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145163354 seconds)
    (117/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092208748 seconds)
    (118/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.249481887 seconds)
    (119/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.081108209 seconds)
    (120/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.074311821 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.17061131 seconds)
    (122/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.237395941 seconds)
    (123/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.194306601 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.117707208 seconds)
    (125/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.140021916 seconds)
    (126/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069710098 seconds)
    (127/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.132477728 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.156797668 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075724732 seconds)
    (130/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.097440754 seconds)
    (131/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.135778263 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.172597331 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112244341 seconds)
    (134/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074393913 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.114465203 seconds)
    (136/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072682901 seconds)
    (137/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067695902 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09357567 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073643974 seconds)
    (140/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052650441 seconds)
    (141/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.08965953 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06675199 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086892473 seconds)
    (144/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067742856 seconds)
    (145/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075375557 seconds)
    (146/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.092208499 seconds)
    (147/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.451059976 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.098609778 seconds)
    (149/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.161493686 seconds)
    (150/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.071504469 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065916114 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.095464859 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06850394 seconds)
    (154/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080281851 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.117033457 seconds)
    (156/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.052258377 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.087807166 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067743874 seconds)
    (159/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065718802 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.132871648 seconds)
    (161/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051483675 seconds)
    (162/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.133043875 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075183454 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.1137966 seconds)
    (165/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063393233 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.167126219 seconds)
    (167/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053555951 seconds)
    (168/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053174642 seconds)
    (169/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102153703 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134489692 seconds)
    (171/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.235444446 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.118345349 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088468955 seconds)
    (174/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05333095 seconds)
    (175/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095998121 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.07686377 seconds)
    (177/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067780698 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.087748762 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066914495 seconds)
    (180/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.112716374 seconds)
    (181/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07202316 seconds)
    (182/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.052154208 seconds)
    (183/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.074533708 seconds)
    (184/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067016224 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.119512138 seconds)
    (186/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082756614 seconds)
    (187/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094370472 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053306305 seconds)
    (189/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077424968 seconds)
    (190/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.088027345 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.114687322 seconds)
    (192/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.073522109 seconds)
    (193/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.098410892 seconds)
    (194/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.05211115 seconds)
    (195/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.073864077 seconds)
    (196/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053266494 seconds)
    (197/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071728278 seconds)
    (198/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.089161661 seconds)
    (199/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07261216 seconds)
    (200/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.08825286 seconds)
    (201/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062517396 seconds)
    (202/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.052417694 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096146584 seconds)
    (204/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068139716 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141035486 seconds)
    (206/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112095615 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.084663418 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087424172 seconds)
    (209/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.233947092 seconds)
    (210/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07788489 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064985003 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.08797962 seconds)
    (213/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072979148 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.116792817 seconds)
    (215/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078642307 seconds)
    (216/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051510146 seconds)
    (217/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.075918978 seconds)
    (218/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069560283 seconds)
    (219/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067418599 seconds)
    (220/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.073397055 seconds)
    (221/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.053217794 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12552786 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074732276 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074035532 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.134532175 seconds)
    (226/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080490011 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.168150276 seconds)
    (228/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053342321 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.132890259 seconds)
    (230/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100442159 seconds)
    (231/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.052193554 seconds)
    (232/309) benchmarking ("sort", Float64, false)...
    done (took 0.125426877 seconds)
    (233/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094675972 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091663996 seconds)
    (235/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.084721783 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091530252 seconds)
    (237/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072280656 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.087511351 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067300741 seconds)
    (240/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09205869 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.111778464 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.089272223 seconds)
    (243/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065410515 seconds)
    (244/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051555586 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.074132087 seconds)
    (246/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052535427 seconds)
    (247/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052990621 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.159376834 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.198118547 seconds)
    (250/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074188112 seconds)
    (251/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066971226 seconds)
    (252/309) benchmarking ("sort", Int8, false)...
    done (took 0.162913947 seconds)
    (253/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.087252044 seconds)
    (254/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055416747 seconds)
    (255/309) benchmarking ("sort", BigInt, false)...
    done (took 0.206615749 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.108587361 seconds)
    (257/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068697206 seconds)
    (258/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.125463989 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095974977 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066458574 seconds)
    (261/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.161191518 seconds)
    (262/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.126184195 seconds)
    (263/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.217560563 seconds)
    (264/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.075783388 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073473008 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066654292 seconds)
    (267/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.074004258 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074599398 seconds)
    (269/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074511711 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.189926591 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066166245 seconds)
    (272/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.083591894 seconds)
    (273/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077063615 seconds)
    (274/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103045136 seconds)
    (275/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052925883 seconds)
    (276/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053694091 seconds)
    (277/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.075293413 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095375834 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.198918262 seconds)
    (280/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062288446 seconds)
    (281/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.052103148 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.075272231 seconds)
    (283/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.247612135 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074688955 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067923371 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.087345432 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065923391 seconds)
    (288/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.187548294 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075016644 seconds)
    (290/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087603236 seconds)
    (291/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.052441384 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066801086 seconds)
    (293/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.088590494 seconds)
    (294/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.052777702 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071913541 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.151138313 seconds)
    (297/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072160961 seconds)
    (298/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.074410282 seconds)
    (299/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053214208 seconds)
    (300/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067538833 seconds)
    (301/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.075149152 seconds)
    (302/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.052373997 seconds)
    (303/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087409619 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09565958 seconds)
    (305/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068334826 seconds)
    (306/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053056165 seconds)
    (307/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.08691198 seconds)
    (308/309) benchmarking ("sort", Float32, false)...
    done (took 0.127782541 seconds)
    (309/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104656564 seconds)
  done (took 34.744893376 seconds)
done (took 35.618943793 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084508262 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114221375 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075283594 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.114698379 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082074724 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101168178 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074092503 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.100358308 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081337235 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.104650989 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079625356 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055386581 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097814697 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075484098 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096544524 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093189142 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.101075098 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073991963 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073626667 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08813954 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074805465 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088024576 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068539983 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055958362 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099887373 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073746347 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.095469026 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075828251 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067049969 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.088684603 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070195842 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073456863 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087757331 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079778735 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094315715 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074476383 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075403855 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.09874422 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068846708 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087743028 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075012187 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066610321 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.094852832 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074371574 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.092966723 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072195196 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074540691 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101135456 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09318582 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091186701 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075194854 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.098861145 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077598335 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072626115 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092291593 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075338232 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093173902 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094458578 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.096404869 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0695118 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074500626 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096830573 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072282675 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095940871 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075044519 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075743822 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098502358 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072194239 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097547797 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072459261 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066202046 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.096920928 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070485258 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.088141741 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077027588 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077232905 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086854512 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07281602 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073452036 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.095094136 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067144765 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090145183 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068183626 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072909306 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090452351 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055984889 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070091308 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093442897 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065986359 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074053986 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.094481568 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073600434 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.09023682 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077384056 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066281754 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093598257 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067804134 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066000295 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090258533 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070647157 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.08792592 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069428738 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075283479 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089274553 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072430109 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.101738968 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065627646 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072775222 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086955248 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065841766 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102999892 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076232354 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06705257 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089900957 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065648631 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073559137 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087798641 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066779486 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065207832 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088427798 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072618823 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087311861 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068984956 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073932384 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.101213324 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.070326654 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069830551 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090621765 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067171659 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093414641 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066746148 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066793405 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.089449771 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064352898 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068616902 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088961186 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073862289 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068388776 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.095985461 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068260546 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096798899 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07131888 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072186797 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093485621 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066390544 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059419485 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090893164 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068807539 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067575624 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088369602 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06848697 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087417298 seconds)
done (took 13.195556957 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068769125 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.168775303 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.125124444 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09669671 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.110072199 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066807979 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.099375904 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125960577 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068993896 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126338475 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08848128 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.108271933 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114919279 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088530432 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066897606 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070181191 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.09050952 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089863688 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.125411264 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.108409256 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.13962586 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065320914 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.12007207 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09048786 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111118175 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.126369938 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066963203 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071561212 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.09176752 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09329439 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.108325984 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070752561 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066776782 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122635412 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.116129514 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084515813 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088655796 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08484211 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088624701 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066934782 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.112797726 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099737424 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10395424 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.104361463 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07059721 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069594586 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090499377 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085646576 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.11261521 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.102853424 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089095374 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132895337 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090941857 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082980154 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065107269 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.109618096 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104143893 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069378444 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067247124 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091633133 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067278558 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070230769 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.11092556 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.11414091 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070744977 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104222249 seconds)
  done (took 7.198122509 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086369531 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.11539405 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084714622 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107034832 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067088037 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067719659 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.089835201 seconds)
  done (took 1.548972038 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06867771 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089779582 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112734827 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090870763 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108849728 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08769853 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.099216338 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068114071 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106110938 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068782921 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088161788 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127487598 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090324482 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074135001 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091821317 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090597234 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091420472 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089628703 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071211564 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113191825 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069706775 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.10987922 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.06956655 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068389373 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104255503 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067910383 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138822619 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07322603 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091240322 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070490093 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066106965 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.138939455 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104141417 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078384821 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067173044 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105876839 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082878833 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087703718 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08426534 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094930474 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083120629 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068329479 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091417803 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066276344 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071325414 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100935166 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068970072 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090934948 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070587325 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086949836 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090839054 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08208676 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090627186 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072332292 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06900991 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095589477 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077545456 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090562334 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088622974 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06859836 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107568595 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083919363 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105300138 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083762829 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093216015 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082570065 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103783347 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070497889 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06939448 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093280752 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084543787 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088251364 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069628876 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078810357 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091280367 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092090405 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.114196317 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069616232 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100298795 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067853469 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06845981 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090759005 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091642557 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094002362 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068742126 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072122943 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093298308 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066437417 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067116049 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.094866274 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06648629 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090798781 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070966429 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069098385 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093163989 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085010526 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.091251358 seconds)
  done (took 9.283992246 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071591582 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069872879 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09216583 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068774592 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068519322 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.091481775 seconds)
  done (took 1.403004889 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099815497 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.091939761 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081794437 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.0949082 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106823972 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104316104 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083388642 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105663483 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085707981 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102120523 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082680005 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105729495 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089458323 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.0963571 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083225568 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.095369832 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083409366 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099986088 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079622108 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096893494 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088496605 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.095977062 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073622909 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.107170023 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071205035 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073256861 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100196196 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079958939 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.102629964 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082459889 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.09623152 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071363746 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094423474 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082715866 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.105240484 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072786309 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095286518 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072204446 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099459452 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071136445 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105822678 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074176087 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.10077071 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.072892546 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.105029189 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072577056 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07220576 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099316329 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082922357 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.09417929 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072108882 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096242353 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071625918 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094643011 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072483417 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105800054 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072610985 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.105676812 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073615771 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073038607 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093804594 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07117819 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10484958 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070958065 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104468966 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072169588 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095254657 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074145256 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096276385 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074198962 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.094212335 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071305878 seconds)
  done (took 7.289190892 seconds)
done (took 27.64742577 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.648626503 seconds)
  done (took 1.586615982 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.775882519 seconds)
  done (took 1.716135725 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.752210155 seconds)
  done (took 15.697562041 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.60973789 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.761093821 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.804131917 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158178729 seconds)
  done (took 3.270819286 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.876198444 seconds)
  done (took 1.836352209 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238743089 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.245170289 seconds)
  done (took 1.427695679 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.722402497 seconds)
  done (took 1.67135106 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.275484904 seconds)
  done (took 2.21925427 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.324392752 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180941784 seconds)
  done (took 1.4595069 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.515516753 seconds)
  done (took 1.467924029 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.507777164 seconds)
  done (took 7.46457322 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229740298 seconds)
  done (took 1.198043023 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.268153902 seconds)
  done (took 1.223343345 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.094797473 seconds)
  done (took 4.05148203 seconds)
done (took 47.239623011 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080326968 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081384178 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103521124 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079611522 seconds)
  done (took 1.29343019 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079789086 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073580028 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10019074 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073443763 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101076791 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074626205 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.097774153 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077517194 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072866866 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097271729 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073833194 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.09521009 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076174227 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.097900576 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071422502 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076376504 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100145762 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073685051 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.098776376 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074569688 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07124768 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098244387 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075957162 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094903002 seconds)
  done (took 2.989179239 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.08038219 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072818785 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097474472 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072610405 seconds)
  done (took 1.280376335 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079584027 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.115650973 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08944703 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099864834 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093022783 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.110661424 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070981859 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069777487 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094928222 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077828994 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091370374 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098281492 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.110671528 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078020375 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102300617 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067600464 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069296278 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.110622253 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078695259 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101325389 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071774113 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100166595 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06893566 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091033628 seconds)
  done (took 3.106205091 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079683246 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103245589 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.101430098 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089523296 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.11531185 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067122579 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.099770758 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091278926 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.148692688 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065772092 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.093955521 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066885428 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.095883407 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066187777 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076981577 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.133228763 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111590774 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.092406882 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096553824 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.089269299 seconds)
  done (took 2.851267864 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077479091 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070495467 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.0888178 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068780719 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077064185 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.096242431 seconds)
  done (took 1.44346155 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071256927 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068025786 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090759705 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067429049 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072970188 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090114925 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066937488 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068100258 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090872655 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067584966 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067629213 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090159474 seconds)
  done (took 1.873029664 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.419276747 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068935409 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.092540835 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066742201 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071607594 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09018708 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080255707 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069157303 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.114066845 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.0676326 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.090882241 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069873155 seconds)
  done (took 2.270081556 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257252013 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078376562 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317852681 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165287638 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136989118 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154084015 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104996791 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139200081 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.193993068 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136762849 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198467619 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217417575 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132378281 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165282911 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113763537 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.132098798 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182607108 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21977084 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128424443 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19737787 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20349687 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154747052 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177599345 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12720844 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133365271 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145211779 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071901148 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104612486 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226962379 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158779209 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198053463 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135884534 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11966031 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203457836 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216535693 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192761057 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161005485 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085571961 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.156492615 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.161825689 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252972875 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114089637 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217812901 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107853316 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105676836 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169228541 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144201699 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.143755635 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133729031 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11485138 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170876492 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233103272 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.187673722 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087715417 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136525863 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137789642 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.141082686 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126110982 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240881395 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190945527 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179759304 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072163758 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121564345 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185230872 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159348239 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.139849722 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.176169175 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093410902 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191052016 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186125933 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141890157 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197035209 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.156533237 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112999662 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146086008 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169007464 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152007689 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227546089 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151874093 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073128852 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172647661 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101559118 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107022218 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.16699388 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07683582 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228962748 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123059576 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.137084232 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114158221 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134789821 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135327084 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214184654 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174763423 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12882937 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066216599 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128186847 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.147519164 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1969708 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088598769 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134431372 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144407891 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.103211191 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162751074 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.099246891 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150890097 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078999045 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149955715 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161332715 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100476378 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150782976 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127172654 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102653116 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185344821 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190992832 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115100412 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107008423 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197532508 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153634291 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.129848796 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198299774 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187191228 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.126244985 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125331159 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173599535 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238799145 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115471529 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221175528 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103512032 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107681365 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.113483466 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15357424 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138925307 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.147243892 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083357002 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.151514603 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222092819 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099888141 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096348741 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185846587 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082421823 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106013468 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138577907 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099828795 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.119519174 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.125707158 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131688342 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167043724 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15330806 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133545541 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150832958 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123988697 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218567055 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113984639 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105350246 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128717367 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094818166 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.163042799 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19033348 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105332599 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222821765 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.152725324 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129625274 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145772347 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083909889 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167774158 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104239069 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071834082 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194761589 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137238563 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111082621 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.207886891 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129531425 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.154050057 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.151744026 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159211809 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158626522 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.184056898 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107294 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112610686 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138853665 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152411308 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.099377133 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094227494 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107874211 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129191597 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119283762 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084488748 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168416182 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178031004 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098352346 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138725077 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123015097 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177650526 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102329255 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156767712 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146284956 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12136386 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.183295642 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210796482 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163201385 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126327705 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198216982 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072374008 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075643508 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.115631497 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155033793 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109447754 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084242692 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141708651 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202514884 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156607115 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162057644 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136403486 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148037456 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212662873 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072298873 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143222275 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176822534 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151781302 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.153963366 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113880295 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099854149 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199669216 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129923349 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244209909 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143194433 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15198716 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180598695 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.129826339 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105680502 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103646574 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18988828 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130663128 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179433116 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129659289 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11414331 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136609817 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.082304441 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130377816 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153595467 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1452389 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1876591 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143493475 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159837807 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103279673 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141322981 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152206472 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148278975 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065730233 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14734849 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219761118 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120852223 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14569613 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184007538 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10549549 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.150774119 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234865189 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173795992 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110462564 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134150624 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150220209 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157188814 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14651833 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169668521 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13463843 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162799034 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137877335 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.110662521 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08846426 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12504765 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13358866 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.121976207 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139093935 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.144924544 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095126604 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183826345 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138583431 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136704109 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145393117 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100901352 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118444735 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098402526 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23277643 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149181815 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23160619 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.128758153 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.204598085 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19853496 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102101057 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080193411 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.107161008 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170001543 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110850184 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162225626 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097213605 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130955009 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154386495 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196397072 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096482934 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.094457359 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136428998 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161431089 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137863838 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125481995 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107216718 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220133719 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131298565 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07968997 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153325353 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132082407 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128934366 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234266716 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062953265 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123444929 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07696392 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10757113 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157357947 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212287321 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083667591 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.152710399 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145399683 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148834561 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157738768 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12579298 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124043438 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115222416 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203560172 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156564127 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.116108094 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14025552 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159567567 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212208781 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108130192 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.120774971 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228518385 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185044841 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.220099978 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.115332205 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142973911 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142598687 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138729039 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17059768 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110435211 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224501851 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084343391 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190942657 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130432793 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09447652 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181338568 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.09840098 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115962416 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178295553 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147309065 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108433385 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104976316 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140903813 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151337294 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103599411 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100784076 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183819157 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.09914314 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165547092 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224188381 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083193408 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133635744 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122046664 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083094987 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132395876 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129934256 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113273959 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.121168111 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223601376 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.116739102 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206006687 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170353419 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141950216 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191212154 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101680591 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662499589 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.1055791 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184299208 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144402685 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260216822 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099916989 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14865532 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138267654 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149038853 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196115343 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132197423 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.17851637 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18496108 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.149541888 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080590975 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131230596 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137165201 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.115738398 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133447004 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142120284 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141862444 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.101663617 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.173061965 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155665147 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083038084 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122140382 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215129002 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145037029 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172651285 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169157649 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11185535 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146396471 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194607486 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081999316 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.149544856 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210543389 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134495851 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125444983 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082312991 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.131808125 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228302384 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073985269 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216885416 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151862372 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13762583 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141809348 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146000786 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186615645 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13237039 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153601201 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096638355 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.164318754 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143354948 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086012757 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.1038041 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108150523 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137453384 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.125676151 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128810095 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.141679666 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186041918 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071708141 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121009083 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128441606 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169992443 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232585839 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.115473556 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083747029 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144236186 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138024945 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.166281101 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152534091 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.0827409 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109219654 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082943425 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.137173169 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136942422 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141353171 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104463357 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137439545 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224602016 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110074658 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226035187 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121496041 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135018369 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070907339 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105420657 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122223279 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097008537 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128733449 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125302227 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228791654 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099427603 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.116098059 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118657228 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075036974 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109205046 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158233126 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137520578 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148789594 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122476022 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064831068 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134313346 seconds)
  done (took 70.57386158 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.133276954 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104602 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.118544199 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.174015955 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.146620879 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237110338 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.18200652 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223084815 seconds)
  done (took 2.357192757 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071485674 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.117527487 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102946847 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.114390971 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090225509 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069733992 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.292542926 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.108666453 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067551058 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114414453 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.117495926 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09251073 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.456066898 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067856745 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.092072112 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.085217132 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068634505 seconds)
  done (took 3.157139515 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.428125706 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.613940852 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.449107919 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073894723 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.776412661 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089515567 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.200662553 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.161828423 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07185212 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.420092823 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.744453285 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131638921 seconds)
  done (took 17.201179692 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077098347 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070459388 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109487413 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084642158 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.09789479 seconds)
  done (took 1.485992532 seconds)
done (took 112.832771375 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08186971 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.355820553 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054744971 seconds)
  done (took 1.48265264 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085935598 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085670688 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111355765 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083662923 seconds)
  done (took 1.415169561 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07621815 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076455433 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111549752 seconds)
  done (took 1.308690037 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.28009946 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165082579 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089569269 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084607241 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078527449 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10424478 seconds)
  done (took 1.314141792 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074561681 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075410678 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099524116 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.0768661 seconds)
  done (took 1.364332818 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077585024 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053387133 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055543553 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.081596208 seconds)
  done (took 1.313789829 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091061901 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.105561277 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.0816539 seconds)
  done (took 1.320499348 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109155616 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.111752899 seconds)
  done (took 1.26969312 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083157409 seconds)
  done (took 1.124128211 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094268916 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.139391558 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.155110778 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.135539317 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.167039534 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136253106 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.11223941 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088810206 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104388879 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.114261741 seconds)
  done (took 2.293834292 seconds)
done (took 15.856716408 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080428294 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.386969191 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362877548 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116165435 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668870207 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35699251 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.001429978 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117417756 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108078652 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093374792 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084886429 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648905847 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.02962763 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324928965 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.01703276 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323511744 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.673911946 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06907351 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068110325 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093717328 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.96182058 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093266585 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069069154 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068786195 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.673485446 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372129661 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093599945 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324118117 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068354025 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095743567 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355632945 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093973665 seconds)
  done (took 15.932973425 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072354101 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.143213194 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07444014 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083882789 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096238433 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070396987 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097539271 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070111708 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.145935994 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068911764 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110649415 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069312728 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072451856 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095047743 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087349672 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095194112 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070041091 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069215373 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094660612 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069844004 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111767945 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069386681 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068258965 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094613108 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069220528 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106158903 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070142161 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068484352 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094661592 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071127253 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.096821372 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070322351 seconds)
  done (took 3.794706697 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117622922 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152972165 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075694932 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128126736 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11352207 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096996266 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.169058288 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094124215 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.149334561 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068563598 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111086382 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068524106 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126792615 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070247737 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113691143 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.0694237 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069173655 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094221459 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069132995 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094516558 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087792282 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06844697 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094306108 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069232782 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094772682 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082532714 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069091941 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.097572856 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06895385 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096442015 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072636146 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069607448 seconds)
  done (took 4.079758026 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073754724 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075066995 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108792454 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.0840529 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095881353 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072573414 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073126075 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.095935968 seconds)
  done (took 1.736110364 seconds)
done (took 26.582368975 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080619165 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070662413 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099205175 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082127941 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.098560635 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080002809 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067617731 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100639605 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076181151 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073500382 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.101691872 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068322104 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.097861415 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068481113 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074664339 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.094867256 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080392245 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098366168 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080460542 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.105749797 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071515685 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075487797 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100643866 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079980728 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105208628 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080299387 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079101015 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099527764 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069339911 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096503926 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077347324 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110152626 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069643207 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080129232 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.093889717 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069422879 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067690375 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093774434 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080473971 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100806805 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071764179 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100598667 seconds)
  done (took 4.617167497 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091072676 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092115841 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111848891 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062294265 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.093800014 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.063499402 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089662106 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.087409524 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062997315 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.115188348 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057224578 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058672475 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.08543242 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055639023 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058988574 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057113684 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.087298087 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057480631 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058635716 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.085114812 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.061815466 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054978167 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060962125 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.085699335 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057758215 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062772834 seconds)
  done (took 2.967935908 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077187882 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082754522 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.121860601 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.154475355 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105692483 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.102231889 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078960437 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.085601271 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111209138 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068069481 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.098166389 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.097465453 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08684457 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101234459 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068743719 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.109355519 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082948893 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069785868 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101498699 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.088782184 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.110898668 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.079221999 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.114612255 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081208489 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067251971 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096078892 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072117516 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.107531351 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073357912 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077118123 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099232483 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072472778 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.095937334 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080129057 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.097223946 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069834625 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.086737163 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104402467 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077277997 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.094608943 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071456169 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069396269 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114740808 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.112021055 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.093686049 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075010894 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075290661 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103919749 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067876201 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11191083 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07785322 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067500959 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.097622354 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06831604 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.093996993 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082850235 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069831394 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.096223783 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077748519 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.096579927 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080599988 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071395032 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109636302 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068066881 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101550896 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067842933 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069614948 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093334401 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09029219 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094607596 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108607714 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068677237 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095514957 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076966874 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101866098 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074787225 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068750048 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109934921 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07767895 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.097493063 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077693338 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.097567187 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071637914 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.0861248 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.096480097 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070355287 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069089167 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100330565 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071331413 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095987098 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082359509 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068337013 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.096883025 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085091633 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093589991 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07031548 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074921063 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099324584 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068718239 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105865397 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074394438 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06859621 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104015336 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068562008 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.09693654 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078646023 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072706333 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.093445887 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073180729 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099460444 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069137948 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069241424 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.097290103 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071273482 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.102775042 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075405436 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073653126 seconds)
  done (took 11.236388095 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.192607568 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.184430405 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071314316 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.177550973 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077115155 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.107444856 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.177972603 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097585538 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.09686783 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069838504 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069553203 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.132352422 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.125740659 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.109950877 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.106973122 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068904792 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113181128 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.108219605 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.179870935 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.174891316 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.114263909 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076890741 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070447629 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.096708379 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070908163 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078437318 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.111877694 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102355866 seconds)
  done (took 4.235952519 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082876353 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.123131314 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075507714 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.086152318 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.118202802 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068889484 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.099748432 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070575491 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.107027611 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080416749 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095263372 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075089385 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074852316 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.103688105 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06925554 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104382968 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077456418 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070638817 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.098420457 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072760609 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.100681119 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080876533 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072390785 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.095549948 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074935668 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.09482648 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065496753 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.112552796 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069049392 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.113710064 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067835843 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07430316 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.105016857 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070307524 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.0683306 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.099136443 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070423209 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098015728 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070520032 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067251969 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094629368 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059351037 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067592175 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108217083 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074863189 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087589152 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074885992 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074170247 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.100882185 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066653697 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098798641 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071488738 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072182793 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103596256 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074663173 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073300497 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.099821351 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.068253395 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101928932 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071384072 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065832544 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.093860445 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073290531 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06651843 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.103659907 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072792412 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095398616 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071575308 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072984224 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101826453 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071263553 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071111294 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.093563948 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070735396 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099837252 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074035142 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072135592 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093969775 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068692992 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068368237 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.082846512 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06856414 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054559559 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098301674 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067462723 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067271454 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097777722 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076861417 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.107549149 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070217653 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.100992905 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069892671 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067730187 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098695384 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063855097 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071430547 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.109247216 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08343966 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095613031 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066594564 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108653228 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074094478 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067548316 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.084293575 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07646939 seconds)
  done (took 9.770070808 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.092862385 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092470373 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.0978464 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.081750092 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.121473523 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092666018 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103040245 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075573617 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07040533 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.112763432 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069798831 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.104115384 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.072965301 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07729194 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.119987313 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076846256 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097591442 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07848712 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.077441103 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.130962977 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081834797 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.110370178 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.078811203 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096407628 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074754316 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080154523 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.123101742 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.078892231 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.104587796 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.083503358 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079162139 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.122372728 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.083257155 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099924082 seconds)
  done (took 4.225393329 seconds)
done (took 38.099780722 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.14610201 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.336932637 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.125938567 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.967482135 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.132805209 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.13274367 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.135123812 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.125538994 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.34861298 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.124021507 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.351202002 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.678063231 seconds)
done (took 58.675534293 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.191005763 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.262556077 seconds)
    (2/2) benchmarking "String"...
    done (took 1.393658126 seconds)
  done (took 3.730087776 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.486913667 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.071075581 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.40729052 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.122363044 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.121523761 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.576743674 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.625468944 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.95500152 seconds)
  done (took 26.946743277 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.126388802 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.464983518 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.259212522 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.256486919 seconds)
  done (took 17.176392079 seconds)
done (took 57.59794794 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.122645634 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.166926118 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.134172232 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.107364946 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.221893458 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.143913531 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.388860441 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.351708923 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.122407916 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.106662961 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.140419266 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.120806874 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.129689285 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.423004051 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.126194043 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.123622217 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.211269995 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.583149041 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.478909184 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.13257834 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.148905511 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.149473865 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.124629215 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.121678264 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.122097939 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.126552248 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.118453438 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.127071259 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.062714093 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.125687412 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.194413507 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.642695897 seconds)
  done (took 188.469411313 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.123372005 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.169854449 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.28741757 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.151977187 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.560450553 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.332661129 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.285838063 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.645965703 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.136229804 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.148317463 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.35711847 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.124071539 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.422511859 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.099937297 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.133576265 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.196433358 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.308387574 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.41996498 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.137620589 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.419764322 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.139041219 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.349942773 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.267352824 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.319660177 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.134896108 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.153108624 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.121637922 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.13401158 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.313544528 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.265280204 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.143027123 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.16245019 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.648852929 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.98082571 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.145333139 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.146586698 seconds)
  done (took 146.954852573 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.384702785 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.123783876 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.121660156 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.124994638 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.149776779 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.123199161 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.611607716 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.608581325 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.630580815 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.442387811 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.181897178 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.279311992 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.121858109 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.123365496 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.122896908 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.213865436 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.134636912 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.122859217 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.141569462 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.152004624 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.125885313 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.124571701 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.609638434 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.138993537 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.22804336 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.131675573 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.124736783 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.153914562 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.517706066 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.123503679 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.126250753 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.151759776 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.434764534 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.164647968 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.122722397 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.366887346 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.515265826 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228704147 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.125879946 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.151113424 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.12570862 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.387809066 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.124268038 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.125357192 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.129486986 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.649522372 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.124117233 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.613825098 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.128018235 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.126044021 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.960312771 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.124410285 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.126896507 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.670189048 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.451215932 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.124442402 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.125891306 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.129581469 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.125504433 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.126523886 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.155200795 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.550601488 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.22413109 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.125052988 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.129628899 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.152420304 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.127239166 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.344687594 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.123236239 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.673010578 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.180243967 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.238504391 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.61692241 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.126750474 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.217928386 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.240669753 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.124832219 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.126946212 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.128296541 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.127316273 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.231157198 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.125915864 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.493346245 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.131177679 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.128456322 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.186019352 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.218911236 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.125496188 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.381229707 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.130169113 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.128543311 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.770086812 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.216226317 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.124955118 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.127896962 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.12805646 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.4959292 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.614250514 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.259442916 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.130105297 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.894656204 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.132720247 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.507096296 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.596998208 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.645886171 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.125200382 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233294557 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.129341743 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.129071205 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.129058974 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.157104215 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.128673415 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.187778859 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.126578852 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.524242176 seconds)
  done (took 336.300276039 seconds)
done (took 674.177295221 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.765496363 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.750814169 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.857428836 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.748290399 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.730497939 seconds)
  done (took 9.923364762 seconds)
done (took 10.995975245 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.300929374 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.297756354 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.179655368 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.303948597 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.153612304 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.314422492 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.277922551 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.146934875 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.224762478 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.196430684 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.223987694 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.1724217 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.155902221 seconds)
  done (took 17.021455888 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.437544138 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.425571307 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.196800866 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.433380644 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.171211745 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.444256883 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.323668645 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.33910609 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.327929691 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.145003281 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.145713429 seconds)
  done (took 15.463610946 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.437960395 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.436158107 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.198566193 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.440133547 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.172210718 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.433639355 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.329322447 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.332360296 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.32004375 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.145249176 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.143201769 seconds)
  done (took 15.463134828 seconds)
done (took 49.020755469 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.140086818 seconds)
  done (took 2.212234121 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.173349845 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.330721754 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.151031648 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.145539297 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.141643592 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.143936766 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.144942568 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.142164539 seconds)
  done (took 10.449450795 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.14069055 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.138342029 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.140922523 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.138063048 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.137841219 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.1388216 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.140887308 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.138106254 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.137851253 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.140984475 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.136569464 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.140459854 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.141771941 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.14066124 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.139563954 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.140238293 seconds)
  done (took 19.306886747 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.138343192 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.137591319 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.139370811 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.139058353 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.138680234 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.139030324 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.140977598 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.141101093 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.139103541 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.138480036 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.139513005 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.13775286 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.139652136 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.139592076 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.139642219 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.141486423 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.140011812 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.140015714 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.143534479 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.141002852 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.138821292 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.138980381 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.138811949 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.141815922 seconds)
  done (took 28.430360372 seconds)
done (took 61.4720264 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.046312459 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.659743611 seconds)
  done (took 8.782244682 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.141366665 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.142874411 seconds)
  done (took 3.363457954 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.141513688 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.142033677 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.141987818 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.141829487 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.14296524 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.143101349 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.141376492 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.141740197 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.144499807 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.141977524 seconds)
  done (took 12.50012026 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.141707742 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.14180335 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.139690246 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.142092169 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.143601213 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.139325297 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.14223443 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.141822198 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.142981052 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.141602526 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.142273849 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.140242697 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.142722442 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.140765665 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.143907057 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.140036321 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.141618594 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.14127394 seconds)
  done (took 21.627142499 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.141719704 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.142343553 seconds)
  done (took 3.362270405 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.139486139 seconds)
    (2/7) benchmarking "second"...
    done (took 1.139601844 seconds)
    (3/7) benchmarking "month"...
    done (took 1.142470908 seconds)
    (4/7) benchmarking "year"...
    done (took 1.140777159 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.140469894 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.140845529 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.140385521 seconds)
  done (took 9.060733371 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.14143458 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.322871339 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.401863471 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.737972508 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.144674378 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.147667591 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.014998232 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.146404051 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.14892323 seconds)
  done (took 13.284988391 seconds)
done (took 73.055478462 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.119088447 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.136988894 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.960632336 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.142871824 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.150747835 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.479778122 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.15203828 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.254608105 seconds)
done (took 36.475180543 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.14140158 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.834354325 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.836624765 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.137375228 seconds)
  done (took 10.887514296 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.123849979 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.991478757 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.13442032 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.072384962 seconds)
  done (took 17.403066645 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.716737871 seconds)
    (2/2) benchmarking "read"...
    done (took 1.467878073 seconds)
  done (took 4.263447116 seconds)
done (took 39.774016438 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.144066546 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.145170511 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.142961243 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.144089411 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.142602239 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.141596846 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.145186351 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.144073679 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.145230825 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.146996778 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.146278087 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.144984851 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.147046639 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.143153965 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.139656785 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.146317898 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.142384112 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.14421665 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.142900885 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.143700785 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.143073517 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.144737782 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.141293755 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.1431397 seconds)
  done (took 28.534846182 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.144721205 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.143127186 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.145787628 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.145673737 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.143615416 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.147246145 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.146409567 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.145294429 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.147376694 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.146698701 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.143919411 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.14416281 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.146947196 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.144748323 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.14639496 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.142452838 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.147485379 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.145440743 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.147971647 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.144734301 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.145957353 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.1448622 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.146656666 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.14941559 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.143161565 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.145473865 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.147269401 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.146879519 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.14923008 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.144836281 seconds)
  done (took 35.45474674 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.151000252 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.154237709 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.146999494 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.147665894 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.14809137 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.14596205 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.148174102 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.147072198 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.148051095 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.147925383 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.147998087 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.146484728 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.145433469 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.147809666 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.146773818 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.147953403 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.147455455 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.145448651 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.146757808 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.147119651 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.147204254 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.147846916 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.148553191 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.145953024 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.146839038 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.148383405 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.146668086 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.147483301 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.147622504 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.149355973 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.148322563 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.145939362 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.148047248 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.147880765 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.147855484 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.147913126 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.152161853 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.154197686 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.147799148 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.14834549 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.14849251 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.146058279 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.149211137 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.146651702 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.14856108 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.148969578 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.150545703 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.150466224 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.149168474 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.149945172 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.149939947 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.149366342 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.148880415 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.148063534 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.14833801 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.148756236 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.149118378 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.148176276 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.149767227 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.148958798 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.151334111 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.151202549 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.14952798 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.148900642 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.148725673 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.148540562 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.151274435 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.151912932 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.150771965 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.150913523 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.149015261 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.152154547 seconds)
  done (took 83.78564723 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.150129997 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.147834778 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.148824731 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.1456489 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.147268739 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.152210535 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.147839217 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.15088791 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.149243935 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.151103876 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.151354599 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.148235661 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.148954834 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.153389464 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.15067109 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.150005013 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.149896019 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.146839178 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.150798461 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.150991784 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.151484709 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.148498099 seconds)
  done (took 26.378045673 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.151554296 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.152278935 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.149406004 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.150802001 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.147196345 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.151863311 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.151893543 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.151763149 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.152508221 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.148738067 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.14930272 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.151599681 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.148107147 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.14814217 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.149363689 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.150044261 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.150598914 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.148656772 seconds)
  done (took 21.792267424 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.150205343 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.147528529 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.149403782 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.14991101 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.149684318 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.149848013 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.149880345 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.149491756 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.150069072 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.148093002 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.152772935 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.152339164 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.152534249 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.14895226 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.153686679 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.149663783 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.154092109 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.151536298 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.154056406 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.152745656 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.150815255 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.154136547 seconds)
  done (took 26.409838837 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.155181622 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.153831163 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.152591438 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.152012482 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.151912453 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.154395198 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.154211116 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.151300939 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.154167476 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.153719002 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.152302407 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.155115159 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.152393286 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.151690277 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.150238606 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.153385806 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.154688371 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.153785726 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.154508962 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.153369411 seconds)
  done (took 24.152975921 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.157204016 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.158526073 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.156789656 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.155681903 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.157079904 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.155388768 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.155023335 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.157060861 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.156562159 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.156114183 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.155524847 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.158223325 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.156706971 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.155172018 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.157432592 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.156734379 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.157502451 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.156976118 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.156215523 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.157642271 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.157834425 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.156309392 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.157455008 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.157035037 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.157055375 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.158370402 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.157869159 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.15759565 seconds)
  done (took 33.483824958 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.155487486 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.155974172 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.153864841 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.15487742 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.153654534 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.154813207 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.155175777 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.154866289 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.156225435 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.154564155 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.155945995 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.157312046 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.158046538 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.155569469 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.155909602 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.159979249 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.155253891 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.154650199 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.154500818 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.155051434 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.155649393 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.157419134 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.15788382 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.155899304 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.156407213 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.156633948 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.156744157 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.155801262 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.157448245 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.154015592 seconds)
  done (took 35.76801225 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.174383632 seconds)
    (2/2) benchmarking "in"...
    done (took 1.175086601 seconds)
  done (took 3.439701818 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.152932457 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.160110364 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.159259172 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.155616629 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.155002884 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.158445814 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.156566836 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.154815688 seconds)
  done (took 10.346004084 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.15574009 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.159888748 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.157962608 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.157934751 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.160144222 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.157472052 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.166317348 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.171755921 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.159083819 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.160994643 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.164154993 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.164512373 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.162080478 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.158665282 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.159233819 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.159886653 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.158683943 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.159612725 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.158752303 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.159443039 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.16092068 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.16315598 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.162310611 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.157339444 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.159484287 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.170570731 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.165570715 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.159921467 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.157855697 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.162505183 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.158349386 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.15719622 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.160862861 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.159935097 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.159521704 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.160546238 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.16990041 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.176258662 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.167024373 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.162630043 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.161318626 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.157248954 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.160417278 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.163805883 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.162695992 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.162289362 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.160237675 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.156488126 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.158614326 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.162706302 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.165318436 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.160729504 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.157765214 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.164668728 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.162090023 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.167756307 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.178121486 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.163502687 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.167160267 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.170876822 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.175213115 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.168041576 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.161817781 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.162554114 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.1713559 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.184422458 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.169425302 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.174536622 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.159997013 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.161629979 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.169696208 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.174210124 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.172411398 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.163431853 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.164337974 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.162875505 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.162673564 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.16200117 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.170573872 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.178333572 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.164442136 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.162193485 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.171780413 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.184668254 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.159915948 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.161889533 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.164132311 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.163610677 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.163913657 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.172749758 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.177161716 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.162651254 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.162860007 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.161325086 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.163384117 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.163556068 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.162599835 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.162420216 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.160611203 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.16514241 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.163674578 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.166920479 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.171249186 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.163948348 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.16469353 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.171086101 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.164607793 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.163931154 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.171416393 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.16276762 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.164692758 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.163432606 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.168132931 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.159479452 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.165333586 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.171775195 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.165276897 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.165972266 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.164439941 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.164271426 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.174151419 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.190604826 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.166978029 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.164147174 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.170895409 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.175486525 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.164899862 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.167638365 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.164153435 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.162761906 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.161091024 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.166166536 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.163885808 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.166143719 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.165984245 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.164231966 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.163608264 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.164384852 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.164478546 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.16534876 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.168548998 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.162428414 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.165850701 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.16732801 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.166819875 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.166620823 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.172505091 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.166150322 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.165094479 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.165309028 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.163336768 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.164744399 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.165539237 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.164750735 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.165603214 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.165476296 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.164676637 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.167071896 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.165652069 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.167217001 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.167091613 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.167619246 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.166848152 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.166688986 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.172518863 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.166288568 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.164154857 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.167704215 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.166992916 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.165396852 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.167494674 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.164032809 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.170604871 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.175794008 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.166736505 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.168831222 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.167569623 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.166742433 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.168136177 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.167992248 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.170197176 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.173624571 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.168661842 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.173124115 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.169109627 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.16691785 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.165379091 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.167193847 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.165616266 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.16796765 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.169443688 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.1742629 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.179095332 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.17356006 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.168026144 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.17204677 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.167381282 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.171232023 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.170339264 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.16880399 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.167693685 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.168260707 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.168293878 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.167342918 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.169764434 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.170198261 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.166628313 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.166574035 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.168188431 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.170192989 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.168203343 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.167198826 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.168092038 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.165102178 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.167263711 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.168154422 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.168252342 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.163677849 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.167397188 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.165519098 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.168047043 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.170154984 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.174148839 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.166625744 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.169187656 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.171089871 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.169032168 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.167086054 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.166884389 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.170390387 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.170288487 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.174550168 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.181924965 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.168365926 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.175551897 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.182720323 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.168428817 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.171678403 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.170619682 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.166243764 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.171214504 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.1761056 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.169131786 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.169274368 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.169540201 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.168587988 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.171135091 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.175096642 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.168264102 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.16872574 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.169618486 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.172237103 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.169024392 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.172032132 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.173190578 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.171124517 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.173838906 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.168363547 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.170445118 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.171083245 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.171010398 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.171942528 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.170727542 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.172783344 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.178124169 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.174985766 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.170366713 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.170653454 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.170057622 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.173371757 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.170645353 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.170724097 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.168834299 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.182503331 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.178316756 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.17560287 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.170135343 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.170431971 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.17588398 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.174127051 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.173005335 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.171867695 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.170701175 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.170789712 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.168403461 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.169554783 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.169865259 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.173026899 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.172079028 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.172743708 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.176702533 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.172662668 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.170534135 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.173138624 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.172653092 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.173325093 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.170017587 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.173249021 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.17169467 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.173103974 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.174686567 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.173437295 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.177583617 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.188779219 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.172411418 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.172390127 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.171354162 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.172309906 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.172837744 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.172979669 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.174435175 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.180166416 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.176117975 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.178793852 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.173251293 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.18058596 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.172757981 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.173550619 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.181014106 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.16951577 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.171362379 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.172644218 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.17298497 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.178446936 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.190529301 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.173844764 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.176869143 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.174555188 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.175128857 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.173693541 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.171109004 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.174391315 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.174438713 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.182366456 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.189463923 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.176193208 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.175831588 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.1732186 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.17565902 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.175800902 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.175599502 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.175990933 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.174192189 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.174883505 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.173255413 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.172861406 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.172082941 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.174601465 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.176607466 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.172921098 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.175841555 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.182636463 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.191893459 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.179341837 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.174138614 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.181379782 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.176805389 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.184169071 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.19280306 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.175324529 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.177119508 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.175406507 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.176965318 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.175402397 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.173819259 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.177202387 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.176216758 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.178351487 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.175829643 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.176127624 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.176066309 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.175535622 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.174095635 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.183624411 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.198995712 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.174773546 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.179761269 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.173077872 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.176575464 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.180580153 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.177440267 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.174202661 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.178341267 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.184035204 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.182013913 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.174273747 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.17651877 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.177678383 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.17609527 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.174981038 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.177130741 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.176736635 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.176141902 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.176248492 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.17577919 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.181439905 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.176939515 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.176517004 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.177161236 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.177094295 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.186915645 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.177097458 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.17785779 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.179790197 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.178402071 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.176209688 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.177336504 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.179361807 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.176102315 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.17841945 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.177636186 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.183918619 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.182644701 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.178726752 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.175243705 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.176490079 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.177415047 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.176980904 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.177828587 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.176920555 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.178540959 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.17885963 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.176395468 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.178221067 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.175204757 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.177580394 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.176105728 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.17701508 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.179567982 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.184046979 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.177005425 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.17426385 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.178198462 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.17756475 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.177320097 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.177941008 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.185203205 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.179824017 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.188976924 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.186143048 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.183147435 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.179154461 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.181046222 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.18582753 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.177363949 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.176657696 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.179900426 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.179340187 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.180750506 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.180467285 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.179508915 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.186239689 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.178931661 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.177852569 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.18452444 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.19650532 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.180388988 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.180005479 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.184035089 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.180147854 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.176984804 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.177319404 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.178951141 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.185642845 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.197488081 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.18031642 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.178582623 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.178899238 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.181762237 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.18485474 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.181177095 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.17880508 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.178206313 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.180272165 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.179493875 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.179310858 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.176533471 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.178821475 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.178253586 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.182130924 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.185607974 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.176879445 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.181329815 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.180323969 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.181025729 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.181385985 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.180344962 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.177500279 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.177010624 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.180429161 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.17998687 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.181707666 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.183245545 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.180716464 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.180644941 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.18088784 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.181389072 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.185160069 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.190174463 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.187931619 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.177790208 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.180813821 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.181264101 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.183103475 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.181845075 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.181101317 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.180655104 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.181298862 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.17948989 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.182788286 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.181039734 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.18552084 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.197766716 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.198287251 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.180965007 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.181864925 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.184513539 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.18313857 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.180888145 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.180315654 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.183022443 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.183774349 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.188128411 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.182468065 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.188045951 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.198319978 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.182868037 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.185140967 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.183987227 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.188942597 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.185393304 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.183777741 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.181084587 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.186294413 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.196804026 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.184231306 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.191896439 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.210606356 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.199955537 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.182574394 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.182805895 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.183582736 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.182280897 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.184340243 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.18391072 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.181995347 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.184093254 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.183509266 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.183404517 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.189075653 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.186385646 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.186014933 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.183486341 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.182169981 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.184504702 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.180377047 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.184739358 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.184808386 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.185278735 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.18235495 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.18287611 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.184769981 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.193798167 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.194131909 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.183785678 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.184980742 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.181761663 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.187309002 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.189125381 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.195068919 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.192423097 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.185164276 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.18526599 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.18456362 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.18641952 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.18306909 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.183828825 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.187577707 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.187187773 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.182710719 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.19772719 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.195766701 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.189228364 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.186810767 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.185339642 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.186297904 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.183523763 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.189711804 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.187447056 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.187762225 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.187071941 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.187753028 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.184775466 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.186872335 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.187942482 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.192901122 seconds)
  done (took 700.953518552 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.186786892 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.183510486 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.182821559 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.182149815 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.183584484 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.184226601 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.184035536 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.184127101 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.183281757 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.184199985 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.184988227 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.186603728 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.184186167 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.183295233 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.185511467 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.18509938 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.183805635 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.184830241 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.184629339 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.185041256 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.185611808 seconds)
  done (took 25.995494905 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.188970761 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.187597066 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.186653843 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.18876808 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.186200304 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.188681015 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.18443336 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.18881528 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.187329685 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.185606309 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.188246004 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.188289673 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.186802073 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.186032638 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.185980157 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.187864753 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.190254262 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.18638385 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.188999499 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.18572903 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.189295382 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.186835122 seconds)
  done (took 27.246114893 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.188065464 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.191232996 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.186646842 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.186533747 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.18746542 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.182931983 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.188956817 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.187226309 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.189478159 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.189019784 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.190011808 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.191279443 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.195796619 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.193521313 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.190663033 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.189575701 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.332612127 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.190416896 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.190671188 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.189979383 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.188899241 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.195006189 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.190177775 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.188374505 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.18950656 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.191436548 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.19315095 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.190569198 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.188860074 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.191844124 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.195794221 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.191383904 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.190192562 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.189879655 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.190209479 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.192716716 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.195331656 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.191506091 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.186751914 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.189567646 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.199868585 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.212550103 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.190456515 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.196864253 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.191788691 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.193411837 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.195276609 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.198798329 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.189465393 seconds)
  done (took 59.645836372 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.191116593 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.193079101 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.189145139 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.19016004 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.190944622 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.19155467 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.18933206 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.192752416 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.189318619 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.189134108 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.191825148 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.189722523 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.190051147 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.190679855 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.193880774 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.189563419 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.189538553 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.191423218 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.190616553 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.190522194 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.189868733 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.194089957 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.193998617 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.19292197 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.193772065 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.191053245 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.192659128 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.194406664 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.190131566 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.19174834 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.193800255 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.194181917 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.192716857 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.191093783 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.190154555 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.192718862 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.192094476 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.191966549 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.194377729 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.189756851 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.193829198 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.193656797 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.194753722 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.196871012 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.192687379 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.192392614 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.192311393 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.192932942 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.193413998 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.195093761 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.195581707 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.192643778 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.197609714 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.192986937 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.197201999 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.194903644 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.195069371 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.192989631 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.196851869 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.194018485 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.194128852 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.196191016 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.193400329 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.196006208 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.19574751 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.192525217 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.194326727 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.197134053 seconds)
  done (took 82.236713606 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.198039146 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.196431177 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.198362029 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.195612226 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.197682912 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.198116637 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.195494138 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.198068862 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.194897312 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.197069662 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.197134807 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.196283115 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.198407716 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.196225302 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.198358746 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.199067386 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.198154289 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.195324249 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.195410456 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.198367158 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.196026301 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.195837443 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.197377784 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.197053617 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.197885515 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.196291184 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.195712268 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.196668131 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.194864192 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.196646719 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.198088193 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.197089445 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.196568521 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.197325097 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.197926374 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.197016097 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.198477156 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.19842006 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.196408386 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.198539723 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.198604525 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.198855692 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.195334248 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.196550223 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.195238259 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.196613079 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.197753019 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.195475038 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.199620739 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.199327922 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.196926219 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.198261019 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.197112058 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.19808592 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.198213965 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.199096534 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.19495056 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.195945296 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.197566432 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.195501236 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.198744384 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.197571188 seconds)
  done (took 75.354400374 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.197372931 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.197060209 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.195597675 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.195080076 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.197851561 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.195147655 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.19761545 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.19736361 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.199077278 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.200656941 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199709468 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.194554126 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.19643032 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.195321315 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.19476318 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194439272 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.195891068 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.193659799 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.198198933 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.197755184 seconds)
  done (took 25.064415135 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.195554018 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.20038673 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.197431253 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.197624047 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.196053511 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.195453091 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.198487149 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198722317 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.19595198 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.198060351 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.198684007 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.200667642 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196869907 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.196499707 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.198626621 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.197333145 seconds)
  done (took 20.294793171 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.196142672 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.197814656 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.196614061 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.198123135 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.195441482 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.194949242 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.200113953 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.196086513 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.198355553 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.199945058 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.199108146 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.198301604 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.200739087 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.199330418 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.194635893 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.200791624 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.196595442 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.19815941 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.199898585 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.20160674 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.198376844 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.196767474 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.197673397 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.202945305 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.19906506 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.197283489 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.197311378 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.197912041 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.197246447 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.200373054 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.198401321 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.198565476 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.197603668 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.197887009 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.200389588 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.197367612 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.201523556 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.204316165 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.20198045 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.201553894 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.200402878 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.198539289 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.199134102 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.201027754 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.198582139 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.201783654 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.199262124 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.200777125 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.199191396 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.198352535 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.201822185 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.202023607 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.201351924 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.199499929 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.201521722 seconds)
  done (took 67.083172974 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.200361384 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.201292325 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.197962119 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.201406981 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.202051015 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.199926252 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.203448293 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.199851637 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.198181951 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.202629526 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.199833989 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.200498691 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200234453 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.202034069 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.198913976 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.202655596 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.19912672 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.202093322 seconds)
  done (took 22.747648319 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.199265682 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.20172133 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.202153128 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.199894076 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.201157048 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.20274189 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201510089 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.203275996 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204973786 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.201103997 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20083427 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.203124406 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201538536 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.203977807 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.20160126 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200863199 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.203194133 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.203084064 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.199050583 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.20170257 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.204212803 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.203200363 seconds)
  done (took 27.581235716 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.203640392 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.201182848 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.218399357 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.243559438 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.231767815 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.202248103 seconds)
  done (took 8.441018222 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20329075 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204924773 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.202033462 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203909694 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204222054 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198634581 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203436203 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20134881 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205680436 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201785254 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202268529 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205197944 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20544451 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203290504 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205109154 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205426958 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.201576471 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204106103 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202850638 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204014772 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202767277 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204968951 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202299619 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201869439 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205174162 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20286317 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20282996 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202437354 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203663687 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205452896 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205482183 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202525105 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205034405 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201342815 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20537178 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206180163 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205517462 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208907122 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205136782 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205340732 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.206215131 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201760015 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206062181 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204041594 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206287706 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203529263 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204009893 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202474917 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203470221 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208267405 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207996112 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203109391 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206345142 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208337983 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208709036 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207004446 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202007479 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204977298 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207159366 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202557466 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20432654 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207292667 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205321647 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203361792 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20790201 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202817926 seconds)
  done (took 80.629618166 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205698324 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.206467969 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206209431 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207409607 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205603769 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205791999 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203858973 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204861422 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.202362266 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205738277 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207572691 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206321417 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206211922 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205397141 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205649163 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205273982 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206875837 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205244834 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204705479 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210297781 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205247629 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204538257 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205558429 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206710819 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207000687 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207702762 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206460123 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204430858 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205326514 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206287056 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204464051 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205847327 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204002522 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.205637604 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204016113 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205965963 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20623325 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205931599 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206977213 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209686959 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207724785 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208509913 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20713858 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207176044 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20774409 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20706242 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206641444 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206755933 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207330807 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207554968 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207797751 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206655182 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205329659 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20926849 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206484182 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20934543 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207620164 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207052839 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209907095 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210368232 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208775212 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207325531 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210270354 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20868311 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207342179 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207511169 seconds)
  done (took 80.783632691 seconds)
done (took 1634.68323505 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.266472452 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.247180719 seconds)
  done (took 13.65626823 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.370799272 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.322255264 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.206466895 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.235038895 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.206732357 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.226480732 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.202205833 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.209379313 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.207346969 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.207786368 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.209511291 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.397184992 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.205980282 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.209074256 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.208007079 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.300194077 seconds)
  done (took 41.075883343 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.237132988 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.214631283 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.31970811 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.230172041 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.236209591 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.383678893 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.263206712 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.21348476 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.370461692 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.250855702 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.659699852 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.235909293 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.213093785 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.238215995 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.230260625 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.385298795 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.443423455 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.665990387 seconds)
  done (took 27.934730261 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.628053258 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.229870799 seconds)
  done (took 9.003091514 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.257086653 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.238335049 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.252117722 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.236380142 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.232749402 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.267544612 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.267772422 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.278488892 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.251807827 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.283464724 seconds)
  done (took 63.719032579 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.231648443 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.215082051 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.214297191 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.210370257 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.204291162 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.204980885 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.211879183 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.209844124 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.61777372 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.328878247 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.228684779 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.220497624 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.212927412 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.212718166 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.210196613 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.248518828 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.348946824 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.210060833 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.209667722 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.219611946 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.214752406 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.310923197 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.252338534 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.213844058 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.330995586 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.627725319 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.216351745 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.220436579 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.332689176 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.211489081 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.21246264 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.212198675 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.214145344 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.77142227 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.69009129 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.221073302 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.233735126 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.221701534 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.210869968 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.352118845 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.213037846 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.221106092 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.206939502 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.675110398 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.369052001 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.321993898 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.394609538 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.215214254 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.216332847 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.274618045 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.215224351 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.213940191 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.242998966 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.944901043 seconds)
  done (took 104.115605269 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.247649258 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.695420468 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.376724258 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.228989272 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.048267549 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.946943008 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.206286655 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.474907835 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.218121331 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.208840618 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.476597744 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.700315537 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.206774689 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.271717862 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.73302456 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.237594252 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.207811363 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.103587377 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.207700528 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.210644201 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.622687074 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.224558047 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.207217307 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.469704551 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.24681042 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.652693618 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.562155609 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.639279121 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.210261184 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.207173733 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.659928538 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.213316019 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.221585895 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.209007473 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.474204097 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.543465758 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.52052328 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.210103424 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.224117206 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.213193528 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.229686 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.648068018 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.532246494 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.208642173 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.209767044 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.669188271 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.210310173 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.209315585 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.214899235 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.414496019 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.954753633 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.208293414 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.562713212 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.209623637 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.467238957 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.268525806 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.208002591 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.679052459 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.209977719 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.373797644 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.221431483 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.211034365 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.213756781 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.211104402 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.209074462 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.535027915 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.560954636 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.21547788 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.537191267 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.651275179 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.209874149 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.737407059 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.054354857 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.209899486 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.25901727 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.213866676 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.915617589 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.681983363 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.23707275 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.20991477 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.525078425 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.213578299 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.479581166 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.225908932 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.211764125 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.632788525 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.232236279 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.229077863 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.2099601 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.215024341 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.978016126 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.21079122 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.472063625 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.224732318 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.211367308 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.211522875 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.237680968 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.212394382 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.213630389 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.215216818 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.726130874 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.216910164 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.333794877 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.228701899 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.212329151 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.212372208 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.215036935 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.212188741 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.433187623 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.808394226 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.219324809 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.211662171 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.21339795 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.228123664 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.415772602 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.215084329 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.500241696 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.21357247 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.212398874 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.216274094 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.869070171 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.221036601 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.213285902 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.215229264 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.034593403 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.41882182 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.229848279 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.211904292 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.21456554 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.227342192 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.489131724 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.212167248 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.270589631 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.215281556 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.898368067 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.232195041 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.220277707 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.623391683 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.21521494 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.149748292 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.231760704 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.215716585 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.514377132 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.480862626 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.479440874 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.215259315 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.227974117 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.894522768 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.248137122 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.346346931 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.231370261 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.214535215 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.409774635 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.460549362 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.216665347 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.778764096 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.217139383 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.430275245 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.215413182 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.527538161 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.6893775 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.215629614 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.219457274 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.905208348 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.860724557 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.012966873 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.217141335 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.481339438 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.185150639 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.664204869 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.213464283 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.213267557 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.792667359 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.217666634 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.216661891 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.217622476 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.216243851 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.277146243 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.390479505 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.569811331 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.222405122 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.65556963 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.25624898 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.228575448 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.220277138 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.220328401 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.568271753 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.25225032 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.2209874 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.257475014 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.217700086 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.220758015 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.66730057 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.076532587 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.216067794 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.370209372 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.834522038 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.217543634 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.217722639 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.001446595 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.415503746 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.748249955 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.234579911 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.506213763 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.224533291 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.254982724 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.989098465 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.284314739 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.669853906 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.218893031 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.217247766 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.824169035 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.218168993 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.274039655 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.217678502 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.216609355 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.739989943 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.218305812 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.219257361 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.50179111 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.216956631 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.468351521 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.219414237 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.244764323 seconds)
  done (took 1083.488972047 seconds)
done (took 1344.13775565 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.219546499 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.221889284 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.208848719 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.220291107 seconds)
  done (took 26.030815763 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.23246638 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.223039886 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.225231117 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.223910978 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.228311571 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.223589104 seconds)
  done (took 8.5182291 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.245431044 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.220201288 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.220359011 seconds)
  done (took 18.846204998 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.438952404 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.431778844 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.571778324 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.276804726 seconds)
  done (took 9.879061979 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.227683147 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.228139045 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.227949093 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.231873703 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.233568082 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.233190692 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.231132285 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.230513057 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.233420264 seconds)
  done (took 12.236962986 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.972018145 seconds)
done (took 81.64087091 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.632230648 seconds)
    (2/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.724474684 seconds)
    (3/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.522910886 seconds)
    (4/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.220627395 seconds)
    (5/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.606262905 seconds)
    (6/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.234638901 seconds)
    (7/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.285654054 seconds)
    (8/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.453445365 seconds)
    (9/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.228164121 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.491007493 seconds)
    (11/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.260721604 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.26162506 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.248552683 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.10157565 seconds)
    (15/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.40724777 seconds)
    (16/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.423728316 seconds)
    (17/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.235387763 seconds)
    (18/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.507568497 seconds)
    (19/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.347224235 seconds)
    (20/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.674637606 seconds)
    (21/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.727732343 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.226378547 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.93424061 seconds)
    (24/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.307019088 seconds)
    (25/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.249703321 seconds)
    (26/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.6492566 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.778906719 seconds)
    (28/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.247444978 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.630840363 seconds)
    (30/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.305436973 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.350817724 seconds)
    (32/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.601134798 seconds)
    (33/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.32662304 seconds)
    (34/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.824600361 seconds)
    (35/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.35580997 seconds)
    (36/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.424272261 seconds)
    (37/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.221268868 seconds)
    (38/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.936930857 seconds)
    (39/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.30601038 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.739057946 seconds)
    (41/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.305066728 seconds)
    (42/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.218410423 seconds)
    (43/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.903331289 seconds)
    (44/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.323758404 seconds)
    (45/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.232714502 seconds)
    (46/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.216117634 seconds)
    (47/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.224319452 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.244984612 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.332434633 seconds)
    (50/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.407423473 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.486400365 seconds)
    (52/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.222517056 seconds)
    (53/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.709806571 seconds)
    (54/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.883288515 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.605883763 seconds)
    (56/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.763825023 seconds)
    (57/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.247496658 seconds)
    (58/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.349154599 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.27892296 seconds)
    (60/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.218146283 seconds)
    (61/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.58841808 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.61582458 seconds)
    (63/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.544795755 seconds)
    (64/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.438998039 seconds)
    (65/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.287924557 seconds)
    (66/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.318521162 seconds)
    (67/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.520770303 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.654593859 seconds)
    (69/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.559787283 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.62551776 seconds)
    (71/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.324840496 seconds)
    (72/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.209492448 seconds)
    (73/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.228666809 seconds)
    (74/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.258424763 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.619055281 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.092610496 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.812666621 seconds)
    (78/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.514005799 seconds)
    (79/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.025583431 seconds)
    (80/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.245243492 seconds)
    (81/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.790403775 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.224589634 seconds)
    (83/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.013412974 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.351077938 seconds)
    (85/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.41543233 seconds)
    (86/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.212768483 seconds)
    (87/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.279940313 seconds)
    (88/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.600963998 seconds)
    (89/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.820506236 seconds)
    (90/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.861142263 seconds)
    (91/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.288239875 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.633900243 seconds)
    (93/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.250128677 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.583072403 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.225880699 seconds)
    (96/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.25523245 seconds)
    (97/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.786388586 seconds)
    (98/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.251207135 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.023820763 seconds)
    (100/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.900111556 seconds)
    (101/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.566005527 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.046917744 seconds)
    (103/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.210310557 seconds)
    (104/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.347329318 seconds)
    (105/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.42416851 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.290149763 seconds)
    (107/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.576288239 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.040755353 seconds)
    (109/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.308944972 seconds)
    (110/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.553111386 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.427389127 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.933828568 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.064567947 seconds)
    (114/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.519274118 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.227576898 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.224874893 seconds)
    (117/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.310192734 seconds)
    (118/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.521474245 seconds)
    (119/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.225921173 seconds)
    (120/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.222339723 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.401782944 seconds)
    (122/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.450288175 seconds)
    (123/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.226424406 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.329054537 seconds)
    (125/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.229771002 seconds)
    (126/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.291352329 seconds)
    (127/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.937585463 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 1.753709841 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.250955058 seconds)
    (130/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.273899399 seconds)
    (131/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.213062803 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.333080433 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.645319612 seconds)
    (134/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.236926355 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.507671615 seconds)
    (136/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.25316911 seconds)
    (137/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.287342931 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.945158146 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.508901964 seconds)
    (140/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.034324548 seconds)
    (141/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.311158698 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.624842637 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.645570282 seconds)
    (144/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.242155221 seconds)
    (145/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.325226384 seconds)
    (146/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.285461582 seconds)
    (147/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.058005124 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.357022776 seconds)
    (149/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.079065267 seconds)
    (150/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.744898432 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.949712483 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.253404658 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.226945487 seconds)
    (154/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.398647037 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.659487322 seconds)
    (156/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.456481098 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.851334955 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.225461939 seconds)
    (159/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.97493392 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.27048295 seconds)
    (161/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.865294103 seconds)
    (162/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.485645859 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.250295408 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.071927384 seconds)
    (165/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.461786031 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.227995115 seconds)
    (167/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.830108626 seconds)
    (168/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.743275095 seconds)
    (169/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.929698841 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.246042307 seconds)
    (171/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.793699806 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.275808247 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.088865823 seconds)
    (174/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.22708075 seconds)
    (175/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.278084498 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.120120904 seconds)
    (177/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.354171375 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.841664611 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.10480821 seconds)
    (180/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.272043201 seconds)
    (181/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.338327676 seconds)
    (182/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.421475689 seconds)
    (183/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.698249026 seconds)
    (184/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.247183676 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.253665777 seconds)
    (186/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.520244208 seconds)
    (187/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.256399127 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.215318133 seconds)
    (189/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.241764735 seconds)
    (190/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.567218099 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.303515578 seconds)
    (192/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.766669619 seconds)
    (193/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.436623506 seconds)
    (194/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.654003869 seconds)
    (195/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.05197082 seconds)
    (196/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.8142963 seconds)
    (197/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.250050715 seconds)
    (198/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.252062365 seconds)
    (199/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.260522526 seconds)
    (200/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.232951003 seconds)
    (201/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.994132851 seconds)
    (202/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.390859589 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.271407742 seconds)
    (204/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.215942319 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.255183305 seconds)
    (206/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.248500744 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.623063311 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.473026157 seconds)
    (209/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.614820547 seconds)
    (210/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.253803369 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.288207561 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.067315311 seconds)
    (213/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.247678501 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.15094059 seconds)
    (215/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.373214106 seconds)
    (216/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.976134342 seconds)
    (217/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.21697202 seconds)
    (218/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.295966703 seconds)
    (219/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.351823175 seconds)
    (220/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.541564708 seconds)
    (221/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.786120251 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.305890424 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.876086994 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.464196404 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.307064756 seconds)
    (226/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.543196512 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.231967534 seconds)
    (228/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.770060427 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.228790679 seconds)
    (230/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.377176229 seconds)
    (231/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.367790004 seconds)
    (232/309) benchmarking ("sort", Float64, false)...
    done (took 5.507060697 seconds)
    (233/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.258544342 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.50115973 seconds)
    (235/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.013976662 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.495969915 seconds)
    (237/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.257715533 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.825583863 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.578020918 seconds)
    (240/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.268135554 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.285131332 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.270634599 seconds)
    (243/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.277065613 seconds)
    (244/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.032045151 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.624387023 seconds)
    (246/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.597612037 seconds)
    (247/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.92603236 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.245938163 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.230719245 seconds)
    (250/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.242329861 seconds)
    (251/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.258767206 seconds)
    (252/309) benchmarking ("sort", Int8, false)...
    done (took 4.321306722 seconds)
    (253/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.352220021 seconds)
    (254/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.223317936 seconds)
    (255/309) benchmarking ("sort", BigInt, false)...
    done (took 6.23573292 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.613524105 seconds)
    (257/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.356792495 seconds)
    (258/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.228609333 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.286162069 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.436860772 seconds)
    (261/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.245270791 seconds)
    (262/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.580684548 seconds)
    (263/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.952998095 seconds)
    (264/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.830950767 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.259961602 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.579390142 seconds)
    (267/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.5446046 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.623341017 seconds)
    (269/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.25663222 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.340777559 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.057142491 seconds)
    (272/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.576967462 seconds)
    (273/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.235280728 seconds)
    (274/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.553398209 seconds)
    (275/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.699410456 seconds)
    (276/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.101334519 seconds)
    (277/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.449451506 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.282795362 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.23515063 seconds)
    (280/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.613132633 seconds)
    (281/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.804421397 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.224007537 seconds)
    (283/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.432747328 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.335155336 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.241152107 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.319469751 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.351247835 seconds)
    (288/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.23546061 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.988901159 seconds)
    (290/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.962903254 seconds)
    (291/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.539759923 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.123714561 seconds)
    (293/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.234140147 seconds)
    (294/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.49277857 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.2754909 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.337617619 seconds)
    (297/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.367180121 seconds)
    (298/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.422924057 seconds)
    (299/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.244531452 seconds)
    (300/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.237315508 seconds)
    (301/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.823968067 seconds)
    (302/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.538663358 seconds)
    (303/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.251562388 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.260196757 seconds)
    (305/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.343289193 seconds)
    (306/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.221917775 seconds)
    (307/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.238178636 seconds)
    (308/309) benchmarking ("sort", Float32, false)...
    done (took 5.23066039 seconds)
    (309/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.077000731 seconds)
  done (took 884.00086686 seconds)
done (took 885.164249774 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.269513209 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.264081898 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.247751496 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.270411107 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.359984371 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.284095252 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.260675993 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.250503972 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.296141213 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.297438726 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.24540317 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.281577806 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.249002833 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.249983287 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.24709479 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.261396667 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.205820999 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.249438028 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.266641659 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.258578398 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.267276786 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.248206109 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.298296027 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.28265106 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.254290343 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.250717023 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.252892351 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.271890031 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.361880105 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.251542671 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.251927444 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.261725692 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.209332873 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.245556096 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.243862106 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.268460031 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.261705781 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.259008546 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.252997203 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.282782185 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.592761827 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.250034808 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.252513021 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.248671366 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.251545818 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.254912664 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.252500554 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.255457877 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.266077701 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.264994007 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.587414384 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.266038438 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.253091578 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.24935047 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.260700961 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.251248641 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.253287424 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.26683935 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.271269644 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.265535541 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.202520991 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.255175626 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.251746896 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.266431843 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.258312187 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.628240888 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.246885981 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.254223766 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.601466388 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.254833967 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.631356221 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.25993106 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.25153828 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.267018157 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.280652146 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.213850195 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.245478619 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.25089602 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.259351957 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.2499037 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.259907349 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.265486949 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.256170842 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.251613969 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.265755082 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.286644129 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.263604809 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.252155704 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.2601703 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.276013624 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.260786615 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.263992588 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.254830442 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.245168091 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.263317297 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.256243778 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.257436347 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.255030177 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.256713267 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.262308304 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.604210424 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.26913534 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.248040566 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.247931891 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.251048668 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.267329709 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.59914379 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.254438436 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.274601385 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.300130298 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.25467101 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.210857319 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.256515793 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.270475486 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.262304354 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.257774642 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.248216534 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.212499352 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.594495247 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.271160301 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.254493987 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.252135471 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.271290765 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.255391565 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.250167935 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.220935423 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.255384449 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.268399721 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.376525703 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.265253036 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.286335943 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.252981766 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.257373692 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.290845463 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.269662364 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.286197561 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.258295611 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.271785245 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.271809862 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.251471072 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.267672355 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.265727166 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.253261411 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.260418413 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.248956996 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.28842635 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.268198759 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.268500806 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.274867961 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.377247284 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.251554651 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.213626183 seconds)
done (took 211.69321641 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.312084818 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.246830093 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.336945605 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.250952143 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.349811867 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.347736316 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.249033828 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.248139906 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.248659205 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.630210181 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.250973795 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.250344557 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.250170388 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.250195739 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.333538329 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.251984037 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.24955499 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.592979136 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.250759932 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.320623505 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.25132663 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.249314645 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.252876612 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.660046006 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.246273185 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.243144103 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.321617805 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.253660333 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.59758309 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.246355936 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.252643461 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.596792861 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.341857595 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.268959147 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.260359765 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.258373892 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.352964095 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.266551772 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.333342501 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.331520868 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.337226278 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.290961827 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.248316416 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.245658893 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.256919068 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.253730575 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.251079585 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.28158801 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.250174376 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.251617814 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.594250385 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.263844952 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.253360354 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.252555964 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.252498461 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.283722413 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.253353302 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.254583127 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.344412266 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.253965233 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.317886806 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.661943207 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.664465551 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.253779877 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.249967135 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.251569884 seconds)
  done (took 143.066198837 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.322808955 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.328275728 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.363689623 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.253749195 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.304612714 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.371407033 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.25741485 seconds)
  done (took 10.389070526 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.259630563 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.256605787 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.305513959 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.302780474 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.254139505 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.402232774 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.254085184 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.267711564 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.252542247 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.306720808 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.258143707 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.254432441 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.263418364 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.257289494 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.301639071 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.266970156 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.369259809 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.255628873 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.252814517 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.413017321 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.25464834 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.264210087 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.307001304 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.264667504 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.257141449 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.258628237 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.825562244 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.253291421 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.255432832 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.256325126 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.253142072 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.29435747 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.256100134 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.255508676 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.251197879 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.373664183 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.25708783 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.252466122 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.257012665 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.254028255 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.256273404 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.257467216 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.256965095 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.254117836 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.258541491 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.280804968 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.255515739 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.257802702 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.258393626 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.257528473 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.308201919 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.256976016 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.256602074 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.255107267 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.314138106 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.265027646 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.26142457 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.25560175 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.255924523 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.255587096 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.412551531 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.305112515 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.258535434 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.305013532 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.257339642 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.257711994 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.257148435 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.257710137 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.313054418 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.256047484 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.307139069 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.254837111 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.410229353 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.280168512 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.258686164 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.262205432 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.260224357 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.257435205 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.255880768 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.262227171 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.254924547 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.259363651 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.264219593 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.256895018 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.256118311 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.361464967 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.36782983 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.256193233 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.273870337 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.263517525 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.258705082 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.312182227 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.260003459 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.257869675 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.311676403 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.373158549 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.312484698 seconds)
  done (took 145.713376426 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.264283956 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.269230157 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.261873468 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.277239358 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.257380825 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.259990873 seconds)
  done (took 8.780215117 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.260842668 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.259888045 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.259323108 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.261238328 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.261223128 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.261821747 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.260583214 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.261339597 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.265293428 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.26063141 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.263085641 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.263399345 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.26198269 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.261438266 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.262920348 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.260842343 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.262320461 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.257690482 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.263660869 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.262446881 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.36519019 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.261252853 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.261030951 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.262406821 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.266880862 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.261964625 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.26782987 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.262125348 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.263040089 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.264953862 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.265403167 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.263217739 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.261377173 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.266984751 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.26477846 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.261936189 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.265866253 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.2640981 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.2603665 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.264910448 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.263252843 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.26195654 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.260609767 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.264229415 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.263784287 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.263760631 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.270957975 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.2695531 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.262736687 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.264401287 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.263585771 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.26356582 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.266760913 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.266062071 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.264066667 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.268586838 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.267200828 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.264587084 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.265870513 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.264084819 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.262041443 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.265963879 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.265733709 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.26631261 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.260493873 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.266567661 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.26599082 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.267104125 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.262698429 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.265669065 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.27039345 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.261825635 seconds)
  done (took 93.280151338 seconds)
done (took 402.412244571 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.63476425 seconds)
  done (took 7.829396078 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.255687132 seconds)
  done (took 7.452539871 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.833765497 seconds)
  done (took 21.036776335 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.331915396 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.372022263 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.262950133 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.259597009 seconds)
  done (took 26.422831694 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.464472747 seconds)
  done (took 7.661052707 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.258118786 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.269479575 seconds)
  done (took 13.723661985 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.711015203 seconds)
  done (took 7.906626274 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.839969149 seconds)
  done (took 8.038725714 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.279498354 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.286002979 seconds)
  done (took 14.012387973 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.257712934 seconds)
  done (took 7.454423825 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.107058778 seconds)
  done (took 8.302520226 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.259187695 seconds)
  done (took 7.456907431 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.328873859 seconds)
  done (took 7.524964035 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.005862785 seconds)
  done (took 9.201801959 seconds)
done (took 155.217244917 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.258821072 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.259382145 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.256945478 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.25896045 seconds)
  done (took 26.231519116 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.313436696 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.302621415 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.302231071 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.31060322 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.303253837 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.298897962 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.292540487 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.292997073 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.310883473 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.301129367 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.302098574 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.302974268 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.302165139 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.291966674 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.303808232 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.320543621 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.310669394 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.300401338 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.293285099 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.305738393 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.269316931 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.313241345 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.304091217 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.268297494 seconds)
  done (took 32.416271253 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.465303742 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.33848467 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.420270368 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.317072018 seconds)
  done (took 6.73708605 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.319943978 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.321524146 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.334096615 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.37169656 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.404158 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.330666428 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.295445988 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.291853271 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.275345023 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.323842586 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.39663431 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.335747645 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.418728094 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.269397143 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.453574603 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.268449958 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.266552768 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.319574717 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.370397664 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.384170519 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.266027194 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.318774293 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.322610315 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.336898895 seconds)
  done (took 33.194635892 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.265908914 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.274702927 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.272559841 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.267189738 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.2674299 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.268274891 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.271631861 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.269453138 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.287181471 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.270794443 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.26683217 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.267322899 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.266300668 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.267407938 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.26753472 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.279153527 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.281675103 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.26917955 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.271322162 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.274850071 seconds)
  done (took 26.624289802 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.263436656 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.199285081 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.613084674 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.515283175 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.259753104 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.261011742 seconds)
  done (took 27.310655455 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.333175707 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.46520905 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.268047654 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.615365895 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.68935999 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.270449018 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.268584783 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.499737296 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.787681029 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.800026894 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.321949401 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.335785703 seconds)
  done (took 18.855631083 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.275215736 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.261258408 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.273274823 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.279810735 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.323798907 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.276583462 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.277776115 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.263609029 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.327587124 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.330851978 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.274700588 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.324222111 seconds)
  done (took 36.688984314 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350742857 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.308708688 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.236959938 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.991391344 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.984239582 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.476407089 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.010959179 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.68712087 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.268775972 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.539233158 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.721605095 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35451467 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.522458658 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265914087 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.26594236 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.27213648 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491311767 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.744584135 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266614171 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.167606337 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289444761 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.267409638 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.259143939 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.293088333 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.477310595 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.245061319 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.529639182 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.041740988 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544478094 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.276654004 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277184383 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.264814807 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.539742346 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930298481 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36000304 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.2783885 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.975625 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.89557959 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.25111101 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.158709088 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.03995279 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.268262336 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27721949 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266676112 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.202003064 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.281492726 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.697825755 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.273962664 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.981184952 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.269921601 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.278441957 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361428636 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.270387337 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.259475191 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316078996 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.272599253 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.264213296 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.273193863 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.839324252 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.668333132 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.283519096 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.200943371 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.653182266 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.237970928 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86944814 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.367911911 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.272195732 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.271746218 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.205150791 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.216141038 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.28211921 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418187802 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.291751049 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.91951643 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948538808 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.269169558 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.197412734 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.796689526 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.285174312 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.204828591 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.499078148 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.042932433 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206529315 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.215383669 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.204075869 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976235751 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280597918 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.658228753 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.277970146 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.690301869 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.279973706 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288743836 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294130772 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.494174202 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.153920683 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270770727 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.040201097 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407161645 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290535791 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.693841991 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203320747 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.271032642 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.526315197 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.481957937 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.272263662 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.26851994 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.467803161 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284845104 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.28436239 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.270891329 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.294138377 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.828373634 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281752708 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.61445299 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284769059 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.046925965 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012912922 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.2894843 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.371630638 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.280436708 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.513179709 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.0397748 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.167048378 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.339027992 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.273078693 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.273530011 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.265198858 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.120453505 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.176966669 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.274134363 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.273140736 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.282766895 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.274215826 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.219735405 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.27963995 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283417997 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.048184498 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.495188025 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.271527756 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562887772 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207926836 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420226177 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.28148861 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.49385222 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.487196389 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.271692467 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.531211217 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278418776 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.279785748 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.282373264 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291389069 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.366524656 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294404921 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.285533879 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.52869237 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.274141591 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.277096361 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.272667711 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.051526052 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277681163 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.278390633 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.104347756 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.834271116 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255329061 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.275218463 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.161750245 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.288225101 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342174073 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.279532848 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.284352816 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.063980366 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.089871056 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.27818539 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.271340205 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496578189 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.284501086 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.265956897 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.35425176 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.466905128 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.838691719 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.285206003 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.207397725 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.986526909 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.96532813 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273106787 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.462662255 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.274945776 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283812062 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.284810839 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.780985119 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.83859667 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274047159 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.185412211 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.281266868 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.284188998 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.281747759 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275447363 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.038426246 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.701664566 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.284345061 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.286682891 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4195361 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.28770072 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.207717384 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.791821431 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.282453167 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.273541974 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.049977695 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310785685 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.18020753 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.756165091 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534432551 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.954484193 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.288101097 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.294302663 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.306096429 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.276674159 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.08608191 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288484986 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.288730831 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284918633 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.285676161 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.203785601 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.714420372 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843220643 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980775378 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787836754 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.223865042 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.290061274 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.172608421 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.706519764 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212237658 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.934961949 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.463638053 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.70222034 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220686065 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.470906481 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.496612023 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.029830876 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.285082542 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.504960093 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18989269 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.091760968 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.30264534 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.487688534 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312178644 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.285287775 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.208153775 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.578654934 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50735336 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.110880908 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357808053 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.705320662 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.09814037 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.068184883 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.27472693 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.627450606 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4470262 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.90964544 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.66648459 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.287490636 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.291507755 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.751994289 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.279514281 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.802238585 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886659176 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.286778531 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.473228748 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21217271 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.289719907 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.289763211 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.279715578 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.539543527 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.274352502 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.533374077 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288115946 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213317083 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.284506608 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790316983 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.130951487 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.285763684 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281008883 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022301908 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.288110018 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555482257 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.294265219 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.025881671 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281225425 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.214623869 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213919555 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.969820906 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.281767104 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254372899 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762119524 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.643638502 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.278776814 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.29785792 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125587363 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.536927055 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.294231086 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.84985949 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.505722241 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.067905268 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302763009 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.380520101 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.220297332 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.281693254 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.184217509 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.516054454 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.113239151 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.504136349 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.305014738 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.188591756 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.278619712 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.492791069 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.178034839 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.290492699 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524190662 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.993556825 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.301412921 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969312659 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304889217 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.285890455 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.294637833 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.673145066 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.285044561 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352059229 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.290647139 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.29143229 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.29211805 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451587401 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282997796 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.283815762 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.296310159 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378001542 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.741098788 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.049902583 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.056300813 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.855423385 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994186718 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.852539484 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.291665975 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.282873065 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285980931 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.215941868 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427788348 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.807421341 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557807897 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413368224 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.715709881 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304950415 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.170470035 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.296338304 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.508845182 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556473026 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.15196983 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281125985 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.943020845 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.182558428 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.293293604 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.494801117 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77252881 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834324041 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388941503 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.296204545 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.708318089 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554030306 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.373254805 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28353425 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.873466256 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.291238857 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.641151927 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.290383456 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283627451 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432894993 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.294209074 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940177184 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.290902092 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.443450379 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.057762869 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.327534593 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.539919107 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.750695042 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.293251521 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.858217207 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.978560925 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.54816596 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.353091988 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.294048233 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.383919294 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430770478 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.284784252 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.178526083 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.284825409 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129670508 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.993376285 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.294355512 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860836101 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.549496512 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.285126027 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.285585411 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305911489 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.294938237 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.507730898 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002739427 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.508943759 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.294111134 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.286647581 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.276692068 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.861885155 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.295001817 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.219970776 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.287997787 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528527228 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.521666429 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.310313727 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.737621675 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.996032001 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841917583 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.259111269 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306304267 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.284490571 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.983851131 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861001052 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.042189033 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.770976971 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.94340561 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.295789366 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.557756875 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.290125517 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.289795096 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560471972 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.288505404 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.284428567 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.295465244 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.86048145 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.042397123 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.297334835 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.244480936 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.222347028 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.511947407 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.944158776 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.221319956 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.284650876 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.469706741 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.28696023 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417748737 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.295470975 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.289426468 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297994273 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.018973798 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.570762867 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.29039067 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.275665715 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.278853745 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.289825436 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290758158 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.519660512 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291402174 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.961286303 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.636702716 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.544544915 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.292074854 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.271573737 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.290289844 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286520444 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.005758373 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.256213662 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.81635793 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845589273 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.293142801 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.297332879 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.29254396 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.505474457 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.499917386 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.293837387 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.29981342 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296200542 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.300667863 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.190222084 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.056519105 seconds)
  done (took 1555.047543714 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.297832019 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.299331259 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.313761088 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.315477124 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.327492489 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.359549998 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.361703955 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.366528402 seconds)
  done (took 51.86826662 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.288132027 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.440925004 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.316776683 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.287508471 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.296316001 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.28708601 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.719992455 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.285264155 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.293823244 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.296172582 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.301957237 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.293566388 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.898093083 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.295576779 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.291153898 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.27394111 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.29469031 seconds)
  done (took 64.391450311 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.29366995 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.798483084 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.381993978 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.285214774 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.162236364 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.291301183 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.989609957 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.318798362 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.287429768 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.503290538 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.94220685 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.303244018 seconds)
  done (took 83.783830877 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.296106374 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.29670231 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.296182172 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.296872474 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.29779356 seconds)
  done (took 7.709251911 seconds)
done (took 1972.058581668 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.539032035 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.976846367 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.947856847 seconds)
  done (took 5.152217888 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.437893127 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.487492456 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.607465372 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.611865089 seconds)
  done (took 7.372061903 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.580258467 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.660524282 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.494288706 seconds)
  done (took 5.959806717 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.70386564 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.298100198 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.414322235 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.292104445 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.294838895 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.294724161 seconds)
  done (took 20.111282376 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.297923917 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.300575291 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.296040018 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.299258728 seconds)
  done (took 6.421437015 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.278295653 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.989273938 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.281179115 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.293941547 seconds)
  done (took 18.069222619 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.041597287 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.064525754 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.041962744 seconds)
  done (took 7.376180094 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.306303227 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.137617271 seconds)
  done (took 9.67063571 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.599638794 seconds)
  done (took 2.825972151 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.429356822 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.566577009 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.333291812 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.254239979 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.338914987 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.068518127 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.909692039 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.492575486 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.241221249 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.429919521 seconds)
  done (took 27.293379846 seconds)
done (took 123.430953519 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.046924505 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.303127332 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.496151552 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.016003727 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.525890907 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.496277365 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.502888522 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.983945374 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.528666117 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.514446918 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.022203963 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.526685394 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.663081813 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.539236335 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.666964756 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.537333972 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.525328242 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.088555644 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.703995833 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.948807962 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.502502818 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.658331087 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.852085168 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.674298193 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.525952171 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.448278576 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.239643772 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.538282994 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.88138203 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.259044321 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.445481156 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.131394071 seconds)
  done (took 191.021865612 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.304780308 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.294486388 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.293827259 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.294474204 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.317440537 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.295841441 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.306441015 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.29685024 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.298470612 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.293393005 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.320268158 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.292957009 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.294181245 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.292910821 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.295342045 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.293651449 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.294731125 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.31168694 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.298721199 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.294781746 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.298677059 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.306021424 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.304619095 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.292858664 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.294769672 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.294825222 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.296681429 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.311104414 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.295234779 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.310309979 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.294609366 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.294065817 seconds)
  done (took 202.80948732 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.306534915 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.294361306 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.29626623 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.304849493 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.297040455 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.308452816 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.308753233 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.294733285 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.29611074 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.294640528 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.319594102 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.304168815 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.296682369 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.310944727 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.299129813 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.29559658 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.307854758 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.301845595 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.293598848 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.294394426 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.298630401 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.296966659 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.320669672 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.294738778 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.296871328 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.297272647 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.307999771 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.295501336 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.295089698 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.293821799 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.295992255 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.295511804 seconds)
  done (took 202.84889977 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.500792175 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.30898874 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.306306748 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.259403242 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.308869258 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.303650255 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.297262625 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.496298867 seconds)
  done (took 14.016399476 seconds)
done (took 611.923563546 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.597036175 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.316762727 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.501692975 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.32572542 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.045996419 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.327207889 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.325543283 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.495014255 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.228707821 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.49554719 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.53173334 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.322723541 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.677573216 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.324429641 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.575542634 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.422614617 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.190665401 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.299306033 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.633833924 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.835879126 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.576130425 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.747323637 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.490375043 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.215035716 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.676620042 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.749873109 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.995330977 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.188337654 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.326066748 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.637261787 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.88171475 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.23722341 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.382061137 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.364464701 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.423942428 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.402574132 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.232549831 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.363987332 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.507444036 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.509197591 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.858208752 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.046530698 seconds)
  done (took 89.521380777 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.296584366 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.298843175 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.29649864 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.297828004 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.298677341 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.296052548 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.294647344 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.294339246 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.296271628 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.297264823 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.295094973 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.299304982 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.295711317 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.296431298 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.295447774 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.295388216 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.297291476 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.300188189 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.299031819 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.295623286 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.298274548 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.295942052 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.296201212 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.29657078 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.296232453 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.297866581 seconds)
  done (took 34.955735256 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.308894966 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.557309225 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.728291433 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.312829065 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.307810286 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.31308705 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.387087753 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.311672363 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.311648576 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.314618023 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.465120849 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.312037128 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.348312822 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.725624427 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.311475499 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.309634409 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.310193021 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.311292241 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.567998694 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.316463196 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.38848076 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.311019418 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.38961525 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.321305525 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.3142059 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.310887029 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.314439223 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.834417669 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.312340202 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.475347171 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.074721622 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.385380738 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.785215665 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.731100758 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.076243725 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.311923038 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.312016815 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.472341448 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.313575853 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.311035356 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.388509509 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.312854905 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.731674437 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.941370485 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.327109448 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.312825271 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.8539888 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.470423113 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.550543405 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.321135279 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.750952517 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.312954271 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.314191752 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.313741498 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.553824211 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.316957392 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.314117815 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.845124838 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.3168005 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.388566741 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.317087639 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.314684729 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.574733245 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.312760519 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.564901793 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.313466704 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.322941112 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.312976882 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.737797969 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.314410765 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.973148923 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.325277122 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.314703328 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.467759924 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.564927166 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.884731896 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.316536878 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.579392032 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.79642085 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.386843742 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.31549295 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.825824123 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.391143508 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.319651336 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.318516544 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.318572351 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.31636343 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.362272427 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.389029062 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.887658133 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.955953289 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.864204727 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.393953995 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.328762303 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.315433894 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.84790157 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.315419515 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.31541037 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.734318009 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.9599092 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.328969879 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.324173623 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.951325926 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.328611307 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.393625766 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.318987277 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.740859546 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.31575594 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.362527944 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.315765511 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.325821301 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.31822355 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.392599171 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.31794802 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.319164464 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.933121804 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.488317125 seconds)
  done (took 173.103698657 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.313973697 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.308331497 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.31653122 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.307621459 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.30789271 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.313684074 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.306697709 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.311425147 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.313580847 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.307836662 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.308593676 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.307820591 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.308792556 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.310418083 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.318915628 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.317915346 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.923395801 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.311381895 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.318334742 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.307788641 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.101520783 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.312077642 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.32527677 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.307560824 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.308509783 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.31169519 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.32492483 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.310318958 seconds)
  done (took 151.388524835 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.318072812 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.869827644 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.317785843 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.44744442 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.335966359 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.315715838 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.446030731 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.37532662 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.320333328 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.316474136 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.316317325 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.613569718 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.317755346 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.819586462 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.496981529 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.449668128 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.818943607 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.317763647 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.317001508 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.315845255 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.448575116 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.324586984 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.615312683 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.872438809 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.319799604 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.873036033 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.304732803 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.318234875 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.317882801 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.875968582 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.315923957 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.618933701 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.393492918 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.379074185 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.878809151 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.822265006 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.822682402 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.462494163 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.318109384 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.318655642 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.315297212 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.306424774 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.900385371 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.320971716 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.319825069 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.895221995 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.33596105 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.320883481 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.328020002 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.317481332 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.377944167 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.378762761 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.635350591 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.907864581 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.395613525 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.34033785 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.451720982 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.687442972 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.322101229 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.822805208 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.306130454 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.900040883 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.322818788 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.307046426 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.321834232 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.325328244 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.468162512 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.45038819 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.823578118 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.320548443 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.823990765 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.466784019 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.320201146 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.317706534 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.319767138 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.902944921 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.824875966 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.468107813 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.453411276 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.511715199 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.310350952 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.318342954 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.308155092 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.397315024 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.321743192 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.882499309 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.824596497 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.320602375 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.322997529 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.322654286 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.323729028 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.494346796 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.881897116 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.397317789 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.82030017 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.642447586 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.628494778 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.319960566 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.382345426 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.320133083 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.629556315 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.321979553 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.378619962 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.747962543 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.636204186 seconds)
  done (took 157.586471618 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.568490667 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.484513115 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.410065157 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.432407851 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.917698129 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.885800004 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.611841019 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.442972257 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.427336044 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.562468897 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.471166725 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.411258223 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.494426492 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.411041742 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.024930901 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.386768163 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.410909628 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.446773318 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.416920467 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.330951506 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.934648906 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.609207276 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.495217318 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.285674893 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.413334116 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.065116531 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.874130694 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.899779594 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.492159992 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.618995707 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.857669827 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.433611269 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.267023905 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.996617992 seconds)
  done (took 64.043508817 seconds)
done (took 671.831772768 seconds)
SAVING RESULT...
DONE!
