cset: moving following pidspec: 30192
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.639454854 seconds)
loading group "string"... done (took 0.587155045 seconds)
loading group "linalg"... done (took 9.507550738 seconds)
loading group "parallel"... done (took 0.2267653 seconds)
loading group "find"... done (took 1.575423747 seconds)
loading group "tuple"... done (took 2.594703721 seconds)
loading group "dates"... done (took 1.829185059 seconds)
loading group "micro"... done (took 0.323895857 seconds)
loading group "io"... done (took 0.807833175 seconds)
loading group "scalar"... done (took 54.57298452 seconds)
loading group "sparse"... done (took 15.816871651 seconds)
loading group "broadcast"... done (took 1.304909824 seconds)
loading group "union"... done (took 16.559618814 seconds)
loading group "simd"... done (took 6.311924719 seconds)
loading group "random"... done (took 12.10940623 seconds)
loading group "problem"... done (took 2.331590993 seconds)
loading group "array"... done (took 28.855220712 seconds)
loading group "misc"... done (took 1.686107568 seconds)
loading group "sort"... done (took 4.631085617 seconds)
loading group "collection"... done (took 24.193859634 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.591044666 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141469173 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.208313152 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.149440054 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.19751835 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143771371 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158877233 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.096623504 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.960489273 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.192121339 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137052965 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.509814864 seconds)
done (took 5.222984028 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.264202665 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095765252 seconds)
    (2/2) benchmarking "String"...
    done (took 0.1034453 seconds)
  done (took 0.88497517 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076697937 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144884999 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093435546 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078554236 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09406005 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077939284 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093741975 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077197547 seconds)
  done (took 1.348389149 seconds)
done (took 3.267600824 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.74619826 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.285525651 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202563955 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.460202886 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193815418 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.212770605 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.745264024 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.394271964 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.251506738 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099979771 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143606058 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.39459844 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13723554 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.756720463 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092117663 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126442154 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.236079594 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.514711481 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082209452 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109997182 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115967748 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.145431157 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131903369 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09342834 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185836781 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.08121525 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193547288 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107682978 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080554117 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.291155799 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200967722 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.764005894 seconds)
  done (took 11.301878792 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110819649 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133072041 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097605509 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137943754 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135147609 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099022244 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086367382 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095711165 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121472334 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175848205 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114097777 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135236175 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094603596 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081743833 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114313101 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244242711 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120076172 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103555264 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100466292 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103718214 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122429895 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111909719 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10842486 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093004945 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166292369 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220413878 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109657195 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125809411 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095497126 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111810157 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14261954 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141991633 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096462299 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081407765 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173096283 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126872685 seconds)
  done (took 5.130552953 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.198814363 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120111572 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168154146 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163552104 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139518637 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.159922887 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112103143 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256453302 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.127978773 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166616812 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140611022 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116329242 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080935362 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098233801 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095786619 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.681038143 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.123564178 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.156302489 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116076794 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103010612 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084050858 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.721917296 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10356392 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080691052 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099044943 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066495268 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159762008 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099404851 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.140418763 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101623776 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104009274 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134575546 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193965247 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125040409 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134585789 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079275087 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.0966908 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175610217 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086827056 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098258262 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120663545 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133397331 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119123704 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099570744 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096504254 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.205715627 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096111436 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097956445 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.170178525 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.975562331 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183127907 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091939466 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097129916 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323530743 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098954057 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098054805 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.078630038 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.09462675 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.271253946 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.197880845 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080902965 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.09806059 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095631429 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083101571 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.736629774 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100334837 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.123234623 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082576063 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106188536 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082766076 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096684624 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104009004 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088314557 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115380353 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080810656 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099467728 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079741494 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097015761 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082107543 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094795701 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107658294 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085973933 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097381437 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.1493978 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.093083941 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099477341 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128278398 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099714783 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078716481 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131226728 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09864549 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081099075 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.134099962 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098441021 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.092331773 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100214558 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143588329 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096194856 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.077954645 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.187518571 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081915016 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.129443532 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099298533 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114952073 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112485465 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099107658 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085089849 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096182682 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078499376 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164901015 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080352196 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096941501 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082091787 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110931712 seconds)
  done (took 23.826666094 seconds)
done (took 40.946181981 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.346637522 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107410931 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104166328 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10447047 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102887829 seconds)
  done (took 1.525557961 seconds)
done (took 2.259766792 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.300627801 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.214300289 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078037427 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166997327 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093775805 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.17264213 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159228041 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112507383 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.220335308 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.078010859 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.180918433 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077010533 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093439325 seconds)
  done (took 2.704888363 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09543581 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115448083 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082933738 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111374993 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077717242 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111231343 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093651622 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117371258 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110186711 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085205628 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093925632 seconds)
  done (took 1.820297554 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094908817 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113045841 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083258446 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110001288 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077273653 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110719608 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09477381 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115359753 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109818479 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086045326 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094494414 seconds)
  done (took 1.815782828 seconds)
done (took 7.06211331 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091777102 seconds)
  done (took 0.814141077 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.941671695 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.967950501 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.114077103 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150959677 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.316312325 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.194737898 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.484798004 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126998918 seconds)
  done (took 11.226249578 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.157307669 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084646017 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101371945 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082391197 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101052921 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.08609898 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100226859 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101433648 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082973263 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099013636 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085422855 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103518368 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100515336 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086191234 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102475235 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085872411 seconds)
  done (took 2.352484478 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.130976064 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.130551069 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105685843 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108946061 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087305317 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105127299 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106782794 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088764982 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101519617 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104247934 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090674515 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105405819 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103634152 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079834597 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106369241 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107557466 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086164006 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105277348 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106968531 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090431358 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106571304 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095564827 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087366883 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106005301 seconds)
  done (took 3.285154173 seconds)
done (took 18.403745754 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160177159 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108920794 seconds)
  done (took 1.003392605 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095473533 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112689629 seconds)
  done (took 0.944203673 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097799616 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096362815 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.1222469 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109121301 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080138311 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096471567 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119693345 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080094698 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095896932 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080257422 seconds)
  done (took 1.718132139 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082032263 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109043087 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101135184 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094239811 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105029214 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094792398 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088539108 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099024101 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109821607 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076792739 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10255417 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114872953 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085270625 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11652555 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104560756 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083530011 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102989042 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098856128 seconds)
  done (took 2.515185317 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07968489 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097378734 seconds)
  done (took 0.920554397 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080691417 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094160902 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08122297 seconds)
    (4/7) benchmarking "year"...
    done (took 0.09727183 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094555117 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077690331 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094499616 seconds)
  done (took 1.362278446 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.471578566 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.136042361 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.256151593 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.08549284 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119761589 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.31969056 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097825636 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084907138 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103040154 seconds)
  done (took 2.473968891 seconds)
done (took 11.675007696 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094253781 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118363434 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114639577 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.470177928 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107942177 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097548905 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.160788796 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.253542082 seconds)
done (took 2.163037382 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.149184571 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328898681 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.115515468 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067520118 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095898709 seconds)
  done (took 1.357752326 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080022499 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100366253 seconds)
  done (took 0.929257827 seconds)
done (took 3.188855361 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080951949 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097736513 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078978842 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.144283804 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082266791 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.098770677 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.0805715 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.101556491 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079729101 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.100681759 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.096635104 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.080591393 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097137044 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077976295 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094813645 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.07980937 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097415451 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078297524 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094482909 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077323856 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097395013 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078275103 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.095084407 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077769746 seconds)
  done (took 2.953527937 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10049761 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100124954 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103338038 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085816992 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10274121 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086529194 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102812344 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098420686 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085861045 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100386264 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101462709 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084634273 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099863396 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084717045 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100135974 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101601766 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086371717 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100844474 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085641202 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104254796 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105616157 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083396194 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103575948 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106173373 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086343769 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104251106 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085674505 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100549719 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105478275 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08708434 seconds)
  done (took 3.638112767 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084979168 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095204032 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.0788381 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103892727 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078756051 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097383452 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077672408 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096335322 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078726127 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095952831 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080415875 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094956511 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078151486 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096967085 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080429918 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09915791 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108346133 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078203624 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096472562 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080340357 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098861309 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078419366 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09633836 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077967277 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095539654 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.07823548 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096341593 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078252668 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096878557 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077916663 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098893326 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08225421 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095381175 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085244621 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099184545 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078842955 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099827191 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079097957 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098707718 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097997936 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080350382 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.098486997 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080307138 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105506174 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080468368 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100962448 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.08025865 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.100437139 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080885444 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.102271606 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080185907 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.098038341 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082433425 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099297184 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.102193874 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079485261 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09978409 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079681836 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099272039 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079773804 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096708263 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077878334 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097740781 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079583078 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111826898 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085120063 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095488305 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080284009 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097140498 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081435085 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097252582 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.11019819 seconds)
  done (took 7.249909547 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.0833901 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106947759 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081758247 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098297713 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076795326 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096791161 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099647893 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078264962 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098273167 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085453813 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096888353 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080223879 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097799454 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109224823 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07962409 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098260185 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085965965 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094407572 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079397867 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100230014 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080602751 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099359275 seconds)
  done (took 2.766240207 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209824986 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105155252 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143029296 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107083267 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083134399 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106746739 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104682753 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088197522 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106533596 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085753406 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103381589 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10478297 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083321295 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101877762 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101374294 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085440155 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104106381 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086504956 seconds)
  done (took 2.673319134 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093222099 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099077509 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10362397 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099319347 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099585585 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084217237 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104978532 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109126419 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084640724 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098975347 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094097983 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102825687 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104809949 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084201845 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104319812 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083871104 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10401827 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084615285 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111743648 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107398821 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.107788349 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092856548 seconds)
  done (took 2.923598425 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097689251 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101284493 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118895057 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084052507 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097212172 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080175948 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107360673 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081992197 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109817976 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103779973 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084455315 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.10023111 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090742343 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10118239 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.108137379 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084821368 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104959301 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084425988 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10373365 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080493226 seconds)
  done (took 2.69226496 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102980576 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101064032 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100364338 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092205514 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10082415 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084041898 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108895863 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100582147 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082918023 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125354033 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100585311 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08273933 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110015294 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107393014 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100534628 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092607267 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.1097286 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110322173 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082769767 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100177436 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127416302 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084478996 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109985051 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100468906 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082988711 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100833853 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101458357 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088694226 seconds)
  done (took 3.562308182 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081644753 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100083863 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079145383 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097067894 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079933441 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097407992 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078869681 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097405357 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081656874 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096717025 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081051982 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.10046805 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081829048 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101458645 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08517868 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102740808 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083274995 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099614799 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082669616 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099191856 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084220564 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102160713 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084411578 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.100055102 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081073282 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102269456 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081800763 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099709075 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084343005 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099480445 seconds)
  done (took 3.497874906 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091895346 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107926298 seconds)
  done (took 0.971742868 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079249059 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116360829 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079516691 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107177249 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089893612 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103338537 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11212879 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088947395 seconds)
  done (took 1.547456578 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096958312 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111138413 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083273481 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113267589 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.111940704 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097928356 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170147643 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.104867402 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090823315 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.101155838 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.117881954 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084581446 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110538152 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085509597 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109955951 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091362693 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101793115 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.092122663 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.107921389 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102681084 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087010631 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114867513 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086895931 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099912094 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086339634 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114775018 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113102648 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.0862926 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10749406 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113349259 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091335788 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.097889572 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084793358 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104681348 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.083125371 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.113501806 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117302898 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087976668 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113258323 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085571486 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115320741 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.099404518 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090234858 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.110535022 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095959591 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.104567679 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086833682 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.098652709 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.100998991 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087183712 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.099109488 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084623536 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09858716 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103007091 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.108137088 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118350603 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083569792 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10539977 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088010242 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.107225021 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091752193 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105178449 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08775812 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.103933703 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111590404 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08929526 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112070599 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.081018078 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097658828 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08264336 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.112719897 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126247168 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091797003 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103194649 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084217712 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097902889 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103948862 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084523373 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107818852 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090960605 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100936539 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107533473 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.205630051 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100930624 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085184596 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108540389 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098835473 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085473643 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099425141 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097191155 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099641253 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081193777 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098634733 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.114051011 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085166112 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100783244 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080230321 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107646287 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.0766537 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101078667 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084551732 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10141108 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110222902 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088628569 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106687741 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108691739 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090236781 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101055847 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086555479 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097456253 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084153407 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103561527 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106860627 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077044072 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106954861 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086571947 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.105190875 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091969503 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101513305 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085358933 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111828891 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.111244949 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082126683 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.100157806 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086388273 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103433435 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08894129 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.108743775 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099884956 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.07859311 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096505885 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086178123 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101030546 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087740854 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10703209 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104193803 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077115954 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098712736 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.087302857 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107958762 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101121517 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08312198 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106232828 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083235704 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099901491 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088740299 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.103104762 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.082104432 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.105252703 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102797918 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077952797 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105161182 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08549205 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099889851 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087278593 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105099795 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10434438 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083918226 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099948163 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088663546 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102020936 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082033286 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100584486 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081459794 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109942202 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103337824 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078170144 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09873592 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090366227 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099401063 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082322664 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101452406 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103515718 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083734996 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.09869174 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083244336 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.10261875 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094614391 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106182801 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102894073 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.08826537 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112089074 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082532947 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.103583573 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101347614 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08472225 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103216539 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090779501 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106928119 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107382113 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.08552432 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098635735 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089985314 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110055562 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082397852 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.0993619 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081795512 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104637023 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108365285 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086891685 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102301042 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081554734 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10192143 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106276186 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086017068 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100912342 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081642967 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106268144 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082868851 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10875379 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102855938 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092474227 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105457022 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078623702 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104832477 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099310091 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089634473 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097888472 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080688265 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100456053 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084330028 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100082106 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085759695 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096845007 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090516227 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109273634 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102006203 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082026803 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102034254 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092212221 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104179154 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087199616 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104995692 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107312662 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097204767 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101115749 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086616599 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111483715 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102589401 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077401763 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10823555 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081875758 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102060499 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083667754 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.103368162 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089121335 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114213933 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110533744 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079317424 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10812734 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085019891 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.103676794 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081541196 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112163577 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109700974 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087986176 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115566122 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087988909 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.106398391 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089800198 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.105205532 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106804721 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086801319 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107312289 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084874738 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106503178 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083708608 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106330114 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083140831 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.100413629 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.10646901 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.086637483 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102650659 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088827399 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104160814 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086002358 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.108305665 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.106688854 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088143638 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.10589782 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086449378 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108660717 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086818206 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.106397948 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089462003 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.100479222 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093194654 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.105171429 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114015258 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086022071 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.102009292 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.092144289 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.108407723 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.112584044 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087458391 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106528934 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08745529 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.105237423 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089349314 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11370569 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.103953234 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096363029 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111927319 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08633073 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.109331783 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086272239 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107710706 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085112946 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.107770513 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.107227077 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08609262 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.106092567 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091376849 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.109091817 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086782631 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107455242 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107139423 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.086653516 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.1087285 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080331165 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.105520266 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085785071 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10735423 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094182683 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.106529585 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.109135866 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.085356692 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108109328 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085330312 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.102599246 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095093976 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117244832 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.107958095 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09481652 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.105450471 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088058856 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115419963 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.100853234 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084555422 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.104272274 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084015405 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114490472 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088168826 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.114830219 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087038905 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.106274906 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.083723481 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.107960449 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.105025446 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080849603 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.103696948 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08886002 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.10933288 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086059213 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.107575505 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090112327 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108060264 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114369381 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.087164005 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.108137504 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087743094 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.102806629 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08564975 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.106074329 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089543168 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.107576075 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.104238813 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08405776 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.106567635 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089242421 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.107534009 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.08798659 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.108042811 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094658715 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106295661 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.110026812 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090857712 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.101240781 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089598017 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.106331956 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086514283 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.105849992 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091001941 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111017713 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10862224 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094485428 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.106456299 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088717338 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107549621 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.085088058 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105315163 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.106493369 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087086399 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.105423295 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.08925727 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116084035 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.085177651 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.108713753 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086681992 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.107784914 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111951345 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.089063257 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.109285273 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095695455 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.110070749 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088344173 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.11303623 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.110909628 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090860615 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108295514 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088789036 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113675801 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.106337645 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.095431504 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.107207374 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088315408 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.109188818 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084599168 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107371991 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086488109 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105438037 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112017233 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.088166 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.106470637 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08652336 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.105552593 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088690454 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112056143 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115417326 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.090288178 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110801075 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.082385141 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.103949773 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08990925 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.105043031 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089290209 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.109745655 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112658011 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086751006 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.104406872 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083773515 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110400159 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089654536 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107350502 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101604356 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088868536 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104570191 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086846846 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104468056 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.08459512 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105504832 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089373439 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.105487262 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102877197 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093236417 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107346846 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085975508 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104393146 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084556064 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104349886 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099565856 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085436786 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105611783 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090653059 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106106529 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084145433 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112682613 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.102771442 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084701608 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107853936 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083806338 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.110302044 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079823669 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.104861746 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105186023 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086317363 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098983119 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084319402 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.101375939 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086683768 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102819232 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079885567 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113319624 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.110600981 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087278262 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102494982 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083190842 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099017535 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079799817 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102909521 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085522786 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10532294 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11302259 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084044969 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103236239 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079614599 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104058951 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087946983 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.1069539 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08144952 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099236805 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082971922 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105527077 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.11032509 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08336498 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103700263 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088298015 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106083411 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082307283 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108362431 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081120414 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.10874442 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114630725 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085309493 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104284518 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089795199 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111751263 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.104818059 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079990113 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.104181836 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086401367 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103504259 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.086178285 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104543572 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117385486 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0879367 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.103147883 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083866128 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106788297 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084247249 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.113658515 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106077773 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086176214 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108234845 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086823721 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114721308 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107423285 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090335906 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106359125 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08661232 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104285004 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084763849 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102871641 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083052761 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107114853 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104556952 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089247996 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111382255 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083547835 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113910753 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112009916 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089047683 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.101069818 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084544724 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.10627904 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082862949 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.109045146 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084834855 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10574103 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085741799 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.105164907 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105381279 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091120358 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.10691276 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086013708 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104530996 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.07817112 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106170004 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087566465 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107254935 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100637082 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085003806 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106154568 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090577681 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108446439 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.085106036 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106522175 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086327944 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105098489 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100795984 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091178533 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10300715 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088028475 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10359389 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084339955 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105163753 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087958806 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110452502 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106047771 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086995548 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11726477 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087078486 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102420997 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101013971 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090378335 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102190426 seconds)
  done (took 59.261454426 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148744801 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081375582 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100267778 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080309133 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113858973 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101773779 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079473569 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10084016 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08078634 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103041141 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080255506 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099779677 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109959244 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125596211 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094584642 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105207024 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079786609 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101062338 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098926685 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081789113 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109905702 seconds)
  done (took 2.898250707 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105914065 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118134649 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116148974 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12138264 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090691194 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117329495 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116504718 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116489463 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100782069 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111912327 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119864294 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117415067 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092389711 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.11226991 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112601893 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09448864 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120731582 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110724142 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116779436 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097184009 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114472355 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115484002 seconds)
  done (took 3.260300763 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084685175 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102910784 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085800714 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099357411 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.085142769 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099048541 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088064356 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.103352718 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087710623 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102579242 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08313721 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.103440649 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10598837 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079876339 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103328099 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082656301 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154236776 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108808706 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083788311 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106258808 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.100399585 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08662893 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.100091205 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080085342 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103175173 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088363345 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104966837 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082196245 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104379506 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083964624 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104109892 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081450585 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106609295 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.105741416 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082962583 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.103268697 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084368614 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103579871 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079979641 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101931975 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085339077 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099787061 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085098926 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105809527 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082267488 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102348303 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085923847 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104698553 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098881416 seconds)
  done (took 5.511162855 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105615742 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.174209496 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08667642 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.156638474 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121945924 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114579668 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088000729 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.155294019 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10306319 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083509708 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122653876 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121369739 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.1046335 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090028932 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111132295 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104729598 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085927774 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10328199 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108891669 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083897534 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109691751 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091213492 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121082319 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118771677 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109488087 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084095499 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104462623 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110788081 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098015603 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110900043 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111168654 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091470991 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121553043 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106036798 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083931914 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109017859 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123254785 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105701216 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087742245 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102664253 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087640572 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110724052 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112523881 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102596092 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106104745 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.11001803 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084638727 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102240813 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118249023 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088262512 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113806408 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120226434 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109450815 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086395658 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109945803 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121285411 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085541637 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103741836 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088415098 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118739856 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102304355 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08942232 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.11933849 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106873614 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.113288261 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100131076 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110242359 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10902255 seconds)
  done (took 8.223468476 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094641209 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111803748 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122030784 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123025332 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091940637 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112031045 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113109468 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.092123274 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114365421 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120491284 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113006795 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.136875842 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087936603 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119555997 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114946582 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093608489 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114226407 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114265356 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09425904 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115997461 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.116233062 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12422497 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093228067 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123843166 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144921848 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107332334 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092624567 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113357342 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12081922 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112556091 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124695295 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.0928717 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112361918 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122653851 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125814883 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091811616 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104904538 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112557996 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091719334 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112875829 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106774889 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102036473 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113683328 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107341894 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092350707 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112975598 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121792049 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125750157 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115501171 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098438018 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112391688 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121932382 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112386852 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093241424 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.12212446 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149264434 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123524057 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121828631 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113062066 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101305891 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122426581 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130930637 seconds)
  done (took 7.795882054 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108996448 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117325262 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.11898729 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101008983 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084214926 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110294032 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08288858 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10344516 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115149503 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095298136 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118184177 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109905133 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092565033 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118462027 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109505452 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113172178 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090127053 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109784309 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115401647 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110265688 seconds)
  done (took 2.961110265 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094407042 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125423301 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086385129 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.1164693 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.114542191 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095752102 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.113603031 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113936384 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090551727 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113558466 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101562634 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.123069791 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111534258 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096359563 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.12283982 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11836165 seconds)
  done (took 2.574614278 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096891987 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118271088 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.122216743 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08554866 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104599744 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081530622 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106726379 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10215067 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081785924 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.1227374 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086998807 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112857685 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.111142696 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087981135 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.104539258 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092201106 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.107412022 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087517536 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110648546 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.126379955 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100542877 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.11018214 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.112481706 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091224474 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.108728832 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091410547 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.11160268 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108706095 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088612357 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.11133107 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090817556 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.119605559 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106231291 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084053806 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104395986 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082733103 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106279841 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085913943 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109386069 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106280922 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084265439 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105799663 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085802697 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10741986 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08171964 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107499607 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102291985 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092615236 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10446043 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085172612 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105902708 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.108761218 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.08649962 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116978703 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089687046 seconds)
  done (took 6.386699238 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09913861 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110580377 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080942152 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104459527 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088919787 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109123287 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10976278 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089052769 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.1080685 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084180097 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108006936 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090139555 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110940539 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111943915 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088009463 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110698492 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081740722 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107531253 seconds)
  done (took 2.639034326 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091388158 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106377797 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094088159 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.1066473 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085563638 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109683349 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081693951 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106190666 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103871601 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085711941 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106052517 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088133928 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104374902 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088017543 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106739486 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085385042 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109017069 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10488617 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085704575 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101913472 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088066098 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10441342 seconds)
  done (took 2.988726599 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118920912 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125549502 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.094702967 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.235840897 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104138099 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.134064478 seconds)
  done (took 1.659354241 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109527892 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121977988 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108351944 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107322806 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116903675 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108967159 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089155828 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109430067 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11906768 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101629125 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109796582 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11946293 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119910172 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09748757 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116078016 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115806733 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109334279 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08877937 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106783563 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130070065 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088118675 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119989636 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108801924 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088281855 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10842066 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119233452 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118814884 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123427252 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088451913 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11928944 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11544002 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088481776 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119092124 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122902893 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10966785 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0982254 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108512663 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129380386 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116892337 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097743419 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110348911 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117370342 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099564174 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115856579 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120003591 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109758544 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093276812 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109499447 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110283192 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137225185 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094609445 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119636756 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115656092 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120179645 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119565112 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137275133 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102526721 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118278986 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115852691 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12468269 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119249244 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095278506 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118314581 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123882798 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117263276 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119288834 seconds)
  done (took 8.229276573 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103969371 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127775202 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109631366 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12435555 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098188078 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108476372 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109097457 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088504113 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109054081 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108736504 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154226128 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088835205 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119437862 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118729201 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108181393 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089068619 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10957621 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119002262 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087996516 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135580009 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109648128 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119556773 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119290025 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099073197 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123823777 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115738888 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110045736 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088748 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109140286 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109631679 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094556945 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108931266 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119185762 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087876832 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119308003 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109503034 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088058683 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115924949 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109554335 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117111707 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09817652 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1302201 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10938258 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109539151 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103017348 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110217073 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109868974 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087548644 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111174348 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109348 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102606693 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12315494 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123509685 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119873714 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110366116 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089204849 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110274051 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109083185 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088023942 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115713512 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119175157 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109485158 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136897682 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088074925 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109306273 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119757424 seconds)
  done (took 8.099152355 seconds)
done (took 157.712142372 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098906064 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137590234 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096887594 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.198507371 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108254698 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.1312308 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.147883945 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098296264 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107722274 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086590025 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107858176 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087910943 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.210044283 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086210157 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107443717 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109172737 seconds)
  done (took 2.772880644 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.201946477 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.256324959 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10255321 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106228134 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090081091 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11088081 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.10604418 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.09164227 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.111233338 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085945268 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109717386 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086470285 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106427296 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086011174 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.11110243 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088873745 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106436983 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088768297 seconds)
  done (took 2.904547117 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113395896 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.154376598 seconds)
  done (took 1.129925505 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119400422 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181844059 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.322222594 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157948327 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107408248 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128876386 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.159049304 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131915406 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198245835 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123845526 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123944769 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097140852 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141488119 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116238258 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.09449436 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119430314 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143507366 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093826255 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11678753 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.118216475 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117732625 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107274531 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116943739 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093787691 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18288102 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119725939 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086503541 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106997032 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117502958 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094266418 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114906609 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.12614154 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099758349 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177256836 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102920809 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.179025943 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098938349 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115975674 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116144103 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092021606 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119506405 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119575505 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104837153 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118946674 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.0856404 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120286441 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107397448 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.08562033 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116563664 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097461427 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116180578 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113967624 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.157639476 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119251137 seconds)
  done (took 7.60556919 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.807462429 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164788683 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095497925 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.903402752 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143401154 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107850812 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.796242363 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.137733879 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.244676925 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.777561982 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135436963 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124258783 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23055453 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.238773868 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.935116397 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312262382 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.680132316 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103209282 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153499459 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.157795652 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121949684 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143156845 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.135495625 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431626772 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095659379 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113213083 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118093541 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100095432 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161159903 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126877757 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115565086 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.180771308 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247823547 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207615705 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117828373 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08988482 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113138201 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170930579 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27039817 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21792297 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182840073 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088027206 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111685848 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122889632 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111884803 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109283847 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164928042 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175333022 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.195736849 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093303417 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122511445 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121783344 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121741511 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167314422 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121592428 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291216138 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.327179111 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113026319 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122499296 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105744212 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268831438 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123781671 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227019195 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118431392 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216078565 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112550377 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.806384456 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.192501493 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090978264 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119330868 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120176181 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095483197 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12213935 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170059898 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.410059897 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126113333 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093299534 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112223811 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.209182888 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126629956 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112363898 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163593416 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117688371 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100025746 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127443682 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12380808 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.173874979 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.229717615 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125547505 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120624064 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094715878 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126538369 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117117617 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.216412369 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222259436 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163790575 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.214625193 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123516671 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.165602007 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.191103268 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099748504 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196432292 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098230249 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127190518 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124928339 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219308641 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148366331 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101947347 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.1165166 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12013884 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150276026 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127728754 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098244555 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.171532397 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.484832771 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169483088 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.10960655 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128773274 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099737143 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162126576 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119173011 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265318993 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123392247 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.172167363 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120983061 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08792905 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122343326 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165808044 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124854366 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099981284 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124389024 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119560799 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.234533757 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221348506 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123894507 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22179857 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.186595273 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119495987 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174458368 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122014461 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170418846 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122135345 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123002642 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095294851 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.820337339 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125646898 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099215733 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116902658 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189985216 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112732485 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103138885 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126136473 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109734335 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.796248985 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128959037 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122362986 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103724238 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119421315 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122321027 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096449109 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116500531 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16424272 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234108044 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122729629 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120911334 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104025345 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183619201 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095785911 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126598965 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125672196 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126656012 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101137995 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116580049 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125546315 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172416767 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.165192092 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223814274 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.597107229 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090691973 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125637855 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231642611 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090673925 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292521679 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121357138 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.227172926 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.1668239 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122257584 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322784164 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.169815469 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.189480021 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128237906 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.17617618 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087922015 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11964214 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.1657049 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113953714 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119126233 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.16451502 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127576627 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103031217 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.963324115 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113558462 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234642447 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087364033 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.195221577 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09530104 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121398315 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296029828 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112939091 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108059824 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.188062384 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094112015 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.127467519 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.850726052 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126214907 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123004386 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119625465 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203029842 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.189166556 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09734031 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120745128 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122502287 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.165942405 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.213871887 seconds)
  done (took 44.724934168 seconds)
done (took 59.993286532 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.292981967 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.233241383 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.248163163 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169013374 seconds)
  done (took 1.912717332 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171061973 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150153024 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121181246 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107735786 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150532353 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085611003 seconds)
  done (took 1.675738193 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.355361598 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271787703 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241442612 seconds)
  done (took 1.759425906 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.301046972 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.262098905 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.358801656 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.401900092 seconds)
  done (took 2.336026897 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.222883621 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132411035 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.113040981 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10474988 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.199241353 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.252206039 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14290949 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203195007 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.123505518 seconds)
  done (took 2.431742879 seconds)
done (took 11.00862841 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.270459761 seconds)
    (2/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.330192825 seconds)
    (3/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.247863254 seconds)
    (4/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.200609376 seconds)
    (5/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.170505892 seconds)
    (6/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.214972387 seconds)
    (7/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.099890294 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.184184741 seconds)
    (9/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.152160678 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.129584407 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.136128124 seconds)
    (12/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.095540261 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.12269151 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093873818 seconds)
    (15/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11427585 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.146818574 seconds)
    (17/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.181410942 seconds)
    (18/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.153443649 seconds)
    (19/286) benchmarking ("sort", Float32, false)...
    done (took 0.175186811 seconds)
    (20/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.117633721 seconds)
    (21/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.09271849 seconds)
    (22/286) benchmarking ("sort", Int8, false)...
    done (took 0.190039666 seconds)
    (23/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121574858 seconds)
    (24/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.183205046 seconds)
    (25/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.257703921 seconds)
    (26/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09675114 seconds)
    (27/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.110659793 seconds)
    (28/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.137371974 seconds)
    (29/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087687477 seconds)
    (30/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.120714055 seconds)
    (31/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.17079434 seconds)
    (32/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.158900224 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 0.22440177 seconds)
    (34/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.123266771 seconds)
    (35/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.156260381 seconds)
    (36/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.159065972 seconds)
    (37/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.186374214 seconds)
    (38/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.159001488 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094246066 seconds)
    (40/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.1425848 seconds)
    (41/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.166693966 seconds)
    (42/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.070681162 seconds)
    (43/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.117124749 seconds)
    (44/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091456013 seconds)
    (45/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112265214 seconds)
    (46/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.092682971 seconds)
    (47/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137894117 seconds)
    (48/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.239288715 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094618492 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133446984 seconds)
    (51/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067418812 seconds)
    (52/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.152250951 seconds)
    (53/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088493131 seconds)
    (54/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110313222 seconds)
    (55/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.092401717 seconds)
    (56/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.175080167 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.137122135 seconds)
    (58/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.185038558 seconds)
    (59/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.171175985 seconds)
    (60/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.219842514 seconds)
    (61/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.088571211 seconds)
    (62/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.155123607 seconds)
    (63/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100405728 seconds)
    (64/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.122645167 seconds)
    (65/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.139783626 seconds)
    (66/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.219354716 seconds)
    (67/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.098041726 seconds)
    (68/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.132215532 seconds)
    (69/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.18667626 seconds)
    (70/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092503117 seconds)
    (71/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.12777121 seconds)
    (72/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.084085007 seconds)
    (73/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.186583802 seconds)
    (74/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.172772107 seconds)
    (75/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.097561394 seconds)
    (76/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.185489322 seconds)
    (77/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.170338229 seconds)
    (78/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.183072712 seconds)
    (79/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095096266 seconds)
    (80/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.117671039 seconds)
    (81/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.099404236 seconds)
    (82/286) benchmarking ("sort", Int64, false)...
    done (took 0.111099934 seconds)
    (83/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093796618 seconds)
    (84/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.09070763 seconds)
    (85/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.093907562 seconds)
    (86/286) benchmarking ("sort", Int8, true)...
    done (took 0.220947621 seconds)
    (87/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.198226256 seconds)
    (88/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.172798337 seconds)
    (89/286) benchmarking ("sort", Float32, true)...
    done (took 0.233159299 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.096811454 seconds)
    (91/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.125261693 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.086651756 seconds)
    (93/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.156136142 seconds)
    (94/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.232885933 seconds)
    (95/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.070537939 seconds)
    (96/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066114527 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.111469163 seconds)
    (98/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067112562 seconds)
    (99/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.102460538 seconds)
    (100/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.161221876 seconds)
    (101/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110885716 seconds)
    (102/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067023071 seconds)
    (103/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.100666535 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.087173771 seconds)
    (105/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111504077 seconds)
    (106/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100408092 seconds)
    (107/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.172802836 seconds)
    (108/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.11213486 seconds)
    (109/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.11431302 seconds)
    (110/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.110944594 seconds)
    (111/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.140563359 seconds)
    (112/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.133653778 seconds)
    (113/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.09161419 seconds)
    (114/286) benchmarking ("sort", Float64, false)...
    done (took 0.149290752 seconds)
    (115/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.091059536 seconds)
    (116/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.096542454 seconds)
    (117/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112656613 seconds)
    (118/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068997266 seconds)
    (119/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.08300527 seconds)
    (120/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.102249377 seconds)
    (121/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067435799 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.109477758 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 0.181275638 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095604113 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118172807 seconds)
    (126/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.097934962 seconds)
    (127/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.111777476 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093273975 seconds)
    (129/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118300822 seconds)
    (130/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.09739625 seconds)
    (131/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.190729371 seconds)
    (132/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.177010774 seconds)
    (133/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086675244 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118913162 seconds)
    (135/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.115525482 seconds)
    (136/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.06684436 seconds)
    (137/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.147168715 seconds)
    (138/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.162540635 seconds)
    (139/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.192245176 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.110452278 seconds)
    (141/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.148862118 seconds)
    (142/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.100512053 seconds)
    (143/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.086225206 seconds)
    (144/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.188726631 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.086134585 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.110516161 seconds)
    (147/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068431582 seconds)
    (148/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118867597 seconds)
    (149/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.130227656 seconds)
    (150/286) benchmarking ("sort", Float64, true)...
    done (took 0.230774777 seconds)
    (151/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.140118825 seconds)
    (152/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.118793257 seconds)
    (153/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068373091 seconds)
    (154/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.12457865 seconds)
    (155/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066875956 seconds)
    (156/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.098248699 seconds)
    (157/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.090210215 seconds)
    (158/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067732318 seconds)
    (159/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.154858083 seconds)
    (160/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.149369267 seconds)
    (161/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138250361 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.122234716 seconds)
    (163/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095534474 seconds)
    (164/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.09154769 seconds)
    (165/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.096413673 seconds)
    (166/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.177661556 seconds)
    (167/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088176328 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.111146044 seconds)
    (169/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067180147 seconds)
    (170/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.128089872 seconds)
    (171/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.121381895 seconds)
    (172/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.082740893 seconds)
    (173/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.089064525 seconds)
    (174/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.092855132 seconds)
    (175/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.094447242 seconds)
    (176/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.156624964 seconds)
    (177/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066781445 seconds)
    (178/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.111489508 seconds)
    (179/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.06863615 seconds)
    (180/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067494697 seconds)
    (181/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.111596755 seconds)
    (182/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.177225238 seconds)
    (183/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.161482226 seconds)
    (184/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119917936 seconds)
    (185/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.175724574 seconds)
    (186/286) benchmarking ("sort", BigInt, true)...
    done (took 0.235796478 seconds)
    (187/286) benchmarking ("sort", BigInt, false)...
    done (took 0.223736969 seconds)
    (188/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.197991995 seconds)
    (189/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093823006 seconds)
    (190/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.120444604 seconds)
    (191/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.098803904 seconds)
    (192/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.125405161 seconds)
    (193/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096732162 seconds)
    (194/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.11092823 seconds)
    (195/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068027387 seconds)
    (196/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.137591559 seconds)
    (197/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068240968 seconds)
    (198/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.092555423 seconds)
    (199/286) benchmarking ("sort", Bool, true)...
    done (took 0.223046883 seconds)
    (200/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067590865 seconds)
    (201/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.110737881 seconds)
    (202/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103049522 seconds)
    (203/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.067235848 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.111948892 seconds)
    (205/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066587035 seconds)
    (206/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.140495247 seconds)
    (207/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067704377 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120846859 seconds)
    (209/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.096448466 seconds)
    (210/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.112669003 seconds)
    (211/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.114777133 seconds)
    (212/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.108469598 seconds)
    (213/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.183592511 seconds)
    (214/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.184674015 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093052475 seconds)
    (216/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.120270132 seconds)
    (217/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.088263378 seconds)
    (218/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119075789 seconds)
    (219/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.087632122 seconds)
    (220/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109885021 seconds)
    (221/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.186147996 seconds)
    (222/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.092573684 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.111568967 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088116549 seconds)
    (225/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.183557661 seconds)
    (226/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067455143 seconds)
    (227/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.093556623 seconds)
    (228/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.112264646 seconds)
    (229/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135635793 seconds)
    (230/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.076433963 seconds)
    (231/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.09236317 seconds)
    (232/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.096418849 seconds)
    (233/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.110866452 seconds)
    (234/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.092682766 seconds)
    (235/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.091616613 seconds)
    (236/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076529935 seconds)
    (237/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.113387095 seconds)
    (238/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.099644024 seconds)
    (239/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.068244236 seconds)
    (240/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.117707482 seconds)
    (241/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.079186223 seconds)
    (242/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.092309007 seconds)
    (243/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.096312181 seconds)
    (244/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.092516318 seconds)
    (245/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067059491 seconds)
    (246/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.067693532 seconds)
    (247/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.111530345 seconds)
    (248/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.067447652 seconds)
    (249/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067974227 seconds)
    (250/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118324133 seconds)
    (251/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.149306872 seconds)
    (252/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093556622 seconds)
    (253/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.111410079 seconds)
    (254/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.141580743 seconds)
    (255/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.092944847 seconds)
    (256/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.09638915 seconds)
    (257/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.113743712 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.087147888 seconds)
    (259/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.135670623 seconds)
    (260/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069514522 seconds)
    (261/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.102680448 seconds)
    (262/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.090981325 seconds)
    (263/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.170705084 seconds)
    (264/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.113430683 seconds)
    (265/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102069904 seconds)
    (266/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119077978 seconds)
    (267/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.067330026 seconds)
    (268/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.159764182 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.09568941 seconds)
    (270/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.111085544 seconds)
    (271/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.078074461 seconds)
    (272/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.092423709 seconds)
    (273/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086712498 seconds)
    (274/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.067958403 seconds)
    (275/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120645719 seconds)
    (276/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.067236818 seconds)
    (277/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.11371114 seconds)
    (278/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105079093 seconds)
    (279/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.118927609 seconds)
    (280/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069445636 seconds)
    (281/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.092398261 seconds)
    (282/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.069186478 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.113321017 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.112379693 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.111590866 seconds)
    (286/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068897083 seconds)
  done (took 36.202854716 seconds)
done (took 37.098336808 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100885926 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.143386908 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096860142 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.1368384 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.12550851 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092589034 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119965855 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099327483 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124967747 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.128241066 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.100179301 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094722859 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097699488 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122075068 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097703349 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141239068 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125230169 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094681839 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.12123445 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086691134 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120534523 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089337782 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113831897 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070352697 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123878867 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094879724 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118168401 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.123141406 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087509495 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112533883 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090913364 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118934503 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087437057 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125323327 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094088823 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120871059 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097888312 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.122504102 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088628082 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111435532 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120516571 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087580172 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.119003553 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095897724 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118613496 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093001117 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120476444 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099942706 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.142435111 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.354526199 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095616163 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122997841 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097135358 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119426632 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091655221 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121339375 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092011765 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140687611 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120618959 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092752917 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119771054 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094492611 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117425567 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096384542 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121079143 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122725015 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098673703 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.118113549 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09768408 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117898224 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087581554 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120894203 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.091095233 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111670253 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.097198018 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123594567 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086416973 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118072885 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.119416131 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092785555 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111438493 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089327056 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113417945 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094123889 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114773318 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070178227 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.091169088 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118401839 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111252573 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095746748 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118295305 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094503083 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113547369 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098998791 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111957908 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092965221 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111876886 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087868762 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114481866 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.092081688 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112159185 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090233553 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121304953 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090206681 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118523731 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.126048757 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.08702836 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118539547 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086960744 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11217826 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102275024 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.12345036 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087193259 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118263318 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086115721 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120338089 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087287557 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111511053 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087519092 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112074032 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093267061 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112655775 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090927219 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.120293618 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126231429 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.08742782 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115668973 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09013733 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112046583 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093470839 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11229564 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087331553 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11524515 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078187424 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115476419 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08714719 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.12001228 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090275183 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.12051879 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088875969 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121845342 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091956342 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118457255 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093640746 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111480374 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075178773 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.1178591 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090264037 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114250028 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087967388 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11422861 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087372273 seconds)
done (took 17.34145158 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.08825886 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187045584 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153609173 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143139811 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108002562 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113007832 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123864888 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120465127 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114514754 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146686044 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110891611 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13273174 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.153588399 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087988066 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113055762 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091468093 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115552202 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.129052783 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127595339 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134408968 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165557678 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.112286382 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.122931032 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.142316477 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.124345519 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114887671 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113673667 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091910341 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.126903158 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.128878228 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.10850944 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.128289687 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112830568 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.111339112 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.130724629 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.0967207 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.11318487 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.095011874 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.113959785 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.087766397 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141659034 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.136992772 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.118952267 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.093813292 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116920792 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.100370927 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114275222 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122018503 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.100043724 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117208719 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.103881469 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157691923 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.116087212 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12394451 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087183494 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125463318 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.099008335 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.127311747 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112958832 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.099841117 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112330152 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.101831818 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129789136 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142325535 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092433779 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.124389857 seconds)
  done (took 8.803058469 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104316942 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.142033332 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105574929 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.13165471 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113445468 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087878094 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113958191 seconds)
  done (took 1.756988564 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089133351 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135281372 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111792165 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137809908 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133737366 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112343231 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12453261 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088483268 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132374967 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089710149 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135785454 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.15126513 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.09115052 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121917573 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.140064098 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088521487 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.139237829 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089591678 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117846664 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11283592 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117251286 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136220427 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091108382 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114785634 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103064006 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115458496 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163503528 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094532649 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11591091 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092152459 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113099551 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.152186735 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102865557 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125609349 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08866605 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131316431 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129326869 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086826174 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126906035 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093969101 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129239195 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089548944 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115750925 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087308095 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119620691 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.0998273 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118411598 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.089816678 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117866577 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134467069 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090020402 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128592611 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089566826 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11946126 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090843327 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121843499 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099240969 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115622845 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134400183 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09085968 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131975197 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105645268 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.12974115 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131732007 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091488227 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128519832 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103909139 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118181228 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091733677 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118490568 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105951593 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113037064 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.090230565 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.125964935 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116712567 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11274624 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138814016 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092023762 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126195946 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089134027 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115910045 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.089397662 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.138283253 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119016051 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089329046 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119655123 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092125904 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.116251971 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089007758 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.120282814 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.08802174 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11955864 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09498077 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115952721 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092725274 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132281224 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116888813 seconds)
  done (took 11.892346362 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090843639 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116274801 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092095823 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115573665 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091762721 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116505683 seconds)
  done (took 1.592744418 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115085359 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11847075 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10465422 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12232504 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15785585 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104355344 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.132058222 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125018561 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108346332 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128335234 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130714426 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105456554 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137695963 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122697955 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10390592 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122115937 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10441921 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12675075 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129343586 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0967576 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138481416 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121636829 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097833042 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133477374 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11907498 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096021276 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127202678 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103170168 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.12862651 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124946822 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.09667997 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120118502 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095676837 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124365855 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130759276 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096893781 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122024264 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120221441 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101056304 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.11880853 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105781465 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12320044 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128269382 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094461837 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125283526 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121677808 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094083843 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125709854 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104627034 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120238096 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120503151 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094792338 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119867549 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095771279 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123242453 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125306179 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093964262 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131118409 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121083263 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096964514 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120253564 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093653506 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126012902 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118730386 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104234237 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120592452 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096925795 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.1223391 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123045492 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095424636 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120450626 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093015902 seconds)
  done (took 9.286655928 seconds)
done (took 34.286136502 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.696075135 seconds)
  done (took 1.664620126 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.836559071 seconds)
  done (took 1.806420788 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.960663793 seconds)
  done (took 18.96290322 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.498906124 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 3.396474928 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.006240478 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181130934 seconds)
  done (took 6.054889368 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.950928407 seconds)
  done (took 1.941968797 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283777355 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.235381988 seconds)
  done (took 1.495319359 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.789880169 seconds)
  done (took 1.77691402 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.141566542 seconds)
  done (took 4.121913006 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.327575826 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184758747 seconds)
  done (took 1.50451003 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.664707433 seconds)
  done (took 1.649665042 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.972759854 seconds)
  done (took 18.963824016 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.269431 seconds)
  done (took 1.269984688 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301931579 seconds)
  done (took 1.292242248 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.583927984 seconds)
  done (took 4.579915742 seconds)
done (took 68.064066092 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099470468 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127820329 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102416693 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125338697 seconds)
  done (took 1.44283613 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100348755 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122477737 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100782719 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12106918 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127689333 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096267918 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124906805 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101252285 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121324826 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098252505 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122162246 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120340504 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098845937 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124504677 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093955052 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125589123 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099486898 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12094964 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124835833 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097195604 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120232286 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098022881 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126162115 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094252227 seconds)
  done (took 3.676675093 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100854991 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11988594 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096664183 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119357229 seconds)
  done (took 1.437225425 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100426938 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132440359 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105591405 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126431148 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132956703 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106189181 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118530477 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092328322 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120516879 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.098862611 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116745115 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.140380652 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106877393 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125899624 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101550547 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115121289 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091241651 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132313493 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125563644 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100787417 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119266652 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099665447 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115711195 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109275361 seconds)
  done (took 3.731515525 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170410912 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128625558 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139835451 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095197605 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161219939 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.14144969 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088836869 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14170001 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08863882 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132127898 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119678316 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134046561 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130820226 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08810885 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115522458 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087977119 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130613644 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.13015462 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091356621 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128924635 seconds)
  done (took 3.449227813 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097718414 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118752897 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088825597 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117334382 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099408938 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121930615 seconds)
  done (took 1.645459459 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091406315 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114888396 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089058682 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115214254 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094938721 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115306248 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088546502 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11642987 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090345877 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11514676 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089621035 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114698173 seconds)
  done (took 2.237647376 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.488397568 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093307223 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121667858 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113292472 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.098456593 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115716952 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103103487 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119423659 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141013217 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089788241 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116207978 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091714694 seconds)
  done (took 2.69399935 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237485725 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126818028 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285886737 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.370842045 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157058693 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166456581 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.282047965 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163634366 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199593423 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151546811 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234217217 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197553495 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15407621 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193606697 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139968678 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.147459194 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190918847 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253750682 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154530311 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212403267 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209026343 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168466887 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180489932 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1536474 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113387749 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197559149 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.096082212 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131713961 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208658551 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209781653 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192424257 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162708779 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149538188 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240670129 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250891954 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197741121 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283472438 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135899239 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.143612576 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167274028 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267479298 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141133492 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236618007 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157691837 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105309427 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224441474 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167754892 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178928261 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.147593954 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14039981 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200956964 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245084943 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.196527592 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139971464 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306398802 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149540746 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.15847328 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191643642 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255844481 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228049903 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192031313 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122195241 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191463055 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192581681 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186346408 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.153477219 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.211339372 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149087635 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185024399 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191715277 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168257574 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207795402 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181938298 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140266193 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172544162 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174153948 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173939476 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261281906 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187231181 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123188055 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170588186 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149751285 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104093031 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195844078 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126211932 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216080696 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144351968 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.165423061 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211115265 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160747328 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163184259 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222168619 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187761943 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149309362 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084461405 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155899277 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156656561 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177828426 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141228339 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160325534 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159293659 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131428185 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169416139 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098262711 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186321907 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.119242607 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175637224 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184200359 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128701102 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162344074 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154848631 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150725051 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179725003 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202304148 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14164513 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134834319 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21065519 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178908832 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142353731 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179284242 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232119954 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117587592 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150734581 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229509307 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219508486 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141956286 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203514279 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1548875 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13660704 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134039715 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182771575 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15783979 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163775168 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134328888 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.185287031 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207268466 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126925621 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139455079 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197815407 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13471158 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133301053 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155319106 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121558215 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138645212 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144351182 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146577162 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176494978 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181885734 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155878512 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168627052 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151788124 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251437154 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14074079 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.12531245 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149102035 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122183745 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194923826 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227311564 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105011963 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235136649 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173257639 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202200041 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169291325 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136650527 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179379344 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131865482 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093377203 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223189104 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169059011 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164482788 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.199128624 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224763286 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.183467823 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.184241375 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167253385 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204090788 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.139510313 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156285911 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139541634 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16300446 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160854193 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123772865 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.11146382 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135996989 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151244171 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143830091 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107477762 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228812492 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172636974 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218228969 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132946303 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150154273 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182708814 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129785019 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177739203 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.207408478 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119534629 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.227447916 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194780896 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188371153 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145472448 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231442605 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093129865 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126958138 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143593325 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17252225 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107164515 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137596959 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164080158 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182147341 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209949485 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172079444 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208315554 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203129577 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191854003 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095456546 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.17055462 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186331456 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178377176 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181992923 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142024826 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152711415 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177473969 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154746823 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25629137 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171288445 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177962089 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20670732 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152934109 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133719714 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151886372 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178979859 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155948469 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17775005 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148574859 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140124957 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160795318 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103327911 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161667558 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215919325 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164770106 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189070233 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151035968 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188573425 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12899952 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163723411 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160727692 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166229222 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081214373 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202752334 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204083418 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147830781 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169990045 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189540299 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133481717 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.305668139 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238142715 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198925357 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139104811 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15702158 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161565881 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162892302 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172321245 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180776661 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16018645 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189155306 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161776696 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137164278 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112034585 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151464526 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154315103 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133537819 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149353509 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.179239012 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.110113608 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219163391 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15614202 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160862708 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174221093 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151838959 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117556227 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151525581 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244990021 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186710228 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241407517 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.12424905 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.207734977 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209638289 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126534491 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103543395 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13499165 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180894298 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137188178 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194140557 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.190406437 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228573265 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182577446 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179227586 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141749758 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121556305 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159435747 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168359416 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20540563 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150744671 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.148501925 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232100519 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110376221 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133608085 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167724486 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29028827 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14658163 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197437165 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079556084 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.307905355 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101055905 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132510453 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163704842 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209399055 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137228178 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181133293 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172026615 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16311286 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164821606 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150995466 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193483656 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241111381 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203668591 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184128961 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.134253015 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158896359 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176945859 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221440162 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156016052 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111093223 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232535943 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196992889 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198405763 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144839055 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170260947 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169679091 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159388405 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215404509 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108598006 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23835554 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107641088 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222980509 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154788121 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138876267 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178604212 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.18969198 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141442608 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187693374 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211766244 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108377328 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134373908 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167726283 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179878119 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155520849 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128492563 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184297899 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125962326 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197718629 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263822734 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133714516 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128965118 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148838421 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13812614 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157090277 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159872756 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13959647 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.139152989 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23100382 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.106852981 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221283287 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203398069 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172951435 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204462298 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117975071 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.721753441 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103441565 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225664309 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120621209 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237788035 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153161651 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175239714 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16000787 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170567781 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196353058 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16193138 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233145614 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220608054 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180786617 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133658921 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159195676 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156021555 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.116802574 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155356987 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169169121 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16148913 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.147262157 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179986043 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165616184 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.136144497 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141096744 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201969859 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149803824 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187681864 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181800572 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140473413 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174525799 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21549478 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10671217 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180606559 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239916916 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143455896 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150632883 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.105793863 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.151193357 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265623271 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126386003 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19151552 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185140043 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161475732 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169212532 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147726869 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223395583 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158901436 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188621053 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143479666 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160895116 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157917242 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110782982 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.131357471 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157921833 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168824943 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151333466 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161062753 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142274088 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221475305 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096395306 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147047989 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291533345 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202471706 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217774359 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136990272 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106709763 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164448465 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151249863 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177120708 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208601484 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.108166726 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137025861 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13846322 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.129836528 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138237064 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155581194 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195707102 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167280205 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208145374 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138302486 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282184064 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140142621 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156032225 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089947829 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132870217 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150852837 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118076389 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155592372 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.222550476 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262859035 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.122850985 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.135123996 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151030101 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.09747014 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13859866 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165801861 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167571676 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178698623 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146280562 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.108142016 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12927404 seconds)
  done (took 83.097449735 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174954685 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151985049 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.160614651 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.222806841 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190546188 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.291994612 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.22640456 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271752997 seconds)
  done (took 2.785876242 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095237109 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146764876 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157586656 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134948361 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092294633 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.12074684 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.345134477 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134960597 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.118184542 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121501553 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.175208076 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094976695 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.554736206 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091393148 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120574752 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107982738 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092291807 seconds)
  done (took 3.794107129 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 47.708422106 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 5.549889828 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.374046873 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.200335573 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.826725003 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.096332958 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.74157892 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.172060678 seconds)
  done (took 61.762694796 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.116955908 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.138173304 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123843243 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.155184298 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.142985409 seconds)
  done (took 1.769449854 seconds)
done (took 174.51034658 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097322876 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12883353 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099056191 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131187362 seconds)
  done (took 1.542054867 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094936199 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.07047641 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101354461 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075526386 seconds)
  done (took 1.437753322 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.205609726 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.169567758 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.422786545 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071595138 seconds)
  done (took 1.619859846 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114397734 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133968963 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104998557 seconds)
  done (took 1.458834638 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106635183 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130593709 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10394411 seconds)
  done (took 1.442896542 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10549611 seconds)
  done (took 1.207198288 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107982782 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138962042 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109225511 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.138858922 seconds)
  done (took 1.596321573 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098418195 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128768539 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109493804 seconds)
  done (took 1.437010305 seconds)
done (took 13.211927452 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104529257 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.422242161 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.385559574 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146118558 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.724774549 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380276208 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.071869428 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14759629 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166711875 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093404178 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140613218 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67346218 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.023630495 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.377894222 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.98122313 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.375736937 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676941367 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122368031 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12115792 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094229677 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.054080363 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092193487 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123118893 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092647742 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704979974 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426635607 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094681387 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.388710945 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093212061 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127026636 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382139011 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124418911 seconds)
  done (took 17.024490784 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095797824 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175617463 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098718163 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138692021 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124048832 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094857509 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.128179457 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094259245 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181573264 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123635917 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110981173 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122636393 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126550216 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095103799 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143406811 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092547793 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126307288 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093168973 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123162609 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12249202 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112278524 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121854505 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094038754 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122962504 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093996327 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137133027 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123483105 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093443475 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121704937 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098935511 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128719517 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095255307 seconds)
  done (took 4.857599366 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141086511 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184011237 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129191314 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126989867 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169994777 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125341148 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200533739 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118639659 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184351211 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124501119 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140374436 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092777148 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158288082 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094731561 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143640262 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122310118 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096815823 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123276667 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092128294 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123934064 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140897345 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093954833 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124039857 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093995754 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12417179 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108422668 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125086505 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121167566 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093645443 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127716629 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099874274 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125907831 seconds)
  done (took 5.180520583 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097734917 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127938601 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109423799 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140327071 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095073707 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126381208 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097199615 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125606074 seconds)
  done (took 2.025743393 seconds)
done (took 30.188816837 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111027385 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127762086 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.105266498 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136077169 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102615194 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133850441 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.09174984 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134787085 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135018375 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102097217 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139383198 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092247209 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124549694 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092751475 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.137426925 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097725558 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.135169685 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102374422 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.136111309 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133942812 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095086248 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134865878 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103106539 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.135524011 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104484121 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134955686 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13871203 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.097600343 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124124105 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094046507 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.126251146 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103496518 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.127848014 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10524489 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128766384 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096898193 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.126034034 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094467765 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133789796 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.134400647 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.097485752 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134654905 seconds)
  done (took 6.043438409 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.10748098 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.149078346 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.106459457 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.111155188 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.088376905 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080958437 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138902806 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079543571 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112430701 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107047736 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.104037051 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.076097498 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079183635 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.103075765 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.075511608 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074886784 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.106202927 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07507169 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.104846788 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.076531675 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.078982544 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.103260726 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079910435 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079103353 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.105348876 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080726336 seconds)
  done (took 3.5997175 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.104166514 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133808484 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115330251 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.186119574 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161962582 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.096858034 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.1349492 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.142543465 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.110275403 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122129361 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096509957 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.152005175 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.138366856 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101480341 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.122639517 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.107268845 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135505784 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093954279 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.131485646 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111470759 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.142496679 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133850581 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.10517435 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131832317 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092276418 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12460277 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096409288 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.137248622 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12729875 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.103047301 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.127843755 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.098405004 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125215999 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104121361 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127422705 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.123630772 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.115131042 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.134479034 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.09813576 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.124425314 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097792641 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.124798056 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.143183503 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.138810041 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.121973611 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.105134668 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.131529627 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133204823 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.092932704 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.139956692 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103008167 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.122529065 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.096517524 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.122245142 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.092564603 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137751986 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.094364738 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.126395092 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.101793947 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.128138616 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.134815978 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.097762759 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139853157 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.093390926 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.131685952 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.091951354 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.124157528 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.091317372 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14216268 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093686002 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.159843432 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.124083478 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.093278642 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.133016043 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101129603 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130913458 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093557396 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139369802 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133292036 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.09895986 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.133118278 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.096132105 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.128869366 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102262793 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.126537577 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.093750705 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125596142 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.13541608 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.098548751 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.124609438 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107904698 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.124205903 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098407983 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.142100388 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122413868 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.095800493 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.132383585 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101424035 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.122750356 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10661996 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.128901793 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122966213 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104163518 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123298238 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098412442 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.134074183 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.097450242 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.123655194 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.101036299 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.132462924 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123614207 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.095152557 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.128833047 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095853809 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133621691 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099900314 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.129490108 seconds)
  done (took 14.992018738 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.365521649 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.342617771 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.300999212 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.455062687 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.139726093 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115306918 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.307114175 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.160659726 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.094174758 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.172319177 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.257443883 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181761844 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170900278 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180749922 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.176108192 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.12328689 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11271977 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.166383384 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.318937021 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.40028455 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.145441885 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101278866 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.214648424 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.171692254 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136802123 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.103168586 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.141902215 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.140537411 seconds)
  done (took 6.823064036 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.110164501 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.161437138 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.129556467 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.115816944 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.153345534 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123498003 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.098589952 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.125264144 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.106339061 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13912662 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094063202 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.133572989 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.131633715 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.103102149 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124810912 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102431448 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133914476 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.098345726 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127861773 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.1281186 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.118018484 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.133817207 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099286921 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.128016521 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135230444 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097269997 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.117783163 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144800426 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.097641427 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.142723186 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.091706333 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132454765 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.118375548 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.12544175 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096586248 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.126460634 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12585777 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09614769 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125952036 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092174098 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123024212 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078599878 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.125857582 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.109133495 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.130754586 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080905732 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130790601 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.098327091 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126380406 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.090193828 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.127235382 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.095811335 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.129772945 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.137074497 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.101258349 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124558062 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097493433 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116319561 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102869702 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126221359 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085074963 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.126141215 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099164362 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119966841 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102050208 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129486594 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095788088 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.127973749 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097903743 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130693592 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095250627 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130618622 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.121372337 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.096300455 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.130327138 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.10053073 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.127259879 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.095595226 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.128357057 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093736949 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.107333572 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.093531683 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.104692544 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.099759938 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.1226805 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.097389293 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.126249354 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.09972755 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.140781604 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.128729468 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103086819 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.124467471 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.096755259 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.129734159 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.083625342 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.129182986 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.123759734 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.143510073 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125199535 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.092346368 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.142127996 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.096387426 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124397467 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.076386378 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.132997125 seconds)
  done (took 13.253785962 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.123125139 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155222009 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125883976 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.11185148 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.159424504 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158949512 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106292228 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132456443 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095458568 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.144471489 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
