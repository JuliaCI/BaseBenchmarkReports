cset: moving following pidspec: 10228
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.341836035 seconds)
loading group "string"... done (took 0.559284305 seconds)
loading group "linalg"... done (took 7.619758462 seconds)
loading group "parallel"... done (took 0.167993601 seconds)
loading group "find"... done (took 1.274169427 seconds)
loading group "tuple"... done (took 1.956299288 seconds)
loading group "dates"... done (took 1.401825927 seconds)
loading group "micro"... done (took 0.24837478 seconds)
loading group "io"... done (took 0.972816489 seconds)
loading group "scalar"... done (took 40.694390848 seconds)
loading group "sparse"... done (took 13.287470272 seconds)
loading group "broadcast"... done (took 1.037206852 seconds)
loading group "union"... done (took 14.16199757 seconds)
loading group "simd"... done (took 4.76198704 seconds)
loading group "random"... done (took 9.620678457 seconds)
loading group "problem"... done (took 1.978722808 seconds)
loading group "array"... done (took 22.596292173 seconds)
loading group "misc"... done (took 2.032831735 seconds)
loading group "sort"... done (took 3.439045206 seconds)
loading group "collection"... done (took 19.555419415 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.573364945 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141915728 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148810442 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.130585442 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202183294 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156691046 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157762635 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098828334 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.955376297 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.174420781 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153495471 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.525227016 seconds)
done (took 5.152996782 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.216957741 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.096112014 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103605973 seconds)
  done (took 0.877261645 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077380333 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146639435 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093820247 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078050845 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094534129 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077912811 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095605049 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078351187 seconds)
  done (took 1.350393579 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086547029 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097195587 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081651007 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096170421 seconds)
  done (took 1.046331528 seconds)
done (took 4.257613011 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.731507106 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.27009503 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204186417 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.463546773 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19063485 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215468266 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672528689 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.354816831 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253665422 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098539764 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.134317001 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386681535 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137123672 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.678225031 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091786831 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123334131 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.175732124 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.453268975 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082985353 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109486968 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116168014 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14102912 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.126913599 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091390216 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.182711769 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081650339 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192094206 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.106971293 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081067483 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.27506041 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200660821 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.683064026 seconds)
  done (took 10.829752021 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11078247 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134186261 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096993326 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13840225 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13454498 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099067386 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084666133 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096287062 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121429846 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176867912 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.129409117 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.120849389 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094788022 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082213692 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115334391 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245435588 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120963742 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098894643 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099536678 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088337837 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136884647 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113180299 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108797602 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093325676 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166627848 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220988764 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110759418 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125983917 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096250699 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112224738 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143745337 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142887129 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094255818 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080008458 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173796598 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123426427 seconds)
  done (took 5.12717254 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.090117251 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189908749 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120998298 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170134235 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081142169 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143624024 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094695689 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112057256 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257288971 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.175457618 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.487729338 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142610344 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099416903 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099426978 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083311228 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097507796 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.606308896 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.122374349 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149751822 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114332056 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101837018 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084630993 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363530325 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.094686121 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08383302 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09677267 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066004724 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161437467 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097599544 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.137744742 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.10096048 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100396114 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132560972 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190726359 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125498745 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133415645 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078820872 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096281657 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174841209 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085948018 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097481516 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121055858 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132732628 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117394917 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097622731 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095599521 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.199825685 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.094892076 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097812141 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.930470368 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18091827 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.120398772 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097497732 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.305640489 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097429217 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097284464 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076343827 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.272296415 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.193197452 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.1218486 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.092887156 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080838662 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095913933 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079425459 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097877325 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.385407062 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080490084 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.733945459 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08479916 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108262593 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08240789 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095186886 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101815286 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086884405 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113863345 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079493656 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098736887 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079284751 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095557681 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080778385 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093791728 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10527174 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.216084039 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079905383 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097889889 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.077788577 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115884822 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125984637 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082151215 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095261823 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12882025 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082845442 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096552353 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.092203501 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.116637371 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09786316 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106053371 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083132699 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141944851 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095744072 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.131170917 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.093903624 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12245212 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098302554 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113928436 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111116612 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098235752 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.167988811 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078276205 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094918718 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079783084 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096190667 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080973378 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098990549 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107465197 seconds)
  done (took 22.712602273 seconds)
done (took 40.44188375 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.32253091 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102588663 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102295827 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10209373 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101003426 seconds)
  done (took 1.492943664 seconds)
done (took 2.226141212 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.284684564 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173383221 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096723718 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165586182 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092309228 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.163616028 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157946364 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094014072 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216485132 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094195623 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.15971309 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07619308 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094088012 seconds)
  done (took 2.628182033 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094074917 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113927901 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083809495 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109464303 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077124441 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109603269 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092614337 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115149885 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108286256 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085157682 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092595438 seconds)
  done (took 1.809783851 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095417875 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112805039 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08361627 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109529896 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07788502 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109952286 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092961209 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116229048 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109655438 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086608637 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092284622 seconds)
  done (took 1.813823484 seconds)
done (took 6.973718437 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091251928 seconds)
  done (took 0.813968822 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.936090711 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.741852477 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112215755 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.147513277 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.311667194 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.170903388 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.463690399 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.123283715 seconds)
  done (took 10.938643695 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.144713402 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084360056 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10335243 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086739378 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100105977 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086671286 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.10030352 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100389866 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084494451 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.097663186 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085685534 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.09969604 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101472991 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083432469 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101644224 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08473732 seconds)
  done (took 2.336643356 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119195561 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119144898 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10762072 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107489144 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087582333 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105579609 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105099603 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089560788 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102174866 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103211165 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090581503 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106025415 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103069438 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080625101 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10641845 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107638141 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086276753 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105275027 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107067669 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091072677 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106151924 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094602023 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087537572 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106117688 seconds)
  done (took 3.262755839 seconds)
done (took 18.07805545 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158213259 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108524361 seconds)
  done (took 0.999175039 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096009767 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112502404 seconds)
  done (took 0.94512703 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099430927 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096004974 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122126751 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109629635 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081681971 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095934299 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11999643 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080754223 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096305426 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080232982 seconds)
  done (took 1.722195164 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083412855 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10958122 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101036845 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094580491 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105029947 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093719332 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089155695 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098857967 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109524446 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078624111 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102434579 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114138396 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086646761 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115879254 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104545736 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084146615 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102601829 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09853111 seconds)
  done (took 2.514154597 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080264026 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096260596 seconds)
  done (took 0.915423606 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082782069 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093036419 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082243921 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097012494 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09379387 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077445401 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09452262 seconds)
  done (took 1.359086813 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.484100568 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135963545 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260230729 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102069451 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10298241 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301729952 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098828158 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086052415 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103237334 seconds)
  done (took 2.472702261 seconds)
done (took 11.663844346 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094040663 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115066621 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113591279 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.463159705 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108423961 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.098181158 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146332002 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.250806465 seconds)
done (took 2.138218473 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.143748328 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.599621763 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.425975291 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.231399677 seconds)
  done (took 2.00578006 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.403944976 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099149175 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08358287 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081441388 seconds)
  done (took 1.418195267 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080796965 seconds)
    (2/2) benchmarking "read"...
    done (took 0.09997761 seconds)
  done (took 0.929809544 seconds)
done (took 5.248215404 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081901153 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.0959337 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078494896 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.096369628 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.078150116 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.094154821 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.11149049 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.099088427 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080456859 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098560329 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.097153855 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.081768592 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097011716 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078716636 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094099648 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080944474 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096521481 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079520952 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0936121 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.078660417 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093630122 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081586909 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094171606 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079499773 seconds)
  done (took 2.925398702 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101294583 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098304742 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103091012 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08642099 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101497429 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087097696 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.1021359 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097201416 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086895189 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101334674 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100464216 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086731271 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098599762 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086353119 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0996178 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100489444 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087115971 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097220526 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083361003 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102062881 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101533231 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081933691 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10138066 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10182511 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085376289 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100665851 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083316704 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097527995 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102699691 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085612957 seconds)
  done (took 3.60245673 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08605819 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093287372 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079408967 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101253176 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078931314 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096565204 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078268716 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095364542 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.07972538 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094717268 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079835796 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095272404 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077682019 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09668726 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079108885 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099602847 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.109887779 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080113574 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093671379 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079789175 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097894732 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078912931 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094591016 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078437752 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095085573 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078756291 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094567538 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079439599 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095705648 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078283754 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.09811568 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082554656 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095549415 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085188809 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.09844445 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078690435 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098517948 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077582163 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096364833 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094065755 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079173909 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093686618 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079379527 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101417407 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.0795544 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.0963755 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.08007742 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096432765 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079960128 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098204973 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078095473 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09445829 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079678088 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096745047 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082297391 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.094836245 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094793171 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078723128 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095946934 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079007714 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094208048 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079087075 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096973829 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.0807925 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110511503 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085557675 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095371311 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08056032 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095858354 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080856355 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09741302 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107649135 seconds)
  done (took 7.172238611 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.1038357 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126670334 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.098243201 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096947272 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077843139 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094721781 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.083726806 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095807937 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081856203 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.102392589 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095356329 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081250435 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09637627 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094922976 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095552044 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081655124 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101948995 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093148575 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078987865 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099172075 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08039748 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100224874 seconds)
  done (took 2.821209954 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209125695 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10540707 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141687349 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107220285 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083830114 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106848453 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102432498 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087751814 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102219766 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083586324 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100974794 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.208032645 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084192858 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100086211 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100109096 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086457046 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101817113 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08558284 seconds)
  done (took 2.75917671 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09382033 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098917697 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09901135 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098864946 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097847945 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085280995 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10336006 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107038982 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085119578 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09763236 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09071303 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101312568 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100101333 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083306365 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100290102 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081587645 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100640075 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08143178 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109067393 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104424863 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087958953 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108222059 seconds)
  done (took 2.881294473 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098389666 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101302087 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118504291 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085081082 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09413325 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080399663 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105792469 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08180606 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108354794 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098868057 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082191686 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096832622 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08907952 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099276673 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103815181 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08271301 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100071959 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082676202 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101615453 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078403126 seconds)
  done (took 2.655619272 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104322775 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100461269 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099418767 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093078853 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100628271 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082274086 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108852934 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099480178 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082810307 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124835066 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099818432 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082218663 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109033452 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105611696 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098347795 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092338684 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110024147 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109250229 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08356121 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099958696 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124428082 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083163396 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110015516 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099494353 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083250297 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10029464 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099041776 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089572545 seconds)
  done (took 3.545215468 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083003728 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097868662 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082239702 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095524628 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080332069 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096507783 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079832923 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095421262 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082320843 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09592521 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082200602 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098158342 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082917843 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098460526 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081865537 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097727694 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081708006 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095866861 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079619391 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096254765 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081512916 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098760282 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08197128 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096922095 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079138213 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099534142 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079190491 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096209654 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081902201 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097123227 seconds)
  done (took 3.447624953 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09258511 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106002897 seconds)
  done (took 0.969193797 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080291166 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114212354 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079660202 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102024758 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085748339 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100905028 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106855173 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086831059 seconds)
  done (took 1.528195365 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096700345 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109214214 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083504165 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112765196 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109249033 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099075148 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170498548 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101935081 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087383372 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098594897 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112692385 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081561248 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105411201 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082362588 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104657617 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088868497 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098554346 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104695212 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086354355 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097506533 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086049958 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109131061 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083759176 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096997813 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100545502 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092722754 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112223423 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083219642 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104644816 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10638501 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088951094 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092808631 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082857544 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100403222 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080291172 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108973239 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116033739 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08569015 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109564 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082618011 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111427944 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094580204 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.08794277 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105534141 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109747898 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083977736 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100276436 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078252352 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097448281 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084771485 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094658931 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082315283 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094500107 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089325739 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103512545 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110923437 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081480999 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100653683 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085471025 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10319982 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088526264 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102243245 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101037612 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082264791 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106150594 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087269112 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11076412 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076873468 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094616474 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097075446 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.0927036 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124038848 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105753687 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084711537 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100468018 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080901622 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102929024 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083873207 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106453613 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105274739 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083219469 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106010817 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089639603 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100895875 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083913754 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107903178 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.09705393 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085059381 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09804675 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116476173 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081889441 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096945047 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080975334 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111385225 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08579864 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100075733 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079448276 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107703538 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092598753 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085193912 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100331321 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083634586 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112232708 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104419847 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089513656 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109175112 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088827704 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.1013776 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102807619 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079780725 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100752225 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085768422 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107037512 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07682283 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103595299 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083155492 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101527685 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108344989 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081800685 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099129261 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090703341 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10666585 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098140778 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079743896 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.10231201 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083661646 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103172972 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090717136 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099572641 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077131746 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095935819 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102550135 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082493535 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103275949 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08887024 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104215049 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076507354 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098269669 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104029583 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092486852 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100987731 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083739489 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107125709 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100743012 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082725918 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106572313 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086269396 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099261346 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.08938542 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102161882 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078189148 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10523235 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102605091 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.08239321 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103103503 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087297811 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103018481 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.0829935 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09936366 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105116021 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083894232 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.098476682 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083147116 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099455325 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11063054 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.0854603 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095088699 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.081175981 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.107885985 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08062124 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100328657 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081145399 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102835613 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10088301 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08201059 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099360995 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086123733 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112698211 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105086906 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084891803 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105468362 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094808016 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100531909 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.08495695 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099920634 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100995137 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084729926 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109555525 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088197912 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105942298 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101988642 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079512614 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106385277 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09152282 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099139829 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080437802 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099314601 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103553391 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.089881451 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103319662 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.08466492 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098315953 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082959172 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104989432 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102078068 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083797191 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098507635 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087699264 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100112844 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107753281 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084911503 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111762748 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086200111 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096072735 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085863413 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099955074 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106043389 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078688195 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097149821 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082626943 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102094049 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082102265 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103570281 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077055461 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108355082 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107800675 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083910351 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099674018 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083324232 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106675306 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084664755 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105126014 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085454379 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106636008 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111523982 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082235662 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104131877 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093690064 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101596287 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094005043 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089061004 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098582451 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082823612 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099092239 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.0809836 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103593189 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109399247 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091133048 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093931052 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087088831 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099310128 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081814954 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097309915 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087923423 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104905938 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100940567 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090667127 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101431642 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086677192 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104869061 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082560527 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102544863 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102486929 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08763383 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102198605 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086426665 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100076391 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086168632 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101729867 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080574957 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103843909 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099908139 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083995014 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105450083 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084018302 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100438017 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085781504 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102485479 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100217111 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084283885 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.099419096 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0870341 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101588738 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.083262792 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103148692 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077867758 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10925038 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082223325 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109849283 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100371327 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080349811 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105802089 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085504811 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108152516 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10067866 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085401162 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.101426257 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084172194 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104266606 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090011216 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099696152 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111539027 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092909616 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101845713 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.086498883 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.10114536 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083565808 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101220655 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082693501 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102570824 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101018014 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083547432 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106118039 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085884066 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103008512 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084346731 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103454534 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082315312 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103419243 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095107664 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.08294637 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.099503356 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083977159 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111345721 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084134081 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105072296 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098804452 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085116758 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.10026999 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080165873 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110093513 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109471343 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085340753 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109519221 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082929571 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103340902 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111541324 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078613384 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099076437 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081279771 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098162997 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092061749 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102411072 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.099561761 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102055219 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.09988043 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081333703 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100989625 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.08263119 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095279303 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081410657 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105017326 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085370519 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100429706 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.08420182 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104558834 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101658193 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094358154 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100760655 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084118686 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102685374 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079913424 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100490569 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08121919 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105907688 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101968477 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081583577 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097670601 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.083700238 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101451878 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085045023 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102024983 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084540808 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108999808 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10052107 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087065516 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105568555 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078403085 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104662914 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083028389 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102180983 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099160242 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088433433 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104363493 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086298196 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110860721 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082892868 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102334387 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101017271 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082696779 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100732214 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083730175 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101828763 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082734492 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103368294 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090874809 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.10006101 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103943454 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083086374 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101188801 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091129815 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104120318 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085058924 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110869145 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103335417 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086114533 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110733617 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086971815 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106648432 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101655784 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085587656 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107213281 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082814283 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109159419 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082808042 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10380183 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102221122 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08161366 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101001573 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083900477 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099929566 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090432309 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103001717 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082584534 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102348777 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080169943 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10337678 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104559256 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091604559 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104087033 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086269795 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097726446 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080891854 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104226764 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098647997 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085308014 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104480942 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090562978 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103915408 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083774442 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101317759 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111308662 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090792015 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105264905 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081714004 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106139423 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084948599 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105006808 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083651819 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103110314 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103589185 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087803851 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103099373 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083157128 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110439811 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086563074 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104161652 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102658508 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085082378 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.100941702 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079980851 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102835391 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085867483 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108680862 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085617618 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103190614 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112819894 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083017131 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102039245 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088194021 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101881457 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.105484994 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079625758 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102972081 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08613511 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103705734 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079987923 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101070058 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.082459769 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105098355 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081945443 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098379294 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112449427 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094675631 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105284378 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083204085 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101598063 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078868628 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098760582 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.10053102 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086423488 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103601204 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095015643 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.100905514 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083250979 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098257388 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082962263 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106413627 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104795014 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082058696 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097405136 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083587886 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105769942 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.09001985 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10206518 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083597927 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106574623 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103276319 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083384539 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105824907 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081079517 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106117552 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115398 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085752989 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102982217 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091323844 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110771897 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084683807 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098233071 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102363962 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087542239 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101888993 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085975323 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104168539 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118429052 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088081332 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101782427 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084552679 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104635928 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084761413 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112149925 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084895275 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104690382 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107648441 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087184978 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113771412 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087021997 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112169526 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106449029 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088491864 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101414203 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084353121 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101798238 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082802893 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104842698 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103486916 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089442032 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110791387 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082694935 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115043724 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112171799 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090421172 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099933654 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083375476 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103602104 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080505082 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107026221 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081599702 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10274818 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100654605 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084447215 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102812212 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091492837 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103560953 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085954335 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10418396 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078255245 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105835003 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085766332 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10554906 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098895112 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085622526 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103194777 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089022954 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107699989 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084844513 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105178316 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086099825 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105111489 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097992337 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091672293 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100966131 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088077814 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102040453 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084834873 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104897859 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088261799 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110429051 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104332169 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.08743918 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115937302 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086862153 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102344622 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099401087 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091062516 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100578745 seconds)
  done (took 57.8536859 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146853217 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081806732 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097948177 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080507415 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113441225 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09894589 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079949516 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099012424 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081573655 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102374498 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080700145 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098868312 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109518828 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124174843 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09430862 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104512158 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07862342 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101035903 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098205001 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08206716 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109273618 seconds)
  done (took 2.883229999 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106337522 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120305141 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116382751 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117885641 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09047187 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116546115 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114591802 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115227089 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101317918 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111789486 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119192282 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114112227 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092507443 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111336821 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11064621 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093431805 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118937227 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110063821 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114607402 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096568375 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113368517 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115241472 seconds)
  done (took 3.242005354 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084954274 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101811484 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086939815 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097309973 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08469979 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098346335 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088822231 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.1007885 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086667348 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102818551 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082250176 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102953823 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103781635 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080728673 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102871658 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082365246 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151938809 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108038184 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.0841449 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104995868 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078573755 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.105371288 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097588694 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081434023 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101857871 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089134856 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103659661 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082285301 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103595898 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08317099 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104598607 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081687412 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105149785 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103172643 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083684821 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.100875748 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085076294 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102826477 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080589759 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100849622 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.086180527 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098908376 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084599663 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104753476 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081761214 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101968419 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085347262 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10378983 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097260251 seconds)
  done (took 5.48027429 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105378116 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161097528 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087978251 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143310306 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121376154 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112575012 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089044048 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143086707 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102308375 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082912596 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123658324 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.1198333 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104167404 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090368761 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.11232477 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103561933 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087453919 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103217978 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107576551 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084586848 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108161824 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090463939 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120088982 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118685377 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107907343 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08362796 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104155378 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107435753 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099001549 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109399214 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108525892 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090977077 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121167274 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109964629 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084102573 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107929883 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121350062 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102986571 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088414646 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101597897 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087620616 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110339299 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110141256 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.10291227 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105088348 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.11034023 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085512403 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101319321 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117899095 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087725798 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115123863 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12097403 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107277218 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086110921 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10973067 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.11953568 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.086028393 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10221863 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087759969 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119471746 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.1031894 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089426362 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119392182 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106924233 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.11151226 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101048921 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110014582 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10859597 seconds)
  done (took 8.160303002 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094346237 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111669112 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119826285 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120208173 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091742049 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112337099 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110582253 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091957499 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111733567 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116723224 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11016567 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134153121 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087131295 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11498101 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110235761 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091952753 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111682158 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111172823 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091637743 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112002537 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111352865 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119944661 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09150976 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120060637 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142532252 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105286429 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091235486 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112426138 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120700876 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110233651 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122939796 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092913951 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112098572 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120533263 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124030032 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091284886 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103677949 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109263648 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092896178 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111926582 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105023189 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102662857 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111830084 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106139702 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091396042 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111557586 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121278634 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124492887 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114265178 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097798793 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112182134 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121450993 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109969147 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091668201 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120697053 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147243409 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121059133 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120669884 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111359511 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101006082 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120251269 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129072211 seconds)
  done (took 7.689685751 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107707243 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115345572 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117858569 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099893001 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084007455 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10956193 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084036025 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102513077 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113720241 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09551809 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116682735 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108801639 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093362148 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117389744 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109501457 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112709095 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089098152 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110140029 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114649266 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08894466 seconds)
  done (took 2.928039382 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094990552 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12444932 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084728382 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112970503 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108241349 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091076464 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107464907 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107523972 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087023978 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108096286 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097006359 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116974264 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105405899 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091498484 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116541829 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11097116 seconds)
  done (took 2.505236369 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100450818 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117809439 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121054812 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084877761 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105421575 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08092187 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107108907 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100580583 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082157237 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120398826 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085123039 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109202701 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104494988 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084499653 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101656554 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088082253 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101568733 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08233158 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105791939 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.11948283 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095985734 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104375325 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105535552 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088641201 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105583936 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091025961 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10687453 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102422586 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085024312 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105114009 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086651133 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114045028 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101873865 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084573119 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102690617 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083952466 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105620772 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085794987 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109314852 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103532762 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084572321 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103790939 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085764814 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106633457 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081599005 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106699814 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101086853 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093114568 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10328015 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086028089 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10583394 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.08634103 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107358978 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115423244 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089106231 seconds)
  done (took 6.268714057 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099674336 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108643683 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080798913 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10365976 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088922907 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10820191 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107796305 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089511878 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106631315 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083655287 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107388989 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089219606 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108062191 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108192536 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087775395 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108834249 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080820368 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10730407 seconds)
  done (took 2.620947216 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09168589 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104442483 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092938964 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105730243 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085267011 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109244419 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080640742 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104721827 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102862739 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086864999 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105193145 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087683102 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104304993 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087575009 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106322768 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085072959 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108322847 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103016995 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087333875 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100738795 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088678533 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103531812 seconds)
  done (took 2.976283072 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118906331 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125178172 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092442493 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.231028558 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104349139 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131436615 seconds)
  done (took 1.64956782 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110497643 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120928408 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106014786 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107827449 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115051993 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086610909 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108943684 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10728877 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116805355 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103889238 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108638275 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117895155 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116703209 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098331926 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114549381 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114593562 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107207354 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088090188 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106230945 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12711204 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08807137 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117831023 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107969803 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087376796 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108857992 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116505233 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116892707 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121497804 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087969708 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118100542 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113669027 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087723546 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118922778 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121909706 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108180595 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098242754 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108221108 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128857326 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113878342 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097586585 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109774087 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113906476 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097333271 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113887849 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117804805 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106608397 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09396074 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107903519 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107938007 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135023881 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094439432 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117912143 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115259319 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118065029 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097712087 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153970929 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10227861 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118373547 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115906902 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122461838 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115961087 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094603592 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117120177 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123412007 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114714875 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097063748 seconds)
  done (took 8.124493166 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103595766 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12619204 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1082076 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122891166 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098326907 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108556334 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107008274 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088336211 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10821824 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106285144 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152395245 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089041706 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118210006 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118131481 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087091174 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108839211 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108341094 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116949665 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088442505 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134734246 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108359456 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118013409 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117699142 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097886944 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122637413 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114576113 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108676948 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088712183 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108427654 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106420135 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093756181 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108886869 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117740821 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087779751 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118077554 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107703375 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08808189 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115685209 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107771676 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113141273 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098107875 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12817577 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108158925 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10712672 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102475298 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108925477 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107628063 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087402522 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10933813 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105782259 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102138431 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122553881 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122640255 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118095483 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108083107 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089519773 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109235559 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108144385 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090130385 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115915887 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117391621 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086894125 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135534492 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108704119 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109169405 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117315166 seconds)
  done (took 8.030932864 seconds)
done (took 155.466093497 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.216026837 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.199343136 seconds)
  done (took 1.264964172 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.088979196 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13589227 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096723605 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169224937 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085578788 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.142379011 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137399076 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098901589 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106702038 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085883956 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106674221 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087867943 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171671674 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085415612 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107333747 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106847161 seconds)
  done (took 2.669388888 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.121064951 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.253520086 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.125350219 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104316015 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089994854 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109636109 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084337574 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111592136 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090988525 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.105351032 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088587935 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107565672 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.083559452 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107685104 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109452804 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.090232432 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104348165 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089653469 seconds)
  done (took 2.835374389 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11440859 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146256569 seconds)
  done (took 1.124884813 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.239839816 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.162655452 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.23064223 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.471448322 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.273737768 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.363268889 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.202280353 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.21084622 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.160278608 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.20691867 seconds)
  done (took 3.378576308 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119049041 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18047735 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316719506 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155375603 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.1079853 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128984906 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157351472 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129934077 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122360372 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100880846 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122239963 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117768588 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.136817428 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095927383 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116378412 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116748292 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121800051 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113979719 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11332677 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.097067856 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138650973 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.084591623 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117012464 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113609707 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098363548 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119210333 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106160453 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086277679 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117064247 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093807469 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.11440795 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125997636 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.117658991 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.156232009 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122087413 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.156402914 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117659492 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091910686 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11544045 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090656973 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118854461 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118860551 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.123830547 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097899796 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105627384 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097958464 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106065978 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084892819 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11522945 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.117635285 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093112763 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113804625 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153414749 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.12010429 seconds)
  done (took 7.385173112 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.784515941 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154577056 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089463759 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.869166664 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134885252 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104381436 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.766582316 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111374269 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253452942 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.748101836 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133231413 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119234517 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.205323845 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257363148 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.009113792 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.292286641 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.636598119 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.1263487 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152200837 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153504331 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117071342 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11392844 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131012517 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.450922476 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11631685 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090123026 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118595666 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119415242 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159632988 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124378569 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091711935 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199608062 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.24936402 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203981225 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094203254 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111791421 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088602695 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.192558107 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261850117 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193051457 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180404052 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108287845 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089387298 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122610666 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132567178 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086806701 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184415463 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174737077 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169348584 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114741665 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117610699 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098872374 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121160359 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165051126 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121848617 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.322213215 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.318200277 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089911951 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120759082 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125458865 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.238436415 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124053834 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225901889 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1384806 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.188410473 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112255118 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.791025173 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169776645 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111516475 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095884955 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119539864 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115818724 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098604116 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169137391 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.39172092 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124331917 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114139516 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089795436 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223532365 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102634339 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111731116 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162107845 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116225829 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119897779 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102463196 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122157931 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167780943 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.256461914 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.102164491 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120123839 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114820094 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102834627 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.11705215 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215243903 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219587923 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162065937 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.228881627 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100600184 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184237266 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169429837 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118828978 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.17289041 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11861122 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103195761 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122292429 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217262644 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145468859 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122340818 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094010899 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118066973 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147834773 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126923647 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096902012 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.19078776 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479195076 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167183181 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108556703 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126523647 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098160864 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18024633 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09640666 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256673213 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120018435 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169824765 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11801567 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087584117 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120478901 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163276128 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122218014 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119149869 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100595332 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118344084 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.234870728 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215866825 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120393471 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220765884 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183827497 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119204043 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170544424 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122409258 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167440851 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119894233 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098388481 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116856298 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789173939 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122393086 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099994756 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11709429 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.196409291 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08945482 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124556419 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125036007 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08660383 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773742838 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128066881 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120892108 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103336893 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118151524 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119324778 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096446922 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115622322 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161121384 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229331305 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119244457 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097832492 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125018907 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159155614 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117541975 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.1254343 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.122747346 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104098704 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122098325 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11413924 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102840185 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188066437 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164480319 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.219958622 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.574207394 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112388619 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124189386 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204186196 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113023206 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.286955047 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119139601 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.202667959 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18384406 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099706625 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.30936637 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.163900694 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195446414 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.12687833 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172479205 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109554199 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117649368 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16558837 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110232198 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09572156 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.161352823 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125144664 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123115589 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.958136012 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090146184 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.245531369 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087943648 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169230312 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117354957 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119117913 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290557032 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090693622 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128264254 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164993856 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115788257 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123723154 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.69748863 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124919344 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099260575 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117438369 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221419046 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163295082 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120150016 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118511794 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098247325 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182900053 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207683695 seconds)
  done (took 43.894547655 seconds)
done (took 63.406427325 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277431612 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216414501 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.269734771 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172877101 seconds)
  done (took 1.899757317 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171781852 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149235645 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.123282967 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107941212 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150927815 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084794505 seconds)
  done (took 1.675600528 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.364562793 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278801837 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242229226 seconds)
  done (took 1.777847484 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.317590114 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.250954617 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.476897446 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324875595 seconds)
  done (took 2.359597239 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210334127 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132607833 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.1099484 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104133962 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196859229 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245056511 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141730476 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201335805 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098212126 seconds)
  done (took 2.373840784 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.195873766 seconds)
done (took 11.171765467 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.18536087 seconds)
    (2/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.159121899 seconds)
    (3/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094760551 seconds)
    (4/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.256514766 seconds)
    (5/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098792248 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.126078955 seconds)
    (7/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.131833867 seconds)
    (8/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.096092621 seconds)
    (9/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.257208944 seconds)
    (10/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.097770198 seconds)
    (11/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.23423629 seconds)
    (12/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.169225082 seconds)
    (13/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.096549415 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098741262 seconds)
    (15/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.211832539 seconds)
    (16/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.210948629 seconds)
    (17/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.120400779 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.191505653 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.11812308 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.164399614 seconds)
    (21/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096548803 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.265980664 seconds)
    (23/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.118536887 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.111764549 seconds)
    (25/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.116957493 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.176909146 seconds)
    (27/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.090993238 seconds)
    (28/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.211876626 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.171017602 seconds)
    (30/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.185495607 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.172305468 seconds)
    (32/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.18361086 seconds)
    (33/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.149634074 seconds)
    (34/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.248596475 seconds)
    (35/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.173731642 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.122214492 seconds)
    (37/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094992352 seconds)
    (38/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.123765626 seconds)
    (39/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.190214055 seconds)
    (40/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.119158728 seconds)
    (41/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086843549 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.135596703 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.15255328 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.095476728 seconds)
    (45/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.158236621 seconds)
    (46/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.210696666 seconds)
    (47/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.13974001 seconds)
    (48/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.128210581 seconds)
    (49/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.218904872 seconds)
    (50/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114923948 seconds)
    (51/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.220945202 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.086530665 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.118031161 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.115238072 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.114214053 seconds)
    (56/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.154705588 seconds)
    (57/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.16932106 seconds)
    (58/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.122252713 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.112060497 seconds)
    (60/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.120566876 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.189057576 seconds)
    (62/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.083881346 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.138470681 seconds)
    (64/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.096501977 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111214409 seconds)
    (66/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.087814472 seconds)
    (67/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.156319324 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.106854422 seconds)
    (69/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.073432599 seconds)
    (70/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.08700327 seconds)
    (71/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.139936348 seconds)
    (72/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.195102225 seconds)
    (73/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.202802471 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.086685499 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.137153796 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.091623932 seconds)
    (77/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.254791166 seconds)
    (78/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.168125705 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.192853362 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.109498568 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.217379938 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.114007191 seconds)
    (83/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.148679647 seconds)
    (84/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.185194373 seconds)
    (85/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067300699 seconds)
    (86/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.074817838 seconds)
    (87/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.168851604 seconds)
    (88/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.144497881 seconds)
    (89/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.077660995 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.153097043 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112535497 seconds)
    (92/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.119198396 seconds)
    (93/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.076001163 seconds)
    (94/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.125838098 seconds)
    (95/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.085449522 seconds)
    (96/309) benchmarking ("sort", Int64, false)...
    done (took 0.111479292 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.183968795 seconds)
    (98/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.06736968 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.134470308 seconds)
    (100/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.068226388 seconds)
    (101/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067318395 seconds)
    (102/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.190605697 seconds)
    (103/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.199311523 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.132583959 seconds)
    (105/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092823804 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.139261904 seconds)
    (107/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.08771844 seconds)
    (108/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.088460792 seconds)
    (109/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078571159 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.15279171 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.141832894 seconds)
    (112/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.115544629 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.165172701 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.223069564 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.19157759 seconds)
    (116/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127187738 seconds)
    (117/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.177910721 seconds)
    (118/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.12819597 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.324162637 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110481549 seconds)
    (121/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.096487816 seconds)
    (122/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.14891801 seconds)
    (123/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.177614638 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.192384533 seconds)
    (125/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.150956698 seconds)
    (126/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.181837486 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.137844983 seconds)
    (128/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097514547 seconds)
    (129/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.116823693 seconds)
    (130/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066500848 seconds)
    (131/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.109775469 seconds)
    (132/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067590484 seconds)
    (133/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067787289 seconds)
    (134/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.111461738 seconds)
    (135/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.182076764 seconds)
    (136/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.084102011 seconds)
    (137/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076889286 seconds)
    (138/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.133129018 seconds)
    (139/309) benchmarking ("sort", Bool, false)...
    done (took 0.179244541 seconds)
    (140/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.117808177 seconds)
    (141/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.087492438 seconds)
    (142/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136902103 seconds)
    (143/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.09328752 seconds)
    (144/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.09144813 seconds)
    (145/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067370566 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.134825528 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.090517173 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.117145501 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.185478649 seconds)
    (150/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088479429 seconds)
    (151/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123745354 seconds)
    (152/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093163126 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118064491 seconds)
    (154/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.081584804 seconds)
    (155/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.196287769 seconds)
    (156/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.08890003 seconds)
    (157/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.114314319 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108286435 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.107713319 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116901183 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131160509 seconds)
    (162/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067457917 seconds)
    (163/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.141807538 seconds)
    (164/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.189391531 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.121058071 seconds)
    (166/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116300682 seconds)
    (167/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077911175 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095016522 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.139894335 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.108162987 seconds)
    (171/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.116954698 seconds)
    (172/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.087783059 seconds)
    (173/309) benchmarking ("sort", Int8, false)...
    done (took 0.188132178 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.116377758 seconds)
    (175/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.09241976 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.087494654 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.177798016 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.221272562 seconds)
    (179/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.185252648 seconds)
    (180/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069026399 seconds)
    (181/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.090098818 seconds)
    (182/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087913745 seconds)
    (183/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.118144291 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115770969 seconds)
    (185/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.174453286 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.08477985 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109752885 seconds)
    (188/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.109044584 seconds)
    (189/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068397931 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.085091529 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117723879 seconds)
    (192/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.112887502 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.0966386 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.179179456 seconds)
    (195/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.171435971 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.074144287 seconds)
    (197/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135503986 seconds)
    (198/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.069935871 seconds)
    (199/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.119058005 seconds)
    (200/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.088761164 seconds)
    (201/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.075868444 seconds)
    (202/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.091839022 seconds)
    (203/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101527135 seconds)
    (204/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.124270669 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.107288784 seconds)
    (206/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.082893813 seconds)
    (207/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067800453 seconds)
    (208/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.11681595 seconds)
    (209/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067757795 seconds)
    (210/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.113847164 seconds)
    (211/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.082794821 seconds)
    (212/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.091969806 seconds)
    (213/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.09021731 seconds)
    (214/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085965074 seconds)
    (215/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114002324 seconds)
    (216/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066421593 seconds)
    (217/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.115255778 seconds)
    (218/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.068179405 seconds)
    (219/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.109995017 seconds)
    (220/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.068563061 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.13413588 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.09617483 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.115850967 seconds)
    (224/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.068481793 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.107447748 seconds)
    (226/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095903741 seconds)
    (227/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.120136358 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068948901 seconds)
    (229/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067795784 seconds)
    (230/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.092196919 seconds)
    (231/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.125377568 seconds)
    (232/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.115636945 seconds)
    (233/309) benchmarking ("sort", BigInt, false)...
    done (took 0.220413276 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.130950554 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093007883 seconds)
    (236/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.117433967 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.098270148 seconds)
    (238/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.10985083 seconds)
    (239/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.067586019 seconds)
    (240/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.115498957 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086566241 seconds)
    (242/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.109775205 seconds)
    (243/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.125437869 seconds)
    (244/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125252924 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087413562 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.188067893 seconds)
    (247/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.110710184 seconds)
    (248/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.067765342 seconds)
    (249/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067111477 seconds)
    (250/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135617885 seconds)
    (251/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.109426382 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088760925 seconds)
    (253/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.098938563 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.088330233 seconds)
    (255/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.163358861 seconds)
    (256/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.077768843 seconds)
    (257/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067877907 seconds)
    (258/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.090303467 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.197663516 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.109373037 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109721376 seconds)
    (262/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.06870276 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.108524222 seconds)
    (264/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069424859 seconds)
    (265/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.126785209 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.088027435 seconds)
    (267/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066291103 seconds)
    (268/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.091820785 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092903082 seconds)
    (270/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113417515 seconds)
    (271/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090407029 seconds)
    (272/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.113874343 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095007378 seconds)
    (274/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.094698053 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.178352175 seconds)
    (276/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.095336126 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.161867465 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.112862326 seconds)
    (279/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.091438964 seconds)
    (280/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093248492 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118137386 seconds)
    (282/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.092291448 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109711471 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085281147 seconds)
    (285/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135098235 seconds)
    (286/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.17423465 seconds)
    (287/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088055622 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118647681 seconds)
    (289/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.088055139 seconds)
    (290/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.118017375 seconds)
    (291/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066666054 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.190338204 seconds)
    (293/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.108829463 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.068544688 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.171415398 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093299968 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.184313856 seconds)
    (298/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093349967 seconds)
    (299/309) benchmarking ("sort", Float32, false)...
    done (took 0.175616089 seconds)
    (300/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.109377801 seconds)
    (301/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.087004021 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.132646654 seconds)
    (303/309) benchmarking ("sort", Float64, false)...
    done (took 0.172830904 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093683396 seconds)
    (305/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.090548229 seconds)
    (306/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102294802 seconds)
    (307/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.06775932 seconds)
    (308/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.092798907 seconds)
    (309/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.068146512 seconds)
  done (took 39.630350266 seconds)
done (took 40.52331821 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101677818 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148960316 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095091438 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135812793 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123167469 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092326901 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.11831452 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097475881 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124218443 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124091734 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099016752 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092377981 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097923368 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120835467 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096848768 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139997583 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123238354 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095451568 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.11973792 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086761311 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118766214 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085858108 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111897989 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069921045 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122449757 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094103453 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117381619 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119284809 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088013777 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110290131 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091241399 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118017791 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087730161 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123599881 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094324629 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119062376 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097104902 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121065417 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111749242 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088162979 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117058829 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087720106 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116143324 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.09552733 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115055767 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093928743 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117842287 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099642769 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139904135 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114690724 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096211385 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121513158 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097330922 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118013956 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091464161 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122096585 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.117162101 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11672631 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120927509 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092739069 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118888515 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095286849 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116819318 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095111647 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119880816 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121001602 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099474758 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116448306 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097681996 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116551086 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086606182 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119728067 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089505458 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111942991 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.119231597 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.099733963 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109033272 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093971154 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117804261 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092662012 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110706918 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090870869 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111938263 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094203612 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112406561 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071027255 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113618482 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093889176 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109591775 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096650206 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117136568 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094101754 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11243734 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098488575 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110364496 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091998321 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112050403 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086086108 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113594982 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091410859 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111534221 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088867215 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120306088 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088529125 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117402073 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122113801 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087669339 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.115866254 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087225054 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109824463 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101621459 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122001233 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087406382 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116876725 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086353069 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119386188 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086371135 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111533155 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086531389 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112287205 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116335226 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.089214152 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112752177 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.095248566 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124586547 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088300527 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114423799 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090529975 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109998925 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093897691 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111290607 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088312731 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112217934 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078553159 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113301159 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088953399 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118224948 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090907932 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119559949 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089882732 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120734098 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091758387 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117713511 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093429253 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111641436 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074093641 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11648035 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090921898 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113517942 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087644516 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113391701 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086929549 seconds)
done (took 16.980518545 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.089211335 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186147171 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152204944 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143148007 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108642522 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112307133 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120844533 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120241971 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113903982 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143446168 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110924503 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132911612 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148231679 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087836407 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113299654 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09184448 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113394168 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102930343 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146532214 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133056977 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165578188 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087592487 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.14715051 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135722905 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120211763 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106194623 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111544095 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092424775 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114873305 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.114129698 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133199422 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.091621048 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113128144 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133693269 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105850414 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120412137 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088171715 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119882114 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087084911 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112655366 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141706 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132616078 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094218437 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116431989 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092548023 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113991871 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090985513 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12092677 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098117032 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11715281 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125645892 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157157764 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091451224 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121992475 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086737483 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123935331 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121139847 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091936505 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11176385 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091693109 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111078178 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092462373 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126662468 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141680189 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092140617 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121952779 seconds)
  done (took 8.64564194 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105481473 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139385906 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105822344 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.147412057 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110870429 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088374686 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112055899 seconds)
  done (took 1.766437711 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.08983197 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13384825 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112382372 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136621844 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131794589 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110510515 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122911527 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088954976 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13207964 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089437208 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133516369 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152729804 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.09046128 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121506981 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137161017 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089424473 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137113904 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088882042 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116511781 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11230614 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11732839 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134501799 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091558018 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112493962 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103389855 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.11383074 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160835178 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095059797 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113696069 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092351716 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111689308 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166853069 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105179281 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125662159 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088087537 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129097447 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127408323 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088464125 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129914036 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095063035 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128257979 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089156041 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115483644 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086832066 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118389218 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123380655 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091698885 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114011927 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092874732 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133596387 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090800824 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126754568 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089513959 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120003662 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.08960433 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120628972 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122617842 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091007195 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133561045 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091416037 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130556603 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105947981 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.12917476 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130429687 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091842252 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127880752 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103178173 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116876594 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090094259 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117498947 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129947028 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088239886 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114438589 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101131363 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11511604 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11358607 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137663007 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11494366 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101268417 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113507569 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.09039086 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113597421 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.114218855 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118271057 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090609535 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118762907 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091767605 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112961377 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087594503 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117308838 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086698688 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115182887 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.115503305 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.091006501 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116149299 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.108150482 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114696029 seconds)
  done (took 11.837056983 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090962979 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11393722 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092909679 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113973307 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091167769 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114402316 seconds)
  done (took 1.587654863 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115118624 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117366665 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105231438 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121052933 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15618459 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.128867736 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.105817689 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123776995 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108142413 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127390706 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129748582 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106466059 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136173987 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.1207302 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105234095 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120680034 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.128518291 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101572981 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126812847 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097345503 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13737425 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120100035 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097225709 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131945641 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117868945 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096879708 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125517105 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103568443 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127551706 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124264013 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097155906 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117196388 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097078859 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123202662 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.128701282 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096876628 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121354569 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118727515 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101451943 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118545916 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105018588 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122448408 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127154391 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095961906 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12390245 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120252342 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095145908 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125112519 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.128161285 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095546294 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.1190063 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095742928 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118890508 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095485659 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.12190653 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122851857 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094819738 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.12994965 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.120720724 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097278201 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117886155 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093451496 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123636443 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117939344 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10580575 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119351991 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096628757 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122558897 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121753885 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09773753 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119086858 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093298393 seconds)
  done (took 9.239620272 seconds)
done (took 34.030058426 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.67835004 seconds)
  done (took 1.644568432 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.706922886 seconds)
  done (took 1.675655339 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.799256307 seconds)
  done (took 16.769072244 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.49500623 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.57864068 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.879555381 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.18021865 seconds)
  done (took 3.102740246 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.928699914 seconds)
  done (took 1.916289792 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296885492 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.257135458 seconds)
  done (took 1.528466745 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.761337732 seconds)
  done (took 1.742242973 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.344787999 seconds)
  done (took 2.321007551 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331131214 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184285224 seconds)
  done (took 1.495040482 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.543049273 seconds)
  done (took 1.523892988 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.618027201 seconds)
  done (took 7.602165692 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.268137113 seconds)
  done (took 1.261526845 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.299415108 seconds)
  done (took 1.282800834 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.31835966 seconds)
  done (took 4.304230089 seconds)
done (took 49.147248777 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099280338 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125208211 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10316513 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123454858 seconds)
  done (took 1.431873743 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101633711 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119737189 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10081568 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120034211 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124942897 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095917508 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121712109 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10131207 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120314864 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096384519 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120156008 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118781631 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099645327 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121197896 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093517093 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123152701 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099033198 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120497341 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123099613 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096504806 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117838123 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098313645 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123970535 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094988162 seconds)
  done (took 3.642605169 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101124255 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11796008 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097581127 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117023171 seconds)
  done (took 1.428549304 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10093752 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.140969733 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.13798746 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.102268838 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143096334 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.134457173 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092815528 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116135065 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09513517 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.123408499 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090914182 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.148222456 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136300611 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099477984 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.126825604 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089919219 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116902247 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136526054 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.101441378 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125456961 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.095080436 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124830743 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089913043 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139986275 seconds)
  done (took 3.799226205 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17153363 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.147115447 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138410228 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096010214 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159401075 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139969112 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089005909 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140143113 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087879275 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131222452 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.116396383 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133779605 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129059971 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088245677 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113330477 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087710193 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127758836 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128732472 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092048467 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.140872764 seconds)
  done (took 3.455189596 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098020107 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116067428 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088622456 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115540284 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100428416 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120620392 seconds)
  done (took 1.636401924 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091009769 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113863436 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090918438 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113050188 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09522938 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113504676 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089101761 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113805293 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090230333 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113102496 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089713677 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112232755 seconds)
  done (took 2.222481176 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.459961944 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093224278 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119444622 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112746157 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097910822 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.113798303 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103132992 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.117333937 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139147437 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090286616 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.113341336 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092427203 seconds)
  done (took 2.649324696 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232331211 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124938221 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285093855 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270867648 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156994456 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171007731 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279238401 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16105579 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.223097317 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158832442 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203356655 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221463968 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151528508 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189791335 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137044079 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119009639 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223553988 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237691752 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152653073 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202164222 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222822977 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165929066 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179099984 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149024639 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112866056 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169989248 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119812369 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128431478 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206042463 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199630717 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188273687 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161580568 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146913567 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236328267 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251823183 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192669241 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280686179 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135430721 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.168624831 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167246182 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263783303 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112424436 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230946021 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154883437 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104781771 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218097537 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166173043 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176315061 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149796114 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139070077 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21949844 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212456884 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.216140952 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1128095 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23062177 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157957346 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168877836 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192814262 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250209116 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221451584 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179932867 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094491023 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212395331 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192097349 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184290703 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.166917166 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.206577742 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146105518 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191159649 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188310031 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164503386 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212384959 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.186366722 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14066978 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167493074 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172687934 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171140112 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254710579 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20150075 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.09625218 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168916569 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14921328 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132178904 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192740512 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098962044 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236302928 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146750736 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.137317452 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239204117 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159590246 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16071141 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202885232 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220037001 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122325239 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110184619 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153375157 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156415356 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191702985 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140610617 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157638458 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161261205 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128961515 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178582474 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096939508 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199400153 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091559507 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172646506 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180589492 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126264862 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160280664 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150300458 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149498698 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174058608 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197462128 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142485622 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133352337 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208458602 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175844479 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.149213354 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202241178 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202268788 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.143329219 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148002115 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201537268 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24208048 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113355276 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228622514 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156700957 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133738616 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105888126 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205416695 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127934817 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161428548 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134154211 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181756282 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234149068 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124207548 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112541795 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208160845 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107394517 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130930132 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160664144 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147874045 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.136666888 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.120402305 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151743036 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208491984 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177673391 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153756991 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16475328 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152905652 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251833036 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141199411 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.12399838 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148018793 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120426746 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192351164 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198418836 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130588335 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22890349 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172661876 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201589251 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168152807 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134118292 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177123957 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129259537 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.094237933 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219249969 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168946393 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160478332 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196258885 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222923533 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181870606 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.181555096 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171809263 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198067104 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.138817966 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182442942 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112292986 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160344537 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167317506 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123665606 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.142420227 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107768392 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148335606 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143206139 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133740797 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195674161 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168418338 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215861419 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158421902 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148634081 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180929393 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.101108416 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200021461 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178171653 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148015204 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.198301672 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218935603 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187510955 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142678811 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20047638 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120756817 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098650391 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142325039 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169513933 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134298181 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133868246 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166614178 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18122111 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180870216 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176203439 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236391475 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170478166 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190189414 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121985497 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168914892 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186296116 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175588123 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184130689 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140680761 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.122621332 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202200321 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157620972 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227520062 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167545798 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201804863 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206741071 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150722164 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131780449 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151292954 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188190436 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154807657 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17685861 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147738724 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141668272 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163044758 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.106146296 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186009112 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183983912 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163659209 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186769901 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149985536 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211428619 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100561806 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165654116 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158966198 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165660678 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108027839 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174272016 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202160118 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148416204 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166281295 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216913107 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104448706 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.30671813 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233511569 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217260898 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110836953 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157923205 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160103718 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164479129 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169764764 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177338773 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159878549 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213945826 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157426866 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.109825672 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142050727 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148202471 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150113996 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.104523809 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148303733 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.202222693 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.112298033 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210446216 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160895464 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132187005 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198082499 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.123131468 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144572421 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15142404 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214300716 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202391981 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210861077 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150173543 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180106517 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23348896 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09806227 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132649701 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132811857 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178213707 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108383904 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21898796 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.187792174 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225766312 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182725843 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184952044 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140114467 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118636903 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129233019 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199157993 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205716541 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149774969 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158946622 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229382118 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115975097 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132107796 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171479298 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195967315 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146649667 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223331828 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080768324 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277413424 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125339898 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105701273 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163796968 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235213146 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136625092 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.160102818 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191239885 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168392927 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16390915 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149340841 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191347829 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214518033 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229506317 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180116012 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132326825 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155408752 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176466738 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193172891 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158151887 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.139667923 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204695457 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221650313 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196798101 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143135081 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168031564 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170446349 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157882221 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186188016 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136007307 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23090243 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107962784 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219935465 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155136941 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141972771 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177485698 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.186564139 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13917901 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188177446 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175133078 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134710597 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132756523 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169675079 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177663274 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157706808 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.126719509 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180150712 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124013058 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193071046 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258429601 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133925735 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127811544 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146340243 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136074281 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156314745 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158821566 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14044291 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.138579233 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227468307 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134383704 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192865331 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227355522 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170118037 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175086173 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143364699 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693511068 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102035445 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222278239 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154694662 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2058064 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149977527 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173621198 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159197263 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168044351 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220790553 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160494199 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.22995365 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194375547 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177987782 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132662931 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158673401 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161741438 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144465808 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151552166 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168727534 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160182733 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153203113 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178761239 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169625535 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134523649 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112356727 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22770396 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154625967 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182719623 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179483182 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138077695 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17333216 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186500222 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133856285 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178607392 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236467747 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141011043 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151326875 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106919246 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.154942556 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260937807 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123389989 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201328852 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177006729 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158556648 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167283007 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146777366 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218224291 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158311802 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179401226 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145033918 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159999584 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155222135 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110979538 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129943717 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154480269 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16744236 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149367702 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158635739 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.13840073 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217463783 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096203224 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144688082 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220548217 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192105588 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213305108 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134973796 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135196475 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162304335 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149712726 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177205111 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181109127 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134919036 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109276922 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135694034 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.155851743 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113861334 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155091588 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194546936 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164762108 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234074916 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13607982 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252883095 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139583749 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156340903 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088342182 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132230202 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149453683 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146073805 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158983988 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19164586 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260186206 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148130116 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132925811 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122962604 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126193907 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134997341 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164228444 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162898429 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177699856 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144402242 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080959914 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158872242 seconds)
  done (took 82.322514084 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160411923 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.13050769 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145921965 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200028433 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175302627 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270359015 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.20813936 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253460311 seconds)
  done (took 2.629272737 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093902663 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144059783 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156866188 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132408654 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091305295 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119092363 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.343834262 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132234465 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.114230021 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114424192 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.171893442 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09394567 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.548081195 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091317151 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118736937 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.10675255 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091657659 seconds)
  done (took 3.743691518 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.475018389 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.669837145 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.506369953 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098434793 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.982824799 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113300387 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.375771752 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.189406446 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.113992604 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.459553777 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.770699293 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.155293474 seconds)
  done (took 18.002193383 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099536379 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.119324919 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108669347 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.134448612 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095732019 seconds)
  done (took 1.654247135 seconds)
done (took 129.598691541 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104968403 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.403166592 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071437856 seconds)
  done (took 1.599288674 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107439969 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136172252 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108563122 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134431691 seconds)
  done (took 1.587771197 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098282187 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126303718 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108931328 seconds)
  done (took 1.428238622 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.320372321 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.187916993 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.162769365 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107001658 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128075008 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103575117 seconds)
  done (took 1.435489868 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097132061 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126462948 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097936196 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128632809 seconds)
  done (took 1.548626561 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094909229 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071097659 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099658368 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077145483 seconds)
  done (took 1.43777482 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11415623 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130810165 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104931021 seconds)
  done (took 1.449504463 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130656898 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.137731825 seconds)
  done (took 1.368021221 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105441372 seconds)
  done (took 1.199557416 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.119630702 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.168169034 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.188614631 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.165486086 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.226312423 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.163888397 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.139483237 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114784259 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.129888212 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.142774748 seconds)
  done (took 2.658430451 seconds)
done (took 17.584399716 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104069943 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.507926621 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.411021595 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117067161 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722203578 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380918098 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.057140216 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145191589 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164028795 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09337284 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137828686 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674349933 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.010402651 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.461629839 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.969733663 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.366598883 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.703478823 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093139983 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118924918 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094769754 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.04006251 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092326081 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120798698 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092954119 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701916108 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424337556 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095202624 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.366239613 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092422493 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12573259 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383349596 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.120941602 seconds)
  done (took 17.078809019 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096261176 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172635843 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.100268461 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136414408 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121906242 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095523721 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122930303 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093912629 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178208376 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122251253 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110632583 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120714286 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124300951 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095798309 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140318238 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093092478 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124391761 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092814991 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11958733 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119709674 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112209194 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118684833 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094857326 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121336775 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094017351 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133993537 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12132648 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093870368 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119850575 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098584077 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126670612 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095704768 seconds)
  done (took 4.8132995 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141427889 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181720869 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127639524 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127089294 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167487324 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122939996 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197924012 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117983307 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181734552 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120951337 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138306706 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093115142 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156499703 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.120996686 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115101537 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120492419 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097821121 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121293942 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092381224 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121320666 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138935459 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093716491 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120988188 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094202957 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122394274 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109330353 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.1220028 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118951275 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093658415 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126032856 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100376216 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122792637 seconds)
  done (took 5.133950582 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097349489 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124613097 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109393752 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137408129 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095268986 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125123063 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098176185 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12450531 seconds)
  done (took 2.01458113 seconds)
done (took 30.136279351 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11193041 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125694422 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107172698 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134124012 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103543419 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131013776 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.09236088 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133805986 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13362814 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103298059 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136204554 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093299209 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122150164 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091936608 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134512296 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097403863 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.13234549 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102708866 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133508908 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131487804 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094701235 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133051758 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10360265 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132818596 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104994425 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132547682 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136582665 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100168535 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12236442 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094565755 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123463019 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104236145 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124002617 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105672834 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126740509 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097205848 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123957693 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09489612 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132026576 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.1308956 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100076616 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132645332 seconds)
  done (took 5.998139832 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108035445 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.13827306 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105255987 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081064631 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116030195 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081029085 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.136801728 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079602656 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.10951677 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108156997 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07511685 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105210197 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078713958 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.10015383 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077673639 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074878516 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107744793 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075971413 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07675912 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.104890013 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080385509 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073420973 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.10697071 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078419734 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075618016 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109073617 seconds)
  done (took 3.571387784 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100458227 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134511893 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112230487 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181834749 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159072168 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100054732 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.130325734 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138067293 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108619351 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118695163 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096570535 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150023148 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110911437 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127629201 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091842173 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134688524 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133401692 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094686289 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126502585 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113615715 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136714967 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102319268 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141311707 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131120902 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.09248504 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121487843 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096437846 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.132720573 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097600079 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129338593 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097508576 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.123500912 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.130567203 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104570777 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125298484 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093489109 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140675295 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130034565 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.101423588 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.120407192 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096066571 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.120723026 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.112770901 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166435029 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091153522 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127058812 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.12691707 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102069642 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120319291 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110157618 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130009527 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.090838577 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124391258 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092483203 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.120702789 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135096931 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.095226715 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.12420039 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102304354 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123002809 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105944917 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125223851 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10829909 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121406346 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099577411 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119883095 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.09256181 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119651527 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14149177 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09437422 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162462111 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093715781 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.121659657 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.128783897 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.100733231 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126665851 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.09336847 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136510832 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101920077 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124099801 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102384931 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.123907925 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.122769678 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111818717 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.122829973 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095147671 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121005911 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099003074 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.12394881 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094350839 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135192341 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092872928 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124133985 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.13793693 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.0933944 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.12199701 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.09941871 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126224865 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09274583 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134048127 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098373482 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.121044778 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.130023671 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.092685956 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122195565 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103116617 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125112981 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.090860347 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124653085 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098880254 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.121756862 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093839213 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.123280992 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093650959 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130087957 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.12662319 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097909039 seconds)
  done (took 14.72789894 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.226914728 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.212746584 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.234966126 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.259494583 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.133279105 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114629888 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.208432277 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.153911266 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.121865488 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159658813 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.160636936 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.179455235 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.140822713 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.178510729 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.139045899 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.119875133 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11201738 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.16329447 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.213429009 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.286484603 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.112656034 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.130807001 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160999805 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159097018 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106515494 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131442733 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.136825639 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105557736 seconds)
  done (took 5.692038126 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107745305 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155147319 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.09924722 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143652428 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147237018 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093114638 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.126524349 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095679876 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134162956 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133443309 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092424648 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126920082 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100211497 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.130690583 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121285059 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103102172 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131110884 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094117442 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125053331 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096820851 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.128188314 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101288683 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125790206 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.119335194 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102796575 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119465948 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086615811 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14092795 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120095382 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115140482 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.119130214 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100067102 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13211434 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093016776 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121706089 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.09518041 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12392388 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094991168 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12355677 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092107128 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.12104325 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077285214 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12075811 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134561499 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099658496 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079396269 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128525419 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.126338874 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095194975 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.118751353 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09613763 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124269377 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096751344 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129887839 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098167687 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123129182 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097283489 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114640176 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099337807 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124202084 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084818923 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120228113 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099114206 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116038904 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100786141 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126875733 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091969946 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.123768288 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097196322 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128707436 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095228702 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.125436345 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09043403 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.124590309 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095736667 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126039701 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096643874 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121049878 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120361351 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094504875 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075035899 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122281388 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074000653 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125735547 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092374742 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12031211 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095063879 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129006375 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135616243 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09570625 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.129832119 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094227678 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121416195 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096530084 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.111976186 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09593456 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139116445 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139542205 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093674677 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.119869235 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107421886 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124575382 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092860383 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.104751133 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101140691 seconds)
  done (took 12.869638414 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127645635 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.15203067 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095519213 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.141527179 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154180805 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155272914 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101775115 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128631873 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095985125 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141012353 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093468589 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131310539 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097209804 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.135898933 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155237932 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103076776 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124245154 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106722137 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130309447 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168478151 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111392427 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.1406055 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107708986 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123005471 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.126229392 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111832155 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160012988 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107206946 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135177844 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139786585 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108054227 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.158759617 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140434152 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098424231 seconds)
  done (took 5.447127505 seconds)
done (took 49.407912782 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.229210888 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.410446543 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.196258111 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.096607904 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.201637262 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.235554573 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.208675763 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.198646543 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.573059102 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.196137392 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.456860307 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.703858153 seconds)
done (took 59.837822447 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.220499845 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.329963378 seconds)
    (2/2) benchmarking "String"...
    done (took 1.460163624 seconds)
  done (took 3.915462957 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.535554672 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.067261744 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.453308779 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.195399435 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.195914958 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.528249768 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.689236072 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.44467699 seconds)
  done (took 27.698015494 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.196642937 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.541211946 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.470626844 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.462905058 seconds)
  done (took 17.797413875 seconds)
done (took 59.29233886 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.202819862 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.269372048 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.233400868 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.175979884 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.297532575 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.229958674 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.486510937 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.214094171 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.211994974 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.1975167 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.21736226 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.201489767 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.206569319 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.5364775 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.208766503 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.196616306 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.258347691 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.711225494 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.560461152 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.217380988 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.200715061 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.253657631 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.231493342 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.198532706 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.26980175 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.19798074 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.216332593 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.20135025 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.233301045 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.198776576 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.298643353 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.667515653 seconds)
  done (took 190.127165235 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.197898807 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.173033762 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.291775089 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.217724101 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.538109658 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.40119057 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.335757467 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.617371863 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.219007025 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.221840657 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.431171482 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.199226368 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.461157223 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.198252984 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.207066236 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.200178457 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.41812281 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.486892006 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.215571698 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.42065222 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.205311568 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.336848647 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.266700547 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.397752824 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.229204564 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.281259476 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.220589343 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.223332447 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.393169679 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.364755838 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.210221829 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.213202223 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.743790967 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.056592301 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.224876654 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.209614584 seconds)
  done (took 149.157669095 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.477384165 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.198771319 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.198426869 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.199611824 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.228105184 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.198916149 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.691351916 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.695688186 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.686722401 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.490628223 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.26083153 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.411687561 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.20327289 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290375297 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.21272599 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.200875052 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.216436319 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.241248663 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205372324 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.200165536 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.694367502 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.215823202 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.402303753 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.207253559 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.200354898 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.227795349 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.587577753 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.200673504 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.22841892 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.519538518 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.243910382 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200420947 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.519463612 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.306442968 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313385561 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205045289 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.231687844 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.202463414 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.471631663 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202183223 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.201234154 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.204644848 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.804794398 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.205788856 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.693368644 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.206714489 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.100347281 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.206463564 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.202506928 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.73216274 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.750457536 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.220382789 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.202336782 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.206114348 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.20124982 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.202671 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.23050106 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.70246109 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.293681132 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.217239337 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.202593037 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.202257638 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.207096057 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.230935947 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.202513789 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.388811445 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.203437939 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.67898828 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.273918103 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.418780993 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.698875865 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.208677418 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298133779 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320764376 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.203515633 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.204477119 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.203809041 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.204392505 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.310534014 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.204365814 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.204081992 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.574479606 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.209662851 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.205594544 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.261463744 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.297812131 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.205296907 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.514330342 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.20909914 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.206315727 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.884736028 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298378349 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.204714565 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.204971332 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.204299292 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204444426 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.574649006 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.699139907 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.364274946 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.208737651 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.650895027 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.20896708 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.58975409 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.689122726 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.81422456 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.209856603 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31287848 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.209316838 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.206515186 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.205505129 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.234774211 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.221216161 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.264514971 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.206514802 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.599711479 seconds)
  done (took 345.55973125 seconds)
done (took 687.447303292 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.872174131 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.864770986 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.972072707 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.859619747 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.842863034 seconds)
  done (took 10.545527064 seconds)
done (took 11.678928279 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.374699171 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.379530114 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264807463 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.38068576 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236554634 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.395743455 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.357385259 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.231465262 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.300758476 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.282743957 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.302902187 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.260145586 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235936227 seconds)
  done (took 18.1379469 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.510199193 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.499541505 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.270071594 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.509522019 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247624827 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.507686606 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.400714426 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.423941594 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.419746944 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.238443519 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.220477937 seconds)
  done (took 16.383450872 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.538692584 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.512402918 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.274600925 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.516002965 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248304866 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.519016952 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.413166942 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.41704826 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.414314896 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.238089004 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22162309 seconds)
  done (took 16.450088896 seconds)
done (took 52.105680605 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.21585881 seconds)
  done (took 2.352708292 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.248488294 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.408676424 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.235183413 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.222304831 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.217621979 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.220169185 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.222934889 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.218948468 seconds)
  done (took 11.131523129 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.216611091 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.215174923 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.216703004 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.216070091 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.213336441 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.21741346 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.215195621 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.217678366 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.214860487 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.21453454 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.216819116 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.214467041 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.219223544 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.215080365 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.217476741 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.21511136 seconds)
  done (took 20.593022613 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.217399706 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.215125522 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.21604892 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.215965196 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.21498067 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.21582651 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.215947247 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.215527243 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.215336257 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.215018786 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.215956767 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.214868209 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.216268982 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.216388092 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.215989535 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.217151058 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.215621944 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.216846956 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.220326419 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.216485343 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.218073592 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.216346692 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.216211696 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.217105392 seconds)
  done (took 30.33177186 seconds)
done (took 65.545060091 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.143998285 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.793541996 seconds)
  done (took 9.077480663 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.219296467 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.218002675 seconds)
  done (took 3.579997872 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.219362279 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.218963645 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.219542099 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.219676365 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.219707382 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.220214544 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.218673701 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.21956724 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.219480024 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.220106501 seconds)
  done (took 13.3355581 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.218837898 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.219668606 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.215065345 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.220304657 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.21977806 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.216515611 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.220263994 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.220625515 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.220703961 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.218595554 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.220157704 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.218080031 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.21959933 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.218685564 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.221203764 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.217261741 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.218565018 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.217689687 seconds)
  done (took 23.081987154 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.220889396 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.220493617 seconds)
  done (took 3.582238157 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.21877369 seconds)
    (2/7) benchmarking "second"...
    done (took 1.21821817 seconds)
    (3/7) benchmarking "month"...
    done (took 1.21774668 seconds)
    (4/7) benchmarking "year"...
    done (took 1.218354519 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.219105745 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.217390693 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.218643078 seconds)
  done (took 9.669711734 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.220608915 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.397485545 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.474361662 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.825632005 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.222280933 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.22408543 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.098301514 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.225016644 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.226500288 seconds)
  done (took 14.05559435 seconds)
done (took 77.521257085 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.206381084 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.231261886 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.311042167 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.222841919 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.23661824 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.56083117 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.26969187 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.343002414 seconds)
done (took 37.523891661 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.232134218 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.921228415 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.932239584 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.219968647 seconds)
  done (took 11.216048965 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.200209919 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.071545386 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.203867697 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.152169117 seconds)
  done (took 17.771496014 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.14446127 seconds)
    (2/2) benchmarking "read"...
    done (took 1.540910048 seconds)
  done (took 4.814729054 seconds)
done (took 41.176352571 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.203436388 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.202330514 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.200252399 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.202182649 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.200472055 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.200562776 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.20080568 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.20168935 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.200682651 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.201749537 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.201074046 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.201080058 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201726236 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.198282015 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199791544 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.201115818 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197632263 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.195726643 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.19520279 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.194882706 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.196295349 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.198292448 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.195125977 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.195210805 seconds)
  done (took 29.909575285 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.195859009 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.193415735 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.195306573 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.19545662 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.193105023 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.196188719 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.19684688 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.191026327 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.193501373 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.195523807 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.191925441 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.191742207 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.194771176 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.192071143 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.194229546 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.191837192 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.194561674 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.190783302 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.194328159 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.191736409 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.193960396 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.19169426 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.190854987 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.194727115 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.190073237 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.190157308 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.191893347 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.190513805 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.192945876 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.18957924 seconds)
  done (took 36.907611837 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.196307906 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.196596146 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.189128566 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.189153822 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.189081726 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.18985372 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.189743387 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.189998615 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.189758027 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.192161299 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.188776699 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.187008249 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.186789357 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.187158685 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.186447269 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.187399081 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.187480046 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.188834871 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.184177429 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.183647595 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.183766632 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.184281945 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.185050017 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.184456744 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.184824771 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.18368329 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.184128707 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.1826834 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.181700696 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.181761005 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.183491752 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.182022445 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.183008167 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.182471215 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.181790293 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.181196095 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.184883657 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.187141529 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.181430459 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.181255099 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.183187069 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.181210079 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.182064421 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.18155776 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.181183681 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.181408551 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.181398356 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.1804197 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.182367902 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.182015233 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.182161763 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.18200654 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.182023364 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.182581931 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.181921598 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.182069194 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.182704792 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.181204808 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.183142914 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.182115473 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.181952263 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.1804806 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.179753341 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.181666194 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.181426902 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.181094446 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.180419977 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.181050737 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.181413409 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.177706831 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.178409944 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.178589353 seconds)
  done (took 86.362910714 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.178955654 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.17645714 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.176340545 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.176175611 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.17486411 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.176890068 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.172842864 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.176451501 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.1744508 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.176180421 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.176988869 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.174847656 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.174133299 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.174183393 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.175447432 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.172380108 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.175623488 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.173047997 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.175131479 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.175114172 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.175252321 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.172139486 seconds)
  done (took 26.952995172 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.174702461 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.178565282 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.172897546 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.174865973 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.173454853 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.175547607 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.176266854 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.17872651 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.175215606 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.173769362 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.173746839 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.175251644 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.174618531 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.175460696 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.173911554 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.175428601 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.177423928 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.174799801 seconds)
  done (took 22.251473916 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.174971346 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.174211193 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.177039963 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.173835725 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.176261717 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.176351095 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.17426691 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.177150086 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.177445921 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.174515049 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.177438371 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.17708386 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.178166758 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.174633958 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.177214678 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.175784637 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.17720947 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.175094479 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.177443016 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.175058062 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.175094278 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.177317829 seconds)
  done (took 26.972362721 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.178721551 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.177543008 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.176350772 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.176206012 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.174685746 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.178677191 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.177523068 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.176877697 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.179542807 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.177634762 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.176155842 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.177161481 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.176761711 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.17692614 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.176270314 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.176732734 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.178664392 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.176106674 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.179085856 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.175965071 seconds)
  done (took 24.642258463 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.179101544 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.181384455 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.180053885 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.180643549 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.180693525 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.180381083 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.180499237 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.180042371 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.18082805 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.180853005 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.179771099 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.181660098 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.180653004 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.180954614 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.181051522 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.180834734 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.18153902 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.181348386 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.181235056 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.181146567 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.180842 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.181080109 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.180543079 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.181705917 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.181229197 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.181454915 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.181752963 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.181406677 seconds)
  done (took 34.165188997 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.181659558 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.180852681 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.178915109 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.179517906 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.180797262 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.178999307 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.179189336 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.179902924 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.181789522 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.178753052 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.181988116 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.181389785 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.181710287 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.182247619 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.182344567 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.184534523 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.182998615 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.180191379 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.180084052 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.18033184 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.182454548 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.182824083 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.182784571 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.179574633 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.180378369 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.182177054 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.180370146 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.180451043 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.18369764 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.179310739 seconds)
  done (took 36.535006299 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.20068295 seconds)
    (2/2) benchmarking "in"...
    done (took 1.20167513 seconds)
  done (took 3.505324318 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.180236705 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.182781833 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.182647861 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.180779393 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.181043023 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.182698934 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.183723551 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.179753606 seconds)
  done (took 10.556732314 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.182654224 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.183470191 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.183233117 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.183352665 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.183967299 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.184407946 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.188217944 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.202341426 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.185618087 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.186378339 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.190451643 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.191136058 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.188874799 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.184746936 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.185812783 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.186731164 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.186153088 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.185097929 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.186604191 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.186248357 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.185505923 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.188656003 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.188174293 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.1828892 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.188448121 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.195203057 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.207530139 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.186047414 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.185802797 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.189652231 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.186074438 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.183881835 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.186498231 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.186002579 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.181232562 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.182546301 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.19023776 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.200577694 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.188830217 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.201231128 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.182860947 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.182570964 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.180376294 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.179739068 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.180879478 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.177927184 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.180396576 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.176882145 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.17923012 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.182707782 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.183717743 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.176519781 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.174275366 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.180696431 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.178814699 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.184210286 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.19476695 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.179616998 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.185770253 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.184874957 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.204496424 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.196870041 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.176894669 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.177007356 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.183870336 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.195506578 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.18388182 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.1920279 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.173853649 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.176547346 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.182655662 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.20570752 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.199026011 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.175432198 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.17755365 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.177986549 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.177480847 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.177084791 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.1839685 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.197759918 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.176891232 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.178089893 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.186034908 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.195453181 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.176991735 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.177583459 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.179571532 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.177380736 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.179543095 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.187033306 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.194690405 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.179189201 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.177657027 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.178025844 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.178863028 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.17884937 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.177118157 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.178166385 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.176050993 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.179241035 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.178912772 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.180930314 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.187271708 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.178851764 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.179536123 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.186091755 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.196359103 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.179315268 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.18536767 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.180007814 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.17878918 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.180942117 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.183969031 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.177127941 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.181390577 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.185964127 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.179542362 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.181045977 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.179617979 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.179958165 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.187569615 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.201911381 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.180848063 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.179761746 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.183822188 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.188670631 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.180650495 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.184314321 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.18149651 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.177848289 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.177709716 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.183206672 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.180766916 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.181788855 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.18126932 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.182335519 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.179301109 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.181548795 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.181514551 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.183736723 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.182773704 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.182936737 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.182385552 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.18377897 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.180436063 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.183520716 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.188440391 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.198935122 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.183720959 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.182651138 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.179475284 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.183146138 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.183283752 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.18335355 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.183474818 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.183318814 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.183570568 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.181176423 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.183233256 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.182776327 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.182445613 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.182846996 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.185156961 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.182375153 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.18737408 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.181814927 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.180701913 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.182720763 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.183268115 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.184004718 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.183802018 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.182490938 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.185179844 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.188530608 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.183478612 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.182251095 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.186361095 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.18211225 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.184206274 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.183961072 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.185457226 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.190501821 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.183560342 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.190171982 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.201481415 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.183241597 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.184804652 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.184727321 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.182583269 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.184162985 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.187026477 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.189920178 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.194694658 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.206457039 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.185386431 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.188243814 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.185424686 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.186146136 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.189979154 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.184307476 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.184913927 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.184540207 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.184945734 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.186011604 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.187083591 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.184272777 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.185348024 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.185533386 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.185259693 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.18561147 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.186288106 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.186818462 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.187358363 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.182780841 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.186224125 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.185109532 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.186677236 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.183189628 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.186051345 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.185313155 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.185875359 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.185696481 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.193361763 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.18372155 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.187164427 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.187940237 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.18696467 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.185861934 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.187897829 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.188790625 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.186571137 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.192906939 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.203944484 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.18708889 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.193821803 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.20470455 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.186210937 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.190035545 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.187679785 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.184542104 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.189752952 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.194735463 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.18790131 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.187348114 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.188010566 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.188133688 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.188787084 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.194308778 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.203877671 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.187353767 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.188810446 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.189308588 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.185985524 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.189842681 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.188349675 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.190109672 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.191049094 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.188485376 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.189484131 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.190245294 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.189106482 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.188697566 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.189144147 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.190884337 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.19550556 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.194710823 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.190660448 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.190436906 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.189425726 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.191277345 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.190172407 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.18836586 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.188756861 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.200040138 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.211288728 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.196603151 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.207872385 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.19016091 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.19484702 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.209702708 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.192530944 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.190351841 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.191093801 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.190276758 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.189676691 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.187574888 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.191055886 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.190310497 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.191261176 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.190717011 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.194078902 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.19198816 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.190586157 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.191600787 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.191761028 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.191560143 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.190877119 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.19087064 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.193553037 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.194094464 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.19057019 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.191355896 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.196772552 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.208610581 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.191905706 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.191547593 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.192496089 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.190685168 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.193898364 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.192363514 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.195206316 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.197819228 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.194632111 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.199603002 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.193831801 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.200665609 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.191918193 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.195093962 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.198318032 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.190322716 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.191483291 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.193221056 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.193851451 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.200333384 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.210076979 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.194038194 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.196114734 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.192743333 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.193555986 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.194367101 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.192836681 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.193814984 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.193397537 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.201392202 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.21052722 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.195953954 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.195665548 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.191198869 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.193699884 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.194620221 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.19341437 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.19733642 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.193917512 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.194631882 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.193927403 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.194306651 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.194306649 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.194666269 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.194930753 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.191449929 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.194903563 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.202006039 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.213795856 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.19738911 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.195037737 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.203621914 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.21365007 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.202160065 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.213071448 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.197477402 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.19572242 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.195536265 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.196976929 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.195593944 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.19705075 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.195660046 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.197536641 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.198732485 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.196543121 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.199357946 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.195743188 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.195625188 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.197131839 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.204819655 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.216382679 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.197199437 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.200068554 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.194836902 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.197927718 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.199681706 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.196921432 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.196894494 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.19921594 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.20520821 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.203823049 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.197718538 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.197099581 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.198828987 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.197463939 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.197348341 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.197440165 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.197000121 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.198448555 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.198881443 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.198559604 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.20139328 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.198934039 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.198690338 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.198959675 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.19782993 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.207400828 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.216957291 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.200286404 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.198729584 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.199852675 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.199791949 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.19982125 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.19853193 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.199377085 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.198684021 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.199314161 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.204715565 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.20549795 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.201495516 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.199659239 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.198349602 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.199741573 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.199585328 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.199781619 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.198288352 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.199831912 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.201084657 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.200063249 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.200855393 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.198637584 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.199838888 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.200515362 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.200146641 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.201077713 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.20552246 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.200536959 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.197869482 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.200349824 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.199702523 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.200050894 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.20090609 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.206411784 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.2210596 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.208835898 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.207698889 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.20397512 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.20181347 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.202841546 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.207737675 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.200035277 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.20162326 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.201543756 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.201484732 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.201597287 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.204711047 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.200861645 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.207593802 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.219915652 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.201889138 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.209738222 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.219096849 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.202079453 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.201515216 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.205627394 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.201690938 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.198734178 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.20150051 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.202209171 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.208158792 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.220765918 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.20247069 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.203901025 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.20238194 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.20296233 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.20570423 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.202591215 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.202513244 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.200761721 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.203098903 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.202119412 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.203263013 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.201936665 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.203759497 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.203460416 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.205296346 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.209065669 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.201973933 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.206918798 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.203098779 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.204282072 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.20378401 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.203666881 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.201290174 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.200812419 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.20367965 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.203312009 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.204258003 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.207457086 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.203046918 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.204406976 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.204015718 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.203845186 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.206050663 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.211878537 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.210350188 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.201543864 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.204482358 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.205694187 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.207657112 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.203970372 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.204198366 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.205762806 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.204404871 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.206056714 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.204305956 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.204466298 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.206603828 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.220023719 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.222119352 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.206448357 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.205297962 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.206641598 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.205257897 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.202581287 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.20574896 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.208548996 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.207421453 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.212012421 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.206035874 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.212719324 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.222395006 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.206157475 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.209606537 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.208489042 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.213527865 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.209628622 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.2059936 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.206293563 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.20969826 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.220473246 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.206988293 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.215038327 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.232842828 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.227333027 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.208545565 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.206215733 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.206901498 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.207021689 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.208305824 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.207516605 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.207255329 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.207210341 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.20622949 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.208448485 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.212457891 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.20840499 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.208951359 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.207313049 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.206756767 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.209303555 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.205686136 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.207872672 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.207310107 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.206958919 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.207581106 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.208739916 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.208417194 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.220466156 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.233698687 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.209332477 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.208121679 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.20558121 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.212385825 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.211436344 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.216519791 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.215196082 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.208872715 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.209053675 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.211596865 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.207188287 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.208057752 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.209015385 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.209658381 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.2099816 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.20659111 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.221035396 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.233494258 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.214587719 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.209944402 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.210552767 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.210279903 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.209981177 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.209998903 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.210090802 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.209841212 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.211663329 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.212442955 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.210270033 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.210451724 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.212308423 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.216081827 seconds)
  done (took 713.305461403 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.207315322 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.207969855 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.2078788 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.207784365 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.208575592 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.207897471 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.208352155 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.208303713 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.208251254 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.208371581 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.208624181 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.208792632 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.208623059 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.20881223 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.208300944 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.208762145 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.207537723 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.209247439 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.208654927 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.20813446 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.209076073 seconds)
  done (took 26.504245982 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.211436595 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.209166655 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.209292209 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.211465593 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209557127 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.212035904 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.210197968 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211512939 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.212058606 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2093933 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.211722281 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211955637 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.209246378 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.209826662 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211383044 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214052437 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.213635259 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.210604918 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.212397319 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.211111098 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.213934906 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.211844463 seconds)
  done (took 27.77815698 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.212559246 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.213360264 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.21369574 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.211222172 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.212833273 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.211281072 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.211998081 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.213992506 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.214724339 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.213999654 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.213182678 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.214541311 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.218717204 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.218249231 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.216512283 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.214192858 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.357794499 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.214817974 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.214992441 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.213895418 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.211536282 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.219738688 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.231037871 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.212612129 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.214004241 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.214436189 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.214460664 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.215774407 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.214001961 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.215662401 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.218247688 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.214405719 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.214864497 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.217079092 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.214746942 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.21578472 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.218391933 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.215291073 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.213261195 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.215788251 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.223189541 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.23055117 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.215453056 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.221360689 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.235364663 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.215967372 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.216986988 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.221522889 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.212211283 seconds)
  done (took 60.873092629 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.215951005 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.216041449 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.214284352 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.216765756 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.216665044 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.217395301 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.216533207 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.216575198 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.214041036 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.213772436 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.218015065 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.214649741 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.215268232 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.21796126 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.217299608 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.214454705 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.215195852 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.214454195 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.215039691 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.214581416 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.214265465 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.217684028 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.217427561 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.216473638 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.217258779 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.214026199 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.214952847 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.217097475 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.216482247 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.215751757 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.218619825 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.218645965 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.218299684 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.215753495 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.215481326 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.218226226 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.218948415 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.215953571 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.218937669 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.217055822 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.219228944 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.218722027 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.218920616 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.218425652 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.215779218 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.216375227 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.216361102 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.216350086 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.216897406 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.219493451 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.219056799 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.216321385 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.219257672 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.216852421 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.21873106 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.218666339 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.21557203 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.216601774 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.219990051 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.217220711 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.216282579 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.219418002 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.217524653 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.21901963 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.220199431 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.217934054 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.218122831 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.220400594 seconds)
  done (took 83.891610842 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.219011494 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.218700735 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.219515592 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.219192281 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.219021185 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.220375009 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.220068152 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.221033698 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.22087758 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.220188726 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.219424033 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.220090608 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.220683451 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.220473202 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.220445448 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.220997057 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.220921691 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221310677 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.220396923 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.220571589 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.220310668 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.221003587 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.220671419 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.220752765 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.221829818 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.220904558 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.221698745 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.221104655 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220119911 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.221206481 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.22149082 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.221290858 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.221901159 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.222738213 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.222702958 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.221482242 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.221708355 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222430698 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.222158659 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.221986346 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.223191562 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222598773 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.222071811 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.223241299 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222853304 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.222688456 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.222710103 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.222872955 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.223918414 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.222746087 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.224174952 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223639523 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224505012 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.224663536 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.223815346 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.223078201 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224134962 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223048881 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223595517 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.223326983 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224745598 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.224641607 seconds)
  done (took 76.888438946 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224459507 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.224387969 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.221160771 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.223383156 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.22468823 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221575707 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.226065732 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.223908344 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.224288563 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.224395152 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225008166 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222905409 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222490011 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224214569 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.221900634 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222184231 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222380532 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.223104281 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224870556 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.222061149 seconds)
  done (took 25.611455171 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.22222349 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.225614962 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.223108855 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.22405089 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.225532352 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.222985988 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.225363006 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225774131 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223962269 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225722746 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.225606016 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.225882531 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227021476 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.224211573 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.227006309 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.223988473 seconds)
  done (took 20.745593467 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.223533768 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.227274342 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.225544377 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.225859222 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.224034608 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.224258589 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.226020941 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.225024349 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.224065212 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.226836017 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.22719417 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.226913364 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.227605748 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.226673091 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.22460426 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.22790509 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.225501859 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.224741386 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.227770677 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.228934029 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.225145986 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.223964961 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.228026732 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.227410428 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.225556314 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.226095781 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.227213704 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.225954632 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.225840184 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.22853314 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.226446312 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.22549529 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.227569716 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.225081144 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.229868526 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.227252413 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.229265024 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.231396105 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.228398847 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.230306435 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.228219731 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.226151537 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.230586121 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.228637548 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.226551611 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.22934353 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.226010595 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.225930572 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.226600057 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.226782553 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.230073479 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.228499815 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.228853841 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.228689641 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.229753449 seconds)
  done (took 68.631850343 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229146604 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.228915063 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.226132867 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.229996194 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.229662796 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.227447646 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.22925966 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.228709167 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226561352 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.230951377 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.228057956 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.232083562 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227829517 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.230633855 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.229064656 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230326131 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.228659858 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.229454621 seconds)
  done (took 23.27691431 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.227496769 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.229076838 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.232415744 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.228664064 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.228253836 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.230381031 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228152713 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.231314774 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231442025 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.230383113 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229127362 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.231575786 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231894926 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.232526713 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.230010488 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230535195 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.232582663 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231834529 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.230216131 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228293812 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.232967243 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231817505 seconds)
  done (took 28.224284671 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.232030893 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.231203562 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.23199169 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.245684516 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.247998554 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.255049266 seconds)
  done (took 8.599864609 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238467646 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233006032 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.229893751 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233247394 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232275728 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231895136 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228678483 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231098712 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233919952 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231143792 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230654105 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235580808 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232288833 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230828692 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23257797 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233046203 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230729413 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231503449 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231918211 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234075548 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23100863 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235911718 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231702943 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23168968 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231038279 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230935299 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234381909 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231132255 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231180417 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235425743 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234086027 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23159694 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234784164 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233478486 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234544414 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234281165 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233290013 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235179099 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236061685 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232546345 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.234945468 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23507564 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236532374 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231870834 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238180336 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232804941 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234187787 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233494765 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233675552 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235594929 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236505919 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233904524 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235844009 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235273877 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239048156 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.237743052 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234190904 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233676864 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235334624 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233801019 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233794112 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236141007 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234262024 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234230956 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235746048 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23385566 seconds)
  done (took 82.604292691 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235469564 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.234750487 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234914127 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235672707 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234463687 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235017336 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233948418 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233686046 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234268237 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236257661 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237373916 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2348452 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234313667 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235493447 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23500513 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235414172 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234538066 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.236400293 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236159345 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237446707 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234807992 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236833558 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236107702 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234863096 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236723807 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239247508 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235789128 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236905541 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236525583 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236981883 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.237892352 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239109523 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235771772 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.239517723 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236554462 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23818451 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23761423 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.239998659 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.237618285 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.241801773 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.237860156 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239233849 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23910969 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.237190206 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238304107 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237024932 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241296105 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23656408 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237308183 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237069079 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.244127899 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23806162 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.239623276 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238386889 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237486022 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.240578757 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.24478006 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.239072417 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.240597945 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.242282209 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242235692 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239909877 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.244652241 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.24139765 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239177509 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.240538082 seconds)
  done (took 82.850556619 seconds)
done (took 1669.676113155 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.285816868 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.283322776 seconds)
  done (took 13.738766163 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.403998628 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.35779004 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.244175513 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.296665522 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.240536853 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.259338353 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.234519949 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.241122216 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.244185284 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.23889298 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.240858362 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.424879725 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.234309873 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.240130606 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.241530787 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.3336249 seconds)
  done (took 41.637952703 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.268598245 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.254881929 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.357568348 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.275259972 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.280315128 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.431138289 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.308764434 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.255082844 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.410013693 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.300604568 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.718953353 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.275584244 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.254770859 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.292836786 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.268078467 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.424333843 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.486747739 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.720254477 seconds)
  done (took 28.752641365 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.667044078 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.269879497 seconds)
  done (took 9.104756798 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.273096809 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.287118798 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.261482729 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.25394515 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.247942147 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.290949648 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.330595095 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.282188145 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.305742818 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.250088921 seconds)
  done (took 63.956281678 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.269416443 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.251503594 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.253471759 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.256845283 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.244874119 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.263664391 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.254488217 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.252312501 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.617431111 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.375567086 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.253147114 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.262612147 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.27254965 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.253761823 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.248849999 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.287110721 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.407332708 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.254105403 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.256896737 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.263431654 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.257042657 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.337111684 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.295365085 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.257102623 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.367260723 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.623522099 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.263803824 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.262323674 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.436770508 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.253900077 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.255862976 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.255625209 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.258818672 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.843914273 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.725249993 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.268026779 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.276894 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.264368692 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.254161967 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.419043965 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.258505602 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.264958513 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.247645333 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.729748611 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.384827785 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.366971099 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.425491087 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.282709532 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.262633121 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.313914139 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.261557463 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.257214515 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.283200101 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.989058674 seconds)
  done (took 106.470594764 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.261904507 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.637487729 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.417582585 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.267111193 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.060425768 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.991520557 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.272071068 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.517980242 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.298636016 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.248386557 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.536017924 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.739978185 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.281483485 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.299561223 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.786011274 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.314166497 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.248566589 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.039707359 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.26984565 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.250721181 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.732893268 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.256416681 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.269800228 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.489190886 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.284690368 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.687872023 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.560487627 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.756779845 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.273386909 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.251361943 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.69849767 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.275942043 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.292494853 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.253733407 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.498769203 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.588291745 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.578505025 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.268502021 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.260511481 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.2480064 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.279267988 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.675086123 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.588090324 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.268742691 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.248370343 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.677923098 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.268144565 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.257556716 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.258140127 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.454876491 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.122777024 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.252781134 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.552848834 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.250563197 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.609304307 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.34929896 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.26006669 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.717742589 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.265673003 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.414670152 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.307469595 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.254163539 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.253878051 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.253921838 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.252708506 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.571083919 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.586652851 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.258039329 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.573978568 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.707781041 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.277787033 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.767536958 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.177646985 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.283348442 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.304422248 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.252495034 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.875062944 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.722609307 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.295233977 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.256253325 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.565874925 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.275148003 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.522374652 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.274262405 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.26908969 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.759305824 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.269498578 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.290018085 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.255210256 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.257260322 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.008971575 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.260075736 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.529349252 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.302410849 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.256266589 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.255505253 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.307214597 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.253910137 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.267113834 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.264118262 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.756757257 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.28118341 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.216605751 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.271282863 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.264124064 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.252408362 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.256726707 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.261498118 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.475289654 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.838968379 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.28485025 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.261539567 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.258672319 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.267943914 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.501169631 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.264382563 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.540839794 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.275555982 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.257619872 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.27954136 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.021828912 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.316838103 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.258716291 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.258586978 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.124129799 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.481128131 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.276156466 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.259044863 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.258313658 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.277743113 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.419258308 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.274527988 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.340666825 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.265172224 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.94018276 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.308948918 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.274180129 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.758293332 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.270840215 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.087845027 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.276440138 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.258335328 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.541377184 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.514772328 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.52497525 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.261826415 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.283140373 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.939782686 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.307496164 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.403543339 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.282438972 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.255760625 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.455239144 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.522778269 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.259756495 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.890698485 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.26069149 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.471075905 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.251699613 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.550949245 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.725600504 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.265213791 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.2557254 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.932579851 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.935050686 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.922354726 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.249348766 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.509779749 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.191146117 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.7262938 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.246694334 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.248748153 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.816079092 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.251169651 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.254064833 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.247014802 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.246858752 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.390997906 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.418058987 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.442411002 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.256278617 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.675654731 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.3028574 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.24809801 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.252792072 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.249077331 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.595353297 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.272109901 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.248412778 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.250091653 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.248777068 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.250928602 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.69861756 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.196107834 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.255134903 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.400948728 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.854573108 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.268514336 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.248868147 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.975372817 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.465350446 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.774852215 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.303927271 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.537922719 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.271651497 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.285557494 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.977532085 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.269805499 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.70095345 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.273528192 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.256308119 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.83021908 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.268889846 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.448690664 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.250604001 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.249626501 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.768572541 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.270080969 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.249052069 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.413792272 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.267630804 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.514509998 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.252120004 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.294483417 seconds)
  done (took 1093.173702885 seconds)
done (took 1358.002423291 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.250348889 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.256849188 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.238614073 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.257483301 seconds)
  done (took 26.176559066 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.260432235 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.259177308 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.259261692 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.259252947 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.261465056 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.258217124 seconds)
  done (took 8.734053582 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.337840098 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.259430363 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.258688623 seconds)
  done (took 19.031312993 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.449363397 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.498765304 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.593238745 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.376542265 seconds)
  done (took 10.095095485 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.259677872 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.259566469 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.259291994 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.262642818 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.263332108 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.264936915 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.262152248 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.262515844 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.264407664 seconds)
  done (took 12.536122441 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.016995881 seconds)
done (took 82.762073307 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.325102236 seconds)
    (2/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.683249603 seconds)
    (3/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.28973237 seconds)
    (4/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.612307563 seconds)
    (5/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.301095237 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.519435787 seconds)
    (7/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.405297068 seconds)
    (8/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.339509025 seconds)
    (9/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.264200949 seconds)
    (10/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.303518371 seconds)
    (11/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.43567658 seconds)
    (12/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.59502527 seconds)
    (13/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.243367025 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.303401961 seconds)
    (15/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.249066198 seconds)
    (16/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.255015276 seconds)
    (17/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.348240789 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.655759967 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.300611149 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.288982531 seconds)
    (21/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.30550545 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.932943567 seconds)
    (23/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.297731627 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.298199879 seconds)
    (25/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.585375979 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.362391978 seconds)
    (27/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.361755114 seconds)
    (28/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.23998072 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.366417028 seconds)
    (30/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.243663443 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.249051799 seconds)
    (32/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.249133768 seconds)
    (33/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.239633827 seconds)
    (34/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.33415018 seconds)
    (35/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.260423345 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.310732826 seconds)
    (37/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.284796015 seconds)
    (38/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.343743715 seconds)
    (39/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.249421578 seconds)
    (40/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.266704974 seconds)
    (41/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.714696427 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.644409946 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.274296872 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.369192561 seconds)
    (45/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.983774613 seconds)
    (46/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.561572898 seconds)
    (47/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.436246548 seconds)
    (48/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.244524724 seconds)
    (49/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.267473403 seconds)
    (50/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.459731383 seconds)
    (51/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.267340675 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.27763112 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.372732146 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.540907935 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.602038454 seconds)
    (56/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.591009308 seconds)
    (57/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.290409579 seconds)
    (58/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.274687227 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.616195067 seconds)
    (60/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.273198652 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.245681857 seconds)
    (62/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.244123713 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.510453708 seconds)
    (64/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.378019393 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.318061602 seconds)
    (66/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.371811173 seconds)
    (67/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.619036625 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.666377866 seconds)
    (69/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.256703184 seconds)
    (70/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.378640948 seconds)
    (71/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.294173716 seconds)
    (72/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.247491237 seconds)
    (73/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.977989758 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.26715181 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.176650505 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.047819088 seconds)
    (77/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.779726916 seconds)
    (78/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.270921493 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.265001193 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.652599474 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.275272617 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.147885976 seconds)
    (83/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.970964861 seconds)
    (84/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.497100851 seconds)
    (85/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.464102976 seconds)
    (86/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.598955802 seconds)
    (87/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.027636084 seconds)
    (88/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.245612725 seconds)
    (89/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.620227927 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.187559418 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.306264825 seconds)
    (92/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.285459742 seconds)
    (93/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.933153004 seconds)
    (94/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.425182206 seconds)
    (95/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.5976332 seconds)
    (96/309) benchmarking ("sort", Int64, false)...
    done (took 5.420709919 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.24417397 seconds)
    (98/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.048010974 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.306756359 seconds)
    (100/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.616142961 seconds)
    (101/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.800995649 seconds)
    (102/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.474969046 seconds)
    (103/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.775432392 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.116084956 seconds)
    (105/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.28168771 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.860598443 seconds)
    (107/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.081452847 seconds)
    (108/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.261251086 seconds)
    (109/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.25012152 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.337446228 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.284149939 seconds)
    (112/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.329181621 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.333168584 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.263929593 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.263768945 seconds)
    (116/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.593502448 seconds)
    (117/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.547288996 seconds)
    (118/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.594721807 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.489077397 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.663759498 seconds)
    (121/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.288568165 seconds)
    (122/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.517313772 seconds)
    (123/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.24586005 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.265653873 seconds)
    (125/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.609987655 seconds)
    (126/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.214449372 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.258915526 seconds)
    (128/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.276394215 seconds)
    (129/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.349433688 seconds)
    (130/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.706404052 seconds)
    (131/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.35337219 seconds)
    (132/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.252668795 seconds)
    (133/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.262272877 seconds)
    (134/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.314492199 seconds)
    (135/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.868349926 seconds)
    (136/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.284978074 seconds)
    (137/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.132982085 seconds)
    (138/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.286623258 seconds)
    (139/309) benchmarking ("sort", Bool, false)...
    done (took 1.778002296 seconds)
    (140/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.304221063 seconds)
    (141/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.277155367 seconds)
    (142/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.266612203 seconds)
    (143/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.2998459 seconds)
    (144/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.245584461 seconds)
    (145/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.262537838 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.533700419 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.985922624 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.524101196 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.245889095 seconds)
    (150/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.389205441 seconds)
    (151/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.407527745 seconds)
    (152/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.266043039 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.451100065 seconds)
    (154/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.259462308 seconds)
    (155/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.38245673 seconds)
    (156/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.379267431 seconds)
    (157/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.457263229 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.007366575 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.645421124 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.315720293 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.709197315 seconds)
    (162/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.650552352 seconds)
    (163/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.454160052 seconds)
    (164/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.372335439 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.167441669 seconds)
    (166/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.293678274 seconds)
    (167/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.995883091 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.288905342 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.52608996 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.157974494 seconds)
    (171/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.856043538 seconds)
    (172/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.050799006 seconds)
    (173/309) benchmarking ("sort", Int8, false)...
    done (took 4.280666748 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.139139238 seconds)
    (175/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.263735598 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.284240635 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.379840448 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.267398008 seconds)
    (179/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.464980905 seconds)
    (180/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.248531378 seconds)
    (181/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.873963567 seconds)
    (182/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.516250378 seconds)
    (183/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.367489969 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.249253879 seconds)
    (185/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.255551476 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.099660629 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.800600288 seconds)
    (188/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.269376545 seconds)
    (189/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.258903172 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.174113423 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.294432281 seconds)
    (192/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.992767821 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.311002318 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.270301171 seconds)
    (195/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.04224022 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.250031621 seconds)
    (197/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.365805983 seconds)
    (198/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.249638544 seconds)
    (199/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.277058222 seconds)
    (200/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.27539319 seconds)
    (201/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.508878002 seconds)
    (202/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.250407589 seconds)
    (203/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.580500186 seconds)
    (204/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.375303378 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.327673019 seconds)
    (206/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.827141472 seconds)
    (207/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.250590097 seconds)
    (208/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.353523477 seconds)
    (209/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.255743732 seconds)
    (210/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.395629178 seconds)
    (211/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.84145257 seconds)
    (212/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.296299669 seconds)
    (213/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.457630589 seconds)
    (214/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.386836649 seconds)
    (215/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.333969141 seconds)
    (216/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.456793716 seconds)
    (217/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.071393454 seconds)
    (218/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.251067999 seconds)
    (219/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.344093427 seconds)
    (220/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.249860307 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.112638221 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.923992169 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.48815137 seconds)
    (224/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.252017137 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.111431919 seconds)
    (226/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.297195072 seconds)
    (227/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.270577442 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.257280712 seconds)
    (229/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.980960746 seconds)
    (230/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.270939165 seconds)
    (231/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.50765565 seconds)
    (232/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.297065627 seconds)
    (233/309) benchmarking ("sort", BigInt, false)...
    done (took 6.27137586 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.639304115 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.310155493 seconds)
    (236/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.375939219 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.829936219 seconds)
    (238/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.271137602 seconds)
    (239/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.274833176 seconds)
    (240/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.313047401 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.312651675 seconds)
    (242/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.277407533 seconds)
    (243/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.649940863 seconds)
    (244/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.98107682 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.631496057 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.285825479 seconds)
    (247/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.274894593 seconds)
    (248/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.096165548 seconds)
    (249/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.793005922 seconds)
    (250/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.299455168 seconds)
    (251/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.995191602 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.271621859 seconds)
    (253/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.6199597 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.891198703 seconds)
    (255/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.272865173 seconds)
    (256/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.607965026 seconds)
    (257/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.797426938 seconds)
    (258/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.879771966 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.2778854 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.653938445 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.876068883 seconds)
    (262/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.066801224 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.474207253 seconds)
    (264/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.674485661 seconds)
    (265/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.119892824 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.903646035 seconds)
    (267/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.254085101 seconds)
    (268/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.254040479 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.306875533 seconds)
    (270/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.337428476 seconds)
    (271/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.337296965 seconds)
    (272/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.273353843 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.670090522 seconds)
    (274/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.253778261 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.302644518 seconds)
    (276/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.283572682 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.292967596 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.715952214 seconds)
    (279/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.131400078 seconds)
    (280/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.300032859 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.356710133 seconds)
    (282/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.392346474 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.355812056 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.384396754 seconds)
    (285/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.274088862 seconds)
    (286/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.232376683 seconds)
    (287/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.408868769 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.105470588 seconds)
    (289/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.358715596 seconds)
    (290/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.290537238 seconds)
    (291/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.469801719 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.274278505 seconds)
    (293/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.35628363 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.254819497 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.389504474 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.315381381 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.292045147 seconds)
    (298/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.301029213 seconds)
    (299/309) benchmarking ("sort", Float32, false)...
    done (took 5.263113253 seconds)
    (300/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.000501983 seconds)
    (301/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.010712213 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.641146855 seconds)
    (303/309) benchmarking ("sort", Float64, false)...
    done (took 5.558332411 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.298080067 seconds)
    (305/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.795420766 seconds)
    (306/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.433933049 seconds)
    (307/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.307571908 seconds)
    (308/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.873836685 seconds)
    (309/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.255999995 seconds)
  done (took 1009.593342106 seconds)
done (took 1010.773509355 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.308295037 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.304782091 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.286680297 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.307599102 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.398180173 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.310312584 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.296997856 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.289391334 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.334455096 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.335819327 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.284069923 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.310160668 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.288676601 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.287455668 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.287385578 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.303354887 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.273578651 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.288341771 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.304516071 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.29792201 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.304837187 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.286322425 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.337595171 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.310555617 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.291299897 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.291382988 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.290201914 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.306982572 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.400179977 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.291493502 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.29182858 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.299223864 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.274267614 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.286452914 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.28294975 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.308142649 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.300282589 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.298662734 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.292791106 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.321435667 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.657569128 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.303540078 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.290644119 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.290104012 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.290045113 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.292523215 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.290005704 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.29452115 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.302929913 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.304023219 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.644797173 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.319183233 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.293624425 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.290361102 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.301072989 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.290534387 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.294219712 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.30698995 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.308824896 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.307866216 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.262099466 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.294830336 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.292639517 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.306927042 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.298041732 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.684434813 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.3023994 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.294353572 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.659663176 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.311600995 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.684322609 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.315149341 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.292902902 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.304601274 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.321962004 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.277879825 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.286750703 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.289797164 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.298977688 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.290723438 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.302589917 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.304480345 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.296799476 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.291780681 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.306176063 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.315727473 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.302870936 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.293668464 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.301664626 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.31166689 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.298918301 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.303803205 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.296592465 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.288623098 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.301342601 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.295728121 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.295135895 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.296573499 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.29807 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.303456687 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.660390347 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.325843105 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.290048801 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.289557913 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.293088906 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.306278804 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.66058433 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.309924298 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.314872307 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.340184196 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.2942065 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.265373591 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.29596277 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.311718718 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.303899802 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.296242666 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.28957648 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.266943144 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.653718889 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.324712602 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.295774812 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.292132306 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.313128251 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.29667803 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.29240512 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.282675415 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.295830685 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.308831707 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.416620559 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.305635809 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.325472469 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.292995311 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.297965252 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.317483427 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.312340667 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.326765308 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.299700281 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.311567788 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.31203101 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.292016197 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.305803501 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.306362805 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.29725378 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.30172994 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.290266313 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.319087755 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.308089345 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.308890461 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.317384431 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.416115666 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.293466879 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.268165873 seconds)
done (took 218.129262897 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.363343002 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.290100749 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.383773299 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.292990807 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.402978259 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.390612485 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.290443628 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.290702878 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.291745876 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.667585743 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.291088381 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.291692545 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.286859174 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.290198617 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.387632859 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.29437733 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.291416828 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.631629157 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.293087731 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.376416202 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.289508031 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.292305822 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.292959796 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.673450717 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.2915425 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.286438833 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.365947715 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.294602575 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.639308905 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.290486226 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.288411998 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.640465991 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.382602342 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.311684838 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.304588666 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.302214205 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.393838392 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.311789693 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.375795545 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.388001904 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.379086818 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.33325206 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.289183185 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.294338288 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.296000374 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.295945825 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.293995239 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.322422405 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.289300667 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.293960451 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.632822921 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.306361368 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.293950825 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.294304387 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.293466179 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.325151106 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.29434245 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.296730818 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.399511017 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.297331613 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.358216108 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.676432548 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.671132205 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.296608409 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.294506321 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.294755587 seconds)
  done (took 145.833331576 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.360830123 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.374549377 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.404765693 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.312330724 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.348402734 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.408560598 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.312669574 seconds)
  done (took 10.729923166 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.301251045 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.298705804 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.345604577 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.346132202 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.297326857 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.444331611 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.297481912 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.3081656 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.295636239 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.349426143 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.299319208 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.298214788 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.305094401 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.290569027 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.344785825 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.310534526 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.414057361 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.299110078 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.299124645 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.453762584 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.296763587 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.305369483 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.349468273 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.309082089 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.300585498 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.304043127 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.870910191 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.298592821 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.297653413 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.298149285 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.297381497 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.335905799 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.300857646 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.297733656 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.297324395 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.414296151 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.29912551 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.296367496 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.298702426 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.297025345 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.300221196 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.300362907 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.299733413 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.297012416 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.300088726 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.32185604 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.300106121 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.299380887 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.300040533 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.3003715 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.349769603 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.299818096 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.29773961 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.298352783 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.355122703 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.307425388 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.300123544 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.298278337 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.301324693 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.299039833 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.4557447 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.349764073 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.300741003 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.359314459 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.301791787 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.301972933 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.300132145 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.300213631 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.355363583 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.301368747 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.349496494 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.299399498 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.455382936 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.324396359 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.302384493 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.304127954 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.304065219 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.301133268 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.29852947 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.30734715 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.298895772 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.301616183 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.307620187 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.299831683 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.300129532 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.404838365 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.411748944 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.300243997 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.314416136 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.309477541 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.300270245 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.355409282 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.303111346 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.300081258 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.353614036 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.418699441 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.356660987 seconds)
  done (took 149.911541418 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.306988869 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.31149773 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.304676797 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.320965941 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.303788406 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.303482343 seconds)
  done (took 9.067024958 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.3050062 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.304405066 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.304108639 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.303877331 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.30419051 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.30432408 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.304093499 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.304862111 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.306891526 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.304187042 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.306214459 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.305299522 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.305817621 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.305051613 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.304438065 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.304232456 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.304622543 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.301387618 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.304365224 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.304070234 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.397595844 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.304310142 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.30516372 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.304600826 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.308638008 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.304985209 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.312502711 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.305498458 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.30557732 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.312517806 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.323807172 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.306012981 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.30613791 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.309476515 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.308266088 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.30608689 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.309117078 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.306178839 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.303260105 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.306329593 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.306592858 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.306041724 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.306420132 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.306170242 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.307928074 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.309877617 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.31060113 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.314488346 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.305948645 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.307452615 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.307049554 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.307278871 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.307597595 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.307098017 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.309806555 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.327861864 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.311051109 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.307310165 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.308285415 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.308080573 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.308487121 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.308228177 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.30858534 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.310149238 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.315115279 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.307767268 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.309413617 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.310729824 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.309721566 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.30785466 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.309438984 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.3065773 seconds)
  done (took 96.449780836 seconds)
done (took 413.195740518 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.609999985 seconds)
  done (took 7.82990484 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.319952163 seconds)
  done (took 7.542917991 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.011198269 seconds)
  done (took 21.234070654 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.309675054 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.380873224 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.309788743 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.305959175 seconds)
  done (took 26.527568682 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.420968393 seconds)
  done (took 7.64130922 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.300902036 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.301406891 seconds)
  done (took 13.824701687 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.656006176 seconds)
  done (took 7.875991148 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.840257606 seconds)
  done (took 8.061670823 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.324606884 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.341376926 seconds)
  done (took 14.14521138 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.283505583 seconds)
  done (took 7.505023758 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.027360204 seconds)
  done (took 8.24998347 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.313174784 seconds)
  done (took 7.536036751 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.388880935 seconds)
  done (took 7.611128583 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.003900557 seconds)
  done (took 9.22621717 seconds)
done (took 156.031296462 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.303704829 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.306442594 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.304594198 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.306305822 seconds)
  done (took 26.444104312 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.345004979 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.34468498 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.346261048 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.354621103 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.349038408 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.344588006 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.338261802 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.337171746 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.356497739 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.348529357 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.346407572 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.347087225 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.344231269 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.338209637 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.347418585 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.346814094 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.356798658 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.345869015 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.337313545 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.348756099 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.311787778 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.356076112 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.34933507 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.312939303 seconds)
  done (took 33.479058111 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.832457685 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.383681314 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.464680568 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.364824185 seconds)
  done (took 7.268154592 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.363405795 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.365868245 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.377156525 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.416751369 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.442329952 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.376662599 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.339372541 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.333787729 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.321361457 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.367045787 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.442468627 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.381453838 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.451351301 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.313301196 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.514334691 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.313363062 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.313315513 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.365200058 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.417974031 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.432094051 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.312749568 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.364610374 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.369336699 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.382381247 seconds)
  done (took 34.302194656 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.312518403 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.320670191 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.312537355 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.313414478 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.320616074 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.315186983 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.31419803 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.31548363 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.314242898 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.319717899 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.312911675 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.326947527 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.313302892 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.314339971 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.32046462 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.314226194 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.319713756 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.314292147 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.314075795 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.318014048 seconds)
  done (took 27.551995203 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.307329794 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.233872445 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.660273784 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.56401782 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.308165115 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.308348815 seconds)
  done (took 27.607302175 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.37801902 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.530682765 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.316924701 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.657250016 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.752781078 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.330936286 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.317354815 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.54678013 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.852426673 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.847712209 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.375556948 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.379543523 seconds)
  done (took 19.514202473 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.323890814 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.312680164 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.32785664 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.330541396 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.367718254 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.340724875 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.322117694 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.309401457 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.374358173 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.392553423 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.341167737 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.369416331 seconds)
  done (took 37.340344773 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396701855 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.357583374 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.198855669 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.331658105 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.030392849 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.523562954 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.361106678 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.761465931 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.316860363 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585500822 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290419534 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426463953 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.565978471 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32420607 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.318355544 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.25702795 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.559853712 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765799296 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313166524 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.164946286 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343699573 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.321198479 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.253619395 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.343925169 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.524130824 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.453113111 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.574525112 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.088573003 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599549868 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.329812992 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322552126 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313205732 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.586535053 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969252877 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435558508 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324208405 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322440863 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.943883894 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.294541927 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.173014095 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.079665163 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.321357049 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325214512 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312851828 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.248415233 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.325651439 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.754171921 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.323072448 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.025674375 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.313309075 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.325005825 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408810249 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.31792894 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.884391176 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.324845382 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.320079496 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.311472305 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338872396 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902272591 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.646041948 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.336626728 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.255095246 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.318805883 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.184410053 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938472172 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.433287113 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.319660628 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.318371702 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249954686 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.258070186 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.337478072 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461998789 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.337682196 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.964770247 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998874457 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.331850193 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.269966055 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840756631 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.317146197 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.272040388 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.544253641 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.094718803 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251438882 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.256756307 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.250444567 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985529953 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325870859 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.661112032 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336260705 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.769700317 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.33478166 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336969708 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340399059 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.540700747 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.194905788 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31666892 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.087519519 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469573784 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33939112 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.747935993 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251332601 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.321816933 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573181034 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.528178578 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.325110196 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.278903313 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.538997808 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328254575 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.339676559 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.319261357 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.334671766 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.87567382 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.344837255 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.646442211 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34256081 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.09544589 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006876072 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328684295 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.424036837 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.318578106 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555209689 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.027993364 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.20038912 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383275222 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319852589 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.315646562 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.271080875 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.914221166 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.200078632 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.311568782 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316613747 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.334085462 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.316286222 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267102051 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.315478518 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340408226 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.09550883 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.542014635 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.325645145 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.59847332 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252672017 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464776274 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.325610508 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.539888451 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.504813462 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.33197741 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575371635 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321433067 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.326351472 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.352872985 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336179157 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418895385 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339612225 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.318135507 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.582383507 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.323471445 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.324023437 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.282588821 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.107333744 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319285748 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.322577359 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322246292 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884223591 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31936792 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.323908527 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.2067514 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.33354304 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388055016 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.326535142 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.330713471 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.105815686 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333701093 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.343412594 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.317926653 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.542079401 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.331281439 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.217199629 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405028302 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.511991 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.888961931 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.350172243 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.257487745 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.033218481 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.013513909 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321146893 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.521693404 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.321055814 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334241078 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.332640955 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.327297075 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.885273228 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341006358 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.210519521 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.331830693 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.334995032 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.328717496 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323663062 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.082044237 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.685844861 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33753428 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.339804465 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464666977 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.334499024 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.256218993 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.837857882 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.327720435 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.322305631 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.100343779 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357448934 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.2363713 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.794391536 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581131144 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333468171 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.336805852 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.380378291 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.359874928 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.322020633 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.145004506 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344575503 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.33234598 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344759588 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.337839475 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.275885036 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.6944804 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889066862 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.033993962 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866306885 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248979321 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.337320976 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.229237559 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.76398805 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.255852101 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.981339715 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.50657556 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.782232113 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275237542 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.519875902 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.500045674 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.091068337 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.335192644 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.554571103 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.228421566 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.160339461 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353165858 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.53600334 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357911037 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.334501644 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.259940136 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.843942053 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564166761 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.183860656 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406677155 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.761711194 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.158013909 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.122913909 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.348704637 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.594104045 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505210726 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.87802359 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.713866283 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.32904501 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.334211507 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.795286713 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.326921762 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.856733902 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938248459 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.346976324 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.528935916 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263626188 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.340456337 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.338060662 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.32596534 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.581325597 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.343542211 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.582259687 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.338627757 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262623866 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.334852892 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850010256 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.197775883 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.33355575 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33114374 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030306449 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.336298355 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618707562 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.336964988 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.077868447 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347851997 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.262286436 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262885294 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.025033382 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.339919148 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304028184 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800073065 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.349215334 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329757928 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.334688299 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179727905 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.588641126 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.344684467 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.900807711 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571444407 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.348798476 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354300829 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.432355034 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.198430607 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.325789922 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.220151424 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.567347991 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.328095817 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.550510716 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.229839827 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.231496226 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.384024303 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.541558128 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.235749119 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.340178595 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.579075299 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.067312215 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.340594551 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019111978 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377873064 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.331522135 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.341967404 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.342872944 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350144591 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416050948 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.341846734 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.344170672 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.341649872 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499563129 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335605147 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352124955 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.348619909 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426009714 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.696361537 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.084581158 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.106970491 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905474962 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074220021 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.920255399 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.368300778 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.331906469 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334878637 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264378537 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483197421 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.862550224 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608590912 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462968894 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.335831784 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37081433 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.208793407 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352120087 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55091828 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603973929 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.304304311 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34378495 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.125022486 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.212914586 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.343935414 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.544152103 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809354467 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871251301 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443130798 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.336239646 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.773257156 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607018738 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.424031237 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33227786 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.920311518 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.342154211 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.603658594 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.354761848 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335063242 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494064029 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.342736308 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993702072 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.367432478 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.49526642 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.1083817 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.334933278 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.599703934 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.782838755 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.34385116 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906412105 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.037762107 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604397883 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403995627 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.34571111 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.439953752 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481110071 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.332465437 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.225200158 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.335930967 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178157733 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.046900483 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.346763525 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89674443 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62385153 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.334701548 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.333700187 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359994798 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.347457885 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.557914076 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004142239 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.561755441 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.346438682 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.336843326 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.906369102 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904307307 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374039086 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267606361 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.339647504 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.579057461 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.594163152 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360217117 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.79012486 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.049786352 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868971351 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.306599474 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359495144 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343178475 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.024088977 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91472678 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.093019484 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824769179 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.003323004 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341777061 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619226742 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.343930853 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.340586487 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639027869 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.346491893 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.339946397 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.358035229 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.91290363 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.118700754 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.344354335 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.272845955 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.277413021 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.567499101 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.339437907 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27794589 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337807466 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.513461286 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.346894482 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470034514 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34895998 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.336170774 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347158499 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.097984317 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.628909187 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.346774249 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.336079899 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.238180743 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.349765384 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388812057 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596632511 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346014696 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.019258378 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.695292771 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.600553808 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.349516186 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.328903612 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.34689686 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346992865 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.058987866 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.351236262 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.3478631 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881326853 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.355074513 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.354700934 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.352785272 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.562002173 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556232656 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.356257013 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.362402677 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354672119 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365127538 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.248770078 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.11078078 seconds)
  done (took 1631.796502317 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.370771455 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.34455292 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.364726264 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.377116091 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.352992139 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.392457395 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.397942226 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.376201502 seconds)
  done (took 52.233614633 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.351889083 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.50489955 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.375278847 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.35481882 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.356886567 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.354649212 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.790790516 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.367007908 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.352738852 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.358454091 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.357739529 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.349329803 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.970440613 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.358566435 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.358581189 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.334990211 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.355894586 seconds)
  done (took 65.512720949 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.357182507 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.84340803 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.452711567 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.356204322 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.343196583 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.375247973 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.039872006 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.34592456 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.358619642 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.628314245 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.015133868 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.379494486 seconds)
  done (took 84.759022647 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.356551529 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.357485814 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.363379398 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.355213482 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.357199142 seconds)
  done (took 8.052261757 seconds)
done (took 2057.086898513 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.591299296 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.001861384 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.979644836 seconds)
  done (took 5.245942742 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.495477577 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.541879452 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.664616006 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.67715828 seconds)
  done (took 7.642472053 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.632329804 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.724747134 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.540359836 seconds)
  done (took 6.162749299 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.714630437 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.383043077 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.349387415 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.34772858 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.352997833 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.352279489 seconds)
  done (took 20.315433701 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.354718477 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.355935051 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.355260436 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.360113627 seconds)
  done (took 6.692489225 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.33361035 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.019963318 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.33124556 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.350824431 seconds)
  done (took 18.301915424 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.096802148 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.112749337 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.099658 seconds)
  done (took 7.574379379 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.351885951 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.198053594 seconds)
  done (took 9.817443387 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.64648513 seconds)
  done (took 2.913262696 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.486518495 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.680800665 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.357738605 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.272276054 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.398042126 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.040691492 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.926725489 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.527117978 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.244774437 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.443935827 seconds)
  done (took 27.646205305 seconds)
done (took 130.615233641 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.092434537 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.727164795 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.553240791 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.067437615 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.576845113 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.551481739 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.772233439 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.043462929 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.576413009 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.561639269 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.101380059 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.596792372 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.500618277 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.733420862 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.505013684 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.596867557 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.580953637 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.142504277 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.79238854 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.949759255 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.766830457 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.703040012 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.93628739 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.72851403 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.579900967 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.507536194 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.283888647 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.597822071 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.96712571 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.294221141 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.49928212 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.118083982 seconds)
  done (took 192.272105407 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.357229926 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.350767469 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.352151847 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.358850226 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.365078097 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.353585059 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.351515386 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.367787246 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.351859632 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.35902461 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.35254708 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.369219232 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.3554002 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.366103157 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.351901378 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.364269686 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.376548739 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.352676341 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.362596623 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.348593385 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.353017866 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.352555229 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.366771057 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.353127736 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.351091638 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.351001036 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.353057736 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.360227075 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.349083152 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.359752323 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.348324989 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.353707306 seconds)
  done (took 204.685478448 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.359246406 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.355537366 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.354883733 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.356252751 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.353837928 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.375836108 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.352368826 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.370032771 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.355655092 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.350761007 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.351174156 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.365001193 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.355650795 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.353521913 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.370624447 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.35424493 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.35263944 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.355349327 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.366305254 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.352817328 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.36793124 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.38192087 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.366894655 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.352477928 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.370489247 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.354580558 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.36997696 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.370698656 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.359819118 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.353086078 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.360793956 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.383394121 seconds)
  done (took 204.823445202 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.563300442 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.366378753 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.366210772 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.324758915 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.366978992 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.366082467 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.364601652 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.557657698 seconds)
  done (took 14.546690505 seconds)
done (took 617.594714961 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.595491117 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.304163094 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.557838898 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.389738014 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.117517298 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.399149625 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.386847044 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.548244708 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.270793218 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.554964248 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.578046301 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.40029042 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.723084686 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.388160763 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.632414238 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.477481886 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.228461596 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.345618674 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.688568445 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.886659294 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.643032971 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.798823775 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.565507041 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.267563735 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.715435892 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.794091739 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.043855804 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.213169169 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.400896989 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.699834996 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.917105024 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.298456878 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.441599174 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.441016286 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.499459058 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.480496561 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.264583874 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.436745999 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.582740002 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.575851365 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.893109491 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.093309326 seconds)
  done (took 91.815120378 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.34899081 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.354258428 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.353202482 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.355359279 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.356445932 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.354637779 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.351509379 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.3505721 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.353983608 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.354869732 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.352116577 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.356139536 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.354068778 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.354385862 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.351224917 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.354734513 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.353728852 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.355824063 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.355170982 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.3546367 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.353564275 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.355113791 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.355140548 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.356917533 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.352372667 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.355076941 seconds)
  done (took 36.480332701 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.373689905 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.614879603 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.770477742 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.376018788 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.37294321 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.377276996 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.449929105 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.367634037 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.375396533 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.380415602 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.53864236 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.370661318 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.41280356 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.80239736 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.372913964 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.377651858 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.374268739 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.371748697 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.624811266 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.382011303 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.469294205 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.369562053 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.446487376 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.381073197 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.398102992 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.373420826 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.378102304 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.893632667 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.388869103 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.541012543 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.132549037 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.446416515 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.838780491 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.798115173 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.133425758 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.37734987 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.378011529 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.545176908 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.371900046 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.376765734 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.450481522 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.370756225 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.783708723 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.9769303 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.389040203 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.380087242 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.912361641 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.555386719 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.603607378 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.387462579 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.807020436 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.374256353 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.382316727 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.381688479 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.613186908 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.38425191 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.379022234 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.903607924 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.395173922 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.453901534 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.372033382 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.379772764 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.633812412 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.371375058 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.628780443 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.375995728 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.389886904 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.398168177 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.787104288 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.376775847 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.010791295 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.39092506 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.379621948 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.544261859 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.615520315 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.938192172 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.39287412 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.639636036 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.852730268 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.462222908 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.377184119 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.883449013 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.465392997 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.376734696 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.385803708 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.38577389 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.38133487 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.429117564 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.45139067 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.930465939 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.009113302 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.91174671 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.467790518 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.387910762 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.38200729 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.904622161 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.39370503 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.382095205 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.783598608 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.001515983 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.392383166 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.390519423 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.00842714 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.395062381 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.457291612 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.379977234 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.79121837 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.38279363 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.431352499 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.382051026 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.387259341 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.400945421 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.452538704 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.384703944 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.380404131 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.977246542 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.565093224 seconds)
  done (took 180.48080302 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.375221858 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.366973324 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.3759854 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.367787793 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.375498913 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.385135087 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.376808409 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.376287972 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.383094513 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.376794863 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.375773523 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.377159008 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.373466936 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.389932151 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.380465982 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.38424453 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.985986177 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.37640954 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.373644974 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.370985249 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.161450144 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.376767991 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.377138914 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.369561692 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.373201138 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.373224845 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.39169463 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.371401246 seconds)
  done (took 153.226177024 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.383549301 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.924387757 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.392777559 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.510124022 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.397424228 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.38242013 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.503055359 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.432945363 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.397381605 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.38068747 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.379318868 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.671878961 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.378392224 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.882799888 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.570049461 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.517296152 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.883768243 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.401683339 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.379749023 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.384536565 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.510729689 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.381645113 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.678448932 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.925258789 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.395641946 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.930663721 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.362750312 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.382861902 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.383008017 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.929551636 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.39254438 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.674671404 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.452104184 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.442344557 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.94524894 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.897614757 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.901692333 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.530102443 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.377068755 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.38219047 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.382154778 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.365637391 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.929393487 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.397809991 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.382902937 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.920874262 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.397677286 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.388306793 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.387791343 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.382028505 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.438113057 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.4607043 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.694976726 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.936126675 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.472630112 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.396119763 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.512791575 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.757658901 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.38303338 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.883996897 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.361599991 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.940122686 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.399953634 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.365358565 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.383118914 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.392244488 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.527207634 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.507120937 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.880109918 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.397508384 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.889562492 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.542214454 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.383176007 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.383628577 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.38557849 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.938024548 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.901516894 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.547884452 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.512906335 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.566126556 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.371919464 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.388238828 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.369067503 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.459921247 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.384895983 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.935049966 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.901869429 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.404855749 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.386809342 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.387063226 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.385485496 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.553127264 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.953547065 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.471076439 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.883313608 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.702296499 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.676953832 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.385017192 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.444842945 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.404964601 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.687379812 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.385803614 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.441685414 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.833881041 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.6800421 seconds)
  done (took 164.276376687 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.625359779 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.551854155 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.480040142 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.517854768 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.968187586 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.941847557 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.58905502 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.520298688 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.492562884 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.645737783 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.514048736 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.475283713 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.560406372 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.45527836 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.086032253 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.468560402 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.489392411 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.540446048 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.492472432 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.38546754 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.014972866 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.6644235 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.551587471 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.199779762 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.471986182 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.128770667 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.937055355 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.910533839 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.563150936 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.667229435 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.908610614 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.490388327 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.339949375 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.052770194 seconds)
  done (took 65.991908574 seconds)
done (took 693.542929882 seconds)
SAVING RESULT...
DONE!
