cset: moving following pidspec: 25384
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.351065304 seconds)
loading group "string"... done (took 0.552107066 seconds)
loading group "linalg"... done (took 7.503589565 seconds)
loading group "parallel"... done (took 0.172266213 seconds)
loading group "find"... done (took 1.173178252 seconds)
loading group "tuple"... done (took 2.079615696 seconds)
loading group "dates"... done (took 1.325451353 seconds)
loading group "micro"... done (took 0.246005284 seconds)
loading group "io"... done (took 0.96912479 seconds)
loading group "scalar"... done (took 40.589864523 seconds)
loading group "sparse"... done (took 13.147175802 seconds)
loading group "broadcast"... done (took 1.048914531 seconds)
loading group "union"... done (took 14.184992524 seconds)
loading group "simd"... done (took 4.757359045 seconds)
loading group "random"... done (took 9.624061887 seconds)
loading group "problem"... done (took 2.008933959 seconds)
loading group "array"... done (took 22.554395905 seconds)
loading group "misc"... done (took 2.03329061 seconds)
loading group "sort"... done (took 3.44744093 seconds)
loading group "collection"... done (took 19.738744083 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.574130467 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.157147444 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149088248 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148199897 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.19750199 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.145451544 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158355798 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097562986 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.968017926 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.172691005 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154429408 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.523313745 seconds)
done (took 5.176954342 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.219538607 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095194211 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10434475 seconds)
  done (took 0.872009892 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077127327 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146472407 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094239969 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078622844 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094762852 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078453378 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09432529 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077749145 seconds)
  done (took 1.345262617 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086334972 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097090911 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082706965 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095766081 seconds)
  done (took 1.044117737 seconds)
done (took 4.246680106 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.727491536 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.271534057 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.206445737 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.464045848 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193545285 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.21678955 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.688092335 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.389231108 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.260350904 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100022951 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.135789154 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.394346541 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136654916 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.704099579 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092221157 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123622892 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.185226683 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.481480634 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084479337 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109655326 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117185131 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143442466 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129964136 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090817782 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184111731 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083191162 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192753621 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10940877 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.082851237 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.274941505 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200796059 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690959694 seconds)
  done (took 10.985046266 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113505037 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133327177 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096909317 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138778501 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13442489 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099109822 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083576808 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095886167 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122141478 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176550414 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.129328385 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121748663 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094060973 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081829242 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11488723 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243827114 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120944836 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099186268 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099578762 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086692173 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136931436 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112146815 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108380897 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092707097 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166178344 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222784319 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110849655 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124718573 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096562933 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112227948 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142035415 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14357902 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093778577 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080229595 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172093756 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123240892 seconds)
  done (took 5.123912181 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.092649124 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189489354 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122251932 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167807211 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080834583 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14264776 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.093499717 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11254429 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256244228 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.123670387 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.161666306 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.487244212 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141898148 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099338031 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098141248 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082443615 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097951156 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.65296498 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.155840646 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116844759 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114544182 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102364854 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087815009 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.396204205 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09494802 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080007787 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097428694 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065648274 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160369545 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097710238 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.188656258 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122097616 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100380992 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131824854 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.199841077 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126687622 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116737696 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096553007 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077720879 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.190853527 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087427775 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096062488 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103624251 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134635162 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134039466 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097266137 seconds)
    (46/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078181092 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.210477679 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081256748 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.094598531 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096967547 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.936147418 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078297497 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180459012 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.104255405 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.078803672 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.304604599 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114953378 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078704131 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.099534371 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.297308138 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.188096668 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098151598 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079539304 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097214464 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081847403 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.429482764 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081134185 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.992623584 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082158466 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106393311 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082805622 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09627115 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102553052 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085829424 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115132494 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079902948 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098628666 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079182082 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096902822 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081418632 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10737666 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.212294648 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099034636 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.078666994 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095238862 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.075907204 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115846991 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126152229 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082873836 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094438254 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129315384 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097413337 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080988565 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132519151 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080197214 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10759565 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098312842 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14262648 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.0830895 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.173078318 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079310136 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122761821 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098798452 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113995831 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112110504 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098846259 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.168015734 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077635612 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095762964 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079325184 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095010052 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081284244 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099349237 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108200618 seconds)
  done (took 23.149197905 seconds)
done (took 41.030124026 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.323602543 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102137359 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102414125 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101214678 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100365509 seconds)
  done (took 1.484291415 seconds)
done (took 2.212533264 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.284635323 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172171639 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093786134 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164637898 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09207625 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.163104251 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.15731105 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093270501 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217805048 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093401399 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.158999216 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076715581 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092956256 seconds)
  done (took 2.617775323 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093497926 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113175431 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082158595 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109681552 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076588772 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109418739 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092360243 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114801387 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108071057 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084616887 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090980496 seconds)
  done (took 1.801545382 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093815666 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110663738 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082891249 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108597293 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076572048 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109735859 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092506575 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115152409 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107927885 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085565664 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093024697 seconds)
  done (took 1.804335894 seconds)
done (took 6.944719244 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090834109 seconds)
  done (took 0.815527557 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.921741024 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.567432007 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.114521943 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150358229 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.31758212 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.172589514 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.473628448 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125538472 seconds)
  done (took 10.77605868 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.143501064 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081912244 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099702565 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08541298 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103397188 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085739992 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100687024 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100353942 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085451537 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100688055 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082384983 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098761546 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099622713 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082284295 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097736554 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083104263 seconds)
  done (took 2.323641822 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118024478 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117728763 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105737401 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106624347 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086380952 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104007954 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105965265 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087715178 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101109002 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102699886 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090404196 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103863282 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102519123 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079297931 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104091078 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107088543 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085418435 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104240605 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105906967 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089290176 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105747511 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094346651 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086834939 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10516837 seconds)
  done (took 3.23845054 seconds)
done (took 17.883624343 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158168141 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108031516 seconds)
  done (took 0.995894507 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095197204 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111170434 seconds)
  done (took 0.940960858 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096619942 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094057736 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121292 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108322684 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079938564 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095455073 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117255905 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079213356 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09559877 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080926422 seconds)
  done (took 1.706205113 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082535044 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108985039 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100893377 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095094544 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104475003 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09465116 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087142137 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097955463 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108267111 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077049317 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101210178 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11379616 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086116511 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11409685 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104754208 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082776412 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.100722924 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097992744 seconds)
  done (took 2.498446605 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079160386 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095999437 seconds)
  done (took 0.911066799 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080853548 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093164378 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080905672 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096629795 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093013661 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076240008 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093958367 seconds)
  done (took 1.351316355 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.43523505 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135275988 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.257875571 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.083837279 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119270576 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.299799293 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096448033 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084920485 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101745005 seconds)
  done (took 2.406939112 seconds)
done (took 11.545767327 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093200687 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.114501701 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111835609 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.454585061 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107004256 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097266168 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146182369 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.247192825 seconds)
done (took 2.1199626 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.143796785 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.566109935 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.4213242 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.229675371 seconds)
  done (took 1.963146578 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.400838339 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097698633 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082281834 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080341504 seconds)
  done (took 1.41262593 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078953653 seconds)
    (2/2) benchmarking "read"...
    done (took 0.09907767 seconds)
  done (took 0.92918034 seconds)
done (took 5.201394459 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080488025 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097115874 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.114013893 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.096092186 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080210982 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.095272232 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07786921 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.095737593 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079675346 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.095566799 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095979106 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.076741941 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.095671039 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.079815988 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095804351 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077612409 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093887033 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079982988 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094657953 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07721945 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093891248 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079851365 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093608639 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077605649 seconds)
  done (took 2.909163113 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099202033 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09663381 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102259183 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085782765 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10198161 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08563449 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101692588 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096563678 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085558466 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099358265 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102111323 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084155238 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099289126 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08409272 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098702779 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100988869 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085771663 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096590712 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082199563 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101029327 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102321298 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080657664 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100782538 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101336265 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084856729 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100439084 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082458919 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097252465 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102465025 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083656389 seconds)
  done (took 3.579232033 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085456566 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093477823 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.0781432 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101137179 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076886299 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09576857 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077677513 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095007261 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079332217 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094208723 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079519765 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093959864 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077247132 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094781153 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078585373 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09952053 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110789349 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077851983 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093653169 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077739732 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098410251 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077689431 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094415203 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077886349 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094841639 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077990939 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095399389 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078054874 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095925511 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078102569 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097008375 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081259904 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093810147 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084873948 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097808034 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077706205 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098260485 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078009176 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09571413 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095108587 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078385925 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094796119 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077813794 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100835122 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07817105 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097312034 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07881469 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096595266 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077671132 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098331482 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077583412 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095011873 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080996957 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094990767 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081540001 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.095162644 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09523069 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077510623 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09562786 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077589849 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093625611 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07826124 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097071232 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078887314 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110411701 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084784061 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094002546 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079960734 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095311739 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080046446 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095966429 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108055222 seconds)
  done (took 7.133266196 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.130669693 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125809623 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080248587 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096733763 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076395601 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095549219 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082354157 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094690309 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09692712 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084728101 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095724961 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080679743 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096364871 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093660963 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095122608 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097098628 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08519123 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093469256 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078442486 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099109082 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07872387 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098733723 seconds)
  done (took 2.812570427 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.204987594 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104227912 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141066763 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106486571 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083342898 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105915616 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101881214 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08660436 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102339045 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084063221 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099925174 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10232336 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082743176 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099619184 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.209490632 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083288487 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101829631 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08421049 seconds)
  done (took 2.743187009 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091486748 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097716665 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.098987789 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09798547 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098377359 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08359899 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102968189 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106939396 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083185906 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098242305 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089804212 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099817865 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.09979501 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081541812 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100411122 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080711402 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099779174 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080928916 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107012147 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103304069 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08643108 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10650006 seconds)
  done (took 2.858674799 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096327376 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10070321 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117495433 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084018439 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094487378 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080210787 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105058306 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080618043 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106234422 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100121302 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081611186 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096305674 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088373063 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097345639 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103575061 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080777765 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101110731 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081524789 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099776273 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078087828 seconds)
  done (took 2.637888254 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102317978 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099440393 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099193625 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091509479 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099105575 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082352437 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108825502 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099303961 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081744765 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123989155 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098357207 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081889755 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108998604 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105040372 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099167925 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092407315 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108823115 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108491685 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082132044 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099078119 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125412818 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083299303 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109272997 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099837917 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083275676 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098647162 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099365893 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087491341 seconds)
  done (took 3.524812524 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081318307 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097896261 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.07813669 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095888691 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078508643 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09546569 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0788372 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098032213 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081711211 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095189522 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080819227 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097400905 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080652336 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097671338 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080491287 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098203866 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081284381 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095567953 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078475123 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095794765 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080774806 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098310047 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081362511 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096242359 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079268983 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09881556 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079431127 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096018826 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081027203 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096076745 seconds)
  done (took 3.423645751 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090667043 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105961776 seconds)
  done (took 0.964552865 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078697405 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1140058 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077979509 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102547708 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086976544 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099996764 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107521385 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085533411 seconds)
  done (took 1.524571202 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09568955 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109706981 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083636977 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112003291 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.10857678 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098916869 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170031703 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100883504 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087497216 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09711266 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112100558 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079853057 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104661701 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081335788 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104670189 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086792609 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096375923 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103881015 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085714536 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097405511 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083633632 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109735715 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084322179 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096396321 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100605451 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091629933 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111279123 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082767676 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10215194 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10624964 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087081287 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092431304 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081733002 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099807931 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079335896 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108785225 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115855227 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084872865 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108523009 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09966698 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093488445 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09462302 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086041798 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104788344 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109722123 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082627011 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099549946 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076751841 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096836139 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083730507 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093798087 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08178603 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09418628 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089065553 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102675123 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110262893 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08020574 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100776934 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084812947 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103331809 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088065009 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101068682 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101884251 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081161874 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109455994 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086412201 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10988473 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095125027 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.075192675 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097325911 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091143624 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122741664 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105530357 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082530351 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100264787 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080166632 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102238166 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08290155 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104113248 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105812554 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081536708 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106905054 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088658508 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098955524 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.101217575 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090576934 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097975879 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084279481 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096480592 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116711886 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080829929 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097395537 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080144338 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10977479 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084687416 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098595973 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079051375 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106518866 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093234499 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083080793 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100607939 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08240236 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110165424 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105927486 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088651076 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108357786 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.106599961 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081543683 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103365497 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079115825 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101328508 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084590648 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106265457 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076453502 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102599837 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08299752 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100637827 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109317467 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081243443 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.09991418 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08942742 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105889416 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097553528 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.077723104 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102491602 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082627528 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103111418 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09071717 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098443671 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077123548 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094955431 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103801514 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081664138 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102939736 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088408941 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102698217 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076776874 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097613702 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104119215 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091598481 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100100156 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082800132 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105945947 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.101244896 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081717479 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106451061 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08489329 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.098342565 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088007789 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.099458562 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077699254 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10303014 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102283074 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080160448 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103782726 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086125116 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102576591 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100150773 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080774384 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105960045 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08365796 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.098718734 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082804106 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097733099 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111292877 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084516617 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095367165 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079706214 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.107847886 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080393303 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099237606 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082118334 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102490905 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101990013 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081161597 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100465288 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084182688 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11188956 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105156656 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083678146 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106705327 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093151339 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099735386 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084660236 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099056493 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101757647 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083709787 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.108930289 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087509306 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105235099 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102831391 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078543768 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106420082 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090544714 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099414068 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081038645 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.098495941 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104008433 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.087193239 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103544567 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.082960933 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098685248 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082978978 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104065778 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102614813 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082045792 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099760725 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087732057 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.099195026 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107655341 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082886247 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111086709 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085383525 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095085595 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086172148 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098190086 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.105775482 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077457215 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097426367 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081215702 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100760615 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081813964 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.102652953 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076391962 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10770725 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107877358 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082065352 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099965506 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082547409 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107371247 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084468859 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10411841 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085380744 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106807508 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111046836 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082076608 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.102982316 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093150993 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101159728 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094875511 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089038693 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.09879054 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.08185612 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099587085 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081529737 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102907429 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110417987 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089358693 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094245292 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085012098 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.098565231 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080986682 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095134968 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086723293 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103261055 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.102809379 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089215022 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101088567 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.083179538 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103905196 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.081742714 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101267864 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101372798 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087844714 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102103935 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085048828 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.099793619 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085013889 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.098904148 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079893735 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.10225781 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100997712 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081907586 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106117374 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08216182 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099965602 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085036804 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.1012169 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101112818 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.082787758 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100459396 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086045916 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101437196 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084051651 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103634056 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.07730321 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108214327 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083224144 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108896566 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100751754 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.08037522 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106433106 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085035884 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105994777 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102274162 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084010321 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102605018 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082514531 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103486515 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089557549 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099095649 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111144635 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091464283 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101516215 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.08576788 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.100550579 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084547413 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099341407 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.101479307 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083180023 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100501655 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083661214 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106076395 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085832473 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.100567217 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085432627 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102417507 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.101434147 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084172221 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095754379 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081577915 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.099452743 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082628472 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111828602 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.1013127 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085155577 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099924378 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083759989 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.09952036 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080195502 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.108928185 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110763866 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084216746 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108076532 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081334524 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102375081 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112168888 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077527625 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099252059 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080451758 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098361434 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09046134 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102663214 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092549568 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100538159 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100904315 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.079941874 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102109042 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.091708494 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094590965 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081078717 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104914646 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086376856 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099845198 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.08400787 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104552952 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101884606 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092948773 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.1013754 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084126355 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102426315 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079608286 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.099390351 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082228405 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104345052 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102037214 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081332655 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098481665 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082916088 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102063385 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084250397 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101683388 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084919729 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108246119 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101015839 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085834951 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104751571 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077101324 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104308402 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082499834 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101674147 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.09999115 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086682856 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104799937 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084382501 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109923182 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.08371759 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100947987 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101914252 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081309742 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.10101222 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083258609 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100527268 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082651397 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102169751 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091528743 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099384318 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104224192 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082831405 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.100636316 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090777271 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102301277 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.084843591 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109531318 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104348129 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085033936 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109067877 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086506747 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105022544 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103106712 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.0852568 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106664993 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082525082 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107311193 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083353966 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.101800331 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103195643 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08052658 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101379971 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083691402 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099532663 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088676227 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.1030739 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081558565 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.1004385 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.08089581 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102232631 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104945498 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090975485 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103525607 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086364502 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097022008 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080699335 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102810251 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099940349 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08561723 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104759079 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089354576 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103315555 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083292275 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100374931 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111478631 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09029806 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105321121 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080898522 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104833213 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084433635 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104410814 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083426803 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.101901361 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.1031204 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087931547 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103492181 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083106655 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108985792 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08655071 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104364594 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102278179 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08362074 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101915906 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078770369 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102151755 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085466697 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106923946 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085882237 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102198432 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114354657 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083509561 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101734245 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087277792 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102143309 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106687988 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079116234 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.104448362 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084808609 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102926229 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079072553 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100303765 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081561019 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104110965 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081733407 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097819752 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1130885 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093023593 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.1059908 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083112727 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101278353 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078934242 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097111736 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100886251 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084744848 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103689842 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093934418 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101328103 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082843076 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096735715 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083763893 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10465392 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105318141 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079948084 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097772789 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082439765 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105173261 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089165407 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100448473 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082621442 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106151373 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103885616 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081239935 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105344125 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080213691 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.104958627 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11609573 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085041191 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103203717 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089705995 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11014943 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084790534 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097618339 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102988674 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086574689 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102047589 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085330351 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102882798 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118024636 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087853248 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100264331 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082882886 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104271312 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083106225 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111304692 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084368483 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103694029 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107920726 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086022812 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111021704 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085940198 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110841828 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104686195 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086402145 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101223733 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083955349 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.09959495 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081828841 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10451911 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103179048 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088786324 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110290871 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082212999 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113700676 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111478 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088796516 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098578813 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082616683 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101998096 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078416903 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103141204 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082190806 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101092328 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099912119 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085059555 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102912129 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08919002 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102848386 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085029411 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101940769 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077931352 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.104269196 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085645878 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103465558 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09890954 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084118894 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103797089 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088971288 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105988663 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083974556 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104234275 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084911225 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103631837 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097425585 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090944377 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101716771 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086653399 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101465599 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084592262 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10344146 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087044317 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109165316 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104462533 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086526115 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115311183 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086229698 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100550976 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100356176 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.0898296 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100100721 seconds)
  done (took 57.525436228 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147385913 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080307547 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098063502 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07888096 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111620673 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098884497 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079378849 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100080264 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080686213 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101272807 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079126103 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09778597 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10814795 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124438448 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092875941 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10355057 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079702801 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099152261 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097486508 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081005115 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107917987 seconds)
  done (took 2.869746846 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102857134 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11986869 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.1146131 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118881453 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089136093 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114453694 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114212622 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115618514 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098604897 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110267354 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117729197 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115154504 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090098463 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110018965 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110137672 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093230028 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118400975 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10814664 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114695782 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094738587 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111256196 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11349083 seconds)
  done (took 3.218707582 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084005228 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100975589 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085095872 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.09749593 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083502354 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097238275 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087989293 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100218981 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087233972 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.1015258 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082109721 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102097059 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103469448 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078791674 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101920174 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080705248 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151133691 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106397837 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08307057 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10412945 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.07863985 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.10535085 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097900741 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079207527 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100750996 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.086931771 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103423403 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082007639 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102506519 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08229633 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102749013 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081755232 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103418223 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102485628 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082008404 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101245101 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083376856 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102427149 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078581994 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100314844 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083557906 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098878207 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08397075 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103915947 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081895839 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.099920275 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085121414 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102887923 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096304954 seconds)
  done (took 5.43902497 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104239196 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160057246 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086519826 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143412923 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119748319 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11238305 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088661604 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142509819 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101767243 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082832264 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123694453 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119041928 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102686125 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088982058 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110139592 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10307927 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085350948 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102077185 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107918513 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083929218 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10807125 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090298725 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119173851 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117869784 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108158138 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083670712 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103711363 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108180887 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097801069 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110346635 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109058288 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090738561 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121226701 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105124768 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083241611 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107300315 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.12133078 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08486682 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106332985 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101060044 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086893002 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107782957 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111152811 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102234734 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105111651 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109015572 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085303232 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101557576 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11744349 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087996171 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112749876 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12008867 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088325823 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104707423 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108026762 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120644555 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084930617 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101555847 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087552952 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117970395 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101511551 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08936277 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120160647 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106825544 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092469449 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120409887 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109400379 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108247682 seconds)
  done (took 8.120670047 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092830346 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109803423 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119712479 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11988628 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090012526 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.109682976 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110708186 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090871125 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109183046 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114617569 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110934719 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132921391 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08617546 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11303397 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110478969 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09084701 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110844639 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110315602 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091429051 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110145314 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111256204 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119056409 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090092124 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119872776 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141642951 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105145632 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089931476 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110495837 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12019825 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110752514 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122263036 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091199849 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110514869 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12081099 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123460315 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090507687 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10282049 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110279377 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091272221 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109883523 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105707231 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099814697 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110481669 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105805078 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091936456 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11004415 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119721684 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123971519 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114848231 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09651328 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110849123 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120245459 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110243825 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090721086 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120465719 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147317317 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120159304 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120086486 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111443635 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100834023 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120668957 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127970947 seconds)
  done (took 7.637858378 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106782944 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114628904 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116465462 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099846417 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08295263 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.1084373 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082901998 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101593415 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114550875 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093860889 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115882847 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108701715 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091400296 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118123413 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107804238 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112054609 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088767097 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109729545 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113702507 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089311968 seconds)
  done (took 2.91211526 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094150491 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123064056 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085483857 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112709826 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107451536 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091022841 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.105839407 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107130877 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085336151 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107476254 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096798837 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116112699 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105464204 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091984435 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116088137 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110523253 seconds)
  done (took 2.49611217 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096986348 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116648489 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119777217 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087277078 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104156564 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080648463 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105343746 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100542153 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081422295 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.12034001 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08561092 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109263369 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104965555 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083101664 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101464016 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087785196 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100771582 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08313691 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105496172 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118638483 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096244393 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102523721 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106079389 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086829986 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104694806 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091004441 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106935457 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102209663 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083632933 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104362991 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085442074 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113301827 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101242703 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083660382 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102934571 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083269466 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105461502 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085744487 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108130136 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104426439 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082484906 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104087003 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085340094 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105773693 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08219286 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105783129 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100881401 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092069648 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102472494 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085545071 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105035171 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087310666 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10696476 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116381441 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088464014 seconds)
  done (took 6.241558999 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100061546 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107841976 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080874529 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102349227 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088626242 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107535187 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108836263 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088474053 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106542206 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083138987 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106646914 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088998604 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106863533 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108844915 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087289239 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107957037 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080563912 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107419834 seconds)
  done (took 2.614265485 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090911291 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104830759 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09227187 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105229294 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084940626 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108644178 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081318852 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103584121 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104103258 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084563043 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104825245 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088314075 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104592391 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.08707474 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10524513 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085208761 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107957728 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103408877 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085402805 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100589823 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088157699 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103493688 seconds)
  done (took 2.968451487 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118221983 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124635421 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092425669 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.230373868 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.10395914 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132395324 seconds)
  done (took 1.647216508 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109310435 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120299137 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106316404 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107526398 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115339162 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086927308 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108468623 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106259619 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118010313 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101554088 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107535895 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117970667 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118112117 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096558173 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115082229 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114731942 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107923123 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087821129 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105546544 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128822793 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087796825 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117733143 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107450081 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087328871 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108337045 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117453664 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118632705 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120060594 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087861462 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116972065 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115158366 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087378571 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118025686 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121320196 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109751614 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097164888 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108507843 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128694119 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115141 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097284163 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108800432 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1155078 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097820594 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113237889 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117751141 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10799152 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09254152 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107198734 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107958626 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135553216 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09483757 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117165421 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115629292 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119095479 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097257829 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135142274 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121249587 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116400988 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11531602 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122386129 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117589766 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094923944 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117203453 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123066453 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115549336 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097039227 seconds)
  done (took 8.127096356 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103119277 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125915079 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1086234 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122036946 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096968423 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108515132 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107596471 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08797208 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108154693 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107791472 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151265729 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087524281 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117174584 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117717485 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087734908 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108151717 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10726383 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116958905 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086959425 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134185133 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107884528 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117621416 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116796245 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096448921 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122802967 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114770202 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108462521 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087874798 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107565659 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107361881 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093492553 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107568903 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11872177 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086561462 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117919285 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10910773 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08824834 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114670405 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107307952 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115110317 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097687103 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127706881 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108612557 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108398683 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100941158 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108169859 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108318909 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08778026 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108325168 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108119029 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101468508 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123148291 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122244756 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116460606 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109043223 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087691612 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108028433 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108031446 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088170511 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115044875 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117608392 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088101933 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135434855 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108220325 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108080973 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117369156 seconds)
  done (took 8.017089655 seconds)
done (took 154.695964105 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.212149929 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.197935367 seconds)
  done (took 1.263687821 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087072287 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136499689 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096067573 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168535011 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086263711 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.14045858 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13816347 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097735157 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106476764 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086141985 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106808682 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087886066 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170525632 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085804445 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10715494 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107784068 seconds)
  done (took 2.670602533 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.113191851 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254928282 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.122413373 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105807381 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088956866 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109893616 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.083660564 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111024009 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090356697 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.104534696 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088844051 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.106978322 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084537194 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107059293 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.089324215 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108969135 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105194779 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087807873 seconds)
  done (took 2.8257068 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113628471 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146558784 seconds)
  done (took 1.127595594 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.244164533 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.161143347 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.229905366 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.473264559 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.271136166 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.35550991 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.202833931 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.209183435 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.164881564 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.208312465 seconds)
  done (took 3.381030376 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119021944 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17938421 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316431441 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156470653 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107585899 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128003228 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156083734 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130518053 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.1252032 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101602975 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122519235 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11861073 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139229381 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094631725 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116657938 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117972567 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120555854 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113334405 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115430862 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095121733 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137613547 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085733465 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115147234 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113565785 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098590826 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.118250219 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105809913 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085092786 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116508843 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095183939 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113826626 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124814788 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118602496 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.154007328 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123440029 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.155309343 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118926949 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091499246 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115433846 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090717007 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118864831 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.1182933 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124372463 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096321023 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106926081 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097939249 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106635552 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084445223 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115066992 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118516264 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093750168 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.1143982 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153323358 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119396567 seconds)
  done (took 7.388064067 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.783448598 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156030324 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090583409 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.877728853 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135930905 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102941231 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.772524989 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111406867 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255357888 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.750330077 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133223304 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12010827 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.205481194 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257633786 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.926114773 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.285339186 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.63651887 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125904672 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152250857 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15349908 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117524253 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114837993 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131730193 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429614163 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116742856 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090107134 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118461427 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118269605 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162208068 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125407467 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093182279 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199989976 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.246876501 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206398351 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095424769 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111238202 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089552178 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.191776191 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264100328 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194809763 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180685131 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10833691 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089527637 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122386597 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132495484 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087080862 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183670622 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.176420334 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170159837 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115271356 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118593646 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098591093 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120537553 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164701669 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.12240427 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311166125 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316289512 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090314679 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121484887 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126742415 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.237412778 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123193642 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225546873 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139061542 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21374599 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090375765 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779921881 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.16929415 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111689576 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095616526 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119834032 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116428428 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099696105 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169334912 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406205399 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123710915 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.1135901 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090097375 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228015684 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103123637 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11169296 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161850471 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116242681 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120755952 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103009524 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122691514 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16917839 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.252646752 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100136644 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120029815 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115041507 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103426659 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116920995 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209786156 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218023771 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161723364 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.230166864 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09906679 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184929519 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.16866297 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118516828 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.172519579 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120257103 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10318986 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122393611 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217367657 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146031381 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122965049 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093518759 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118636313 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147194484 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126811455 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096624947 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191491153 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.456837147 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167317319 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109495476 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127011495 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0977644 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183173577 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096116652 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261180396 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122423036 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169813362 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118973159 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.0874344 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120371986 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162871524 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12150665 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121413217 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100314622 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118218211 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.234107978 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218442662 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120820349 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220842974 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183346546 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118262792 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172195343 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121359985 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.17026793 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120116404 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121044264 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095263221 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.770878968 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123938024 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098436321 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116906236 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188419352 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110648408 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103125526 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124996965 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086596784 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795809811 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127254602 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120903444 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102812056 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117473577 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120087673 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095980823 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115843879 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16298247 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229282947 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119489898 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120358054 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103563334 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161314877 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116868129 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125061892 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124332301 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103768502 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120879632 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115089218 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102817847 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191045402 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163283041 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218529114 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.574657961 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112976876 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124584057 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228599698 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09020559 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290528633 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119268052 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.202076153 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186073523 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098735161 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.318043267 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186467773 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.18661454 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104954948 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195291147 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086968909 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118114989 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165214601 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111726494 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096038556 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.184733482 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.102984571 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123293021 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.966244139 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089589876 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24722985 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087936072 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171415847 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117225293 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121762205 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287190184 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090142855 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128039458 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165200581 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115793551 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124806138 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.846030487 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125836103 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121849787 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097592597 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221609701 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163115582 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12070711 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118893245 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098358471 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.184181088 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210687973 seconds)
  done (took 43.992512744 seconds)
done (took 63.508936711 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277974636 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217493444 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.267560566 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170085278 seconds)
  done (took 1.899545221 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171176277 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149342776 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121891589 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106924957 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151422197 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084804521 seconds)
  done (took 1.677212116 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.360738082 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.274803437 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24342638 seconds)
  done (took 1.775669184 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.29159281 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246686195 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.471368187 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.325019992 seconds)
  done (took 2.345887364 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208768733 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132029469 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.113861141 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103563076 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197555024 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245682284 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143532162 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200735365 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099203335 seconds)
  done (took 2.381978041 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197379821 seconds)
done (took 11.17290102 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.167110315 seconds)
    (2/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135797497 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.248620044 seconds)
    (4/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.26485936 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.203646733 seconds)
    (6/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.271577921 seconds)
    (7/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.142937517 seconds)
    (8/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.136756949 seconds)
    (9/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.200313611 seconds)
    (10/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.122796284 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.125906129 seconds)
    (12/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.232947731 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098330007 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.17805541 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.138606994 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119662218 seconds)
    (17/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.214861834 seconds)
    (18/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.191609563 seconds)
    (19/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.263302667 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.11704078 seconds)
    (21/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.125475219 seconds)
    (22/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.195740249 seconds)
    (23/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.10293126 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.191858858 seconds)
    (25/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.21613303 seconds)
    (26/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.258774336 seconds)
    (27/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.164404274 seconds)
    (28/309) benchmarking ("sort", Float32, false)...
    done (took 0.172826651 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.137717952 seconds)
    (30/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.093656052 seconds)
    (31/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.215136451 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.14204617 seconds)
    (33/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.176889337 seconds)
    (34/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.081536434 seconds)
    (35/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.123256389 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093706743 seconds)
    (37/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.10471454 seconds)
    (38/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.087385498 seconds)
    (39/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.117449044 seconds)
    (40/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.094904892 seconds)
    (41/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137243347 seconds)
    (42/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.181097555 seconds)
    (43/309) benchmarking ("sort", Int8, false)...
    done (took 0.188234389 seconds)
    (44/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.085140584 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.13541389 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093606576 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.138969784 seconds)
    (48/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.117803636 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.110356233 seconds)
    (50/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.105139722 seconds)
    (51/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.098313461 seconds)
    (52/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.121600392 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.154452948 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.114434023 seconds)
    (55/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116694109 seconds)
    (56/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.254204867 seconds)
    (57/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.137226264 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110796511 seconds)
    (59/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114553975 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.109237856 seconds)
    (61/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11707635 seconds)
    (62/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095903447 seconds)
    (63/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116760036 seconds)
    (64/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.094959801 seconds)
    (65/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.147497873 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.222475108 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.138757748 seconds)
    (68/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.096516186 seconds)
    (69/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.208656183 seconds)
    (70/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.186126553 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.136312598 seconds)
    (72/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.097911926 seconds)
    (73/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.106596424 seconds)
    (74/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.138444677 seconds)
    (75/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.119671337 seconds)
    (76/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.107385423 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.217530961 seconds)
    (78/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.12374823 seconds)
    (79/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068471842 seconds)
    (80/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.177298128 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.13400792 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.13672033 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.086614396 seconds)
    (84/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.066644301 seconds)
    (85/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.24073055 seconds)
    (86/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.179341944 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.114525731 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.142681821 seconds)
    (89/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.065600106 seconds)
    (90/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.236974711 seconds)
    (91/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.154648549 seconds)
    (92/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093038965 seconds)
    (93/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.07747345 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.166749023 seconds)
    (95/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.090494736 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.16311903 seconds)
    (97/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.174915704 seconds)
    (98/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.067178479 seconds)
    (99/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.118273914 seconds)
    (100/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082096102 seconds)
    (101/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.184460466 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.13439753 seconds)
    (103/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.087630427 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.110356795 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.154660917 seconds)
    (106/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.191817137 seconds)
    (107/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.117886401 seconds)
    (108/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138406124 seconds)
    (109/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.071474551 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.140586437 seconds)
    (111/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.098399046 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.13421038 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.165554478 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.093736638 seconds)
    (115/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.124980237 seconds)
    (116/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098126029 seconds)
    (117/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.170083845 seconds)
    (118/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.116846039 seconds)
    (119/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.076537844 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.194213123 seconds)
    (121/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.344633536 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.111426741 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086439579 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.119884999 seconds)
    (125/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.115724324 seconds)
    (126/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.089625371 seconds)
    (127/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087819073 seconds)
    (128/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.147010479 seconds)
    (129/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.132804647 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.180892276 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118818945 seconds)
    (132/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.138567384 seconds)
    (133/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.1744594 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117245886 seconds)
    (135/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121249601 seconds)
    (136/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.091691937 seconds)
    (137/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.176970443 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092378022 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.195392651 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.116908324 seconds)
    (141/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.155218289 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.13698102 seconds)
    (143/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.138368126 seconds)
    (144/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.090333503 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.131808295 seconds)
    (146/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087785719 seconds)
    (147/309) benchmarking ("sort", Float64, false)...
    done (took 0.170511797 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.116373985 seconds)
    (149/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.183710239 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.110000752 seconds)
    (151/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.129190995 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085404721 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117408722 seconds)
    (154/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.065984985 seconds)
    (155/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.090033771 seconds)
    (156/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066728739 seconds)
    (157/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066272362 seconds)
    (158/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.088933679 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095090864 seconds)
    (160/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.10847074 seconds)
    (161/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097433941 seconds)
    (162/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113358176 seconds)
    (163/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.091612274 seconds)
    (164/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115759666 seconds)
    (165/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.06680914 seconds)
    (166/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.177335119 seconds)
    (167/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.097304311 seconds)
    (168/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.107673673 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.119317436 seconds)
    (170/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.089451699 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.137988926 seconds)
    (172/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066893205 seconds)
    (173/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.15435684 seconds)
    (174/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.06660683 seconds)
    (175/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.075304025 seconds)
    (176/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.114864292 seconds)
    (177/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067547497 seconds)
    (178/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.091548842 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.11477871 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.212664266 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.170482855 seconds)
    (182/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.09735671 seconds)
    (183/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.205798374 seconds)
    (184/309) benchmarking ("sort", BigInt, false)...
    done (took 0.219677852 seconds)
    (185/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.117300251 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117014266 seconds)
    (187/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.124287849 seconds)
    (188/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.177945181 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.085723651 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118110589 seconds)
    (191/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.093967588 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.183862408 seconds)
    (193/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.065835767 seconds)
    (194/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114742384 seconds)
    (195/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.205107736 seconds)
    (196/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.113825059 seconds)
    (197/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116950332 seconds)
    (198/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.135318178 seconds)
    (199/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112929148 seconds)
    (200/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.136554043 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.08532231 seconds)
    (202/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116466476 seconds)
    (203/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.065915812 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.085870068 seconds)
    (205/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.08956827 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.176432485 seconds)
    (207/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111575353 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.166240477 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.134672083 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.09521656 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117651771 seconds)
    (212/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067437404 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110258209 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.086229448 seconds)
    (215/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.090705905 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085255335 seconds)
    (217/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112356211 seconds)
    (218/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066416153 seconds)
    (219/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122461752 seconds)
    (220/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066789747 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092776812 seconds)
    (222/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116717524 seconds)
    (223/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125250415 seconds)
    (224/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.086976618 seconds)
    (225/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110809939 seconds)
    (226/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068384048 seconds)
    (227/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.148825889 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.086677223 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109454749 seconds)
    (230/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.224182078 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086130508 seconds)
    (232/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.11087305 seconds)
    (233/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.067035293 seconds)
    (234/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.218250083 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.140420198 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.196230212 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.133649951 seconds)
    (238/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128734621 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.165332566 seconds)
    (240/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.09056733 seconds)
    (241/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067130554 seconds)
    (242/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067401746 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109670534 seconds)
    (244/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066984547 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.110231332 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111414253 seconds)
    (247/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.110656983 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.180469001 seconds)
    (249/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067810401 seconds)
    (250/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.067084707 seconds)
    (251/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.091358932 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086578288 seconds)
    (253/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.090702637 seconds)
    (254/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.07680522 seconds)
    (255/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.067081222 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.1100036 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.216903805 seconds)
    (258/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068233321 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.111475357 seconds)
    (260/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.088318994 seconds)
    (261/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116835547 seconds)
    (262/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.094569634 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.11665122 seconds)
    (264/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.100104455 seconds)
    (265/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.090110482 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.094686656 seconds)
    (267/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.120103553 seconds)
    (268/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067184194 seconds)
    (269/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.108530066 seconds)
    (270/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066318807 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110525954 seconds)
    (272/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066708122 seconds)
    (273/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.090878916 seconds)
    (274/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.091261334 seconds)
    (275/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067573948 seconds)
    (276/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112942415 seconds)
    (277/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066947958 seconds)
    (278/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.091583437 seconds)
    (279/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.111354202 seconds)
    (280/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.110725189 seconds)
    (281/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.089519329 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.14151213 seconds)
    (283/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066709596 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118735348 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084675074 seconds)
    (286/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.110549111 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.147897501 seconds)
    (288/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.099326139 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087310241 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109387599 seconds)
    (291/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.08644818 seconds)
    (292/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.148614633 seconds)
    (293/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094297688 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118402976 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067036787 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.17947176 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.116995883 seconds)
    (298/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067301525 seconds)
    (299/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068357322 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.111851133 seconds)
    (301/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.088661684 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.091802463 seconds)
    (303/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.088590283 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117826241 seconds)
    (305/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.087873023 seconds)
    (306/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.110230388 seconds)
    (307/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067473923 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111949243 seconds)
    (309/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.076123383 seconds)
  done (took 39.755354473 seconds)
done (took 40.653308103 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099584273 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146600943 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.097148004 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135867037 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123521875 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091350689 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119356536 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099076658 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123211618 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125235017 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098072497 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093471985 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096421984 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120969521 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097570845 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138658269 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123700088 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093306275 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119492603 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086890622 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119233715 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087012448 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111957678 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069780506 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121523152 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.09413573 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116405196 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120533761 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.085887941 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110752626 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089243525 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118092262 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086252079 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124240194 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093366201 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119754863 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097331641 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120664513 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088856411 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110018921 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118504052 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087261213 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.120245665 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095017496 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118987446 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092122283 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.121451655 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099459054 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138923024 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.1156698 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094480639 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121373574 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096394349 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118375293 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091895279 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119477584 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091542877 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.13913737 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118953023 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092635133 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.11982683 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095501289 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116385422 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095230345 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118779213 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.12180791 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097984677 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117106913 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097304788 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116036047 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087129936 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118980302 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090703352 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110202577 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096221548 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121792791 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109677918 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092617778 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117239744 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091399385 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110970821 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089113055 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112547544 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093373125 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113619807 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.06978871 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114347103 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093344363 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109885803 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095891811 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117873289 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.092952711 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113433844 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099432699 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110826298 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092701669 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111175748 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087013704 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112672838 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.09084032 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110357458 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089942476 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119517032 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088537018 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116784645 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12357248 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086917649 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117343737 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086924951 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111596135 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101923786 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120768723 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086869919 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116309717 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086952662 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118195134 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087214741 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111387645 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086922452 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110373058 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092372179 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.11094813 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114587952 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094111904 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125320269 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086247128 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11502519 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090111074 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111726077 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092768187 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110994317 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087608008 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113125036 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078284692 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113510757 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086926296 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119531445 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089549307 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119919093 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.090222479 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.11999158 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092271579 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117414769 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093207048 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110465126 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074375765 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116639136 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08967911 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113300471 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087026508 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113405531 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086849367 seconds)
done (took 16.96399576 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086853053 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184913309 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151751129 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142824817 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107586226 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112082996 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122128016 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119654026 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113157234 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143944206 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110678632 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132551134 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149224754 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.08677133 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112087978 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091673996 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113764728 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103217446 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145411387 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133405579 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165492547 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086680702 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147455314 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.1356017 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120717534 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114634115 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.114219166 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091079547 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115831888 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103613353 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132452515 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.11522734 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087850392 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134256448 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105336686 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120707295 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088168468 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118306661 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087999477 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111867567 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14179972 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133860153 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092798706 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117757152 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091520822 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113918162 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088881011 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122122407 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099614914 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116911505 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127076308 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156209566 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090831954 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122344401 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086183279 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123483063 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122580784 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090764957 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112230628 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090237252 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110989161 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090615803 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128193229 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142667538 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092007507 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121761042 seconds)
  done (took 8.64107679 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10404632 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139382235 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105373221 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131661849 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111821237 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088161578 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112862036 seconds)
  done (took 1.755600658 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088229103 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134256886 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128570449 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136936369 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132006057 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109415637 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122823554 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089432805 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130537792 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090041666 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133922212 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152046305 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090341445 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120461546 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137367653 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087939084 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137124086 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088096045 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116210219 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11211937 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115248541 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134914176 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.08997588 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113218222 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103864592 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114250803 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162710117 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094166287 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114481416 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092337501 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112539 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.165811334 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103177175 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127122436 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089477844 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128693506 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127949516 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087140114 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130376186 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094624502 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128495862 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.08954899 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114273195 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087372347 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118535292 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123881116 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090947522 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114716308 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091459292 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134543061 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089551548 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127191592 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088858555 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118062346 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.09084395 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120319803 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124015708 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.0905012 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134111748 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090512262 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131368576 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.108345324 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128032538 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131494459 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091747568 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127644415 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103131862 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116805611 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089732027 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117887913 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131730665 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086951122 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116258981 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099431448 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115776114 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11230174 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137179151 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090756362 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125353018 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114406413 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090355722 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114694228 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112501669 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118274569 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089320455 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119192921 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092485455 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112758629 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088544842 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117057356 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087170701 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115358792 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091854633 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114649592 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116676746 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.10608726 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115541246 seconds)
  done (took 11.852722552 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090735205 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115568073 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092043474 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11477722 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089497381 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115854372 seconds)
  done (took 1.592082638 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113484194 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118932853 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10457465 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121115182 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157672347 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104365905 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130881678 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124390529 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108289887 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127866667 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129724544 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104900536 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136470508 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122485892 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104410475 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120852182 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130627258 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100519752 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127945427 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096313264 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137158565 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121745569 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097183626 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132665526 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119067098 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096466393 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126450104 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103066836 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128274077 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124423277 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095740751 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118938639 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096568043 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123947848 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131110501 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096666033 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121266306 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120297988 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100414105 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118484146 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106247009 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122342786 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127396691 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095605709 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124444463 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121842788 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09439604 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12652001 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104450263 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119178959 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120171159 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095818963 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120288528 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094511333 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121174944 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124530951 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094854737 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130746671 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121300445 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096513579 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119297927 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093910824 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12477513 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119505282 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104502581 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120577029 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.09678909 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121825596 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122239256 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096308254 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120522522 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093676718 seconds)
  done (took 9.268803746 seconds)
done (took 34.070928035 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.693367438 seconds)
  done (took 1.665514112 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.71004735 seconds)
  done (took 1.68851619 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.83050502 seconds)
  done (took 17.804457954 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.504620915 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.582461892 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.815754774 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.17970326 seconds)
  done (took 3.058228552 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.943441644 seconds)
  done (took 1.93816469 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296543279 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.25842273 seconds)
  done (took 1.532888794 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.7680764 seconds)
  done (took 1.752538441 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.353728362 seconds)
  done (took 2.332800207 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331583457 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184912806 seconds)
  done (took 1.508889663 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.549866404 seconds)
  done (took 1.541488507 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.767907869 seconds)
  done (took 7.764211134 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.259998188 seconds)
  done (took 1.26141252 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301307597 seconds)
  done (took 1.29419379 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.465631809 seconds)
  done (took 4.460659531 seconds)
done (took 50.589077898 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098548536 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127530957 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101955863 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124335033 seconds)
  done (took 1.439779962 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101411177 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121416507 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100030754 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120642996 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126640789 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096590655 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124153663 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101762978 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121342394 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097314696 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12055978 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120850532 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099379762 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124376391 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093804733 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123561315 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099601297 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121693562 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124654017 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096277054 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119021828 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098297418 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125684877 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095576174 seconds)
  done (took 3.677636157 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100187351 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119568874 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097023663 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119129375 seconds)
  done (took 1.438115664 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099926834 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.14296289 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.140872738 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101346768 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143216497 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136694533 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091703856 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118024108 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09503399 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125285902 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090455053 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150137948 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137504504 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100015561 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127637849 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.08861376 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118010852 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137799823 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099899211 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126764739 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.094021038 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125130111 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091235961 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140251874 seconds)
  done (took 3.820227787 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.157928416 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.152021773 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140030929 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095630471 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.155979293 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141167886 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088265061 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142287703 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08877483 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131223425 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119581274 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132647829 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128453271 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088007275 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113893677 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087924626 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128894041 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131266353 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091131236 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.145228637 seconds)
  done (took 3.464469053 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097948581 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117947288 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088556375 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116759307 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099408327 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121112135 seconds)
  done (took 1.645778139 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090806848 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114492172 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089714844 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114835915 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093732019 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114481108 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088554177 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114852542 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089436664 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115291141 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.08922898 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113604135 seconds)
  done (took 2.233293104 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.456439428 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093466266 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120492418 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112030173 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096593804 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115324874 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103507862 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.118865521 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140659813 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088646174 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115483183 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091753337 seconds)
  done (took 2.656452381 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240093891 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125354231 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291991497 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190938525 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159911977 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171386032 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152455197 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167045254 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225883516 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158558959 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210789755 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222569121 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125685107 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219729084 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111845706 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144736452 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227845256 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220500297 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15589874 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232003979 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203524051 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166345574 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179140777 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152763884 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139329494 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170711683 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120749965 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103644617 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236992652 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181072899 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217586862 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164552293 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146615602 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242087895 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24956517 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199015922 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187818828 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135968433 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.146140373 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.163431776 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270117387 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139261216 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237312578 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160061901 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10597259 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222892304 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169757905 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174618009 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150557594 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139418517 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198899052 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241671166 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19418407 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137676327 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163561359 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161835637 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.169183986 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153111352 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254985274 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200223036 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179577135 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120085909 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146375159 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193068838 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181802162 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168429484 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.208685439 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146059407 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195920191 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186720913 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167531712 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219565542 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182919574 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138834671 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171371225 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176006365 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172974931 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258798294 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177442346 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121675261 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169663754 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150506378 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131573827 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.166371807 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125333093 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21462029 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149835994 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.135397881 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164001115 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162297317 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162913682 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201989788 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220517894 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121354098 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.111172943 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156928932 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155220467 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1918739 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140320758 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161014787 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161836871 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130628347 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179152185 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097646904 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203344726 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091984631 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17975537 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187281436 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127409089 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159354889 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154382632 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149151342 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179710134 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199524122 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142442449 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134133612 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208174838 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174781484 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.151210989 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180263657 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226863945 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.115758007 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151333498 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227110391 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247984249 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11318659 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230313248 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153803882 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108523112 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.135010953 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180095018 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157173388 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161150736 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134803344 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182226642 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239282188 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099334308 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139444636 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190430369 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134185725 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132662429 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162268319 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149334382 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.113639613 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.148674083 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.153556423 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183063217 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205460698 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127379117 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193544686 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124587941 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252324386 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140458812 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150282846 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149606219 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094050907 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.222322245 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198644629 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131188337 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206426659 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172042535 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157637369 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172133276 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136446714 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177839386 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130269124 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093688638 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220960085 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167653857 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163226498 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196353646 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155993102 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.183750224 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.182104826 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199590693 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177097486 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16489062 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157948713 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111859188 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16017452 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167403286 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124584576 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.14359876 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.108529936 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156797661 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144099417 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135027143 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201887895 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199744778 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12243545 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158830173 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151058876 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181933809 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.12904953 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179282787 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177714555 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147357498 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.223540446 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193353382 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188838939 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143352901 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23339693 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094493564 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124921062 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142773858 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173066652 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107742019 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136452199 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166802287 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180609544 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212484077 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177045712 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163354373 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17786988 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193304196 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.123268784 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.1412412 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212453111 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176615208 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.163733594 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137459347 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152766242 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176053268 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15755809 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258884473 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168098918 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177866427 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237442616 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149731321 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105172696 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152441304 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185831611 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155002491 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204610186 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120623767 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141571111 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162316405 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132924561 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161731774 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185225989 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165481833 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218760572 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151127761 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18815707 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127882108 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166628205 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158533275 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166219852 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081646378 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177877339 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231460988 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14813082 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171694183 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193375421 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131955179 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.179286642 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214806578 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224813605 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138127408 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159233092 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158965517 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136960094 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200554665 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178286508 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160565124 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191035958 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158484865 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.109670103 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140786334 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152103032 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153047875 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.134736555 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149408815 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176528918 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.112739008 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21736461 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161838571 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158375097 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171219366 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15084422 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117387012 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152369649 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243165655 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177268152 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214867049 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150426453 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179644398 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234217099 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126264642 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104992783 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13364505 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178936063 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136241839 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191884379 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.148071088 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15726071 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181163945 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194413689 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140048308 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.092983536 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156935748 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174366057 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165312198 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152417312 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158445937 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236262178 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115790308 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13354813 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172927599 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157774721 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148312402 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198195741 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080139715 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149853149 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128547192 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105944253 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16417911 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23730976 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136748187 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181192678 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172964999 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169127392 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164973051 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15136966 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121316293 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1666206 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230542922 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186482778 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.131596123 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158347619 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1778367 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197147312 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160725147 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140965663 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204109288 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220242233 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.2000148 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14232425 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169440556 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168544677 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15729732 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188337388 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136450699 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205626667 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135248939 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226515931 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154548351 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144002264 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177122482 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.121049513 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144841694 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215973668 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174734166 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108858028 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133513954 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168442366 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204742334 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128442753 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128335459 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182141563 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125433592 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191482811 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260768448 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134935187 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153755609 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120400007 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135804132 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157815847 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159381202 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140731342 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.14060363 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230197684 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135568286 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19262176 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229488494 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172417217 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176229792 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144743947 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693558085 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.13106657 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194499136 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155747714 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2058527 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153683219 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173986669 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15871094 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168088416 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223824616 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161944785 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232389495 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194035666 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177761343 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133018359 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160191997 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164042077 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145243627 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15340576 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167928092 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160515955 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.152945878 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178094663 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171320706 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135034346 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113371831 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226148509 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156475001 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188489779 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180773473 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140312111 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172752834 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187955115 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134806236 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182272926 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23733245 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141999799 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150699 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.107109226 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157255308 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262256305 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124803848 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202657183 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175454629 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158537506 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167363016 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.149320496 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190154131 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185998636 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177376237 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147387283 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159292929 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127321996 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137479593 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.131343014 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154444675 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168431213 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.14811392 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159712989 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139430257 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187384757 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124276531 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145422991 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156340047 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191285 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244032718 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.110423194 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135932217 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163554326 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150767809 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175224056 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178402312 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135785468 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107716721 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137843178 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.158691171 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112517894 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155548314 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156251691 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164673166 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233258078 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110133454 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27944009 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139343549 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153308649 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089580753 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131004449 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149802066 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14643629 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156948594 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123489329 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261716647 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.144744716 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105122345 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147049029 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125129531 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135369705 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164184142 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164396058 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175910295 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144730984 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081441588 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159327161 seconds)
  done (took 81.253221816 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162269172 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131531382 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.14669108 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202025742 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17665897 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269121464 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209510042 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253565944 seconds)
  done (took 2.638300454 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093236639 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146557911 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.151634196 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133050339 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091269999 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118676675 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.333237813 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131554467 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.091502316 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.139842211 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.146417733 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.117626078 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.510972698 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.117729994 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117960038 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083194102 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.115929442 seconds)
  done (took 3.722449689 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.458781674 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.711268477 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.477600035 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.124528349 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.093118518 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.134579709 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.719858926 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.20972498 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095221315 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.484366961 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.774168096 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.186002088 seconds)
  done (took 18.559752441 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099330833 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121417506 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107776533 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.134743339 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096486675 seconds)
  done (took 1.648326514 seconds)
done (took 129.187577177 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104616822 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.402115333 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072366107 seconds)
  done (took 1.599182428 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107782548 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136175382 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109432812 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134654788 seconds)
  done (took 1.587818359 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098056089 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126522739 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109171103 seconds)
  done (took 1.427971194 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.321702997 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189450469 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.142426263 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106639947 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129362654 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10316781 seconds)
  done (took 1.43195879 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.09659831 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127540463 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097826898 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129961876 seconds)
  done (took 1.549749739 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094532071 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070632615 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100313741 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.0742983 seconds)
  done (took 1.43264065 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.11309563 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130740938 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104694231 seconds)
  done (took 1.447750257 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130435139 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138659853 seconds)
  done (took 1.369830619 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105603544 seconds)
  done (took 1.201276564 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117552167 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.16879597 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.189186919 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.163610826 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.226835947 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165613693 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141728102 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114479504 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131830138 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144646485 seconds)
  done (took 2.664002998 seconds)
done (took 17.565670634 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103774787 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.418627648 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412562818 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116601835 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72139019 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381341834 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.067601625 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145897289 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164837301 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093702711 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138445705 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676106141 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.02200409 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.377618078 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.981795852 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.471545255 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705001743 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093245789 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119863334 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094202962 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.05304593 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093159134 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121733415 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093152953 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703885397 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426976426 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095569178 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.46980889 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09245152 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126151405 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384256869 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122531314 seconds)
  done (took 17.178093305 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097519346 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174128085 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099769739 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137847172 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123255541 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094073529 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12464114 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093779711 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180061635 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122500858 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110392262 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121551282 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126680413 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095592084 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142291878 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092419536 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125196904 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09311965 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122058389 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122585817 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112027169 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120011059 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094323202 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121935965 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094133429 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135948092 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12338542 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092936204 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121352389 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098619002 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.1280625 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094824359 seconds)
  done (took 4.838196419 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14101541 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182603839 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128214363 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126565068 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168301618 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123998713 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200460955 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118915072 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182548134 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122881046 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140123114 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093918198 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156841116 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123284773 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114818597 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122356138 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097078774 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12231759 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092507895 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123006645 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141087005 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092467615 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122651346 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094564365 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123334032 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108035745 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12397094 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12176758 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094018773 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127481558 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100316803 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123417039 seconds)
  done (took 5.163505854 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096847013 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126631983 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108995282 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139276514 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095299771 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125523753 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.09767621 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124822912 seconds)
  done (took 2.020905854 seconds)
done (took 30.297854349 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111013486 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127293479 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106619189 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134698754 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102816138 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131932406 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091810864 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134035557 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134821686 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102645551 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138461602 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091954481 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123392116 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091982412 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136486817 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097061234 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132812919 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102544017 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133575093 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132756431 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095035598 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133663114 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10411518 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134213306 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104185121 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134716469 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138687327 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099217056 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123567471 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09507668 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125558139 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104373845 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125033384 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106270011 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126965127 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.0979535 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124089814 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09517585 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132959243 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133172582 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100620804 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134781874 seconds)
  done (took 6.027021081 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107749941 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140930346 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105866137 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081695797 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117077549 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081640144 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138772372 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079726405 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110860119 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108427341 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074580554 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106626486 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078948198 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102022068 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077100901 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07613188 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108829067 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075196047 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07741328 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106902017 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.07966577 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073532949 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109853713 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078989172 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075352706 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110418834 seconds)
  done (took 3.594338858 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100544242 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136098117 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112580179 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185437859 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161866043 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.10071154 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132474387 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141491758 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109113778 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120952258 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.09677554 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150767368 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111661381 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128395489 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.09197028 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13768801 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136238641 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093404839 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128128992 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11314335 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138446068 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102794996 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.14266265 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133678267 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091897014 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123017236 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09590385 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135352051 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098039285 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131585335 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09784119 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125287668 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122898132 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104146734 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.135007861 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094486386 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141618198 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131963739 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.101449312 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122332933 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.09596997 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121862983 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114018178 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167509105 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091738531 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129993658 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129847757 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102814344 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122005151 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111137484 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131694327 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092205179 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125170756 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091534507 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122064167 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106955568 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123988921 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.123905568 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.1027975 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125370958 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105833929 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126211074 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10860679 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122073298 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100168287 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120958554 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093848537 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120211149 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143827857 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093909569 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164341908 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094526215 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123469061 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131850779 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.100692139 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128374196 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093245001 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138191609 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102283004 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12699599 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10168404 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125977891 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095864982 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139366084 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124678273 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094440337 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122514577 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099750032 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124675073 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093465551 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136159963 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092755026 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124829629 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110785534 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121800518 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.12355815 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099058073 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127339014 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092266345 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135876878 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098373091 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123512446 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.131139685 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093134493 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124737219 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103199799 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127304834 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092339492 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127473305 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100316133 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124213711 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094322203 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12516358 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094694394 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13179872 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098574669 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127030067 seconds)
  done (took 14.856950653 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230815572 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215366146 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.249886162 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.26874945 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136272247 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.145751596 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211241122 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.126491984 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123411997 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160898458 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163564368 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.187113886 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.171196104 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181369756 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.111475913 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121330389 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141471902 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.135024771 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216376228 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.292282603 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142515616 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.102008991 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162413502 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161953312 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136965678 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.102909728 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140772619 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134114479 seconds)
  done (took 5.804896595 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108017428 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156377898 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097951023 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145363638 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150078504 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093218622 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.12790882 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095518818 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134942795 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.1354342 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093012251 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129563698 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101332731 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132623184 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124687999 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102829539 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132541192 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095456088 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126268257 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098106319 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129357178 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.103141815 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127698048 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122474314 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102462182 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122070815 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087001254 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141909543 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123098567 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116825208 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120796518 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.0998286 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132671612 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094679682 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123156587 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096203645 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125178646 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095356383 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124074942 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092055185 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121976589 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078027232 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122727126 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137238102 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.098928365 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079358841 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128290815 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128535076 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094694107 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120634211 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095617135 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125197536 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097564386 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130900273 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098654254 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12401163 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096965254 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116447479 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099404328 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124380869 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085166926 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.123015471 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097711508 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117807425 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101500322 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128539077 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.0921021 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125041586 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097522466 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128982949 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095771391 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.126394551 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091109267 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12595536 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096243531 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127858407 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.097230959 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122114693 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123160468 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093403121 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076283928 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123179229 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075125558 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126096082 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092107145 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121748521 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095288135 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129838124 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137070318 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09569831 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131512859 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094065671 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122140397 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096425561 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113031041 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097689316 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139089957 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141310903 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093970054 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121728889 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10647311 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125799375 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093577829 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106073927 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100166102 seconds)
  done (took 12.969416784 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126259335 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152922758 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095462393 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.141990091 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154645165 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158134642 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100473338 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130537457 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095219204 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141768634 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094083687 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131604952 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097611136 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137098431 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157001676 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102792786 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.1243734 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106943734 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131267198 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169968211 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111652596 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141807997 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108184657 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124561894 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129046716 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111261201 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161319688 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107948473 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136783669 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142919644 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108487515 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161824771 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.144114762 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.097801809 seconds)
  done (took 5.484071494 seconds)
done (took 49.844052743 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.222654799 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.450533281 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.204595318 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.103532707 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.249412109 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.229209896 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.215618805 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.205709195 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.769095101 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.205263767 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.470944083 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.864818654 seconds)
done (took 60.33041397 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.239594551 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.34080572 seconds)
    (2/2) benchmarking "String"...
    done (took 1.473788235 seconds)
  done (took 3.951144913 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.568216574 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.145181288 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.464571284 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.206112137 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.206802404 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.491500702 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.854410554 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.545122236 seconds)
  done (took 28.049523404 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.209899181 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.605485756 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.893544014 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.891285336 seconds)
  done (took 18.73787753 seconds)
done (took 60.681202444 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.19843598 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.240416235 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.223175478 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.19280751 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.319094525 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.241060243 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.526196414 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.438351427 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.208475044 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.187357503 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.228260078 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.207052664 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.232467129 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.548262986 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.212681437 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.216624799 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.285933103 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.680216991 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.615592434 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.209988138 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.23294367 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.240381942 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.235749001 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.210454938 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.234144876 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.211886896 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.221406985 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.208013272 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.823238695 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.213095809 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.215355337 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.735480503 seconds)
  done (took 192.132443326 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.208783229 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.219957587 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.305890071 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.250520153 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.645205116 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.409187099 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.341164054 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.719612097 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.230170692 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.23427945 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.454567085 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.21594131 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.526085566 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.197913522 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.218853545 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.314500217 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.546246129 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.519817094 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.230241847 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.462935813 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.218575787 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.476381999 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.370074423 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.411219792 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.254247167 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.258124691 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.210710995 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.24435409 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.39718667 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.47577253 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.210494754 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.245039445 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.818573403 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.065708407 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.205727583 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.236150107 seconds)
  done (took 150.490513074 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.480463188 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.203897348 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.203581885 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.204860126 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.23531787 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.204680822 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.766918832 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.774265427 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.7108613 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.404362606 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.204608937 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.26291027 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.474391985 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.207971387 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298202993 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.216190668 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.205902713 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.218750177 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.245605061 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.209480223 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.205695598 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.771303324 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.222548672 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.412444283 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.210043866 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.205349011 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.236618459 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.594062378 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.20629309 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.23689488 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.525523718 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.253416763 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.205071914 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.545251389 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.96987343 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317324994 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.20814065 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238131261 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.205325369 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.475919286 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.207059252 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.205911324 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.20965396 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.832574661 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.209183783 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.769966431 seconds)
    (46/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.211799974 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.144531379 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.210103142 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.206465033 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.2063432 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.791075021 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.205699584 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.760601395 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.223809303 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.205482232 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.208128205 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.207154225 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.204742694 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.236918075 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.717951243 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.304502208 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.219911359 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.208740085 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.236705304 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.205194464 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.383832745 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.20528336 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.719537775 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.266492682 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.31136152 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.75702031 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.208618205 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298726267 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323553104 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.204305881 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.204501666 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.204025194 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.2036939 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.311163416 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.204889739 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.604874364 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.210947684 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.205788924 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.262256448 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.29905061 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.205349886 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.204386529 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.522994428 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.208155867 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.204423377 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.897397815 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299077926 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.20607375 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.204380152 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.205282055 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.611319835 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.759024845 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.404638324 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.210851263 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.779834723 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.206064624 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.620254143 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.730436888 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.823018771 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.208460113 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311496681 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.208216052 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.205467687 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.204378789 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.233539406 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.22103757 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.263520376 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.204578419 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.600928487 seconds)
  done (took 347.344764106 seconds)
done (took 692.587750166 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.900478534 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.850653083 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.98056213 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.866600549 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.849679015 seconds)
  done (took 10.582035079 seconds)
done (took 11.714921588 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.384691543 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.384306959 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262241978 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.383662758 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232052136 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.39939041 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.362700785 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.226737216 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.302899079 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.281063885 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.300747971 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254021667 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22900928 seconds)
  done (took 18.138051825 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.521374683 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.503690125 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268630189 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.509674437 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.2433497 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.519723945 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.399439385 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.409990642 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.422523259 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235710523 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218759401 seconds)
  done (took 16.388483463 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.518315516 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.511010257 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272415091 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.52274654 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246183685 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.527273643 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.405009105 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.41487297 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.412073778 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235953289 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217321847 seconds)
  done (took 16.418440977 seconds)
done (took 52.077471735 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.212538753 seconds)
  done (took 2.347713534 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.24839918 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.410022573 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.230896709 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.218352542 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.214832009 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.215867521 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.218334905 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.215101703 seconds)
  done (took 11.108662411 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.213522423 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.211131554 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.211527694 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.214145581 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.213380956 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.213667804 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.212878836 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.213633075 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.213487407 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.213066042 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.210314514 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.212022551 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.211395976 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.211854767 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.210996188 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.212644979 seconds)
  done (took 20.535297954 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.213021412 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.212057421 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.211172173 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.212525152 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.212175078 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.212841398 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.213259793 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.211260914 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.212085356 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.21174032 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.212136657 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.212279033 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.212649941 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.212776448 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.212074753 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.21275936 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.211885505 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.212930679 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.217090573 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.212602165 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.213341572 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.213310483 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.213508782 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.212921948 seconds)
  done (took 30.242324147 seconds)
done (took 65.367246277 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.203974465 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.760276254 seconds)
  done (took 9.100767788 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.214650968 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.215456061 seconds)
  done (took 3.568110615 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.215096305 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.216550736 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.215327217 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.2150544 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.216225001 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.215483575 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.215896848 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.215088164 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.215234878 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.21651391 seconds)
  done (took 13.293931112 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.215834508 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.215786133 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.212794451 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.216316428 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.215447386 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.21428231 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.216611933 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.215099038 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.215586379 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.214537726 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.215855283 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.213424991 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.216642543 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.213633634 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.216068701 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.214252931 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.214011963 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.213382076 seconds)
  done (took 23.007646305 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.215829568 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.216491625 seconds)
  done (took 3.57040959 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.214119605 seconds)
    (2/7) benchmarking "second"...
    done (took 1.214690255 seconds)
    (3/7) benchmarking "month"...
    done (took 1.213227684 seconds)
    (4/7) benchmarking "year"...
    done (took 1.212402033 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.212728735 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.212586169 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.213630571 seconds)
  done (took 9.63119954 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.215686382 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.398142915 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.492548114 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.845615001 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.216411039 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.21793625 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.098408108 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.219282946 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.221185034 seconds)
  done (took 14.063025201 seconds)
done (took 77.369777232 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.202848794 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.222984292 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.296734945 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.217149748 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.225247499 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.507540183 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.225624132 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.330680786 seconds)
done (took 37.364038695 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.225414087 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.953979972 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.951233165 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.208753407 seconds)
  done (took 11.251822502 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.187312014 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.090530301 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.192453786 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.167060449 seconds)
  done (took 17.790858865 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.176194025 seconds)
    (2/2) benchmarking "read"...
    done (took 1.541150989 seconds)
  done (took 4.855212849 seconds)
done (took 41.258314301 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215172055 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.214764856 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.213468921 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.211048428 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.213779469 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.212480825 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.212582696 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.212094685 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.214675813 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.214578465 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.214649195 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.211833026 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.213948913 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.214963078 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214903635 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212161996 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211877187 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214679226 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.212789485 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210731796 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211902521 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214937387 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.211852996 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.213016758 seconds)
  done (took 30.256020164 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.214431133 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.212452917 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.215237724 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.215322533 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.212517964 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.21517696 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.218254332 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.211462988 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.214694929 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.214317399 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.212429048 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.212754024 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.214434631 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.211677443 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215034388 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.21239738 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.214932912 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212070591 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215300221 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.212083182 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.214162575 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212754432 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.211925038 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216113956 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.212499039 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.212862975 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.215328638 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.214334009 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215586702 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.212819677 seconds)
  done (took 37.552487395 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.220111882 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.219465715 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.21496648 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.215372637 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.215476572 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.215527478 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.215028365 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.215411743 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.217441601 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.215097421 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.215373531 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.214514131 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.21431878 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.215499027 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.214714371 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.215026649 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.216858753 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.215424667 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.214774439 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.215096522 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.216342935 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.214845865 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.216105894 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.216055508 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.216175032 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.217533098 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.215357005 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.21531396 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.215891191 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.215686646 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.21528788 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.21604184 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.215420677 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.216543773 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.215075395 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.214963479 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.220040371 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.221087854 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.215959065 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.216230787 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.215763095 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.216579266 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.216640397 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.215090875 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.216813368 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.217117334 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.216795489 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.216474934 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.216502062 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.217258937 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.217725102 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.217244568 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.216005482 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.216330748 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.215769594 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.216622484 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.217350507 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.217669027 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.216836962 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.217536365 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.217386792 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.216934777 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.216723678 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.217040659 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.217072491 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.21716548 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.216971858 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.217427284 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.217290005 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.218101298 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.218322563 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.217147968 seconds)
  done (took 88.722401134 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.217691704 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.216630377 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.214925952 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.215196286 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215960056 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.218657036 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.216563058 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219004772 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218010278 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.217704823 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219579162 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.216806318 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216495695 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.218577561 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.218228695 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.216219039 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.218961298 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216353728 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.21995614 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.219680479 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218322982 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.216436927 seconds)
  done (took 27.925883975 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219508376 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.221639991 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.216740692 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.218096392 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.216403532 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.219027772 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.220106507 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.221374051 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219608291 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216465169 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21753393 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219963877 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.217663339 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219116916 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216929881 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219471522 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219374582 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.219705711 seconds)
  done (took 23.07968334 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.21869249 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.218098442 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.220948047 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.218948782 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.218521615 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.220941919 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217478802 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.221159099 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.221875474 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.218991212 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.22072657 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220471984 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.222165982 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218217375 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220886934 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.218518697 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.221109537 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218975184 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220940486 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219601734 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.218853018 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221380712 seconds)
  done (took 27.980545373 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221540798 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.220392212 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.219737311 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.218628375 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.219017468 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.222608066 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.221715573 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.220086167 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.223464434 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.222783894 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219211615 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.222089292 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.220614619 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.220028334 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.220190238 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219380808 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.223232157 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.22016774 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222660046 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.220343796 seconds)
  done (took 25.561413879 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223783667 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223537456 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.222768706 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223040459 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222792682 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.223252268 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223917294 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.223204366 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223793446 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.222828069 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.223080734 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.224194849 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224837284 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.223852121 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.2241477 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.22351026 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223996889 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225355929 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.224178912 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225598484 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.224306626 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225254732 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224203616 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.225054813 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.225116402 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225687591 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224502423 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.224223247 seconds)
  done (took 35.419337935 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224452327 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.224257467 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.222406002 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.221995758 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.222303876 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.221701407 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.222332401 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.222611059 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224967747 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.222548943 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.225633628 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.22504915 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.225739512 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.225449134 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.225148298 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.224403153 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225802257 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.224103072 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22357703 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223453247 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.22553035 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226016344 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.225869867 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223430538 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223658273 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.225882342 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223399153 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.223889226 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22584512 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.224406891 seconds)
  done (took 37.873215382 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.245038152 seconds)
    (2/2) benchmarking "in"...
    done (took 1.245505913 seconds)
  done (took 3.63733869 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.224428769 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2274655 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.227808124 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225464839 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.223737369 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227653285 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.227536618 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225532854 seconds)
  done (took 10.957257947 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.226350663 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.227925133 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.22847083 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.227556986 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.228163403 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.22746569 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234477014 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.244858084 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.227914375 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.228490672 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.232472148 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.234184513 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.230809975 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228206717 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.228710992 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.230556656 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.228230518 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.228538516 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.228809388 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.229764371 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.228283869 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.231132655 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231312105 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.226851871 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.230172411 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.239083637 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.251522933 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.229607881 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.229497878 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.233408029 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.229589649 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.227793524 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.229776538 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.229039296 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.229439183 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.229272188 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.237725128 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247392188 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.236130025 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.247555948 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230939914 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.228967511 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.23045818 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.231423037 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.23164183 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.230273573 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.231220566 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.228803626 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.230206624 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.232443852 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.23476834 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230393393 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.228609583 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.2344451 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.231982651 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237584599 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.247453119 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.233610705 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.237964772 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.241691269 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.259558187 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.251758108 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.233670272 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.231049974 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239551294 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.251370015 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.238043783 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.247257549 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.229524316 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.232503781 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.238682838 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260290628 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.254510033 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.232395536 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.232818352 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.232942868 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232723663 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.233159492 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239294062 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.251989696 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.233641418 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.232591194 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.241446986 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250217247 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.232799835 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.233273128 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.232606181 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.232483403 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.234100872 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243250455 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.249996888 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.233540164 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.23231172 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.234019789 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.234455545 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.233700032 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.233474873 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.23513113 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.232152404 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.235085793 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233664161 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.236980398 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.241404798 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23300392 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.234482306 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.240504829 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.252927061 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234262146 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.241046137 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.235050658 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234148381 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.236557848 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.240240851 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.233428615 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236431839 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.24065882 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.235152663 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.236166148 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.236133748 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.23566473 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.243152379 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.257126482 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.236676045 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.236645668 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.23904072 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.243604268 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235131621 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.238746457 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.236135339 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.234220094 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.234848487 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.236915012 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.235545378 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.235761895 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235765416 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236963651 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.233430202 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.237218274 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.23559638 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.236849108 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.237630696 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.23672516 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.237604993 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.238984795 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.236595182 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.238166219 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.242343587 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.253796385 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.237956804 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.23737964 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.235266647 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.238254782 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.238668443 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.238074057 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.236716783 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23788085 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.237929694 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.23812283 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.23806147 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.237512411 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238079697 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.238279909 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241052325 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.23750502 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.241519433 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.237545165 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.237770798 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.238242108 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.239275856 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.237933126 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.239168608 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.237054326 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.240486463 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.24593765 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.240081777 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.238927103 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.241413982 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238983939 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.238760797 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23916644 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.240230819 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.245717656 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.239960936 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.245583297 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.257961678 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.239889753 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.238998849 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.239336331 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.241588311 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240471782 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.241380433 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.247130657 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.249879622 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261429023 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.240521276 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.244219008 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.23993759 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.242942003 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.24350837 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.240185621 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.241170813 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239846559 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239999468 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241255373 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.241731784 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.241270174 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.240734655 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.241251205 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.241882271 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.240714543 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242170762 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.241418041 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.240498891 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.239946239 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24264219 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240034828 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.24039799 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.238808417 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.24064746 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.241839453 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.242183582 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.241332715 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.247928446 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.239521998 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243112502 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24282105 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.242200745 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.240420281 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.241798574 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.244459156 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.24196954 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248735412 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.258906163 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.243679108 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250000056 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.257764205 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.241497455 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.246460159 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.242798595 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.240185236 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.244221055 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.249489702 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.243314486 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.243024666 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.242912358 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243241665 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242968991 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.24925903 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.25902731 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.243086171 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.243982742 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.244951848 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.242151004 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.246049742 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.244550851 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.244140262 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245469526 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245055066 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.245870356 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24532229 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.24386975 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.243653677 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.244387205 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245841181 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.250503696 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.249923707 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.245110907 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.247682208 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.246975567 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.248358066 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.247481201 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.24593259 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.243808753 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255768722 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.265404068 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25147616 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.264693961 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.247236804 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251474 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.262926687 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.248812447 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245643324 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24736185 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.245884341 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.245649116 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.245009402 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246851173 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.246764748 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247109984 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.247102733 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.250124545 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.247138698 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.245685824 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.246541765 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.246622627 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.247023224 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.246156322 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.24778367 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.249320731 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249014616 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.245573288 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.247514304 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253731998 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264248022 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.249088316 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.24860152 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.247544359 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.247118227 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.24878461 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.247073601 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.250561655 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.253543267 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.250197028 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.256295559 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.24899623 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256594962 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.249013555 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.249476898 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.253173199 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.246238565 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.246806423 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.248826965 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.249153899 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254841378 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.265027037 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.249929209 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.252548448 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247776997 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.248616 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.249924536 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.250226766 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250485701 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.248870589 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256133471 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.266620483 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.252598033 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251741222 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.24781246 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.250765618 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.25060272 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.248786686 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253749853 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.249471646 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.251487003 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.250303971 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.250603679 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.251026666 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.250283126 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.250933607 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.247947925 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.251454202 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257251346 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.269252951 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254098503 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.251916025 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.258515731 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268081896 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258201251 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.269115055 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.252180309 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.250688926 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.252688186 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.252191021 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.251196318 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.251917716 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.252302023 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.251998708 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.254535106 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.252177674 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.252917057 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.251967425 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.251740795 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.251160111 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260876605 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270001746 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.251849776 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255838818 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.249253135 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.252881436 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.255848708 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.25179146 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.251841541 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.255249761 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259666514 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259335418 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.252594161 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.253465902 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252411917 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254234845 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.253234914 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.25373578 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.252037093 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.253848114 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.254611355 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.253016758 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257058887 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.253536957 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.254060749 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254269756 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.254176647 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.262545393 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.271859455 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.254523507 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253847883 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.255496358 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.254577665 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.255563303 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.253896831 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25526579 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256007463 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.255500651 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260004892 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.258790616 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.257071877 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.255161642 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.255124915 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.254848985 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.254923193 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25449927 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.254699329 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253886065 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.255687903 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.254867385 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.255165361 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.254065951 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.256190205 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.25643075 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.2559059 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257665571 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.260802044 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256442799 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.254089287 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.256682621 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256797367 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.254305838 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.256408973 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.262967439 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275470049 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.264027517 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.262065714 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.259808911 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.256188783 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258898804 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.262370894 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.255900638 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.257207647 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.257089897 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.258909851 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.257601351 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.258887372 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257138536 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.263798856 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.275188472 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.257554843 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264745379 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.275657242 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.256978505 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.258369149 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.259736828 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.258586997 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.255296677 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.257952905 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.255622591 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26616107 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.275090937 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258988038 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.259790994 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.257721105 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.258985249 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261364527 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259437264 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.259146225 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.256416038 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.258656191 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25899359 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259215043 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.257054484 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.257223451 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.258863728 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.262116055 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.263899111 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.256070725 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260403911 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.258986863 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.259883655 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259700058 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260000393 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.258278403 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.257190993 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.260067695 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259744794 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.258950578 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.262554233 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.259828982 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.259799112 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.260196418 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.260497463 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261191035 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.26824384 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.26633863 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.259031498 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.260759815 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.261272245 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.263741373 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260309793 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.260894591 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261818506 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.263008798 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.261310502 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260312511 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.260634504 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.263257725 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275236085 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.27884025 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26190252 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.262076053 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264723699 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.261910728 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.259335907 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.262126578 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.264326943 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.264307966 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.26805092 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.261652941 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268088834 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.278354656 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.263411864 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.265707307 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.264368733 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.268694706 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.264682715 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.262893177 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.262903539 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.266228887 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.275540398 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.262942028 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271152409 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.288714833 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.279669833 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.26353617 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.262758333 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262916151 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.262494634 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.265063632 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.262977882 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.263524325 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263874195 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.263209744 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.263294259 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267627619 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.264396999 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.265142777 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.263607037 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.26282731 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.264675577 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.261334301 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.263230165 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.264305358 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.264219462 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.263812236 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.264064222 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.26525932 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275752513 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.287877583 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.264567377 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.265002936 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.261606629 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.267184767 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.267392031 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273384788 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.270028369 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.264723916 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.264131977 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.266734839 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263706484 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.263938646 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.265066433 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.264996721 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.26331561 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.263952157 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.276384056 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.288802439 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.270548653 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.265378979 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266158523 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.266090228 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.266599931 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265897156 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.266971073 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.267155184 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.267633541 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269134202 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.266415087 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.266010483 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.268861275 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.272571279 seconds)
  done (took 745.949053687 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.264061716 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264639413 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.264696669 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.263763472 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263862495 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264533589 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264526733 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.264793525 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.264423701 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265098768 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.265876855 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264993378 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.265348077 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.265713467 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265231633 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.265277637 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266725579 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.265426032 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.266147573 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265288059 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.264869706 seconds)
  done (took 27.749939677 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.269115778 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.266244141 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.265035393 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.269036944 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.266437495 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.268454877 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.266212649 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268205792 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.269136906 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265648986 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.268653188 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268430728 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.267137497 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.2657152 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265616643 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268249803 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.267952517 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.265628355 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.268328528 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.265555421 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.264127154 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.259009101 seconds)
  done (took 29.053762731 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.260257064 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.259726014 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.259803476 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.258286751 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.261637371 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.254639053 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.251162856 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.252653053 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.252976169 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.252324845 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.251793174 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.252936891 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.25712379 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.251097282 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.247340706 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.245383224 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.389919315 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.245116618 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.245904551 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.245186896 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.243703376 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.250857153 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.257503151 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.238693178 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.240508747 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.241197896 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.24208133 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.242556705 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.241109274 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.241861638 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.24329845 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.240413086 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.239139213 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.242411761 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.239538799 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.240860528 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.242994551 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.24128517 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.238474658 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.24157648 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.249328791 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.258213321 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.241776986 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.247417087 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.260640533 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.241538 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.243632881 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.246953275 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.238201888 seconds)
  done (took 62.45298507 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.241933181 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.241867447 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.239696922 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.241591895 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.243121306 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.242312224 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.241785767 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.242850753 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.239235494 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.239988016 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.241623847 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.239615116 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.239808051 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.242320472 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.24229621 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.239323575 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.24035262 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.241159172 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.23988809 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.240008174 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.239409162 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.24285483 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.242565655 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.2406362 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.242877834 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.239972285 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.240509002 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.243120199 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.241336771 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.24106828 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.2431996 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.244281687 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.243411773 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.241235022 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.240587701 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.243660684 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.244712968 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.240505088 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.243332993 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.242156635 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.244491285 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.243561933 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.244060418 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.244857895 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.24182538 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.242458122 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.241772426 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.241573283 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.2421425 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.244430045 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.244732866 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.243048345 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.244708171 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.242417377 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.244299917 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.245503433 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.243744774 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.242425857 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.244721896 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.243046293 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.242482659 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.24551895 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.243514415 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.245214075 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.247294098 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.244038437 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.243636736 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.245763456 seconds)
  done (took 85.652582833 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.245410772 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.245580042 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246375967 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244941701 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.244180689 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.244220964 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.245353078 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.245502659 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.246692972 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.245779037 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.245426994 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.246622649 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.245101483 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.247048168 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.246702445 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.24609996 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.245998859 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.245803399 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.246869745 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245424982 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.246132067 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.245651662 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.246767895 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.246285062 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.247385526 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.245676995 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.246117965 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.246051382 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246226807 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.24722841 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.246784274 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.246914398 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.24677655 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.247156278 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.246775572 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.247397453 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.246438643 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247721007 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.247080373 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.247083235 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.246820925 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.247203113 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.246812373 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.247869272 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.247737705 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.248213053 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.246819696 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.24689213 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.247921051 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.24693623 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.247315817 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.248045345 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.248201577 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.248384463 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.248156264 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.249480156 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248569384 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.24785482 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24809078 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.2488742 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.249273979 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.24965581 seconds)
  done (took 78.470570169 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249300796 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.248982023 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.2464464 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.246945875 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.250276014 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.247117972 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.249883921 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.250151916 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.250606727 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.25095991 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249734539 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.246865394 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247614797 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251112851 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.248463416 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246923552 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248144206 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.248884953 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251573096 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.248284897 seconds)
  done (took 26.146589315 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.248793507 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.251363716 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.248772608 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.247898913 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.251552346 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.248695464 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.251252485 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251485851 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24892516 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251210379 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.252715649 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.251582214 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24928379 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.249571024 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.252180974 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.248585624 seconds)
  done (took 21.17390961 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.249293093 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.252135097 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.251134315 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.251988827 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.248567575 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.249939778 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.252459447 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.250437202 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.24918455 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.253249826 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.25226373 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.252335566 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.252709274 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.252068113 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.249806939 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.25272971 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.251266554 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.250618602 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.253194706 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.253776883 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.250122986 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.250285508 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.253513024 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.253394043 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.251692447 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.249669873 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.250915106 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.250526307 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.250455276 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.254184773 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.25134755 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.25086649 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.251239663 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.250777639 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.253202105 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.251807566 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.254203861 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.254368142 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.254461291 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.254665216 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.255589054 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.252067877 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.254857443 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.255103848 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.25176589 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.254886176 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.25276972 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.252929997 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.253567588 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.25294651 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.255290209 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.253731531 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.25502318 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.256108511 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.255375429 seconds)
  done (took 70.05449127 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255941767 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.256293083 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.253115312 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.254768061 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.255555696 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.253861551 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.255921431 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.254902335 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252734713 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.255531527 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.254320122 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.256635878 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.253032668 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.256411442 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.254220732 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255667441 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.253306628 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.253520911 seconds)
  done (took 23.759021046 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.25427826 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.253482735 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.257381423 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.254074047 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.253094591 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.256397498 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253549151 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.256403147 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256878816 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.253771957 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254593943 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.257325188 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257213175 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.257498158 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.254485065 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254787007 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.257660986 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.257096468 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.254883383 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.25492505 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.257373807 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.256291951 seconds)
  done (took 28.796863362 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.25533121 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.256349708 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.255112004 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.271401979 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.272559885 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.276555626 seconds)
  done (took 8.761579434 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262835418 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257789376 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.255554926 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257811035 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257739711 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255677018 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255518395 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256028195 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258565897 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255640374 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256062427 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258101234 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258431247 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256471173 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258373412 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258824317 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255742146 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256542477 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256713624 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258426683 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256126131 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259094492 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256164189 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2569398 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25594645 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255465773 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260062391 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256717891 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256148543 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259815143 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259493919 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257894073 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259986618 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256939618 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259926146 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259098562 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257279326 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25960037 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260726498 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257518279 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.25982918 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260400044 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260789467 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258640966 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261193883 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257749256 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258301553 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258618728 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258375039 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261140929 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26065773 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257484047 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260458276 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260519786 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26050721 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261733917 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259589424 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257672715 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260711128 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259184709 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258522755 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261504548 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25856068 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259686432 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26103627 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259253393 seconds)
  done (took 84.257752587 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259798555 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.259340718 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259459176 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260511133 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259066861 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260620795 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260373809 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259944624 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260688059 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262645466 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264355721 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259123798 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259590323 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261997751 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262140443 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259735728 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259938794 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259868564 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260423784 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262999021 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260832377 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259521964 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259709491 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260297282 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261193998 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263115961 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26019308 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261051885 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261615061 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260700539 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2618894 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261671896 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25975523 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.261916792 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261299124 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261554364 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261601531 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261065583 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261393694 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263286137 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262189349 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264677263 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260952948 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263056932 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262577659 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261857591 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262049551 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262662548 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262741381 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262702516 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263281438 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264152575 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262778176 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261801938 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262694656 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26321229 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262310502 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261823089 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262104054 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265379432 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262841882 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261907027 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265662656 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262477746 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263292551 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262741576 seconds)
  done (took 84.451221929 seconds)
done (took 1726.831190824 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.334095588 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.346638917 seconds)
  done (took 13.863862438 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.426257922 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.376177225 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.261705057 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.262889195 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.261070467 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.282026949 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.272635898 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.260738578 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.26137961 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.260722314 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.261454535 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.44586357 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.31267893 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.263238865 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.260049344 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.351652046 seconds)
  done (took 42.004329121 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.2859349 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.267311674 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.368758124 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.287686518 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.287368618 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.436298421 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.31960904 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.263678692 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.420831175 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.306694482 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.718774421 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.28542687 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.262756693 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.309726618 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.283871524 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.434802277 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.496353609 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.723594112 seconds)
  done (took 28.938246159 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.674290834 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.275323582 seconds)
  done (took 9.126562058 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.279844934 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.271826127 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.300206361 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.288055272 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.28077237 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.270711766 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.292186212 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.288320102 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.272438425 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.272319765 seconds)
  done (took 63.995362264 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.268696933 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.250863658 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.251652209 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.250670681 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.250392116 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.243080424 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.249856603 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.261610473 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.611373401 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.372286405 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.274424475 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.258492024 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.267610473 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.252177759 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.249009824 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.285434697 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.376619185 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.267659446 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.248709636 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.257200761 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.251989132 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.360704678 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.28962816 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.252801375 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.367199626 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.634010174 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.260322448 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.257152725 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.360730569 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.269743541 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.251247032 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.251887317 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.254565459 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.822871154 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.766728856 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.265533234 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.275388943 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.261186212 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.250868557 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.39366509 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.271147828 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.258408606 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.245741797 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.748579076 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.407877768 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.360215534 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.41785951 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.259035913 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.255095191 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.311537983 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.254455953 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.254890445 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.281606363 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.006352797 seconds)
  done (took 106.350766684 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.279802717 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.734440015 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.415721836 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.2671893 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.011782792 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.925512013 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.266893439 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.513178265 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.291894667 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.248156892 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.538657922 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.733401424 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.267134589 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.250789569 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.885438825 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.314828082 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.259777471 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.996063342 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.269024463 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.251728883 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.657223938 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.262208409 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.247100375 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.409894369 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.277230308 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.682259197 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.643841153 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.575068584 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.263822543 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.23919048 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.681133167 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.263943798 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.268490697 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.240851791 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.502833476 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.580970424 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.571014417 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.256997224 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.2850441 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.241082956 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.26406932 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.680734646 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.579770336 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.257048906 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.252709987 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.683681382 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.256136018 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.251664034 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.241913665 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.439247074 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.002716406 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.241910783 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.643532796 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.246623982 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.582766045 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.24225853 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.308806266 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.711937146 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.257265622 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.20490785 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.282667784 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.241425197 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.249863177 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.246480694 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.246054184 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.570348909 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.372640132 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.244273569 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.569447697 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.694089446 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.257256223 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.743120251 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.194630088 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.255393206 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.314834109 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.243720921 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.789321316 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.726959683 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.285786029 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.24312457 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.555735247 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.259156553 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.51016861 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.257153354 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.243938161 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.65936877 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.267865386 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.304315649 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.243183837 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.257907535 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.876547828 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.243019022 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.515364502 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.29633805 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.244417945 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.243114807 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.287932809 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.242870587 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.243616641 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.244090739 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.743260418 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.271864475 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.370216763 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.262792941 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.250984075 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.249306699 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.24642334 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.244823841 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.459135867 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.792799433 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.24813649 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.2455462 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.244985717 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.266579482 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.383894787 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.250599389 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.535425273 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.26697529 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.244571337 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.251930015 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.943584294 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.265270852 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.245502352 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.24699354 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.066181725 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.471096988 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.261478373 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.24579162 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.24753842 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.259567081 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.582238328 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.251782403 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.261895338 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.245874426 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.926976212 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.306264594 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.256746229 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.669219799 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.256439523 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.199131656 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.27663946 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.246343584 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.560875546 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.512439586 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.29714696 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.249453275 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.261653241 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.92296973 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.311934109 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.394196826 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.266223261 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.307363294 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.444663646 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.524687256 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.250041819 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.819027336 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.24856899 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.456813235 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.248598824 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.576816533 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.713023825 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.263468498 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.251891036 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.92560085 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.915943349 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.872888244 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.251582638 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.518256158 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.24065357 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.685395457 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.249136781 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.248565486 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.667229397 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.251656365 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.253336154 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.248459676 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.247892186 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.398844994 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.423041976 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.520851168 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.247861603 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.68885941 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.26952788 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.249232837 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.27564199 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.248611298 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.602274404 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.334248971 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.249590465 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.293810072 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.249928831 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.252273174 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.704630002 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.235684243 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.25018793 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.402880933 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.857404921 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.26571835 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.25160113 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.985071509 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.527108932 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.740290477 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.293206103 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.540157093 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.265059143 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.289265179 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.945635358 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.291894617 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.74922869 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.268137221 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.25776025 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.820782544 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.267207668 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.602307021 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.2519238 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.251259253 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.771887221 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.266433554 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.252637041 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.573599681 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.251009231 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.494936619 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.2527738 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.289891794 seconds)
  done (took 1090.962693988 seconds)
done (took 1356.421497131 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.251303328 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.252601352 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.242513456 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.257182291 seconds)
  done (took 26.180786428 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.260943439 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.257430368 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.258007635 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.256458881 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.259332078 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.25648547 seconds)
  done (took 8.72431859 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.284465991 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.257267341 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.257331686 seconds)
  done (took 18.974515312 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.464214524 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.498344654 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.605505921 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.359311287 seconds)
  done (took 10.103923035 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.259016047 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.258642439 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.258539078 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.260872094 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.261671905 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.263015457 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.261784122 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.261976191 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.263027115 seconds)
  done (took 12.525345912 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.985431955 seconds)
done (took 82.66759506 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.269898147 seconds)
    (2/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.26984707 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.342061646 seconds)
    (4/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.693401086 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.247881179 seconds)
    (6/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.875623756 seconds)
    (7/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.962228907 seconds)
    (8/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.271832198 seconds)
    (9/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.063425578 seconds)
    (10/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.339319358 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.491104424 seconds)
    (12/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.824449653 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.295691912 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.579662716 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.496744993 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.281700028 seconds)
    (17/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.257073968 seconds)
    (18/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.246723605 seconds)
    (19/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.543716157 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.299037728 seconds)
    (21/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.973100933 seconds)
    (22/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.834693075 seconds)
    (23/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.383797688 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.871618356 seconds)
    (25/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.573574506 seconds)
    (26/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.265213967 seconds)
    (27/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.799707886 seconds)
    (28/309) benchmarking ("sort", Float32, false)...
    done (took 5.232204153 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.102663425 seconds)
    (30/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.287237429 seconds)
    (31/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.571126102 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.270337733 seconds)
    (33/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.796487417 seconds)
    (34/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.812315508 seconds)
    (35/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.950139242 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.376204881 seconds)
    (37/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.657027313 seconds)
    (38/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.268321449 seconds)
    (39/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.597921041 seconds)
    (40/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.354831161 seconds)
    (41/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.338772441 seconds)
    (42/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.235873825 seconds)
    (43/309) benchmarking ("sort", Int8, false)...
    done (took 4.383259295 seconds)
    (44/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.338844514 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.299623836 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.367778151 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.854631256 seconds)
    (48/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.384026417 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.517648333 seconds)
    (50/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.47257232 seconds)
    (51/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.307852945 seconds)
    (52/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.290616585 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.324484307 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.515391439 seconds)
    (55/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.290256896 seconds)
    (56/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.786857838 seconds)
    (57/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.982941249 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.314771773 seconds)
    (59/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.275858274 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.134160495 seconds)
    (61/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.289928579 seconds)
    (62/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.283800377 seconds)
    (63/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.283195482 seconds)
    (64/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.25722251 seconds)
    (65/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.022598129 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.256862275 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.147067812 seconds)
    (68/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.273784618 seconds)
    (69/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.559684895 seconds)
    (70/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.57324392 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.655933768 seconds)
    (72/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.271928972 seconds)
    (73/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.281992104 seconds)
    (74/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.25798265 seconds)
    (75/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.263156858 seconds)
    (76/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.400485142 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.064567662 seconds)
    (78/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.42413532 seconds)
    (79/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.259738854 seconds)
    (80/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.250934805 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.646035021 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.156319817 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.405952958 seconds)
    (84/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.780937657 seconds)
    (85/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.650458994 seconds)
    (86/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.399458016 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.724529379 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.611818183 seconds)
    (89/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.967257467 seconds)
    (90/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.840546907 seconds)
    (91/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.596918914 seconds)
    (92/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.305881017 seconds)
    (93/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.28940893 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.396310446 seconds)
    (95/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.356516245 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.273261831 seconds)
    (97/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.671469549 seconds)
    (98/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.632702932 seconds)
    (99/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.27577874 seconds)
    (100/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.2670501 seconds)
    (101/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.276917016 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.696994685 seconds)
    (103/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.300612609 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.103210046 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.328336488 seconds)
    (106/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.259534129 seconds)
    (107/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.343010155 seconds)
    (108/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.271777219 seconds)
    (109/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.619226437 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.263217868 seconds)
    (111/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.395614565 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.300727672 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.331567329 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.475697988 seconds)
    (115/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.578695434 seconds)
    (116/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.347116661 seconds)
    (117/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.24895796 seconds)
    (118/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.050883807 seconds)
    (119/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.51625412 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.260871258 seconds)
    (121/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.473497835 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.453637137 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.622866637 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.619619454 seconds)
    (125/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.452989098 seconds)
    (126/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.337080439 seconds)
    (127/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.342700925 seconds)
    (128/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.627988641 seconds)
    (129/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.258558473 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 1.793662649 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.30179474 seconds)
    (132/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.439241616 seconds)
    (133/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.781340479 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.541742955 seconds)
    (135/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.271824433 seconds)
    (136/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.379204327 seconds)
    (137/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.413214311 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.002584334 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.262758755 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.524442539 seconds)
    (141/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.985614158 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.275775683 seconds)
    (143/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.267101386 seconds)
    (144/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.35327064 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.619409867 seconds)
    (146/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.333633925 seconds)
    (147/309) benchmarking ("sort", Float64, false)...
    done (took 5.527626333 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.365676674 seconds)
    (149/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.24243396 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.334119622 seconds)
    (151/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.590661305 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.995179282 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.289331352 seconds)
    (154/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.495754552 seconds)
    (155/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.258295413 seconds)
    (156/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.28425023 seconds)
    (157/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.891260005 seconds)
    (158/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.624201924 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.288235259 seconds)
    (160/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.69737636 seconds)
    (161/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.272436142 seconds)
    (162/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.32765544 seconds)
    (163/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.348682637 seconds)
    (164/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.290181713 seconds)
    (165/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.786882014 seconds)
    (166/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.539297972 seconds)
    (167/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.386335255 seconds)
    (168/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.986988686 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.23883498 seconds)
    (170/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.576733156 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.704996921 seconds)
    (172/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.059626163 seconds)
    (173/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.998062279 seconds)
    (174/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.783940669 seconds)
    (175/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.64641031 seconds)
    (176/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.375798906 seconds)
    (177/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.313695133 seconds)
    (178/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.271934768 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.109177261 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.281764501 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.384061902 seconds)
    (182/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.291352294 seconds)
    (183/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.563126771 seconds)
    (184/309) benchmarking ("sort", BigInt, false)...
    done (took 6.264686394 seconds)
    (185/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.299208526 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.291788547 seconds)
    (187/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.512961127 seconds)
    (188/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.81384619 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.666455949 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.321658742 seconds)
    (191/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.275804366 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.281935097 seconds)
    (193/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.570541263 seconds)
    (194/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.467686148 seconds)
    (195/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.750476664 seconds)
    (196/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.47012065 seconds)
    (197/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.308571352 seconds)
    (198/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.07061759 seconds)
    (199/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.330768502 seconds)
    (200/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.444700616 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.340367776 seconds)
    (202/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.371469163 seconds)
    (203/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.006931239 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.166443255 seconds)
    (205/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.478009622 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.36347225 seconds)
    (207/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.294293366 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.254476455 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.671953943 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.903587654 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.467115606 seconds)
    (212/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.11701525 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.272602409 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.914280073 seconds)
    (215/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.01785378 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.537143267 seconds)
    (217/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.345227539 seconds)
    (218/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.740061026 seconds)
    (219/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.421125551 seconds)
    (220/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.522427951 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.295962495 seconds)
    (222/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.29396916 seconds)
    (223/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.569332959 seconds)
    (224/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.277737165 seconds)
    (225/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.086152583 seconds)
    (226/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.249098289 seconds)
    (227/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.505534195 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.837327725 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.31448508 seconds)
    (230/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.268973588 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.683435198 seconds)
    (232/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.652566883 seconds)
    (233/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.143179069 seconds)
    (234/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.676062697 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.288156096 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.267668068 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.167295884 seconds)
    (238/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.108997247 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.274397348 seconds)
    (240/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.465304008 seconds)
    (241/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.523749807 seconds)
    (242/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.867224986 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.670708712 seconds)
    (244/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.572137765 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.922863513 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.790506143 seconds)
    (247/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.30729272 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.275178589 seconds)
    (249/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.647129798 seconds)
    (250/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.85467514 seconds)
    (251/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.561902399 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.189680193 seconds)
    (253/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.013801953 seconds)
    (254/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.655175648 seconds)
    (255/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.856821502 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.478742972 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.284613504 seconds)
    (258/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.284683737 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.132919798 seconds)
    (260/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.361850724 seconds)
    (261/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.992284946 seconds)
    (262/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.286537706 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.296673344 seconds)
    (264/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.354857033 seconds)
    (265/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.074330955 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.660844567 seconds)
    (267/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.376983727 seconds)
    (268/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.873537526 seconds)
    (269/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.378777704 seconds)
    (270/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.46210745 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.29652724 seconds)
    (272/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.498341794 seconds)
    (273/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.372305165 seconds)
    (274/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.250568997 seconds)
    (275/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.155899768 seconds)
    (276/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.424563566 seconds)
    (277/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.659516057 seconds)
    (278/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.313111751 seconds)
    (279/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.378429565 seconds)
    (280/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.269819585 seconds)
    (281/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.3983809 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.258357125 seconds)
    (283/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.677637136 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.355167964 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.354479736 seconds)
    (286/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.287161043 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.370539417 seconds)
    (288/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.611341571 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.294699549 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.404739337 seconds)
    (291/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.090448695 seconds)
    (292/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.679508423 seconds)
    (293/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.318093787 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.109365406 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.898508142 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.279084691 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.321618464 seconds)
    (298/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.55368276 seconds)
    (299/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.286556436 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.859342187 seconds)
    (301/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.355292929 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.274358735 seconds)
    (303/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.280067936 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.302215949 seconds)
    (305/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.28103375 seconds)
    (306/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.023226096 seconds)
    (307/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.124813774 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.278781212 seconds)
    (309/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.629075719 seconds)
  done (took 896.060045475 seconds)
done (took 897.236911851 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.306105448 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.30189099 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.283555791 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.306702545 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.394979266 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.307303733 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.293419519 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.285822495 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.331277198 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.333241276 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.282339585 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.305911047 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.286425348 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.283411276 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.283506694 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.298948488 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.289277321 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.286526447 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.302082954 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.29466192 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.300709381 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.283307744 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.334091285 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.30640575 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.287918441 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.288947628 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.287900864 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.304433425 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.397336983 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.287579607 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.289043361 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.296662352 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.291278307 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.289859762 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.281230959 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.304598306 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.296700723 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.295588496 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.290901754 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.317747564 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.663338685 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.30133683 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.286713612 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.286203234 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.286908355 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.290146848 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.287724236 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.292956775 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.301426361 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.301087559 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.651526272 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.316089477 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.289817153 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.287291105 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.297776505 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.286534756 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.290363048 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.30375591 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.305932927 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.304528907 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.26755871 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.292465879 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.289729064 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.303097949 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.294150137 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.688339566 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.298722648 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.291023128 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.663001094 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.308257551 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.687394546 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.311159831 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.289127911 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.301898559 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.319296046 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.278215485 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.28331717 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.287565747 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.294543949 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.286786484 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.297943312 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.303463134 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.293487693 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.289601767 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.302381997 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.311831046 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.299830117 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.289950254 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.298748891 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.307429737 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.295480654 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.298707833 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.292829099 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.285138525 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.299724309 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.292509095 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.29346435 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.291854978 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.295677718 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.299387726 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.66011105 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.322795402 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.286865093 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.286182684 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.288944636 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.303547787 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.665482252 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.306376094 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.311842676 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.338068023 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.291878358 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.26940536 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.294072494 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.308816787 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.300251759 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.293516149 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.286667638 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.280087052 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.660620001 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.321381394 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.292639042 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.289067093 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.309211799 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.292715078 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.288405978 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.29562388 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.299292605 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.306176361 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.411811949 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.302769458 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.32261924 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.290070055 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.295075549 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.315270187 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.308967522 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.323224748 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.295455559 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.309549603 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.306707141 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.288765002 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.302938914 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.302933803 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.294706102 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.297998598 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.287049664 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.315990607 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.306177889 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.306211784 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.314314533 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.413176152 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.289497971 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.271009873 seconds)
done (took 217.817653262 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.35126309 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.284726408 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.373690233 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.289267078 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.388817522 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.387835228 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.286425955 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.287965203 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.287858703 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.663299659 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.288629079 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.289110692 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.281763512 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.28833741 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.370873723 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.290913447 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.288342685 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.627211829 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.289805921 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.359880574 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.289835722 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.287909256 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.290420465 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.698490254 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.284084644 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.282560908 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.359606797 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.290486224 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.634117355 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.291247877 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.283935827 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.635485644 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.379167439 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.308520371 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.301121089 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.299138041 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.389742683 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.309515214 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.371697491 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.371422332 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.375977466 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.32963772 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.286463544 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.287813942 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.293003527 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.291600642 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.289733512 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.319042278 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.284127541 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.290320787 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.627735468 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.302101827 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.299942643 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.290775051 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.289646267 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.312590219 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.290538472 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.291696891 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.380224744 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.292940712 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.353659272 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.670728211 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.66547486 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.291607315 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.290253465 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.291072286 seconds)
  done (took 145.529645415 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.35946712 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.364788413 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.402164913 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.308748015 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.341044524 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.407780747 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.309064307 seconds)
  done (took 10.700982223 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.299397448 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.294006001 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.34291298 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.344390456 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.293382235 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.439594984 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.293374341 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.304531093 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.29193821 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.346164843 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.295808867 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.294276977 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.3019074 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.29296682 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.342423734 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.304390846 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.408593481 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.2946997 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.29459859 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.445721904 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.291865239 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.302864415 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.345759003 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.30610523 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.296583427 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.300494813 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.867552969 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.294102531 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.293058542 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.295878811 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.292749584 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.332571828 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.296676409 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.292621404 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.293876486 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.410761195 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.296446852 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.293708486 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.297314706 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.290405454 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.296362956 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.296822322 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.296649073 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.294337712 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.297359554 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.318082751 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.295210505 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.296564763 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.296755055 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.298162941 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.346730199 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.297769676 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.294647768 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.294393797 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.352077193 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.303781578 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.297315064 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.294472859 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.297726736 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.294620642 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.447463018 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.343836379 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.297244928 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.34430002 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.298344709 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.297647444 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.2977546 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.297873464 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.350755667 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.298029829 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.345288424 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.295820573 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.452060029 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.320696676 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.299326402 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.300600632 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.300183892 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.29794185 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.296206677 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.303472493 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.29580969 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.298876757 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.303670555 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.295761705 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.295940526 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.400145101 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.406253173 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.295868009 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.310840038 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.304413185 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.296526355 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.351994991 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.298539351 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.295821058 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.349686747 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.413749581 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.351433329 seconds)
  done (took 149.53732148 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.30372456 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.306645697 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.301134501 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.314857843 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.299354458 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.299781982 seconds)
  done (took 9.038856574 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.301509629 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.300072642 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.300762002 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.301045161 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.299930231 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.301087381 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.300568815 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.301049838 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.304231515 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.301339046 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.301974974 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.301809741 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.302783065 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.300590294 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.301675542 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.302199905 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.301305737 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.300316119 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.302139398 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.30082639 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.404221403 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.300890763 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.302257142 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.303189157 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.306184862 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.301991169 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.309512794 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.301800765 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.301714539 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.306356076 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.320450114 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.302891039 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.30253163 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.307187027 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.304513108 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.30276184 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.307027794 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.303754214 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.299883386 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.303943617 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.304233123 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.302286034 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.302348131 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.304487562 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.304198572 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.306770267 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.308384602 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.310080718 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.303239022 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.305676536 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.304442876 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.30368994 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.305524351 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.304440415 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.304817116 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.324466229 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.307861884 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.304292058 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.303456324 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.303960251 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.305931461 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.306281416 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.305836888 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.308356777 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.303037551 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.305690193 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.304874706 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.307453915 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.304314453 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.305480261 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.308119869 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.303501619 seconds)
  done (took 96.223844699 seconds)
done (took 412.231723011 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.623386685 seconds)
  done (took 7.842082528 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.36108231 seconds)
  done (took 7.582089216 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.050154551 seconds)
  done (took 21.274993096 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.318634712 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.316643047 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.318469186 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.740210771 seconds)
  done (took 26.912931556 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.65645624 seconds)
  done (took 7.875308278 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.298274895 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.318963234 seconds)
  done (took 13.838341101 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.758662115 seconds)
  done (took 7.977692528 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.48542968 seconds)
  done (took 7.709676802 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.324725624 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.327568388 seconds)
  done (took 14.130067386 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.281922102 seconds)
  done (took 7.504290588 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.039157675 seconds)
  done (took 8.261501217 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.310984101 seconds)
  done (took 7.534037411 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.372808823 seconds)
  done (took 7.594389591 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.078170322 seconds)
  done (took 9.299613023 seconds)
done (took 156.552233851 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.30063282 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.308282229 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.308827639 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.308730252 seconds)
  done (took 26.448430829 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.343227017 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.343057729 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.34371657 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.353007946 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.345862715 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.342801625 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.335384351 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.334323861 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.354112226 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.345142555 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.344354232 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.346076989 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.354999295 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.335414559 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.345823822 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.345038743 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.354704833 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.344998256 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.336879382 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.346917641 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.309974295 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.354668263 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.346947083 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.31200961 seconds)
  done (took 33.443070775 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.832214337 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.380202124 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.463518616 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.361684543 seconds)
  done (took 7.260922189 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.363201676 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.364001919 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.374688122 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.413903551 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.440470055 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.372771722 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.337300899 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.33242894 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.318135264 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.365040717 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.440525218 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.380433618 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.447528206 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.31084411 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.495174086 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.311825452 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.312440523 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.363772332 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.414837573 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.428003701 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.312375058 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.363489969 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.367160346 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.38069573 seconds)
  done (took 34.235722451 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.324744947 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.319376563 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.310947856 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.310924384 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.333067454 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.311534069 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.311571595 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.311829312 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.312584859 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.317695161 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.310924469 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.324805644 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.310135627 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.310915481 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.317825844 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.313627238 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.318662352 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.312040801 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.312564294 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.315699007 seconds)
  done (took 27.536973702 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.304739675 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.237471621 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.656734312 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.561682145 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.306381701 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.31272704 seconds)
  done (took 28.606049736 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.381560129 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.526401665 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.312518636 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.659326817 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.761375114 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.336920119 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.314268201 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.547403518 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.85279318 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.851385601 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.37625249 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.378727177 seconds)
  done (took 19.527784426 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.308190596 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.315187801 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.327150187 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.329860793 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.366664654 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.333147845 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.321244398 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.306079439 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.374448539 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.388103985 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.333217677 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.368302811 seconds)
  done (took 37.300607438 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395235134 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.351919767 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.271295869 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.059736664 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.027135472 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.520557233 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.079725941 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.72946474 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.314543527 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583066842 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318286569 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407386519 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.565553679 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31064646 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.317066159 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.28258736 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552350119 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792355881 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310676037 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.184097829 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341904319 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.314723953 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.365395624 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.346031067 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.520872121 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.28792535 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.570914736 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.087782827 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588990757 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.328304367 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321563214 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.31054032 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584254473 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964420201 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423957909 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32087455 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.022553406 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.857296328 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.303323375 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.201367621 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.093836042 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.319230609 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323351051 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310513329 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.245703415 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316041038 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.740209094 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.317929566 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.022989881 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.312307745 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.323303043 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405790049 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.315525698 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.882140352 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33141589 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.318133673 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.309958072 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319551082 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881007768 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.670276309 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320113473 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.268794804 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.703687568 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.190035845 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941847148 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.432987298 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.318083356 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.316791548 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247493557 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.262900957 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.337314258 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460856369 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.33781489 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.962883249 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014968753 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.34525359 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.250711392 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860520169 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.315620901 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.270552654 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.54190731 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.089830232 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249943569 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.259436265 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.247830282 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030056918 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322618259 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.684713449 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.321403845 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.735482236 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.325778525 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332680322 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33746513 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.53785413 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.193128644 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31578838 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.137792029 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460842528 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336419211 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.738260638 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249841426 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.319552232 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570888369 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.526533743 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318135589 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.306583613 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.530708171 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321842121 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.342155655 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.326279452 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.332423563 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.883130398 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.345238877 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.666565166 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339774451 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.091434744 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055208518 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325024503 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.423684715 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.320434763 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559470477 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.076925936 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.20046564 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384695981 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322030966 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.315388411 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.296056385 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.174740763 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.1990288 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.313509348 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318691035 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.334935637 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.317260646 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263506392 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.318933368 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318441636 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.09444033 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.54161854 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.322933987 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600114058 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252904587 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464966223 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.327711186 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.540603289 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.501407448 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.339488242 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.576903231 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317926415 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.34030142 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.335838474 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336594687 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416016766 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340362903 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.331786848 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.580374902 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.322961229 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.322690866 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.321874725 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.105802163 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327296711 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.325514193 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.15844339 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891750199 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323290548 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.323287203 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.209472179 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.333699717 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38715084 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.325781475 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.329967596 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.098675548 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.189660851 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.325150031 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.326571338 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549644184 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.331366476 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.257209953 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404895433 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.513510325 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.89749707 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.350572792 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.255610527 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.031200085 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.013866961 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321191846 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.51456958 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.320312997 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330558228 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331737063 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.84952008 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.892362489 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340094346 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.245913805 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.334253947 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.333585577 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.327277446 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321625913 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.080069957 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.725387898 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338414444 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.340480312 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466122933 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.337413907 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.256679358 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.839986394 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.32831249 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.32144458 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.100485667 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35705528 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.228094447 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.798211744 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.582081354 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.06712407 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.333401283 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.428287233 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.362930797 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.326080866 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.182530094 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349241087 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.342249609 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338850681 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.334505488 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.337261575 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.768226889 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.88930193 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034115375 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881867405 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259029818 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.331685596 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.22820123 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.754177471 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.258461421 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.978812196 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.509712378 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.770205879 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270501206 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.519380943 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.51587607 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.096066856 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.34227912 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.551969453 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.240005994 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.194007803 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355303763 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.535444258 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359924321 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.33748894 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.260912998 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.604888994 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.554720567 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.201869536 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403780571 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.757740518 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.220369455 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.119226847 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.32284221 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.674771622 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511719674 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.9557399 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.713761508 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.325527175 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.336018138 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.794066892 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.330751135 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.851078957 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936819019 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.352986836 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.527388877 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261916684 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.337242221 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.336341557 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.322507228 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.594139411 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.334061658 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.587842034 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.337605093 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261236432 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.327956243 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870742054 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.199177161 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.333486495 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326550529 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089489745 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33119546 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612958501 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.346945205 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.077361115 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353206547 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.262515578 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261525306 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.020832394 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.337513509 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301391598 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831018137 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.701528008 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.331555145 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.348197861 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199486644 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.583263286 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.341073591 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.905952156 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57121572 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.139251351 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351196502 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.42879656 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.234997511 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.336414561 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.209290105 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.562625123 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.168276841 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.553655195 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.303485096 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.228091888 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.328008491 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.542936704 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.21023363 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.333581219 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575993775 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.064945163 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.335640445 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036332876 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380038333 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.331421035 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.347767425 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.722602438 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.338445111 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401921192 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.339421441 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.339941763 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.340696767 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495856485 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329409676 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.348382781 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.344560848 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424226307 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.722194148 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.08831588 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.111626668 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918107699 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080320934 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.933058484 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360525585 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.331070399 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330957859 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26438117 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48041974 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.855512324 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605183737 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460381126 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.793947331 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353195562 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.274684535 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.350877407 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.567826329 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607023982 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.201048588 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336840544 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.998707933 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.223488711 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.342717934 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.54360808 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838370789 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901336569 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440795422 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.333227469 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.764405167 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.606945876 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.424375341 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.332029912 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.921920977 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.346788148 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.702135415 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.356582622 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344697579 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489013623 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.34374523 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986620338 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.361496275 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.492882518 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.107327187 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.362102529 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.595731703 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.784838595 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.345747955 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916778685 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.042965965 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603996535 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405436511 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.345910188 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.441654486 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480318677 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.336444788 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.238642114 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333319409 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178682452 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.045647283 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.343418488 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913909055 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620036875 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.333193394 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.334008837 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35746463 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.344644775 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.558238483 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047659085 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.558698717 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.344191018 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.344894984 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.324608707 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914624573 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371597771 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270024687 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.339279578 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573649509 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.597026611 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361798384 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.816340701 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.047471649 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892371118 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.308021486 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357243504 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.34041402 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.033417023 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922238613 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.117707688 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855470356 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.99919231 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3384591 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618533639 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.342858404 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.336787037 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625133641 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.340972098 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.337688095 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.372569276 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.919728481 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.119152608 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.35939293 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.299992588 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.281431678 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.562900153 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.986154298 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2768694 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.339452935 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.509791866 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.338325672 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469219033 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.350549621 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.338378758 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358708385 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.079830304 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.623219601 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.344773124 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.332787305 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.286932794 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.353194866 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352459539 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571930416 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343804947 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.012510117 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.689276013 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.595345354 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.346529165 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.326476077 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.342598888 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33972893 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.056551731 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.308328872 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.870746825 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917007735 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.353660794 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.35710605 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.344056809 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.556526762 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550805196 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.346865223 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.358072509 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347357427 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363062685 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.239895134 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.106338936 seconds)
  done (took 1578.674300004 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.374568691 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.383326794 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.370116639 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.354128499 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.357534028 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.397212947 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.35418995 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.436425775 seconds)
  done (took 52.285097821 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.344586704 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.502116132 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.369108919 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.347227205 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.356664328 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.344512859 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.798325529 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.3748667 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.349564263 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.349663068 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.350196316 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.361373683 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.988801132 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.349507992 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.344788778 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.33986585 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.355861992 seconds)
  done (took 65.491400505 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.352963546 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.894746826 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.439209977 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.345278553 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.381186058 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.361920884 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.145930536 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.399075667 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.353712781 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.669422669 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.018810394 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.361829775 seconds)
  done (took 84.983506088 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.350156691 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.350462257 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.348875702 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.350387724 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.349374165 seconds)
  done (took 8.008279745 seconds)
done (took 2005.02352355 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.586879425 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.026303603 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.987270676 seconds)
  done (took 5.273245871 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.493086343 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.54197556 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.662721543 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.667731754 seconds)
  done (took 7.629333175 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.627411985 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.741697092 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.540524594 seconds)
  done (took 6.173208684 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.730865549 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.354706743 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.490699165 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.347478198 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.352570454 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.354950013 seconds)
  done (took 20.319933965 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.350780141 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.352929157 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.3529395 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.355092634 seconds)
  done (took 6.676014737 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.327628934 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.04703184 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.330365463 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.350337484 seconds)
  done (took 18.319381027 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.099711873 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.110326951 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.09416935 seconds)
  done (took 7.568169114 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.346464943 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.21760304 seconds)
  done (took 9.828593966 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.639184884 seconds)
  done (took 2.904248395 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.483268801 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.677548868 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.371302715 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.332730734 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.400765881 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.096815603 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.96993917 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.543593858 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.305008576 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.468850903 seconds)
  done (took 27.91488821 seconds)
done (took 126.026302427 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.124442742 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.589110578 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.551626476 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.137769313 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.592495422 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.551501703 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.777332403 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.105758885 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.607916037 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.596439049 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.101642571 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.589180531 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.506574815 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.588273541 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.506515568 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.719309312 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.576806592 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.163181251 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.821642015 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.981997375 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.776512605 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.735675939 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.933181929 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.802614318 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.588751474 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.505611991 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.336333578 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.725359937 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.990664922 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.348716184 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.504158578 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.15253649 seconds)
  done (took 192.856626608 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.358676123 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.349581037 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.351866281 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.366926458 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.364095204 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.351933562 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.368458409 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.366982759 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.351657402 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.350320505 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.367316418 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.367145394 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.352496856 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.367656396 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.352431862 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.363727017 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.356439685 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.351396789 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.351703595 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.367615862 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.353483388 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.352171436 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.351109102 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.366093257 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.358762297 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.367172148 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.357087625 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.351643044 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.351408167 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.355500248 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.358417846 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.35987295 seconds)
  done (took 204.730255135 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.366478042 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.36401715 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.354508064 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.3607247 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.352783256 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.369753733 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.353350658 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.352480603 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.352531778 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.35185542 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.35360579 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.360480741 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.354698408 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.367157997 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.352642769 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.353141859 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.363079337 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.352897382 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.369386487 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.354696862 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.370880929 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.353148072 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.353806104 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.35354256 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.361520993 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.354760012 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.353835213 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.367951745 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.353225605 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.362394967 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.356651 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.35351642 seconds)
  done (took 204.726692348 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.556445299 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.361062045 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.362366773 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.317128804 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.361888797 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.362155125 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.360446434 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.551671999 seconds)
  done (took 14.505176105 seconds)
done (took 618.080732417 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.572295107 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.299795031 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.55918809 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.383905491 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.119147951 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.400395478 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.383109966 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.550247684 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.283650087 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.55693312 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.623515894 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.396139636 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.765705586 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.38074901 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.634652166 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.484751922 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.228095838 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.351650014 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.692540271 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.887928216 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.642004159 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.834663943 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.569695798 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.265355582 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.782771249 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.831864353 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.065998733 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.226158725 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.398875689 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.70012189 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.967116599 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.300351806 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.442303377 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.440236697 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.499366076 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.47904172 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.288251434 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.441426314 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.583520659 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.608398973 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.89322861 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.10456616 seconds)
  done (took 92.193557731 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.34882533 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.346368717 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.346725502 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.345789833 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.347507976 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.346488617 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.346808468 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.346138719 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.347205085 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.346056603 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.345798604 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.349125007 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.346571529 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.348684657 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.346226793 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.347067915 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.348852709 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.349687041 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.346985155 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.346941276 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.348026908 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.347533892 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.347642205 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.346963063 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.34818042 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.348021261 seconds)
  done (took 36.305897797 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.367082263 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.614624036 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.783554123 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.380343727 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.367323856 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.370804348 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.443330568 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.371095844 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.37013089 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.371366138 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.537356505 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.370830565 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.402084977 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.802399921 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.369451727 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.369482362 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.368832068 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.367325841 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.623952547 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.377297563 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.465606312 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.371989101 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.444113812 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.378528845 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.390821871 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.369494331 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.373319116 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.885528487 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.386806813 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.538279682 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.149486673 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.449752445 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.840205031 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.80224709 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.168533566 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.377691318 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.370093441 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.541772569 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.371304876 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.368525086 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.445394582 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.377917139 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.784010765 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.998848831 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.393208038 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.371520552 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.910371897 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.558938786 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.61018776 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.384626694 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.806763174 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.379680054 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.372635742 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.371697762 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.611341455 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.38376526 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.369324781 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.906999371 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.399978944 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.445870482 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.378849975 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.371074183 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.630109811 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.371041297 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.618828522 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.371994811 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.37927966 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.390531358 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.786430209 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.380870304 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.019883495 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.39570482 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.372271939 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.536910134 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.619779142 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.939695937 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.393436038 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.63513243 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.85658648 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.463048273 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.384254056 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.875794657 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.466915916 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.37632707 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.37514174 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.375190087 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.372709827 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.422984842 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.446504676 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.938238073 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.031563037 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.925783653 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.470379758 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.38799921 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.373059201 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.907796082 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.393897932 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.373531613 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.792623948 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.018732018 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.397433727 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.380850051 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.021861506 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.392056999 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.451652008 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.380033533 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.795763464 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.375835196 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.425076951 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.375125216 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.379798974 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.395734104 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.451826241 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.378549636 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.374238247 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.993964465 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.570674005 seconds)
  done (took 180.397518034 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.368238177 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.368141746 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.368892282 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.367918925 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.367847037 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.375483266 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.366819111 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.368594077 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.373449183 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.368471956 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.369218131 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.367658559 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.368696771 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.369472208 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.39745237 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.375089235 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.023864566 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.36928327 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.369861423 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.370260722 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.160819977 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.376072759 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.37014577 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.369440472 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.370770278 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.370691699 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.376300211 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.370949757 seconds)
  done (took 153.123768353 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.376542853 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.929488828 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.392648752 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.504969697 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.399442938 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.37487518 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.504011067 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.432890981 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.394662753 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.375017057 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.374605717 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.672723288 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.377352372 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.885286825 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.572398622 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.531141103 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.880697867 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.394414861 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.376351591 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.37544191 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.506469286 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.385080282 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.673374169 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.937655935 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.402132024 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.936428498 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.369094797 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.378337507 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.377854395 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.934946415 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.394189848 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.675862923 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.453255968 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.444032451 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.95758022 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.900886182 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.901220409 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.524965447 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.376850607 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.377467401 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.377327899 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.361607672 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.935249569 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.397325596 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.378221207 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.928508017 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.403019907 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.380948421 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.384838946 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.377493117 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.436711462 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.456202037 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.700726382 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.944808037 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.475701078 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.392332539 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.508920391 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.768463922 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.381130069 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.885332463 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.361994658 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.940081314 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.398095189 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.362342827 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.379206339 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.384810563 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.526591399 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.513280421 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.892367744 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.403454698 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.890885415 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.549977562 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.383433805 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.379758825 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.382685872 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.939663756 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.908232093 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.548351917 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.514509851 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.573822835 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.373093989 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.378973535 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.365845389 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.455354076 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.38578415 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.942872019 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.911036196 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.406572031 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.382241183 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.381692058 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.38274896 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.553710684 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.964576523 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.473874793 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.881855373 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.706690255 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.683077895 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.384119195 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.439406485 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.405053165 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.683881435 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.38385151 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.438502426 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.843616409 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.685418055 seconds)
  done (took 164.32501761 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.622764727 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.561477149 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.474788817 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.514322464 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.959725653 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.934697473 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.593909322 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.520285497 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.498254693 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.645222226 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.524837533 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.472357198 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.560733384 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.45831318 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.111765655 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.468306159 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.491219927 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.530108703 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.492665501 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.388456186 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.016218469 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.659586672 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.557098605 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.235084592 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.474670525 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.152480811 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.949521926 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.916688192 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.560462417 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.651980325 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.914054383 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.497800571 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.338166666 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.051097559 seconds)
  done (took 66.090939209 seconds)
done (took 693.705678423 seconds)
SAVING RESULT...
DONE!
