cset: moving following pidspec: 16408
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.405600515 seconds)
loading group "string"... done (took 0.581500287 seconds)
loading group "linalg"... done (took 7.25825266 seconds)
loading group "parallel"... done (took 0.163002196 seconds)
loading group "find"... done (took 1.164459624 seconds)
loading group "tuple"... done (took 1.769441892 seconds)
loading group "dates"... done (took 1.251141809 seconds)
loading group "micro"... done (took 0.221291995 seconds)
loading group "io"... done (took 1.020845979 seconds)
loading group "scalar"... done (took 38.810985377 seconds)
loading group "sparse"... done (took 12.656963191 seconds)
loading group "broadcast"... done (took 1.032372546 seconds)
loading group "union"... done (took 13.149475756 seconds)
loading group "simd"... done (took 4.917031277 seconds)
loading group "random"... done (took 9.554071051 seconds)
loading group "problem"... done (took 1.902829403 seconds)
loading group "array"... done (took 21.431531831 seconds)
loading group "misc"... done (took 1.678053876 seconds)
loading group "sort"... done (took 3.322199682 seconds)
loading group "collection"... done (took 17.348031528 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.522256493 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124405937 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117992344 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12074835 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147733853 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11217918 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124594933 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08590238 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.825957596 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147199067 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11755677 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.427771815 seconds)
done (took 5.197321855 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.178564132 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085825448 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084918417 seconds)
  done (took 1.314728314 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066955909 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12496764 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068035748 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068678923 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069215573 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067979594 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067493418 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066400551 seconds)
  done (took 1.678504344 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074227201 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071100276 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067646895 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069604163 seconds)
  done (took 1.426728953 seconds)
done (took 5.819648644 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.78215675 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.209834056 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.186345896 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.41051777 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.13402953 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.161782539 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.639871907 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.315432188 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187689921 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080796944 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108441586 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.326597351 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111111086 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.624259227 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073988303 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089986695 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136267979 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.437739765 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.06663912 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082094139 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088692977 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129073817 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084651364 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073827009 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143942898 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067357459 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.135888576 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080410308 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066154841 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.211746787 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172373101 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.654987078 seconds)
  done (took 10.26152751 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099323313 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096840444 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068957832 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122785508 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095369059 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070288736 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.0704149 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06720085 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086332757 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127842542 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088351639 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100397506 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065221824 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068714134 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084689802 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202626333 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079498986 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081095293 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070731575 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075450441 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105189724 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078021983 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076693489 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076925764 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129189968 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180403342 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099742304 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100021419 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066344632 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079152631 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114855192 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124672182 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064813695 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065840844 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123546406 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094277345 seconds)
  done (took 4.583105458 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.996101428 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.147110853 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091405614 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134939247 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064678577 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108286104 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064922176 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080603394 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.208848931 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.468731532 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.589669145 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110972042 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103315067 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067570191 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068091014 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066410588 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.495125008 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.095394996 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106692014 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081287059 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06971262 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068911008 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084485047 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067393242 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063616806 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068051561 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.109124503 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.090553526 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.304747439 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129842846 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070253712 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.947583069 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127359421 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066642864 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101107413 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169139972 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088133912 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.274154267 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068805046 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064713431 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153101449 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070357348 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066200027 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084002849 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065002828 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10338454 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112687194 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065298382 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066731029 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164544664 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064787173 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079965042 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.640614131 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152312752 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076657023 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06467497 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.253078974 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087522878 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069666174 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064903212 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.178341182 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129735637 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066911716 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067057107 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068434607 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069831501 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.360248598 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065644529 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.176773021 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067330648 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07732453 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069087785 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069266691 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073188814 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072565174 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08746215 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066681491 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075090723 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066524669 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06630781 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067228742 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083627834 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.380806576 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066786557 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06847904 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064989829 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08904534 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096907925 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066477779 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065914805 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100291717 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068639308 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066419961 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106962595 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066919713 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083711206 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069995048 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113301093 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066163919 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064063383 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.220021117 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066396938 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097072109 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069265642 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098919296 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079834822 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068353787 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.42426312 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06533856 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065407265 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068617207 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064993202 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067592839 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06648367 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078942889 seconds)
  done (took 21.449783295 seconds)
done (took 38.435431938 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.236342607 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080886352 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073902826 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075848011 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074212143 seconds)
  done (took 1.777616337 seconds)
done (took 2.993273606 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122252982 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099903682 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064299613 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09733977 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064406501 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101830542 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100605556 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081712267 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100549736 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064327481 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09724345 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064203755 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063923544 seconds)
  done (took 2.359205209 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08605828 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084071833 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069688474 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083090902 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06376119 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082749378 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08154225 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089056876 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081679942 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073270717 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063509542 seconds)
  done (took 2.067799363 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085546506 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087057026 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071265831 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082979944 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06371282 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082156643 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081832732 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085783902 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081973619 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074554695 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063601971 seconds)
  done (took 2.064108146 seconds)
done (took 7.693923657 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080409972 seconds)
  done (took 1.276128024 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.591892222 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.108089572 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082239025 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111146185 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189012056 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118477459 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.271114914 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08695778 seconds)
  done (took 8.940287411 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.089541767 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06772872 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069749742 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.083656004 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069198145 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071491459 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068963347 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072163826 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068393638 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070558631 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071302026 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06785688 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069813666 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070867233 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070944087 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071379821 seconds)
  done (took 2.428339802 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094003245 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091386586 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073632543 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074679614 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071994165 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071971399 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073883162 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073472654 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071165546 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072150392 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07474663 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07320025 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071561634 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064814983 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073945565 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074623943 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07086604 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073612915 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074357487 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075370542 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074786014 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064005514 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07115009 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073609266 seconds)
  done (took 3.088416659 seconds)
done (took 16.936914901 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11818714 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071662891 seconds)
  done (took 1.393148844 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084473254 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083696327 seconds)
  done (took 1.377563482 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085165169 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065256476 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090445488 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077967522 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066219581 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065718383 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088094908 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065872285 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065457747 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065778815 seconds)
  done (took 1.948326009 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.07039405 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079494009 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070566343 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081109468 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07359908 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063954567 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072108497 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067574006 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077010772 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062648876 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070858184 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082228776 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071306614 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084211781 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071486707 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068342269 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070631215 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067348308 seconds)
  done (took 2.516358603 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068139634 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067621233 seconds)
  done (took 1.349606955 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068884627 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065634844 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067061551 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066799166 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063168905 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062325632 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063139061 seconds)
  done (took 1.667058652 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.388575814 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113520529 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.310614264 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070595679 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081720414 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256086362 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066180146 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070916263 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070336449 seconds)
  done (took 2.684499122 seconds)
done (took 14.157277717 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082708885 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087458339 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096497855 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.374733208 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091350443 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06615146 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114058264 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187247394 seconds)
done (took 2.330477813 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215467866 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.646042441 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404203547 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.205545663 seconds)
  done (took 2.476245551 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.352239358 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089668487 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060647195 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068308029 seconds)
  done (took 1.799853045 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068685615 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071167902 seconds)
  done (took 1.365568628 seconds)
done (took 7.086410159 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068549709 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.0680962 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.065260981 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068477217 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086846623 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063106967 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063265263 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06928184 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066651754 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06608294 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068314826 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065865053 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06608564 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063882547 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063528118 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066015645 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063381868 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063774986 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066065746 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063119519 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063722737 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066254043 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063801094 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063622118 seconds)
  done (took 2.852363823 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087935023 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067432661 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071244832 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070749092 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06936686 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071032836 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070960839 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066180383 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071314478 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068287575 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069383003 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069089776 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068429502 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069351466 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068469257 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06944537 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070896321 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06583713 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068388429 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069832028 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071191802 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066155754 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068937381 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071566081 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069174973 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070434485 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068208412 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065830446 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071077223 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069361224 seconds)
  done (took 3.329857253 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072203727 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065636896 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065565484 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07187386 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064445944 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063959754 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063507961 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063816293 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064870351 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06344372 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064881359 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063274093 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063789888 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06395278 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06436139 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067251961 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079509136 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064015252 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06348574 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064655261 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066809095 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064082974 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064007826 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063576148 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063636814 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06396216 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064472977 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063445194 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064183721 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064092678 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066695753 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067857277 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063409564 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070639432 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067342153 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063559172 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067645705 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063610577 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063934988 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063635012 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064225216 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063658564 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063699323 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070565224 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064069551 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065426374 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06427217 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064922789 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063913131 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.174296613 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062932199 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063206155 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065377178 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06549654 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067505438 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063044943 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064105169 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063277988 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063964118 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063479679 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063110334 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063104636 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065819123 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063753248 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078099256 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070216659 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062839223 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064672916 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06360902 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065798743 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064621882 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077152219 seconds)
  done (took 6.055046168 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094100655 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08892761 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065417692 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065004784 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061739576 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06378402 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069891385 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064165772 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065408552 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082059286 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06368601 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065165818 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065237124 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067494293 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064677531 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065288174 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072165062 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061492453 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064013469 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067314318 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064237515 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069626987 seconds)
  done (took 2.754932759 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159280875 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072117356 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105524493 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075516956 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070393185 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075289446 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069867979 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070072965 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070252214 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067466353 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067612541 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070155289 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06961817 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067620775 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067408878 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067289962 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070120459 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067267104 seconds)
  done (took 2.622148208 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08005323 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068608716 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088662311 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066552401 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06577691 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068434646 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070368113 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07365338 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068237814 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066025381 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073862983 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068116893 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068216772 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065591614 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068905183 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065915556 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067793676 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06566001 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07409633 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069752116 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069896964 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07361537 seconds)
  done (took 2.788306323 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082061228 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069933302 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082957052 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070504722 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062269382 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064345794 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069872601 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065287162 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070117436 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067399238 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065365303 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064448703 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068206182 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065616582 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068620226 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065960546 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067771218 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066118312 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067397164 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061412815 seconds)
  done (took 2.611235642 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089700292 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068942028 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067915761 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07535111 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067618551 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.0675966 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075527058 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067459815 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067540444 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088122998 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067429954 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067480865 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075426175 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072188112 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067345594 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075168115 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074269634 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07443554 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067402474 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067356718 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088423482 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067971009 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074288702 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067171775 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067764651 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067367606 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067544649 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071705523 seconds)
  done (took 3.263290366 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068951962 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067928359 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06579818 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06506592 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065919304 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.0634404 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063234185 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063326949 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066028507 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06351572 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066023299 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065891232 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066024616 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06598513 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065807434 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066101094 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066089164 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063489451 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06322427 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063533547 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066196091 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066125674 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065813798 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06344673 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06341678 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065939197 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063216979 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063253868 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0663337 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063599258 seconds)
  done (took 3.203377798 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077686905 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074546055 seconds)
  done (took 1.398375626 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065384045 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082362954 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063531532 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070574772 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069653999 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06684121 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073359615 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069603018 seconds)
  done (took 1.802409566 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085133457 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080765149 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070066823 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08293238 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078680789 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084515788 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135238711 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067085205 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073448366 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064186313 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079738803 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065964931 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072651001 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067337022 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072396873 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07361542 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063816905 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072051703 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068918292 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06480554 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067625159 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074941966 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069157044 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061418788 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067805361 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088617033 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077180588 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065710724 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069214658 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074002009 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072363509 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059748893 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06593088 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066855452 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064124518 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075911465 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080703801 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069103149 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074609997 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067186054 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075664483 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061076923 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070643025 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074753176 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076977612 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066359824 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066414064 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061036948 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064344302 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068683936 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061165843 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068242933 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060581947 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07302586 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070074149 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0765954 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064876476 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067882308 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068760987 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069226945 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072766509 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067835246 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068630155 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065199238 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075758657 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070744821 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07483911 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061003326 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060247594 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064767922 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076799279 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089154118 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072172719 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066925453 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067193387 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064037723 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069209756 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067335657 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07115502 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073276414 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066288677 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071384531 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073197433 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066484018 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06860457 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073439234 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064007722 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069071112 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063973648 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082231015 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065052199 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064005014 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064008992 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076637241 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.06945782 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066110136 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064065773 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072898284 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059950746 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066048337 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06680609 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066547788 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076592463 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070547633 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070263881 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073806974 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072357937 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065555432 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068570764 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061938057 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065778413 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064828422 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072373612 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059224484 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067951911 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066709697 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065500387 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073160844 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065404748 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067300938 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074904134 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073033882 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.190487721 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064388704 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071339979 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068740811 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072094072 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077699861 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067063557 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063718454 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063241365 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071595959 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068546868 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072316374 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073222965 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071420314 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062884274 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066175623 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073709863 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079001322 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069032299 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069824895 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074864521 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070579807 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.068407441 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076240132 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070920596 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068099705 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07356109 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070133745 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063640648 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072087506 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072092876 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068386776 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072515834 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071763601 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070807647 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069382966 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067276749 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076109267 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069971095 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068457662 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068768774 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067859938 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079950291 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070633083 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063871696 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065763981 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077341495 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066778529 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067884305 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067703172 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071134341 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069749593 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066124541 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068583307 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070786853 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07868062 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07159876 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069543205 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073561898 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080327873 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068541147 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070287381 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068658001 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069598261 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069644748 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076320897 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072154248 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07138793 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069182827 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062050111 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070706102 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073749038 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065348191 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063923436 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064552211 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070300767 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07216907 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070001371 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066328181 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064348991 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066734598 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069310215 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06906332 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065853023 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065248205 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071862583 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064367546 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072031625 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066633787 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076111644 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069467848 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061479766 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068712458 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064265256 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072275896 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061251609 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064219968 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065558026 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066449085 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065910465 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069050174 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060243835 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072970294 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073827671 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066570438 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065922794 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065770193 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07325934 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067931916 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070080506 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070075892 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071041218 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075616346 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064860663 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06869189 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07589994 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064880281 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059424977 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070391173 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06367457 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06337636 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06422818 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062763412 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067653911 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072210431 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071478829 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.186931579 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070126249 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065877628 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065677685 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062116347 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071756724 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069874253 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067078954 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073651094 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067878914 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066618803 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070457429 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066491755 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067757675 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067834988 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069428039 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067601169 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069162466 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066498307 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069575907 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065444627 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063686803 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06869723 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066812955 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067873047 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071867569 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06648751 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066927112 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068784254 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067282423 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066679924 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067074557 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066275636 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069543557 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067560844 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066800526 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069850618 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061820356 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07396012 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065731361 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073996118 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067442601 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063605514 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073261965 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068839698 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072592217 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066913224 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067243527 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068260985 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065698419 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069446249 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073651851 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064325795 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076940644 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0748308 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067490718 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070001114 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067166998 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068359659 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06554419 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066764352 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067363359 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067523461 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068713689 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073335253 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071747744 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06879683 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070218419 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069982097 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068491881 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069687856 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062625514 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067438247 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067713605 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068143326 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077978765 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068816691 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06751761 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067226611 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069302439 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067096061 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064517712 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076229597 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076552287 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069099077 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074843319 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067304345 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069725308 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078117015 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060503055 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064298238 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063935464 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064325851 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073943105 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066747437 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075410714 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066711591 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065682818 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063499285 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067003238 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065027081 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060995513 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064463017 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06986974 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065651121 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065897701 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066615212 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068872712 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067824518 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076099221 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066317412 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067692568 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066749364 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063514122 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065584104 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064981557 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068315128 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06590105 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063518368 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063046174 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064745154 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066424293 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066549603 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066974403 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066934172 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071841038 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067616439 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070450129 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070315365 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063388594 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.202932021 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068342987 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066640921 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066987883 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073503436 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073296526 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069851442 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078449875 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068629605 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069528291 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069834247 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066335163 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06938512 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06899073 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068647098 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069201062 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070716509 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076895269 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067115627 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072238001 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069300629 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069961449 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075920559 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070369281 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072745352 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07529331 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069257608 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07087503 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077330005 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073888555 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072124226 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070244466 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.07100352 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074583787 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068151667 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07544966 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069706257 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070206491 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070752902 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06719133 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067597829 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067577172 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066068981 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072737757 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068226853 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065811108 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065957029 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064644047 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068991803 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070884174 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073821384 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068688861 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069710466 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061407126 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063505831 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067278682 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065160589 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06842026 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069268162 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07275284 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06917843 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066758358 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067349675 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078232822 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074682036 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072157973 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066636353 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071953343 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06798416 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069258207 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067959083 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06699095 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067630932 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070440483 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06844216 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067074411 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07453048 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070990339 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069244428 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070078362 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069492838 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068779979 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062923694 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068353042 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070157531 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073403292 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.07033191 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068336141 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078812889 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066537655 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067202631 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068814691 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065384996 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070794015 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06131536 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06775576 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067309749 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067323879 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061490862 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06586194 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06440271 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068687914 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065456249 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061106761 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077383013 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075194044 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069219583 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065717721 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064840225 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06126509 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061203572 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065661946 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067180124 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06740452 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075836211 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064907034 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064830902 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06051871 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065454436 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068527973 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068543035 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062643147 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060777404 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064898775 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068130141 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070672616 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064154597 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066262736 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070425102 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069764633 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.196407797 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070363479 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064379462 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070524337 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079162971 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066922798 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067829387 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073543766 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074452156 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067614743 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06230326 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067085757 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070135152 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066913494 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067813316 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067540143 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082148286 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069783592 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066073994 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065858682 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070045514 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066778831 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075696042 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068272137 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067698691 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071630505 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068889473 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074862459 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069659713 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073714754 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07050503 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069331049 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065525515 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067107109 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065478587 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065909334 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067920935 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067473427 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071582075 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075534901 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066090123 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077931309 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075988715 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068626528 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063871626 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066794908 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067030731 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062390105 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067992585 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064023031 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065087177 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065421948 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06556296 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067507384 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072024383 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068050131 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067441839 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067307276 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061038191 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.0692268 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068478197 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068113031 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065003319 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069745868 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069533498 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073310532 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071484184 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065658683 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071021491 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070987249 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069774786 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063327752 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075335424 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06760648 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069955394 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067329031 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068767308 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068572174 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071718771 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071638867 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067736184 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070499488 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071730899 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070087582 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065766188 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063632729 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071308665 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063953738 seconds)
  done (took 42.944055893 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103346725 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062950204 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062203596 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0617494 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073272681 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062581314 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062077534 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063164567 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063108365 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065359763 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062269392 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061773216 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070589206 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07756614 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073461043 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066418679 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061787989 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062862292 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061831963 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062836295 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070571018 seconds)
  done (took 2.754976398 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076609832 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.080270614 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078424189 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084232314 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073187996 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070317802 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075130167 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072102054 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078725886 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072340936 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078626307 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070423185 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072913643 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072735522 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072320204 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070689307 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078079192 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071061433 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070442197 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07526218 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070269728 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075212686 seconds)
  done (took 2.953771073 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070638904 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067219501 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068654096 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061143576 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065933745 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061246995 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069379417 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06409532 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069386677 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065278405 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065859114 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065296362 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068002482 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061286 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066641393 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064111921 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107767298 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069117458 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065869026 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066812431 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061315087 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067941717 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062092736 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06168754 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065432003 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069242905 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066694392 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064427411 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066143567 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064998324 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06611245 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063920209 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067193055 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066603846 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065119544 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065651997 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065613682 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06602637 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061521411 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064237714 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066858695 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061620409 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066050654 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067174282 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064088513 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063752256 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06750134 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065764656 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060621946 seconds)
  done (took 4.566878754 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08179062 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110106669 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067237345 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091394696 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079991304 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072763592 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069519338 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089640086 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06312958 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06465413 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08109286 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078902761 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065691617 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070196713 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072831115 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065557722 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066569449 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064550379 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069278598 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064751821 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068823555 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072228459 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079666825 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077924968 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069460374 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06456791 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06470296 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070122012 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077199145 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069398928 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069800586 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070775228 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079750225 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070636854 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064898664 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067468858 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080794767 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065205184 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068028209 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062875392 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067575204 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069363435 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071766734 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080930779 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064963922 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070390531 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065089659 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06243916 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077040573 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067492682 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072320004 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078420155 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06865918 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065490063 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06938656 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079606768 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064872933 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063300602 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068490907 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076977586 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062994723 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069204768 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078416132 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067098821 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072153685 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078597128 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070403027 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068786327 seconds)
  done (took 6.3379701 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078249297 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.097311242 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085164531 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085082788 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075532653 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075920005 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075830499 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07550501 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075687917 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079942086 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075342058 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114778212 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070671119 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077782961 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07530074 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075149991 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075169959 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07570243 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075688992 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075416107 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075178972 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081911246 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075373298 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082988622 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079877375 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071022982 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075060942 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075509367 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082310564 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075155483 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087296672 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07530352 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075226223 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082526716 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079137499 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074908189 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064815659 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075153914 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075460013 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074895695 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070665176 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082560976 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07472412 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070475064 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075026707 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075212592 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081819206 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078765421 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077258645 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078850928 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075292963 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082227923 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075017654 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07512588 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.0824833 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084694487 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082533287 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082248281 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074876292 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082344554 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082258911 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085132368 seconds)
  done (took 6.206796896 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085831393 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07579225 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081830078 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061220123 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06420399 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071736099 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063925653 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066637762 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073546104 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074169126 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076036068 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071575795 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074239395 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076146212 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071607556 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07426283 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071697077 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071641919 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073182603 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071968876 seconds)
  done (took 2.793096926 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07734662 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084392338 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06661064 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07209098 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068620223 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071095829 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068721769 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069193888 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06669896 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069817214 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075791476 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075584471 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067107957 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071500872 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075251927 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071027965 seconds)
  done (took 2.48621865 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.086469758 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07517193 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082512911 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068131678 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068807968 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064655023 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068204869 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063203339 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063020011 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077834656 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065529706 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076272089 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065904647 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065139261 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062890604 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.072604307 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06425296 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065507914 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067255934 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079555038 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069300931 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064123104 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069119172 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066651282 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068607252 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070134471 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064609103 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065916617 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063122376 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065707037 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068590036 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069017174 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063075043 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063267763 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064179488 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062930066 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065374642 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066298601 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070853491 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065416652 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064012438 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067420931 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06579283 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066561507 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061930008 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066020618 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062023112 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06782929 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063840905 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068074335 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06607596 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068588756 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.0662823 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072224054 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068558336 seconds)
  done (took 5.060887406 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082393836 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07220881 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062356687 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064517952 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069172491 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066949763 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069782172 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066917707 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068114913 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06447409 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067365632 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068503671 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067234213 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069648939 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066920275 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069396576 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061538401 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066825244 seconds)
  done (took 2.572000261 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073782269 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068368987 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.075892041 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068683339 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067914768 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070256329 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0639394 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066746037 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066934207 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066681111 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06594436 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06840363 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064576579 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068143162 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065990358 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065571147 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06828683 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064559488 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065899899 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061675126 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068534861 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064439302 seconds)
  done (took 2.81952828 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098013493 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085195263 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.144845946 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081529746 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08729224 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074039914 seconds)
  done (took 1.910993483 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094005506 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103579493 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068868492 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071123827 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077854778 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071384321 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072125736 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072317239 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079089625 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07778871 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070272118 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078447446 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079627119 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07929548 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076772832 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075179751 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069728805 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069522194 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065844189 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082887634 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069499603 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077816331 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070023259 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069272278 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069984765 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076931437 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078062312 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076396447 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069436787 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078168184 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075325317 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069609253 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078385091 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075614463 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068692532 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077536021 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069605431 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082958141 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075676355 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076899235 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068499501 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075240803 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077868473 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074061112 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07790389 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069848316 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073896045 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06979912 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069505741 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08534359 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075882319 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076443641 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078168847 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078123392 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077915254 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085709916 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075878035 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077098784 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075385837 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075586407 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077196125 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075597085 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077217288 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076268141 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075615667 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077472799 seconds)
  done (took 6.343477638 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106429929 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069470361 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073151381 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079319475 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079621804 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071026408 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070221956 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070541912 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069838266 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067295316 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108239884 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070208003 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077469783 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07722361 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070136461 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070138857 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070603153 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077371221 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067066852 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086081989 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070283771 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077425264 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077233067 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077156573 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076132647 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075436186 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070289284 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07023612 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070318978 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069880573 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074662749 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070055252 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077228496 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066922034 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077029668 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070050381 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070007084 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074729157 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069474763 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075533975 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077170008 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082986523 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070195687 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069850134 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075852801 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069750016 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070133361 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066594728 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070059597 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066445042 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075554484 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075284391 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075607141 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077635738 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069964137 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069592254 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069851919 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069489586 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069971722 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074879845 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077034677 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069437237 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085580152 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069331798 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070240169 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07695328 seconds)
  done (took 6.245694583 seconds)
done (took 129.899527023 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.189850505 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164492148 seconds)
  done (took 1.688879196 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071599856 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101534022 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080744253 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131035841 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066537848 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100374436 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098971104 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078200773 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06634198 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066150368 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066455646 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068557044 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130967073 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066740979 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065927116 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068914206 seconds)
  done (took 2.678992512 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103292944 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169125627 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105442504 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067715694 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102718918 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073188814 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064635681 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075321973 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070827886 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065510833 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073171534 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070591419 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065378329 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070631517 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07125966 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07468528 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06745995 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074820724 seconds)
  done (took 2.822735041 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102510374 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095892737 seconds)
  done (took 1.554506176 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.1642106 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.107112925 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.147478404 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.351272646 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.16361873 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.149231114 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145600494 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.145444352 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.123704848 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.1399502 seconds)
  done (took 2.988938248 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102696324 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.157577187 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.269254765 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117648445 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072813611 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093065305 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118766011 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078066596 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080153307 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080089371 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080190003 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076188143 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09882159 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073146 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073612108 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076290066 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10290786 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072611013 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074396395 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075598852 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099850584 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065825249 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07289113 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072969233 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076655249 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07712782 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06586874 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065743389 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07586739 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074080746 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076212563 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09206348 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077465294 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105935463 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070718244 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105777311 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076541679 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073089099 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074000711 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072801066 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077473918 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077542034 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072363826 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075914821 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065070393 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076722138 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065886505 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065502334 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077235711 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066795872 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078293087 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076469806 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104837252 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066844194 seconds)
  done (took 5.971681268 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10698989 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105549252 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071764546 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.1128341 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102482469 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072136304 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102297254 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095460811 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104484199 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07070301 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068192515 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070468768 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081749472 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083205814 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115173101 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106507605 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074209427 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071807913 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10630907 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104785963 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068756113 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096883165 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090690595 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103126261 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067378698 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070111152 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068018803 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070164227 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07625729 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077788833 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069832891 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080266262 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084315129 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077776024 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067216522 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067996616 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067990599 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079284672 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079198264 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078776216 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07740495 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067952853 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068028439 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069225607 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070033536 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068084655 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078496835 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079866484 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078504808 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069077167 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070199846 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06800858 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069412928 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07989433 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077298774 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080241997 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079400152 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068122092 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068432843 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072077554 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079968254 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078799115 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079068232 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069437426 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.0785968 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.0683167 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079501843 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083517764 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068226492 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070484453 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068352178 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069276725 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069998166 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077516857 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077415628 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069859565 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069541628 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068648016 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079764095 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078262275 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068508587 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076606777 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067320873 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068210877 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069478844 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069479751 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077090443 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079613757 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06990347 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068087056 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068830277 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06859441 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066999881 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076553882 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079960554 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079179202 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078193972 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068942775 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076964653 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076388353 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069036042 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077463394 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067347966 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068903205 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068182621 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076649104 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075416933 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07677488 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.197119903 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069108101 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078195376 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080653346 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068429026 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078292155 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081004452 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080070396 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068810478 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082180642 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069870874 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08009439 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070150516 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080588825 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070017447 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07978699 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068248762 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068992031 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069780267 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079335594 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072555089 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068666544 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06983773 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071089434 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079641036 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082957525 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072012361 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077876512 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079113706 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070336388 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079334036 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069682725 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079050711 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069998097 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069864674 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067787111 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081818269 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069404357 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069277719 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069399943 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08108521 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069207882 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079482319 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078757136 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068572543 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08206216 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081354787 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077287296 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080672757 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070837842 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068556122 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06873824 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069345118 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.0772801 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079771112 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07033982 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069040458 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077951602 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079626947 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067460199 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07805946 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078951872 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078721657 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069268703 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070397321 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080150496 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080541874 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078119084 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078310219 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078507805 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068267275 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07758828 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077711158 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068555606 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083861647 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068620699 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082481565 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078958123 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076252651 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078251296 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079856584 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079498312 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079819314 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082519402 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0680536 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067722276 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078807324 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068176996 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069136676 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077378536 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069750763 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069704038 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082889024 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068519591 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079746657 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067912818 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079448334 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067076429 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069664128 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081916479 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067384999 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068425652 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078067971 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069005398 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076116015 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078537507 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076632948 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067104305 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068720132 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208193105 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079283075 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068601828 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069212111 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07110612 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078899577 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077094044 seconds)
  done (took 18.638023795 seconds)
done (took 37.704011905 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.212036473 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157935947 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182949308 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118191377 seconds)
  done (took 2.130598871 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121147999 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100526835 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092012841 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064756317 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098826348 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064969746 seconds)
  done (took 1.938371292 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315831472 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210640028 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.187691798 seconds)
  done (took 2.09573867 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.206300975 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190834845 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.416073262 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.260453865 seconds)
  done (took 2.574490006 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.149263809 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.091607267 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067565272 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083933073 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133184287 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159860263 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100054149 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125076666 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078565324 seconds)
  done (took 2.432056848 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149195827 seconds)
done (took 12.713533305 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.102349332 seconds)
    (2/309) benchmarking ("sort", BigInt, false)...
    done (took 0.193235096 seconds)
    (3/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112394414 seconds)
    (4/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078066192 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082514758 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.193941747 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.131301447 seconds)
    (8/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.223261916 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.123136602 seconds)
    (10/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.226228148 seconds)
    (11/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.192938637 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07847848 seconds)
    (13/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071566948 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07388774 seconds)
    (15/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079421067 seconds)
    (16/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.183179815 seconds)
    (17/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.200190162 seconds)
    (18/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087512264 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.100577373 seconds)
    (20/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.204653213 seconds)
    (21/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.182430013 seconds)
    (22/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.173041844 seconds)
    (23/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.099095762 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094673944 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103810859 seconds)
    (26/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101642472 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071835124 seconds)
    (28/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076043759 seconds)
    (29/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071748852 seconds)
    (30/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073507719 seconds)
    (31/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.178198382 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.075672531 seconds)
    (33/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07281827 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.118860628 seconds)
    (35/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176109867 seconds)
    (36/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.177560638 seconds)
    (37/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.165746 seconds)
    (38/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076105741 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.103068859 seconds)
    (40/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072475143 seconds)
    (41/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078549495 seconds)
    (42/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.165994133 seconds)
    (43/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076409778 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073347325 seconds)
    (45/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.070073427 seconds)
    (46/309) benchmarking ("sort", Float32, false)...
    done (took 0.131612722 seconds)
    (47/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141317653 seconds)
    (48/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075339566 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072699877 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091897815 seconds)
    (51/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.114938523 seconds)
    (52/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074240715 seconds)
    (53/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.183811992 seconds)
    (54/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.191257057 seconds)
    (55/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053538237 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072632914 seconds)
    (57/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.214533957 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088338254 seconds)
    (59/309) benchmarking ("sort", Int8, false)...
    done (took 0.141188898 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066880782 seconds)
    (61/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07327326 seconds)
    (62/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.101448335 seconds)
    (63/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068742147 seconds)
    (64/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05098886 seconds)
    (65/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.151195203 seconds)
    (66/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063674882 seconds)
    (67/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073278457 seconds)
    (68/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069646477 seconds)
    (69/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.161745185 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091987242 seconds)
    (71/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108084743 seconds)
    (72/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.100859534 seconds)
    (73/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066763238 seconds)
    (74/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069485607 seconds)
    (75/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078775193 seconds)
    (76/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.143079958 seconds)
    (77/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081643048 seconds)
    (78/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.161834789 seconds)
    (79/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.152356215 seconds)
    (80/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061155883 seconds)
    (81/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067456601 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.154404241 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.065368176 seconds)
    (84/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.148697563 seconds)
    (85/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.105040204 seconds)
    (86/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.327413185 seconds)
    (87/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071211351 seconds)
    (88/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061680174 seconds)
    (89/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075468697 seconds)
    (90/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073083894 seconds)
    (91/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061694197 seconds)
    (92/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052024053 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090939835 seconds)
    (94/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.064566459 seconds)
    (95/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068055902 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124734906 seconds)
    (97/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07564261 seconds)
    (98/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.086203262 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.148503932 seconds)
    (100/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065671011 seconds)
    (101/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.154170337 seconds)
    (102/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05084813 seconds)
    (103/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089877382 seconds)
    (104/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050621573 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.152396119 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052044117 seconds)
    (107/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076236192 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065664218 seconds)
    (109/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060787626 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.086120209 seconds)
    (111/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066968135 seconds)
    (112/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.112428173 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172000002 seconds)
    (114/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.156524996 seconds)
    (115/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069829962 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144676542 seconds)
    (117/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.155124418 seconds)
    (118/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.142952345 seconds)
    (119/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073961961 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095690269 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.180382512 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.07769298 seconds)
    (123/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072645418 seconds)
    (124/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090585877 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.13596567 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074119082 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065709993 seconds)
    (128/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073582833 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.0731634 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071561062 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.085227712 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090987246 seconds)
    (133/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.05040245 seconds)
    (134/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.162061914 seconds)
    (135/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.21506411 seconds)
    (136/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072004313 seconds)
    (137/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.099163688 seconds)
    (138/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066213265 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108608898 seconds)
    (140/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074741334 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06470159 seconds)
    (142/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072742406 seconds)
    (143/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065743448 seconds)
    (144/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.063408199 seconds)
    (145/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072646408 seconds)
    (146/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182908443 seconds)
    (147/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065060809 seconds)
    (148/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.152670208 seconds)
    (149/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063360381 seconds)
    (150/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.19369189 seconds)
    (151/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071416116 seconds)
    (152/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050981418 seconds)
    (153/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075516826 seconds)
    (154/309) benchmarking ("sort", Float64, false)...
    done (took 0.130269433 seconds)
    (155/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051807169 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073918207 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114700821 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.075556132 seconds)
    (159/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064114027 seconds)
    (160/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050529312 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089581578 seconds)
    (162/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050682138 seconds)
    (163/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.106597621 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.32545881 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091304333 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.125449507 seconds)
    (167/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.145071324 seconds)
    (168/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051516405 seconds)
    (169/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079911126 seconds)
    (170/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067256088 seconds)
    (171/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065475677 seconds)
    (172/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050568146 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090352609 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079447972 seconds)
    (175/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083817687 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08852681 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137180984 seconds)
    (178/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050982814 seconds)
    (179/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.154889754 seconds)
    (180/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078729093 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065726159 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072436907 seconds)
    (183/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069375963 seconds)
    (184/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061128708 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065123678 seconds)
    (186/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080660667 seconds)
    (187/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072539333 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06503006 seconds)
    (189/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070392189 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073219955 seconds)
    (191/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.19359413 seconds)
    (192/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06557412 seconds)
    (193/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062888702 seconds)
    (194/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.097039864 seconds)
    (195/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060847487 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145100661 seconds)
    (197/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068122753 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050378276 seconds)
    (199/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065191957 seconds)
    (200/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052332574 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.062916815 seconds)
    (202/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.21083297 seconds)
    (203/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052116466 seconds)
    (204/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120966821 seconds)
    (205/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051731625 seconds)
    (206/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077331531 seconds)
    (207/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089047788 seconds)
    (208/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06977088 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.09130392 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066635984 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065635618 seconds)
    (212/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053105513 seconds)
    (213/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051560786 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139408859 seconds)
    (215/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051273256 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131497539 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073948315 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073492386 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141354444 seconds)
    (220/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051852158 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.140970498 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.096370032 seconds)
    (223/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072772701 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071606834 seconds)
    (225/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063726552 seconds)
    (226/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.070613587 seconds)
    (227/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050572412 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.109797971 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063509134 seconds)
    (230/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06624136 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067448507 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09297744 seconds)
    (233/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.196380464 seconds)
    (234/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076678059 seconds)
    (235/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060749278 seconds)
    (236/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050849229 seconds)
    (237/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051061962 seconds)
    (238/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072577974 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139508154 seconds)
    (240/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078626742 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176096658 seconds)
    (242/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050805443 seconds)
    (243/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051775655 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065536017 seconds)
    (245/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051180545 seconds)
    (246/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050699207 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094578558 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.100295126 seconds)
    (249/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051576943 seconds)
    (250/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073652792 seconds)
    (251/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072511555 seconds)
    (252/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054124488 seconds)
    (253/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051580911 seconds)
    (254/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051989978 seconds)
    (255/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086196135 seconds)
    (256/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076437789 seconds)
    (257/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051454267 seconds)
    (258/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07256182 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111614196 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088703981 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065588647 seconds)
    (262/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182730593 seconds)
    (263/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068343992 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066730686 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06549621 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072196176 seconds)
    (267/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068113719 seconds)
    (268/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072660681 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.0734654 seconds)
    (270/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.192764102 seconds)
    (271/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051745431 seconds)
    (272/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066687459 seconds)
    (273/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072433461 seconds)
    (274/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052016349 seconds)
    (275/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064734738 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087910665 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090123882 seconds)
    (278/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109477292 seconds)
    (279/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060475827 seconds)
    (280/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051700033 seconds)
    (281/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050876415 seconds)
    (282/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050812671 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087135527 seconds)
    (284/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050502438 seconds)
    (285/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070836863 seconds)
    (286/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052168778 seconds)
    (287/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089089446 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073177872 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063537037 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08642987 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063859951 seconds)
    (292/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064693551 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064813988 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072509988 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050780738 seconds)
    (296/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070477199 seconds)
    (297/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072548721 seconds)
    (298/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066524148 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071148068 seconds)
    (300/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.17926645 seconds)
    (301/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065108413 seconds)
    (302/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065661565 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064982672 seconds)
    (304/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067608227 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070669819 seconds)
    (306/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066488652 seconds)
    (307/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065163032 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065108597 seconds)
    (309/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051368603 seconds)
  done (took 30.843986744 seconds)
done (took 32.244678139 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084940202 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091620508 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074168647 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091858098 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079750815 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075314572 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071745832 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077814114 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079201838 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081097236 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078160954 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053913965 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073433778 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073256569 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074403086 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090511946 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078486549 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073136071 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072914424 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064283134 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072958345 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065537042 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067571122 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054111351 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078325807 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070881927 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07215173 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073536155 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065003691 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065687942 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068642582 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073560022 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064792285 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077962487 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071905583 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072857576 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074609595 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075891399 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067348067 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065154122 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074035685 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065144019 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072728645 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073471354 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071710674 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07169662 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07278696 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077635349 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090855458 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068078643 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074495248 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07580093 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075370205 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072287398 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069150482 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072567816 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070488255 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090495704 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073064883 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067182448 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073824221 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073918 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070672393 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072777714 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072307853 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074546301 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075357974 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070901038 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074123778 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070896447 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064643591 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073107646 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068401427 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064777567 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075180776 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077091448 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063846746 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070615851 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072356921 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070606254 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063799701 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066676581 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066548227 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.0712197 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066800736 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053533069 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068598717 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071486775 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063887065 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072759864 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071562812 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072290765 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066292223 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075432247 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064046776 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070382736 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064892024 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06511422 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066790252 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068704122 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064799298 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066907453 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073945054 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070563583 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070689529 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078417601 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064387691 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071401583 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063879542 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063885138 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078980814 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07466985 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06463095 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066859341 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064301535 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072169223 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064106 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064509689 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064523985 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064981898 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070921203 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064655119 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066261638 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071814644 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077917215 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064532724 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067850372 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066269322 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063980682 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069984435 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064143773 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06457759 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065969728 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061004642 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065599469 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064415363 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071844933 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065951279 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.20597157 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067167747 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074210691 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071018958 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071623401 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071856211 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063957256 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058844368 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067514393 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067169366 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067373547 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065668802 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066520677 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065454598 seconds)
done (took 12.365750718 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068929418 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139535963 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096964579 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094961491 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085832631 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066249922 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075430959 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101237261 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067750323 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100970684 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087365281 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085294924 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113236208 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064253122 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065173692 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069212177 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066547405 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081413403 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100522839 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085963698 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114579099 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064847556 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092680755 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088962873 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087991472 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103456779 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068921928 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070175681 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069154008 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093013358 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087610786 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069251395 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066047068 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098071294 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093035734 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083433699 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06577901 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083081496 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066331588 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065117684 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067018819 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098273053 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080669926 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080748709 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072748822 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069036294 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066742041 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083888516 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089380418 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078631558 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086159519 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.100678702 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068231734 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064737741 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063808072 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085884029 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064951016 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068782008 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065646715 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067772048 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065505251 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069165127 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08044449 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080135311 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069559499 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079340529 seconds)
  done (took 6.76478868 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086495488 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091376648 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083258648 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082968804 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06587777 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065963247 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065641447 seconds)
  done (took 2.025134499 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068987295 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088383968 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089855649 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08923449 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.080859151 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087511948 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075256919 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066025386 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087219582 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067380556 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087258194 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100256678 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069424671 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073706339 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090527506 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065984338 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090571793 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065840728 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069540179 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089615588 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068380677 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095314373 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.06923816 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066392027 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08056708 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066127624 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113667602 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070825754 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068255658 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068583534 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063861903 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106129331 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079550511 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073906711 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066538739 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080699934 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080147504 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064665157 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081966612 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075052622 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079780526 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066258672 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067120857 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064635406 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070239104 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076305493 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066873616 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066663385 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068856178 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085421229 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066719774 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079614636 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069043472 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071893438 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068201714 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073125927 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076817397 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067453805 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085983527 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067876162 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083057705 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082511052 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080108878 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08447704 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068451567 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079757434 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080274174 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069014658 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068348409 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069836934 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082343834 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064262847 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067988235 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076874359 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067975944 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089506704 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.08949432 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06826512 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079908071 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067603709 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066802997 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066579948 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089326306 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.0716704 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065899176 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070572443 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069691591 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064464811 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065623471 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069839981 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064320564 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067600575 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069383678 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069303183 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068849222 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082628468 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068455603 seconds)
  done (took 8.765032444 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071012161 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067625435 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06908437 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067638697 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067230998 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067812731 seconds)
  done (took 1.916453918 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095300112 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068748053 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080035608 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071470162 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104433805 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087032028 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086513577 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078142925 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083237578 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078061978 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086551905 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087710226 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091902383 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07174449 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08589946 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071110535 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086996158 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074414185 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077758162 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072487618 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086204314 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071937668 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07211587 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080979532 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075795787 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071625865 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066692764 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078084779 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077647244 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077689929 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07152873 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075643599 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070287449 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077456499 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086163477 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070708376 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071357348 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076364099 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071782975 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075556381 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087540751 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071876112 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073691604 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076570857 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077533921 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070267037 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076663241 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074525919 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085856271 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076665339 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076576985 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071234119 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075954584 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077313383 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070547499 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077276394 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076427415 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086061712 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071677002 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070259385 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068124635 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075534452 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077256221 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074631913 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077754164 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076419518 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069858021 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071652934 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071425701 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070645363 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076117625 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067843146 seconds)
  done (took 7.030766892 seconds)
done (took 27.973425616 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.538221607 seconds)
  done (took 2.008553301 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.616927635 seconds)
  done (took 2.112829388 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.452081154 seconds)
  done (took 7.945261632 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.401060605 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.521575293 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.71693029 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130440816 seconds)
  done (took 3.302596588 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.711154491 seconds)
  done (took 2.21498686 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.214749154 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201432214 seconds)
  done (took 1.929375883 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376331473 seconds)
  done (took 1.870039713 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.130895339 seconds)
  done (took 2.627039331 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261599529 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174047744 seconds)
  done (took 1.935468891 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.471345407 seconds)
  done (took 1.973199192 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.865076379 seconds)
  done (took 6.366609529 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.210676101 seconds)
  done (took 1.756134095 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.24405505 seconds)
  done (took 1.744330929 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.716240513 seconds)
  done (took 3.21836674 seconds)
done (took 42.507522681 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083157832 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080976566 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081326608 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078916765 seconds)
  done (took 1.812192164 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.08019296 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073004238 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076907485 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072621776 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077404681 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073418923 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074759872 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075464253 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072747291 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073251794 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072720691 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072919826 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074824887 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074625224 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071485707 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075180738 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077328378 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072819819 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075741184 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072792174 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070900562 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074881003 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075051062 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071455698 seconds)
  done (took 3.286646058 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081479836 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073005601 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074419608 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071678098 seconds)
  done (took 1.81286367 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080595413 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095058627 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08903291 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078389607 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092430334 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086812711 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069117618 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068890164 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070466175 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077612485 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067691479 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09627222 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08865949 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077487788 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079974974 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066120388 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068271041 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087778099 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078463361 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078182809 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070120114 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077741428 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068139865 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.0886253 seconds)
  done (took 3.409052991 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089567409 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105526189 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08184194 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088689262 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091053324 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065204137 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087214689 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090571694 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127072926 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06509526 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070544864 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06541089 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073090939 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065387516 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081297474 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107522817 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111016337 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068358542 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096601302 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065384105 seconds)
  done (took 3.215956327 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075580005 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069729773 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066100287 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068812198 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078065492 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072186223 seconds)
  done (took 1.950809137 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070286631 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068169448 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067201444 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066282049 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072366185 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068069473 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066232143 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067836777 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067431017 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067394438 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066581912 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06610444 seconds)
  done (took 2.327544281 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.203459646 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067661532 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069364972 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06553111 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070439409 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06625164 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080951778 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067711409 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091514935 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066845689 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06681906 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068716558 seconds)
  done (took 2.501401654 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21064783 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075975057 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238044687 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150779395 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11065713 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115575252 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111821619 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114160471 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14170642 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100027608 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167930025 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166724294 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107498329 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136457778 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088864386 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100729482 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153406066 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162944595 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105027186 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166682202 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145838948 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126072286 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150352528 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101356025 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105439208 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12140715 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071236239 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079415849 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169355845 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132542823 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14336702 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110131581 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091942642 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176192639 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172124987 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141134883 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146202875 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084460698 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104700465 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133945197 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200241682 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088070855 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161024955 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108096788 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079711106 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130943226 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116042446 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.116916215 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.100826531 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087224772 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140458011 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179803729 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.135585706 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08490008 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120317715 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109786343 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110235233 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109980584 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170662558 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15253613 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120618424 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069134775 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103136571 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144577552 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126618532 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.102101718 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117655454 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087108745 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127058807 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14714746 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114269305 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13554074 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.111376921 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085220685 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113929587 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13286785 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119027754 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150317811 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116863563 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070243845 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117189515 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095271194 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077377778 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141268173 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072663322 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165905293 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094262124 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104091005 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118771164 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10490621 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104862813 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149336549 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136298929 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100306791 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.063654945 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.351298213 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.124664475 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14950681 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090254018 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112304722 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119319464 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07946925 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13948321 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077297381 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125100854 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078932737 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128916113 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131214147 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078320615 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123979107 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105506721 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.1023125 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133192921 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161854298 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089247702 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082978883 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171425377 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123386322 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103824087 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145497095 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157681056 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102449444 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101135715 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149261456 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179742081 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089842845 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164133385 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1078015 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083976206 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087682518 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123483674 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112021413 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123693109 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08179015 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117382487 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168059982 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074460156 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095677648 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133802656 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078966607 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080488751 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105206666 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105213333 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095725097 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099123066 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102109587 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134985509 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123109961 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105380522 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123851772 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098852775 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315861932 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087623342 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.1022501 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104476602 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070446159 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135541711 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157408308 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079026132 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163301334 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122973607 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115675419 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119202059 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083058378 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140079077 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079363426 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070069368 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14377142 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110560912 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109655868 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151241054 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116023066 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125167107 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118001212 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132077593 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13086982 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130808115 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105688959 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088740098 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112047901 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126935176 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073305669 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090019623 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079492487 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104350192 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095724875 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083059976 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141220208 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124751444 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109329087 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111708988 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096238198 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147718765 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076023454 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127428007 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119299049 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095537539 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153016668 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153427625 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130443526 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098387025 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136699151 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070066213 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074023818 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088046657 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123042398 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082682232 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082763521 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262644186 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148608705 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130185443 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136287341 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123606249 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120358404 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155565572 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070315884 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117858973 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146880397 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120611001 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104500898 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090125763 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099780619 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143308731 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107234662 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182068657 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116904084 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123746797 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153687086 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101290577 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079632752 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103540754 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135578762 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10400572 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144683082 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100021804 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088642802 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10999452 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074432995 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09869775 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126743068 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118295544 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135161395 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115858343 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132096996 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077341499 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115224365 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120985998 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121783899 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064059405 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120797286 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161967802 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095086528 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119398839 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152888947 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078620089 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134261375 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175678659 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144448631 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085215243 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253833443 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119620508 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12872074 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121412524 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141769915 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10717323 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137551496 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109575905 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086573465 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087915973 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098005508 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104187138 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095368071 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105639477 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114095261 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095258355 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131007878 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102864375 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109578007 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11766846 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098092978 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090891063 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096039101 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176444205 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11787993 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169953789 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099737117 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144435738 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163203688 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07510349 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078936178 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077746016 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140259649 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084035072 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130375328 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.10672236 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117103892 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123746997 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142928726 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095213191 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068575777 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108959539 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132523918 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124160697 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098256845 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103553243 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163649556 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101417115 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078995818 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114020835 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116568342 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102401038 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1703737 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061815866 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105728598 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075828751 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080130708 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127785136 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296240264 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080396298 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103464695 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119720562 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111883068 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128425965 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10116386 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108938339 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126623867 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148759566 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127865626 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089717499 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11172031 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128804342 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157375512 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104867247 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096397436 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172018369 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153128994 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161081073 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087821825 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114242664 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114456289 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108749747 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138835684 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083909347 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163172867 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085153304 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136085352 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103409737 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088665296 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128822515 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108255652 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087766082 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14769407 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117705506 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082645605 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077116823 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117029733 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118925814 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105764587 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075531999 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140006432 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074044482 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13188135 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160259531 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080773246 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106735386 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095728885 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078820808 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106044817 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101741638 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0869136 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.241415281 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175613944 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087820588 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151654965 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134660486 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113001494 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135666135 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102147551 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640042405 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077519022 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152384982 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115924595 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174216805 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10111202 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117816047 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110158291 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122227396 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144691613 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104215063 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181400998 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132055259 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116004202 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079854192 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102104538 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103748243 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087396946 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106991796 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114068222 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115072575 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092268337 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115204549 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124499532 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081710645 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09587977 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156331381 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116672994 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144023178 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140627673 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085654526 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118072391 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137665532 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080286639 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120288602 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152913335 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106050984 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098949217 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080036556 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099835813 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1579971 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072749629 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158609355 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119489303 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.254056562 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114669503 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112687608 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132593809 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107146314 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123235801 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092538652 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109656837 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113087847 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081933682 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077220267 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105184132 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110218456 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098474029 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097300231 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099189062 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151683582 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072230963 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101932997 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114810095 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143341599 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173871206 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088680162 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082476923 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118172369 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113646495 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112301639 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121316971 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078661097 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081699308 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080716517 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078366868 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109160883 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113371722 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114400992 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111606419 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16309405 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082972809 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.230108632 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095206711 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104991857 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07017671 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077848324 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096482189 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098223971 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107023697 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10989461 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158486125 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09529804 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090075399 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091444802 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074247523 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083693799 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129028931 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109665585 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118608172 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098569729 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062420858 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106845443 seconds)
  done (took 58.619809665 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.113056226 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083063446 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.094602061 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144819207 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123686768 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.202400097 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15392956 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188546566 seconds)
  done (took 2.771858928 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070949913 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094644512 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102845032 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083137487 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06671785 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068668541 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.231885433 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08105537 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066655578 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09893185 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079303849 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069633468 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.428340516 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067892713 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06759969 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062472841 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067351694 seconds)
  done (took 3.448652621 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.394111716 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.614335619 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.350590593 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072396233 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.433232285 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.085187285 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.119935 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128669821 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073039008 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.535254294 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.404144493 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124027971 seconds)
  done (took 17.98840835 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077873372 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072254361 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084388405 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08403604 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072552121 seconds)
  done (took 2.047425052 seconds)
done (took 106.749311992 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084100967 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.612497783 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053194583 seconds)
  done (took 2.349242542 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087528347 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088292576 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08900997 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083760641 seconds)
  done (took 2.008309678 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.0770746 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07824792 seconds)
  done (took 1.807085714 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.232716566 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.162913048 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095989752 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086264129 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079486251 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080602301 seconds)
  done (took 1.904068416 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075840302 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077410312 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073353632 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076026326 seconds)
  done (took 1.953382449 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080048971 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054287974 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057427318 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058179459 seconds)
  done (took 1.902593967 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089742521 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080301425 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079384064 seconds)
  done (took 1.902339233 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106413402 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086007428 seconds)
  done (took 1.843608838 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.0855054 seconds)
  done (took 1.743514248 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104351038 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104987679 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132360375 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110925332 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139672854 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108906726 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084627913 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085466572 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076431558 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086239011 seconds)
  done (took 2.687570926 seconds)
done (took 22.329872915 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081550304 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.364863396 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360304884 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089875177 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.681346784 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35633023 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.999040179 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092488845 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115021163 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067924672 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084391579 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647954845 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.991000286 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.319450743 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.97933158 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318748201 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648130881 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068117741 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067432225 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068002905 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.986166462 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067703869 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06773077 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068702335 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647602941 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372021197 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068036333 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318323076 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068315565 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06988607 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35535349 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068773574 seconds)
  done (took 16.197725808 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073752744 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119653025 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07310141 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084834074 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07023928 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069491045 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071363018 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069115961 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121560952 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068052891 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085001954 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067928743 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071751216 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.083918944 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087553624 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067892667 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068766349 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068292888 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068045525 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068419619 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086803914 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067756335 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068685062 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068817444 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068111051 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08058034 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06858315 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068301918 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068318849 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070025856 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070760157 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06875035 seconds)
  done (took 4.081533003 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118074979 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124206993 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074121072 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103171666 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111300911 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07035634 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14308651 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09317063 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126382031 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068278317 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084899337 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068093328 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102586643 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068820752 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088211258 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068117004 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069252687 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068521579 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068551279 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068320977 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087675281 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06783941 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068340765 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068584801 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.0682921 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081522091 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068773946 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068445209 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068424058 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069988976 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071475 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068937486 seconds)
  done (took 4.313299872 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074816938 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078494589 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084676875 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085226335 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069228702 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072253792 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073304246 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069804182 seconds)
  done (took 2.278006237 seconds)
done (took 28.531326954 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082180806 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071626928 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073201353 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082114648 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073933979 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078511602 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067645353 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075624043 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072298904 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073488631 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07508528 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067334037 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070887966 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067681618 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07419679 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067613408 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078911641 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071546665 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.07903548 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079937204 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069505051 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072971408 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07477655 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078637234 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079596301 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07884345 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077501853 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07254483 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069388416 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070489316 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077400166 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084047201 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068175619 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079237721 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067544791 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06772561 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072194451 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067640398 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079411848 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076443847 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069271905 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076529307 seconds)
  done (took 4.759834199 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092002334 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095065648 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085642336 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063231978 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066568537 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065511286 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089020797 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06015038 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059355818 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088642093 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055912667 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059272318 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065625822 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054038126 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060662502 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056836488 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061867249 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055963566 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060570837 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059699058 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089482957 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053296048 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077860915 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063771541 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056340934 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061648436 seconds)
  done (took 3.434995635 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077563037 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087537063 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090243629 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130854203 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106734977 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079571619 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079315179 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09547923 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088927264 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066704472 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070909343 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09311284 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089546663 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073645293 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067520775 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086733984 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08368895 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069392248 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073749762 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094969569 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087224205 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086492925 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09676663 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084348223 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067421192 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070357309 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071962256 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082250801 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07266129 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077594932 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071998149 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071708482 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070764773 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080080061 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071552696 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070328429 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092866058 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078215527 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079867893 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068878341 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076559975 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069961823 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093607465 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127442554 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067807795 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074497624 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07199757 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07819153 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068455454 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089173216 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080030418 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067833141 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070921439 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067703067 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067992706 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082124371 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070610239 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070514563 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077269385 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074230882 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093062238 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072943803 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083895914 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067810942 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076036163 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067437031 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069383986 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067738019 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096318272 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069715398 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111157983 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.06921718 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068803242 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077550581 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076358248 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074511478 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06913335 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08416261 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079033428 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072089104 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077867015 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07175792 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071086209 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.092928983 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070498157 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069962384 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069351149 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073883513 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070826149 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071004249 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08123584 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067395955 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070615266 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086007287 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067344147 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069133009 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073430562 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072351632 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067639198 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07931799 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072536459 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069122654 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077840116 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067674272 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07092696 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080611669 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074087647 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066894289 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072019193 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073960596 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06887636 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069288491 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071196026 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070127702 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07684549 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.08601658 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072546075 seconds)
  done (took 10.745474912 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.168655187 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157999982 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070506813 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14891565 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07696139 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079612552 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151804666 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09569742 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068469429 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06862167 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069090935 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111286662 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106447711 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116129814 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078748389 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067767886 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085810732 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115430091 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153117645 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14700184 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085441231 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077707726 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070247234 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06978457 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070903533 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078660946 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086658954 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077184302 seconds)
  done (took 4.465989223 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083540521 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.108017553 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075858474 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091868051 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091638057 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067845084 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070668408 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069980119 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081628674 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078445754 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067835251 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074108635 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074707497 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071106175 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069470324 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074850824 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075466537 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069218951 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071478393 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073137856 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079476802 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091863144 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074409158 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067346265 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073369938 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067168552 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063815051 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084354414 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068468809 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095349262 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065820631 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072691271 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082716584 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06915406 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068175097 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067625497 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067820324 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06755172 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069636322 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06630282 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066147708 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057330099 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067476133 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079051459 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074979126 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056384039 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072648028 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073450411 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073694868 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065213904 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071070268 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.0706437 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070584726 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07563414 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07164546 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073251234 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069211944 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.075123938 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07747731 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068028743 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065142945 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066479812 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072576598 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065667104 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076846471 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072771446 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06685093 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067868129 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069730519 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074902748 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068179184 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072134102 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065395247 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06972191 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072538523 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069858438 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069090439 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066312975 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06790656 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068158874 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055489767 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068423765 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053394334 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070822167 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066098437 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066117581 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067805366 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072356617 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079714122 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068899193 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074396621 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06908924 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066816601 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071223931 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060577112 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070874276 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084394644 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082665795 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06769414 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065684796 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081654654 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072430718 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06784433 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056091314 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073593774 seconds)
  done (took 9.242817027 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094351734 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070495994 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084622193 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091751519 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08799654 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07523512 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077711195 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06944593 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083253551 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074032989 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076988259 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068245726 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078054975 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077595723 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070338997 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078240969 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072531051 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084917809 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082949237 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068476116 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.0768297 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080603712 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090157583 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08242163 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08085232 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082448078 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090893675 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078134993 seconds)
  done (took 3.945186264 seconds)
done (took 38.259410781 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.753946213 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.935807066 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.748523736 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.121678853 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.923683395 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.773117347 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.943089142 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.752014046 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.015681347 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.786254741 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.954245023 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.880079913 seconds)
done (took 65.2738421 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.828005595 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.889452947 seconds)
    (2/2) benchmarking "String"...
    done (took 1.994785859 seconds)
  done (took 5.57163781 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.974255379 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.311904783 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.996444497 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.750302314 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.756288378 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.084090265 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.547862329 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.268518265 seconds)
  done (took 30.401638905 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.83240451 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.983748607 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.415984716 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.448103035 seconds)
  done (took 15.415796055 seconds)
done (took 62.958815649 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.773380562 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.77638625 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.765602459 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.733173108 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.805602095 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.758648049 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.311703912 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.820057716 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.748091069 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.743237382 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.749915992 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.177343773 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.761699107 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.360776901 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.746652721 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.766339747 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.762304522 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.406501611 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.908150058 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.758800638 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.759731663 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.818677996 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.749270923 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.762487595 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.774467949 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.751153426 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.160511474 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.75085288 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.57509444 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.749928576 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.811645239 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.757957619 seconds)
  done (took 203.742652158 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.752603821 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.699276862 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.807877605 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.800728564 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.150871206 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.936360901 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.881039786 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.224080769 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.7555895 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.762165944 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.981862984 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.752034214 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.012526889 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.751821869 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.781506525 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.861856898 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.940238427 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.007114367 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.784909977 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.885117523 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.764946035 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.788556196 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.730333241 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.963389145 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.766867162 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.833104312 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.774476322 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.765995577 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.948116576 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.904171895 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.791789186 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.76732258 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.942662812 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.623173424 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.77408347 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.76497739 seconds)
  done (took 169.124247987 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.128037954 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.754288063 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.756271903 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.753268457 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.75919876 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.755967217 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.877225161 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.878248027 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.34774227 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.553325936 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.805930806 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.577054543 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.750522698 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.822572495 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.766448345 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.754425338 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.772877005 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.780212557 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.754028756 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.756862017 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.882582197 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.766608428 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.757670662 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.763268573 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.753425656 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.762261364 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.126278516 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.754971383 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.146093277 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.753313036 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.762672553 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.002047944 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.75805799 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.754070234 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.64438211 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.060361661 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.844916654 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.756301475 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.761320255 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.756261419 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.979046264 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.753790591 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.757879919 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.76021669 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.757259024 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.926079642 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.75572444 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.880342916 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.755984285 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.260020841 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.759191985 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.756780326 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.643029134 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.429822256 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.75187485 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.75318744 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.756866998 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.754603207 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.754660141 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.759994981 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.764902462 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.82745357 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.757415078 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.758003782 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.761444064 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.757977014 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.916741 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.756051868 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.58876782 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.81211736 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.985288375 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.876383393 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.75233875 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.823646773 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.84855721 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.754233805 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.75511733 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.755734746 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.755494398 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.837849092 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.753561128 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.878529489 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.761477675 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.757687516 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.808656858 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.827497538 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.755030467 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.6482453 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.752807486 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.757809485 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.062426759 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.819840159 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.75535396 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.75830933 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.755407777 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.880941028 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.874517686 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.559043906 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.753126535 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.755389935 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.743106388 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.757790386 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.893767859 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.754556512 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.926781403 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.7551228 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.839122704 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.757801079 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.761407868 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.759454834 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.789196732 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.75702543 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.817353473 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.753030691 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.131253645 seconds)
  done (took 401.670089308 seconds)
done (took 778.410795267 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.455658763 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.405989507 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.512753749 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.426208406 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.396294696 seconds)
  done (took 13.888090947 seconds)
done (took 15.581758309 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.847039261 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.852991333 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.778351215 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.849937909 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.773959172 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.852829841 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.830494363 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.782937707 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.816123424 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.78140031 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.815816811 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.786587495 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.769908099 seconds)
  done (took 25.231553645 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.989778668 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.990906147 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.827882783 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.989483932 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.806422787 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.985429897 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.914014307 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.910791649 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.910930121 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.773763083 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.77345856 seconds)
  done (took 22.570159702 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.992164449 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.000803616 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.836279317 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.021515682 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.807297254 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.989345705 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.917839231 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.910061435 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.915664431 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.774759129 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.773563639 seconds)
  done (took 22.632684744 seconds)
done (took 72.127589582 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.769494734 seconds)
  done (took 3.463198333 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.796113367 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.949087628 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.773206321 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.771337112 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.768323182 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.77015388 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.773000727 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.769803478 seconds)
  done (took 16.068106743 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.765189536 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.762920531 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.764552823 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.767373714 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.767745732 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.769204926 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.766659156 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.770838223 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.766378903 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.768363564 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.769392542 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.763870496 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.765921354 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.76870551 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.76979876 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.76983567 seconds)
  done (took 29.973453715 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.768537918 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.765631666 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.765668745 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.76779688 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.768127741 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.766162717 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.765797772 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.76714094 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.765265806 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.76639277 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.767431296 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.766844593 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.768599431 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.765808927 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.768195169 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.768677927 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.769488301 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.767017142 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.773497208 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.768816789 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.769592976 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.768921625 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.768767635 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.767100434 seconds)
  done (took 44.125288612 seconds)
done (took 95.324853763 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.635676547 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.144016081 seconds)
  done (took 8.474976261 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.771910963 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.768380475 seconds)
  done (took 5.268497018 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.772049459 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.770137943 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.770528335 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.770697931 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.769100371 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.771381997 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.770087273 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.769664736 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.771613613 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.772551635 seconds)
  done (took 19.405371284 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.770538701 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.771332116 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.766810039 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.771376527 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.771488857 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.771699924 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.771874872 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.770099145 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.773097945 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.767846629 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.77061691 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.767011495 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.772128146 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.76707515 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.771619796 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.766866367 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.767833197 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.766976369 seconds)
  done (took 33.556786519 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.771603891 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.769578425 seconds)
  done (took 5.238782796 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.766961479 seconds)
    (2/7) benchmarking "second"...
    done (took 1.770109374 seconds)
    (3/7) benchmarking "month"...
    done (took 1.767243138 seconds)
    (4/7) benchmarking "year"...
    done (took 1.767740087 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.768607957 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.769528999 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.768048668 seconds)
  done (took 14.075896733 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.771537061 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.932491626 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.002883701 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.401600802 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.773508114 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.773997625 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.693379575 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.776942523 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.775638553 seconds)
  done (took 19.601091926 seconds)
done (took 107.320066244 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.577503236 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.767421572 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.155647602 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.816381085 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.777974617 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.106449372 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.774469388 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.07015812 seconds)
done (took 42.744760745 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.764098848 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.317101333 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.607229397 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.307461186 seconds)
  done (took 12.930439872 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.752737913 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.303923501 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.807665275 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.423178211 seconds)
  done (took 20.013725371 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.145562637 seconds)
    (2/2) benchmarking "read"...
    done (took 2.119898845 seconds)
  done (took 5.970781626 seconds)
done (took 47.378691615 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.773304494 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.775777045 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.769995134 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.773355283 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.778845399 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.771366376 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.770993773 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.7716841 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.773464654 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.774937078 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.778971192 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.774080079 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773679828 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.770007829 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771573721 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776183781 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.770572327 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768970614 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.77382526 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.771351538 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.771112015 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.779485121 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.770914883 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.770478311 seconds)
  done (took 44.257667601 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.773735596 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.771619004 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.778152741 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.774190665 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.772177268 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.772936454 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.774524548 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.772197989 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.775447931 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.774190686 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.773151053 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.771604047 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.774610893 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.774120988 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774846335 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.771910769 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.774733305 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77392666 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77570192 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.776932404 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.777593756 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774418089 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.774052125 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.777115467 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.775577742 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.774982921 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.773774736 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.772199382 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.775717118 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.772132295 seconds)
  done (took 54.931505552 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.780471389 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.784261141 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.776069921 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.77806024 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.779644586 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.777753852 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.77979247 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.777349322 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.778416687 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.777180761 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.778329629 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.777781796 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.776003641 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.776421426 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.779135962 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.776226497 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.781509604 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.776790239 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.776654689 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.777627523 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.780011068 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.779244246 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.777788939 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.777013356 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.775946752 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.777733615 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.775885003 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.778817397 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.776232019 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.776663384 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.776439425 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.775148122 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.776631543 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.779188592 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.776948565 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.775907082 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.78063047 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.784411506 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.778488747 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.778193571 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.776399506 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.777407895 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.77580412 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.776918634 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.77760169 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.776177156 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.777529815 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.776609325 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.777140053 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.779417751 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.778182674 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.777224122 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.776819414 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.777957348 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.778750521 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.779333221 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.777951035 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.777487749 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.776335035 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.778478876 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.778834945 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.779318028 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.777558481 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.776325666 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.779530832 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.778414817 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.77675097 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.778097933 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.776205515 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.779276533 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.777621263 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.778912112 seconds)
  done (took 129.714869489 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.775534369 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.775169485 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.774853128 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.775216959 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.775242225 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.780866586 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.775877686 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778049421 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774095803 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.777457427 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780115377 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.776060948 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775617971 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.777546642 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.778271692 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.774639996 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.783323546 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.77591715 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.777581298 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.7793089 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.777214244 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.77628904 seconds)
  done (took 40.801120197 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.778014819 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.777910488 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.775048206 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.779234266 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.778840861 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.780098749 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.779086385 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.777849903 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779695671 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.776805662 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778586809 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.778284129 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.778317552 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.777248463 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.777860417 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.779084205 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.779809892 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.777205653 seconds)
  done (took 33.716653394 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.776400331 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.776494812 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.7805632 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.7774577 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.777689542 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.779648598 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.776699846 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.779970975 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.78177138 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.77758443 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.780275118 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779496604 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.779880304 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77722785 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77942696 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.776585628 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.780032915 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.777337473 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.780367125 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.780318319 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.777911862 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.779566615 seconds)
  done (took 40.839444962 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.780494561 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.78110129 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.779322287 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.778480746 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.778300072 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.781478817 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.781184169 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.778869544 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.781202002 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.781103782 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.779615404 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.780530647 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.778339618 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.780120633 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.77898706 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.778228947 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.78013215 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.778935502 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.781853142 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.779297069 seconds)
  done (took 37.305526548 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.783608704 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.783050028 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.783713159 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.786142065 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.783458228 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.783684715 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.783702313 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.782457944 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.783030061 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.786785546 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.784594332 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.783938517 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.782798405 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.78226393 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.784883987 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.783414211 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.784531613 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.782773181 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.783145142 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.784183027 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.78718587 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.783462313 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.782889998 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.782977612 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.784016075 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.783156345 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.7851317 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.782897514 seconds)
  done (took 51.657469782 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.781994407 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.78236022 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.781428765 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.781494317 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.780186065 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.780989267 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.782060083 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.780162388 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.783180695 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.781438528 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.782564532 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.783973018 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.783444482 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.784486598 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.785356104 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.783415369 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782992729 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.78178307 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.780692808 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783490683 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.784934942 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784301041 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.783091376 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.780313172 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780178461 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.786592851 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.780487119 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.782258754 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.785317968 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.781477294 seconds)
  done (took 55.187099729 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.802851384 seconds)
    (2/2) benchmarking "in"...
    done (took 1.803784712 seconds)
  done (took 5.318809668 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.781797411 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.7854243 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.786096742 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.783328376 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.781915293 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.785597999 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.784622698 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783258504 seconds)
  done (took 15.985767229 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.784384037 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.786148194 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.786127365 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.785297164 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.787043031 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.785869379 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790195896 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.786232275 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.785585051 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.787074436 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.794252095 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.793888358 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.787559892 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.786428821 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.78693291 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.787916849 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.787651732 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.786790806 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.786025498 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.784131343 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.786684586 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.790447345 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.787810405 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.783655373 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.788345132 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.799058528 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.789316037 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.786838702 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.787204793 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.789651613 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.787080037 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.783862087 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.7890038 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.789148592 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.787220333 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.787061135 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.794614935 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.788193208 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.796695333 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.788429351 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.788917079 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.784265806 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.789438859 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.788927353 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.788518964 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.789997319 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.787509357 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.783399805 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.788851974 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.795044029 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.792311921 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.786376268 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.783964019 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.790544399 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.790649477 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.794763105 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.789288467 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.790928009 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.797426229 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.797794789 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.803782832 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.797248902 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.789565325 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.787833609 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.79814453 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.811780284 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.795523385 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.784597682 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.785344311 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.78766898 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.796108484 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.804158019 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.797562045 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.788842693 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.78954598 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.78946126 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.78929917 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.790163299 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.795347843 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.792577169 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.78956032 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.789471782 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.802253127 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.812396676 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.788396265 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.791612354 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.78914713 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.790022674 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.792161901 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.800242955 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.790015239 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.790487408 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.788975052 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.791520878 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.791762801 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.791381914 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.790860465 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.790676716 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.787373206 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.791876119 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.790992646 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.79389346 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.801199069 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.791516299 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.791431712 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.797967532 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.79037118 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.790129279 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.798282871 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.791404798 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.792057788 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.79407899 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.795987106 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.789374542 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.79395481 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.800291908 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.793641763 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.790957605 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.792346589 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.791790936 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.800716496 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.820054344 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.791317425 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.792868444 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.798659453 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.804363478 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.792870899 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.798643233 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.791435852 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.788577104 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.78872363 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.794054826 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.791637009 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.79247193 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.793449791 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.792642715 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.787951686 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.791177022 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.793140592 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.792463124 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.793075185 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.793149333 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.792678651 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.794437297 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.795501533 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.793965215 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.798479767 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.791398171 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.793389249 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.794345333 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.790397205 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.791658931 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.794767883 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.794912128 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.793845916 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.793592647 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.793932481 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.793874532 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.792964006 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.794212875 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.796726451 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.794352746 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.79787851 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.79413578 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.797227894 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.792245914 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.791575769 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.793947227 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.793708168 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.793031817 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.794709148 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.791979517 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.797048975 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.802993691 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.793862141 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.79365611 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.796532215 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.796218404 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.795134115 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.794097435 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.796448305 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.803374074 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.795877965 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.803013137 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.796620809 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.793909615 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.794715491 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.794758636 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.795140815 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.795004552 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.798120891 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.803709532 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.808047546 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.803042228 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.796784172 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.798932623 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.795314127 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.799142964 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.800303864 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.798878017 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.796042816 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.797005575 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.795198461 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.796427304 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.796922593 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.79856068 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.796301871 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.796816197 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.79606673 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.797083097 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.795191038 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.798596526 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.796519961 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.792687114 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.795992137 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.797944614 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.796285653 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.793356392 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.795152508 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.794077976 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.797581747 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.797621004 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.807941471 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.793299653 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.798105932 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.798621483 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.798181073 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.799716098 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.797920443 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.799583285 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.798194504 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.802536486 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.797449621 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.800074975 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.803375084 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.796463134 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.797288594 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.800194947 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.798240164 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.79381297 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.800899226 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.807122944 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.797590593 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.79909289 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.800847968 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.797637281 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.79929389 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.804609765 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.795938324 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.800268375 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.797594924 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.799709692 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.794522424 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.799905207 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.799064594 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.801891034 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.801305114 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.798782177 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.797676155 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.799417228 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.798968924 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.802757874 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.803303836 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.803049888 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.808594713 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.805362675 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.800800146 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.802254234 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.799750668 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.802416852 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.798120683 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.800340669 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.802081712 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.812814121 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.808426022 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.805765481 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.801405803 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.803258357 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.806139003 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.800762842 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.804170602 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.800100918 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.801868451 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.803056276 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.798860189 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.796926422 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.800462291 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.800095332 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.801339087 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.800936726 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.804272209 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.799915906 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.799255221 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.800880692 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.801722186 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.800546482 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.800909621 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.799840925 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.802868622 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.801969084 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.799677858 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.801350839 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.806847269 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.802250941 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.801923379 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.800246414 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.800609267 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.799336545 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.803254216 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.801156897 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.803707545 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.810567506 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.805158611 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.809968392 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.801541619 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.810973871 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.802849812 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.805187348 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.810783431 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.797548277 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.80244458 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.801566004 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.802578931 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.808494114 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.802332308 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.801747982 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.806684503 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.803176171 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.801981148 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.801898728 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.803416181 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.802216733 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.802859683 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.810051976 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.804130381 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.80726929 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.806599349 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.799449964 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.808436084 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.80014781 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.800948297 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.804892403 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.801505758 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.801754588 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.803210541 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.801919038 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.804550069 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.80272762 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.80286846 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.799653408 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.803023491 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.808143083 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.805045439 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.807359489 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.803601524 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.812866506 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.803335433 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.810551844 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.80359533 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.80325064 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.805708107 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.803456799 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.806846589 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.804278688 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.803735254 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.805357089 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.806747171 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.808990132 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.804712107 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.804541477 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.80494839 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.803820764 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.804314847 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.814257645 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.829130661 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.8055658 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.80807791 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.802398058 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.806726792 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.809668587 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.807793025 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.803726394 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.806717356 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.819365729 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.815308741 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.807355459 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.8093375 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.808213298 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.810009139 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.805603807 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.808060687 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.808735412 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.807359218 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.810145286 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.809715343 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.812068573 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.808532431 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.808845865 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.809196926 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.810890313 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.820210821 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.808520093 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.8091968 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.807987556 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.808585448 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.808470674 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.80878343 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.808995307 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.809911669 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.807832894 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.813938562 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.816178839 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.814001242 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.811988365 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.808592705 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.808493682 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.812003691 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.808686265 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.809029345 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.811615964 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.811203866 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.815284342 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.810616708 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.81076428 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.809868391 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.808785258 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.808510931 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.811161265 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.810708614 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.815980809 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.809374253 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.80769736 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.809792782 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.811006876 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.810254553 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.812089243 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.819478072 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.813516061 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.822939181 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.821875961 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.814573343 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.809684622 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.812247243 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.819359075 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.810222375 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.812242712 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.811151113 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.812505114 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.814015681 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.814243967 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.812033376 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.816167459 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.812397353 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.809873746 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.81655476 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.81260336 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.811687972 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.812002398 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.815687794 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.809900507 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.809361604 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.812194946 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.809245401 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.818944439 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.813337929 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.813083096 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.813727294 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.811784274 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.811324075 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.818521117 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.810701624 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.813576451 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.810902635 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.813002291 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.814073236 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.812182515 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.808806791 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.812905026 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.812722065 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.815967519 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.82021013 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.8085331 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.816618029 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.815472419 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.816154199 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.81514844 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.815017598 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.813690923 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.811503945 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.815362512 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.814341334 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.813546634 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.815088269 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.810921513 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.815211391 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.813443131 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.814288972 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.816874437 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.823244301 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.822252845 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.810960852 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.815449783 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.812078702 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.816793817 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.814251341 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.813814287 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.811574141 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.815569394 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.814136218 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.813856029 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.813516108 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.817584695 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.828485929 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.812740476 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.813804618 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.815154296 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.816842024 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.813739037 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.810083825 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.81289005 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.816467017 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.81762252 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.822096022 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.816988065 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.819944671 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.812918047 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.815068765 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.818550387 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.818650954 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.822629422 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.816698717 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.819167051 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.81457093 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.817206079 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.830795459 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.813114413 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.821894313 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.845528741 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.815196469 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.813300714 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.813367506 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.814505362 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.814495422 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.813515002 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.81262325 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.812115625 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.813203485 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.814239276 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.814756351 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.819863134 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.815382755 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.813794553 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.812593318 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.813688913 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.813831831 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.810925521 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.815376544 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.812282844 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.813268632 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.814487823 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.814690089 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.813720631 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.824562552 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.82370289 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.812602757 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.814443178 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.809489818 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.817288565 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.815945637 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.825064188 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.822146261 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.814664495 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.813446195 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.817243943 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.814268395 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.811784307 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.813797129 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.814294538 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.814313225 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.810270067 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.828757501 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.823383085 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.820388049 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.814315374 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.814054082 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.814461251 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.817945721 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.81716473 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.814662712 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.816838195 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.815935542 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.819869013 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.817124318 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.815606795 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.818187522 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.823929534 seconds)
  done (took 1076.503223286 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.81111633 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.812420538 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.812382131 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.81167909 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.811558644 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.811843017 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813071604 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.812120608 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.811167898 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.811727295 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.811635048 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81117801 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.812248775 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.812158929 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.812193438 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.81389464 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.812413935 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.810944033 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.81297299 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813039456 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.811177801 seconds)
  done (took 39.794364866 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.816939854 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.811166951 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.813156513 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.815295502 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.813684677 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.812728483 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.813393247 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.814750159 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.815789718 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.81317352 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.816125897 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.814973018 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.812731319 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.815159795 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81175463 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.815993402 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.815750717 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.813250425 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.816813226 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.814155942 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.817276574 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.814388249 seconds)
  done (took 41.66225445 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.81722361 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.818271692 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.815146952 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.813918752 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.817075466 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.812908263 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.816083702 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.815593233 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.817528083 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.816206783 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.816819777 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.817181376 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.822230195 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.821393029 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.81970192 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.817390169 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.962204992 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.817712898 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.819935333 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.819197916 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.814598058 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.823355703 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.815956595 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.816020555 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.816921313 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.820806852 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.818455533 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.818333843 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.820306589 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.820143566 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.822468204 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.818229775 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.820058515 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.822837198 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.817051191 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.81973148 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.822498033 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.818956742 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.821825886 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.81908591 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.828304956 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.839117668 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.819524149 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.824464779 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.821028327 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.820107268 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.822276835 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.828075414 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.816784026 seconds)
  done (took 91.043367741 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.81917858 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.819220828 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.815869465 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.81857913 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.819188981 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.823623066 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.819032631 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.818437103 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.814341675 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.815866114 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.819944925 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.814724879 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.816829485 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.818838969 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.818990277 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.816215214 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.81617365 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.817744783 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.814511397 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.816206126 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.817206459 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.819041398 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.820529813 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.816353037 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.817637377 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.817442393 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.816150372 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.815695931 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.816638466 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.815837617 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.818799821 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.820273635 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.817769708 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.816427743 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.816309396 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.820385289 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.819030819 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.815597363 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.818980186 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.815580885 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.820710973 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.820651002 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.82049267 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.81808241 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.816152123 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.816997533 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.81771574 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.817197349 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.816600139 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.822196201 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.822446888 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.819420632 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.819855508 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.81829849 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.821026708 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.821614498 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.819329714 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.818081443 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.820945223 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.818642422 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.818746675 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.820387348 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.817707311 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.820198954 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.821902613 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.819585172 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.817809826 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.820669396 seconds)
  done (took 125.401127394 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.823004647 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.824037104 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.821816467 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.822523251 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.822405013 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.821990949 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.823606487 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.823499488 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.822619495 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.823308589 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.823359865 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.821521761 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.821426273 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.822450946 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.822915228 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.823289291 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.82525028 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.82427401 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.828455681 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.821843435 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.823727648 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.822830899 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.825192539 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.8242692 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.825529343 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.822659761 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.82418323 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.823323954 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.822564932 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.825135215 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.82728246 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.825157304 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.825509116 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.826209625 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.824147115 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.82630749 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.822842546 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.826060082 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.825319429 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.824812206 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.826401238 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.825158048 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.825609935 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.8227495 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.827843042 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.826038833 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.825366317 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.826897718 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.824660599 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.823762766 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.825662594 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.825918428 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.825712407 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.827924977 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.827169997 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.82407417 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.825777288 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.826895209 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.825728106 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.826698247 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.824868817 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.825528815 seconds)
  done (took 114.873393032 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.827074134 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.824965168 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.821745779 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.821997145 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.826307236 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.823234255 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.826912847 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.826757497 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.826051649 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.824845526 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828197332 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.824119608 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823922253 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826140441 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.82315402 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.827433344 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.823951627 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.823959694 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.826841924 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.825240199 seconds)
  done (took 38.255435075 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.829128444 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.828189985 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.824214428 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.824160965 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.827656074 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.823901592 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.827485178 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.826657049 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.824325976 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.827836407 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.827008685 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.827199025 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824984483 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.825634127 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.828026165 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.824928987 seconds)
  done (took 30.974904822 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.826766881 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.827281876 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.829582766 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.829492169 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.824627079 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.827734191 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.828102822 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.826090316 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.82612503 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.829179606 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.83123763 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.827736156 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.828474557 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.830153639 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.82608586 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.829201029 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.82678177 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.825954245 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.830766 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.83137094 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.827395345 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.829314272 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.830530075 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.832548347 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.828876477 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.829555194 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.828606778 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.83023839 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.830464175 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.833638642 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.830947757 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.829620508 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.834245294 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.830365343 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.834563303 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.829438499 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.832433642 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.833529075 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.836797801 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.832163938 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.832111201 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.830471495 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.832772815 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.838065877 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.831396212 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.833285445 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.831202335 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.832474893 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.830590367 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.831927655 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.832814043 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.834158181 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.832690949 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.835327835 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.831899142 seconds)
  done (took 102.436250727 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.831784244 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.83067124 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.830527757 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.831469676 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.833743729 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.829911777 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.832906896 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.830641311 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.831365524 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.834258627 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.831681397 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.831669927 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.828328979 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.834074344 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.832376907 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.834532373 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.830702245 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.829773943 seconds)
  done (took 34.728546527 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.831646615 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.831516596 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.835901684 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.831675312 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.831941369 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.833639104 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.832842685 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.832784044 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834238486 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.829803645 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831552382 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.835783625 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836814714 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.834784342 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.830576173 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831011967 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.833345212 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.833258672 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.83141145 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.83033585 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.83329416 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.833761196 seconds)
  done (took 42.082519893 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.834857547 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.833864634 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.851645207 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.855451397 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.856546682 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.870560995 seconds)
  done (took 12.862532031 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831335791 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83368022 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.829685149 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834535655 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834644397 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830121704 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83006115 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832019094 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834774245 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831897665 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832252659 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833754174 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83305812 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830724539 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836228075 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83970803 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832577553 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832952518 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833131821 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835139122 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834737419 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834172531 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834607428 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835025887 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832064179 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834127815 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836186016 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833566244 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830776083 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836998179 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836009517 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834381689 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836253848 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833568571 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833785225 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834747739 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832094576 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835278385 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833933426 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832688352 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.835612629 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832073288 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834588974 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832119161 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833772591 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832292978 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832329525 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833124832 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832301811 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836021517 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834710532 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832435571 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835148041 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836811415 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837209966 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834870168 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833046191 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83345406 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837237417 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833537719 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831794447 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835613137 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83244992 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833341382 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837408496 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835579465 seconds)
  done (took 122.797605464 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833882056 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.830707584 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831684132 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832780679 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832994732 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832035567 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83649691 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835660835 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834811225 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834075528 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836756219 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834467902 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835891073 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8335032 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835021233 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835506035 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834990478 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835987999 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835578061 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837852956 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835042081 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833983217 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835129305 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834127963 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836199963 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838064777 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834698572 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834808199 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836218656 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832408283 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835137924 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834698178 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833737441 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.835154643 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834512188 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835443145 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83724766 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83606412 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836537378 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839737069 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835509418 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837315938 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832653505 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83557589 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835376477 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833542587 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835812822 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836117267 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836380398 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835631951 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83756403 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836337843 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833026144 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836987471 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835978199 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834209232 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838157396 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835488508 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836215774 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839856788 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837775853 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83552402 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838630642 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839450014 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838856106 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835810722 seconds)
  done (took 122.909002909 seconds)
done (took 2507.741692938 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.923565478 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.90232546 seconds)
  done (took 15.590059853 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.000728725 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.953471019 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.833443081 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.871109341 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.830637201 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.855531546 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.846023221 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.830938402 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.833453384 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.836084905 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.834914738 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.020566617 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.89073461 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.831179393 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.835772344 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.927253789 seconds)
  done (took 51.818454349 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.837792357 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.840084843 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.84498805 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.839706832 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.837652598 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.850898925 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.868384478 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.842130751 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.879097223 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.846689684 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.913967308 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.846091956 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.83656219 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.88798599 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.844755781 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.852035119 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.931504903 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.911456633 seconds)
  done (took 35.27447899 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.919997232 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.833819923 seconds)
  done (took 10.525869823 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.845056693 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.843545371 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.850455036 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.834658053 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.849791354 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.835239219 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.851882416 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.863152918 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.843745049 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.868957638 seconds)
  done (took 70.272373415 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.845740516 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.841539988 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.842768155 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.841957258 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.834991533 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.832713358 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.840847671 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.83019664 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.522323925 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.878445226 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.844390151 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.849822585 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.844402087 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.846284478 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.842849936 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.86926399 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.963582727 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.843361739 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.84088196 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.851316275 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.842230343 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.917659074 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.859613449 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.845318531 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.874129045 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.529339721 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.851080012 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.851734688 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.966769721 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.841669 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.845125338 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.845965123 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.845411449 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.224030123 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.118002841 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.842433596 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.852685217 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.85261979 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.842775261 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.972531707 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.847662359 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.853790494 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.810660029 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.095219613 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.953252565 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.891191982 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.231667549 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.848628159 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.849525789 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.877316078 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.848636551 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.847734696 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.858340301 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.361738999 seconds)
  done (took 131.27366412 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.840578175 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.106346983 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.997093377 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.842477538 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.12818099 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.050721897 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.837299312 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.88824477 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.841672198 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.070336831 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.057591205 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.951354464 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.836935055 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.842382923 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.835432834 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.835802194 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.003215615 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.915006945 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.840259345 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.839157526 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.875330116 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.088121243 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.969959837 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.840352391 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.864852461 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.058947407 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.96614112 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.951073898 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.215132565 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.838616929 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.908567044 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.840739584 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.845364048 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.837919325 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.99988101 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.936432841 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927677435 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.835397159 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.842639702 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.837542922 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.519866342 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.039671723 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.937848066 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.986565964 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.095040721 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.046723149 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.629015758 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.843152057 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.581936801 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.006919803 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.080579005 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.079269822 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.96676699 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.841306225 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.118428895 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.842026204 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.841726871 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.075213265 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.085060185 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.945641793 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.84302386 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.843293424 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.838065322 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.08882129 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.842904966 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.936384689 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.841950828 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.836980035 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.942817133 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.94515952 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.088807582 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.056476409 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.872100352 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.142225974 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.313425227 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.09492943 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.91134405 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.075150705 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.843180934 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.842074531 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.928017597 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.686369172 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.04403463 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.09227542 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.098922946 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878729186 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.567138111 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.844457623 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.070025439 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.067477273 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.095749028 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.084691608 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.991447387 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.153325651 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.843967546 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.843625345 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.07974688 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.979899721 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.840820137 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.208814655 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.079533133 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.42169397 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.877371182 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.157444242 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.975087399 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.843491536 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.489690551 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.843949752 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.072643099 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.890145245 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.844602805 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.843715607 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.06295885 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.827233698 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.846207305 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.565641562 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.909930062 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.841525394 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.080506475 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.845347797 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.111729844 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.843396392 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.086708871 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.798968185 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.879195525 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.022567155 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.08958969 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.845184217 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.108027512 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.089818543 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.959948032 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.116838089 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.770093474 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.843837021 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.138143194 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.842568819 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.849453171 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.021799226 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.848553799 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.071794816 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.846702759 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.13612298 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.866971185 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.009803134 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.845336294 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.10515221 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.883120783 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.898431576 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.847893138 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.980662696 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.852721516 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.703730615 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.002275799 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.847567993 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.844397137 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.37406652 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.846618712 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.006119359 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.086563921 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.870853462 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.923949242 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.51839652 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.848147827 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.935842067 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.869020864 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.189015664 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.84824573 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.066709604 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.845232039 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.3870509 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.847140806 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.089769802 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.080072886 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.851513554 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.846104313 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.754411998 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.847072344 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.846764539 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.010155003 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.666501209 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.849918872 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.053566177 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.847255519 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.983778558 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.848952449 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.922812087 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.206610339 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.847006797 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.84971533 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.845986641 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.853967274 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.853459548 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.059006073 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.879076856 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.3763572 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.991486968 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.124670863 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.16350233 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.102481232 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.89296584 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.852725345 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.094735343 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.852348848 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.913583206 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.849978401 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.876867077 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.088667146 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.84957886 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.066404892 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.130673914 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.777258558 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.900936393 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.847639842 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.850165619 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.769033414 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.006004253 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.940928458 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.850593348 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.853344268 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.968379538 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.977374588 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.062864809 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.853689868 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.08297984 seconds)
  done (took 897.639165921 seconds)
done (took 1214.156864783 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.852718451 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.853116393 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.837357255 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.85368082 seconds)
  done (took 29.178378884 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.862295452 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.859403827 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.86157624 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.857358828 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.860755539 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.857874863 seconds)
  done (took 12.943795597 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.887151579 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.849095737 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.854479819 seconds)
  done (took 21.37535599 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.930049677 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.266200062 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.967579908 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.302449034 seconds)
  done (took 10.25132383 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.860381052 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.859732833 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.863721642 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.863516657 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.864458505 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.864638614 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.862127714 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.864552727 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.864874341 seconds)
  done (took 18.551658745 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.213930736 seconds)
done (took 98.297084983 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.85957172 seconds)
    (2/309) benchmarking ("sort", BigInt, false)...
    done (took 6.906159812 seconds)
    (3/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.888105206 seconds)
    (4/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.871170501 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.978782481 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.948502846 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.854654172 seconds)
    (8/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.04769487 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.948906708 seconds)
    (10/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.844398366 seconds)
    (11/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.846077577 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 3.176409992 seconds)
    (13/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.014385809 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.880591733 seconds)
    (15/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.939220848 seconds)
    (16/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.981272032 seconds)
    (17/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.036659121 seconds)
    (18/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.91672716 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.152185617 seconds)
    (20/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.016727064 seconds)
    (21/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.235442836 seconds)
    (22/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.04908816 seconds)
    (23/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.011675006 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.500875586 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.554727406 seconds)
    (26/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.416675674 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.974345573 seconds)
    (28/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.966136137 seconds)
    (29/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.943629392 seconds)
    (30/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.872193803 seconds)
    (31/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.133802213 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.889736027 seconds)
    (33/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.882416129 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.91504376 seconds)
    (35/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.858064277 seconds)
    (36/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.113007815 seconds)
    (37/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.061642877 seconds)
    (38/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.960052205 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.931301881 seconds)
    (40/309) benchmarking ("perf_sum", Float32, true)...
    done (took 3.404469285 seconds)
    (41/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.852242347 seconds)
    (42/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.147402349 seconds)
    (43/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.865160401 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.969482411 seconds)
    (45/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.412424618 seconds)
    (46/309) benchmarking ("sort", Float32, false)...
    done (took 5.584136575 seconds)
    (47/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.854595825 seconds)
    (48/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.879979455 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.108056093 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.652995677 seconds)
    (51/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.999629722 seconds)
    (52/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.965889619 seconds)
    (53/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.224810898 seconds)
    (54/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.098119344 seconds)
    (55/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.842761119 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.188846687 seconds)
    (57/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.843072801 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 4.188394283 seconds)
    (59/309) benchmarking ("sort", Int8, false)...
    done (took 4.836916348 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.920448123 seconds)
    (61/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.940495147 seconds)
    (62/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.197683015 seconds)
    (63/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.920827243 seconds)
    (64/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.146261563 seconds)
    (65/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.103572865 seconds)
    (66/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.962301803 seconds)
    (67/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.987358071 seconds)
    (68/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.014093821 seconds)
    (69/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.328130294 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.545102068 seconds)
    (71/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.788767158 seconds)
    (72/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.019408655 seconds)
    (73/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.961746579 seconds)
    (74/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.942559902 seconds)
    (75/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.546339117 seconds)
    (76/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.203494801 seconds)
    (77/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.693288676 seconds)
    (78/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.143995149 seconds)
    (79/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.148936952 seconds)
    (80/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.35811944 seconds)
    (81/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.966172206 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.338159165 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.576232086 seconds)
    (84/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.928292611 seconds)
    (85/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.843967877 seconds)
    (86/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.906781957 seconds)
    (87/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.873695467 seconds)
    (88/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.136302652 seconds)
    (89/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.298102005 seconds)
    (90/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.060582024 seconds)
    (91/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.168444908 seconds)
    (92/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.998216245 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.245643167 seconds)
    (94/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.156865221 seconds)
    (95/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.689400135 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.960163275 seconds)
    (97/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.90018958 seconds)
    (98/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.886399177 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.965804877 seconds)
    (100/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.112331026 seconds)
    (101/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.056556756 seconds)
    (102/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.161128861 seconds)
    (103/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.116522308 seconds)
    (104/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.231197804 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.883835201 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.325810401 seconds)
    (107/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.009002601 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.49417486 seconds)
    (109/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.059987218 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.066560728 seconds)
    (111/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.937394305 seconds)
    (112/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.069227439 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.863646433 seconds)
    (114/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.990127168 seconds)
    (115/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.351205016 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.867545651 seconds)
    (117/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.098418534 seconds)
    (118/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.194702514 seconds)
    (119/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.874819627 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.880708803 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.167131938 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.140845219 seconds)
    (123/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.26545626 seconds)
    (124/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.858349881 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 2.358752267 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.88536844 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.239186178 seconds)
    (128/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.885828371 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.114864488 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.077347739 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.110350588 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.073991957 seconds)
    (133/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.939795092 seconds)
    (134/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.050363767 seconds)
    (135/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.84569408 seconds)
    (136/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.037676316 seconds)
    (137/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.002351905 seconds)
    (138/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.947682635 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.19755989 seconds)
    (140/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.127214951 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.162895544 seconds)
    (142/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.88687243 seconds)
    (143/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.533655045 seconds)
    (144/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.856531032 seconds)
    (145/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.96882439 seconds)
    (146/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.864132629 seconds)
    (147/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.261888038 seconds)
    (148/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.955835807 seconds)
    (149/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.161977486 seconds)
    (150/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.571908228 seconds)
    (151/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.076325479 seconds)
    (152/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.168029053 seconds)
    (153/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.950984196 seconds)
    (154/309) benchmarking ("sort", Float64, false)...
    done (took 5.603551752 seconds)
    (155/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.349636094 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.887794981 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.963003219 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.162262618 seconds)
    (159/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.985635763 seconds)
    (160/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.952572751 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.785026518 seconds)
    (162/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.235697582 seconds)
    (163/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.844133658 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.983134412 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.507515032 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.896070693 seconds)
    (167/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.221807234 seconds)
    (168/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.845951291 seconds)
    (169/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.000533101 seconds)
    (170/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.863440472 seconds)
    (171/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.935954301 seconds)
    (172/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.234994175 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.1833824 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.389093814 seconds)
    (175/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.715161521 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.803655608 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.865704045 seconds)
    (178/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.059052464 seconds)
    (179/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.020162055 seconds)
    (180/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.554552729 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.248745018 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.888312266 seconds)
    (183/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.329417818 seconds)
    (184/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.154131615 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.194321614 seconds)
    (186/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.806415704 seconds)
    (187/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.898810239 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.108579151 seconds)
    (189/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.881141061 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.898938537 seconds)
    (191/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.851363943 seconds)
    (192/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.606444722 seconds)
    (193/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.514561767 seconds)
    (194/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.991217135 seconds)
    (195/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.034813868 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.869764213 seconds)
    (197/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.954914594 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.32570032 seconds)
    (199/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.862838778 seconds)
    (200/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.909560925 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 3.506557011 seconds)
    (202/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.96568735 seconds)
    (203/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.004525261 seconds)
    (204/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.8671015 seconds)
    (205/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.796875048 seconds)
    (206/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.872217556 seconds)
    (207/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.882705348 seconds)
    (208/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.929088574 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.974736437 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.206697141 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.197690986 seconds)
    (212/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.85133184 seconds)
    (213/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.033093798 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.871561661 seconds)
    (215/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.253101692 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.970251313 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.685728431 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.095952829 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.866719483 seconds)
    (220/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.445748112 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.968783588 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.851331007 seconds)
    (223/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.93088008 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.887093213 seconds)
    (225/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.850808368 seconds)
    (226/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.504937691 seconds)
    (227/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.486307663 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.680011572 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.010821618 seconds)
    (230/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.618692409 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.95817132 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.012890792 seconds)
    (233/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.290621499 seconds)
    (234/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.999821519 seconds)
    (235/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.040235532 seconds)
    (236/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.940953987 seconds)
    (237/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.851826216 seconds)
    (238/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.987677967 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.868821096 seconds)
    (240/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.385177161 seconds)
    (241/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.869919636 seconds)
    (242/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.48507531 seconds)
    (243/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.870028621 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.108091361 seconds)
    (245/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.061616023 seconds)
    (246/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.305201378 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.967076316 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.940475999 seconds)
    (249/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.002473937 seconds)
    (250/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.882451994 seconds)
    (251/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.954545575 seconds)
    (252/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.854012236 seconds)
    (253/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 5.462505665 seconds)
    (254/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.335967023 seconds)
    (255/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.888131426 seconds)
    (256/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.868718566 seconds)
    (257/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.004917962 seconds)
    (258/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.892771442 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.942442765 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.840709485 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.966406984 seconds)
    (262/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.866557944 seconds)
    (263/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.933918957 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.869052982 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.33185065 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.893390645 seconds)
    (267/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.932320319 seconds)
    (268/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.215463249 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.245448626 seconds)
    (270/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.854629146 seconds)
    (271/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.888402914 seconds)
    (272/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.974607189 seconds)
    (273/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.895892542 seconds)
    (274/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.211221995 seconds)
    (275/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.032475181 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.097743735 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.675558797 seconds)
    (278/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.377823708 seconds)
    (279/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.041752831 seconds)
    (280/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.365968695 seconds)
    (281/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.894110287 seconds)
    (282/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.966732406 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.811766643 seconds)
    (284/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.984866273 seconds)
    (285/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.894299958 seconds)
    (286/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.936196475 seconds)
    (287/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.955531487 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.952724686 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.953771443 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.786408003 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.999823939 seconds)
    (292/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.146285024 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.565877258 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.625214616 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.06198897 seconds)
    (296/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.87247207 seconds)
    (297/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 3.214207512 seconds)
    (298/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.867105422 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.9783105 seconds)
    (300/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.872603921 seconds)
    (301/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.015108628 seconds)
    (302/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.871058977 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.216692055 seconds)
    (304/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.064850756 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.892666509 seconds)
    (306/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.977383737 seconds)
    (307/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.094007831 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.172609575 seconds)
    (309/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.209234007 seconds)
  done (took 1018.918859519 seconds)
done (took 1020.764705501 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.906129707 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.899245546 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.881198032 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.901107811 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.993264269 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.91200665 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.891302147 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.883749365 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.929824872 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.931164326 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.882132956 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.91230379 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.881248074 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.882751884 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.884465014 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.898813069 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.193814205 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.904097999 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.902379508 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.891338618 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.899473846 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.87981437 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.929030041 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.914157252 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.886681906 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.885060078 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.886135145 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.901540971 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.996325165 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.887921728 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.88591418 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.894821831 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.193390411 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.904847315 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.881562575 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.902891841 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.895129996 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.892559914 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.888496311 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.915870867 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.336162391 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.887050332 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.8884184 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.885576811 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.88605854 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.889294823 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.885508332 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.890238546 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.899191069 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.899657679 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.334022817 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.902734149 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.889155083 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.884718901 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.895048892 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.886368259 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.887354723 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.900460668 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.906369504 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.902218427 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.18518497 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.911541954 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.887500253 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.90027488 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.892147283 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.368831922 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.884031297 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.889093376 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.337403172 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.89424435 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.370458779 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.897564692 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.88831493 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.90065874 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.917128785 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.197427571 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.905043465 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.884867532 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.894262912 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.887061657 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.895937188 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.898994093 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.890383425 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.88712838 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.899664147 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.916092453 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.896995516 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.888336676 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.893889653 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.904022171 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.893370284 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.896267393 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.890650003 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.88042497 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.895815649 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.888322025 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.890978026 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.889967815 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.890530777 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.897106834 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.335685205 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.907418491 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.883965639 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.882587549 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.887586678 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.899808075 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.337458835 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.890537738 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.908597266 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.931858944 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.885363166 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.188943219 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.914556563 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.905383418 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.896242244 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.892134634 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.883224332 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.185397082 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.361339697 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.906049931 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.887876251 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.886586323 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.906106142 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.891269805 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.882795596 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.200144595 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.910576695 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.902290325 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.010956849 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.897944503 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.921905176 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.886952314 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.89022656 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.922349383 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.906237691 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.918552726 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.892941764 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.907585765 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.905824052 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.887356307 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.900317193 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.89554473 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.890777222 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.894374393 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.885330885 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.920744669 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.900178712 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.902685266 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.909369078 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.013284283 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.888082817 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.189002678 seconds)
done (took 296.499516295 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.958072732 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.885506642 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.986002204 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.88773507 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.971918521 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.972407028 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.882923361 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.882688928 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.884120167 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.260358682 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.884618798 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.883829715 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.879078487 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.881840608 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.969422816 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.8875759 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.881041479 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.223676943 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.887482235 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.95982619 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.883697373 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.882261029 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.885828414 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.258170837 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.88876617 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.882730438 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.95949893 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.887940768 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.226518952 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.884199436 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.887981416 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.225720517 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.980596597 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.902005709 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.898921238 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.894018796 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.967646905 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.891496687 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.968456313 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.966061492 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.989124824 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.929107571 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.886528433 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.881920053 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.889926808 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.891411927 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.882574471 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.916546994 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.886576964 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.885546928 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.221230189 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.895176438 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.885656816 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.883196783 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.882660888 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.91888623 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.884427583 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.890420853 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.982312626 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.889836111 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.951831393 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.267198846 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.259636998 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.887748592 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.8862667 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.885225395 seconds)
  done (took 185.452290175 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.954999136 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.963632345 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.953941821 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.891161854 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.939304751 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.95565726 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.891875038 seconds)
  done (took 15.360776027 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.894657012 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.887033469 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.937993134 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.937444532 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.887892056 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.040415235 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.890702792 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.898556536 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.884146155 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.9426214 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.88966412 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.891494615 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.896944938 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.883971549 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.9361867 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.903437476 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.004545059 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.889709392 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.892666516 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.040422671 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.886041387 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.897907504 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.941160538 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.900027779 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.889018321 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.897341834 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.472024318 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.890339331 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.883417447 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.891373368 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.885019954 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.932037201 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.889308434 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.882214374 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.887417789 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.004772341 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.88769314 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.888521352 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.888137024 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.886321499 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.891223955 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.891659048 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.889660607 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.88428278 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.892463914 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.911034212 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.889392787 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.891310998 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.886196139 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.88908358 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.939524647 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.891877227 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.888210331 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.88733774 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.944410392 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.899585791 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.891638601 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.886525749 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.885063711 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.884467823 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.0410673 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.940991573 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.8875928 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.935220498 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.889958728 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.892817704 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.888344518 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.888377435 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.985584135 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.889568344 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.938203662 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.887237916 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.048233427 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.909744355 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.892175731 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.892555709 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.893383713 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.894547683 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.884026918 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.89582247 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.886812568 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.891963575 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.894163777 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.887600472 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.886848271 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.004328945 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.997321896 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.889419264 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.905931557 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.900379975 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.887988488 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.9447807 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.888886148 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.887472178 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.946839555 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.004219887 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.948545409 seconds)
  done (took 207.769453455 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.896581115 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.897311532 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.890820747 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.904756407 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.888259179 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.889834364 seconds)
  done (took 13.180844146 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.895162204 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.892646182 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.891303169 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.889379568 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.892132466 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.890755949 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.892139892 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.891686384 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.89829388 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.887934653 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.891469554 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.89129469 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.892489954 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.888619961 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.888852838 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.891404479 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.893613728 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.888543782 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.888058083 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.889902212 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.043810635 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.892738792 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.889792139 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.890471007 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.895247841 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.88917168 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.89694257 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.889384573 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.890393154 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.898856529 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.892287026 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.891581615 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.89203725 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.894852478 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.895948172 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.889622513 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.89499671 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.892854238 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.890391671 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.889741871 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.894474322 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.890379819 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.890240032 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.895731014 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.892328546 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.893455039 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.898440065 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.898792593 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.890348173 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.891187673 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.892956553 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.892870545 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.895067294 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.893797601 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.892696763 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.896817959 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.898137072 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.891776302 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.891353182 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.891970722 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.893501209 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.893708792 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.894137085 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.897964806 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.898627632 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.8926623 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.893713927 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.897703488 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.891222824 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.892839514 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.893850353 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.890885014 seconds)
  done (took 139.244647749 seconds)
done (took 562.832802561 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.976054878 seconds)
  done (took 8.788480425 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.083153585 seconds)
  done (took 8.982306952 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.381655712 seconds)
  done (took 10.194656372 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.908992988 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.898089796 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.884519427 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.889251288 seconds)
  done (took 29.408314004 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.987530543 seconds)
  done (took 8.801077305 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.900401716 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.883600552 seconds)
  done (took 15.632034887 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.958884915 seconds)
  done (took 8.773569117 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.070016131 seconds)
  done (took 8.89450066 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.907238797 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.923869387 seconds)
  done (took 15.660239109 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.871291346 seconds)
  done (took 8.686512494 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.658159126 seconds)
  done (took 11.482402797 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.889067668 seconds)
  done (took 8.717419345 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.904749825 seconds)
  done (took 8.717211211 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.181426132 seconds)
  done (took 9.99790072 seconds)
done (took 164.549284861 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.892235626 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.885184893 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.883964205 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.883910682 seconds)
  done (took 29.361049377 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.926765038 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.926138764 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.928366728 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.939302509 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.930868832 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.926399104 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.924140086 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.92233568 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.938259229 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.931697469 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.930560919 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.930778647 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.925247039 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.923294907 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.930903745 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.932237332 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.940836941 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.929439644 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.922468658 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.933269547 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.895886607 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.939750078 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.932237687 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.896981068 seconds)
  done (took 48.07458228 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.097234297 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.965178852 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.049872972 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.949619924 seconds)
  done (took 9.879144576 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.947722111 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.948235899 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.961616763 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.000535845 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.021390177 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.957174801 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.923303468 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.914773837 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.902672036 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.949380347 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.027124747 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.943985467 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.050195229 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.897447308 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.080452553 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.899197739 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.896440002 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.946134669 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.000303544 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.013374841 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.896524316 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.948813785 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.95077968 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.942208532 seconds)
  done (took 48.838517435 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.893073372 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.904919111 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.901717806 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.893975845 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.894433794 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.89507412 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.89923018 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.896974612 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.916840458 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.898238323 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.896455941 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.895980751 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.895665744 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.895505496 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.895013929 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.907373361 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.909513257 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.896924378 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.898410837 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.904853162 seconds)
  done (took 39.808321873 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.891162808 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.745088275 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.243132729 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.148794951 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.890479713 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.885653901 seconds)
  done (took 31.622702353 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.909875356 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.902996778 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.901330059 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.953901462 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.029869786 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.899033154 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.897276089 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.907699437 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.943805253 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.957721017 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.913564709 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.922566023 seconds)
  done (took 24.959829183 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.893010613 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.891433405 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.896126418 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.908677615 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.907696087 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.905707928 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.905235543 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.898441894 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.911447083 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.914787662 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.907174959 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.909188146 seconds)
  done (took 44.673910228 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986320246 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.78442645 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.96168403 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.61434196 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.363639377 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.103078767 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.42127732 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.237530081 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.900612096 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168789352 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.971895708 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001798662 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.150099719 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894413505 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.908931862 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.377409828 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.187003332 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12809621 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921707234 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781685363 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947981348 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.420347129 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.831483063 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.95037488 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.107899826 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.03220491 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.199382894 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.858024609 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031341542 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931849141 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910296587 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.897668776 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171266725 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275541209 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991833018 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906874434 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.551107282 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.615477207 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.885492374 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.684616702 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.712508684 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.013319954 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905967125 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899722619 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.834463851 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41889729 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27827997 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.900254305 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.607660717 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.899296267 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910196736 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990438533 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.904825223 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.714165509 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.886211452 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.176151215 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.896100876 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906886753 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.468234197 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.011033196 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451735875 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.870147386 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.09691421 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.667131763 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29688415 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.044903424 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.899627623 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.904100757 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834456637 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.663419819 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400952987 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.087848174 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.918653192 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.549724374 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198432779 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.024399401 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.8853581 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182318225 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.708369302 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.869713461 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128043998 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.853659121 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836801417 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.763458838 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.837725354 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.164785425 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93916525 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.538947097 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935830945 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.238447967 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.90565005 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917752933 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908000526 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.127246069 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.467116067 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903100113 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.734820578 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.046098922 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917582651 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.235740656 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831784425 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.900304583 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159748651 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.109455352 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.162090789 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.422710285 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053930668 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898136072 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.975664138 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.833690488 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.950613338 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.17943785 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.958661635 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.00862783 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959510524 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.862192806 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204035314 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923702241 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.063762887 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.027106258 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.026650348 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.23638244 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.186008852 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965056912 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.903189763 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.906029131 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.720779452 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.456937104 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.168735606 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.905849189 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413735449 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.952218675 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.906363394 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841201631 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.533796961 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.013864397 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.869601963 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.131299876 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.870062807 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21826528 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838849812 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.047979985 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.018815861 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.126255077 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.549093463 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.966754252 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159103389 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415423898 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.180691791 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95515206 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920733649 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990731267 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928896258 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.341267795 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.197544651 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.909564004 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.909569793 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.733907328 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.903223661 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905072532 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.909249315 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.702239806 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185665399 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.929351938 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.904063706 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.858148419 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.920377048 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975127089 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.911869408 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.917470935 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.449438768 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.654735488 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.908633376 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.541183769 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128164394 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916691877 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.661059371 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015868294 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.987652881 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.178609278 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97054739 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.842918776 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.616495403 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.597943021 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908187454 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.845469303 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.9057418 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916921865 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92015542 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.288449854 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.186762249 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.95248335 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.678086145 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.953073005 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916440608 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.914578579 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90606365 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.450972873 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.014929753 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.468214653 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.951720782 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044408911 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.921035706 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.841382658 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.912120443 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.908764317 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.910330427 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.863454102 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961544916 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.71688937 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291149064 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164194976 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.561391631 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922620704 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.708784921 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.970899196 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.928279799 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.771166063 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867551354 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.940871332 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918383111 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.922781458 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.686187069 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.606057148 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.480038325 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224403566 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.222294324 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351824316 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.435449343 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.211356523 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.249061428 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142460969 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.441681463 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.970146279 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.254940063 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85273678 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992860807 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.551966977 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.253786969 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923947121 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137439494 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.299479708 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.69792582 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078727458 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.123184951 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947902688 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.843402 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.869234463 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.10999937 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055348762 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.711546761 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.1067069 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24854997 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.625648678 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.9970624 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.916684703 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.606324583 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989096861 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.620499328 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.276419892 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.441920291 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.907198841 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392032138 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.911869646 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.363523217 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.268550135 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.245786236 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.032099512 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8446376 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.923348304 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.921022353 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.91333287 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.91196456 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.779627269 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.162757995 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924104829 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145766039 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.200556489 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.210815486 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.82409268 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.918687748 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912562587 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213828567 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.736825057 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078606841 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.399585133 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.445682318 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912277967 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.852025162 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847324428 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.608693125 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.925577937 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.890689864 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138094868 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.099065204 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.902465723 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427766639 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.155378272 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.169971833 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.929812396 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.192070128 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190077223 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.653698354 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941178301 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.014622153 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.632577584 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.013803732 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.18708179 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.150030748 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716794115 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.143119206 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.982844472 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.728939593 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.915674174 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.124613042 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.183497997 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.857971072 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138986195 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.637687809 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.923165031 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221232557 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971372601 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.906757084 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.062994208 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.112182096 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928943932 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005890604 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928958232 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.928971494 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.928766033 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96399687 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.899246856 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.031354735 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.928201612 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005002176 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.030624217 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.453211149 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.920406237 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200445386 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273350441 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.248321456 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97951107 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.919620525 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918952594 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851514655 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053121193 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.367759357 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192981016 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.050923921 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.214657595 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941848753 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.628495564 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.29002863 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157350179 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192939105 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.814374173 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91594343 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.936739515 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.18462908 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929550404 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.129502391 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149078331 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23231594 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385869393 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.181139289 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.287790292 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188464454 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.28889902 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.920119326 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.513265086 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.923651684 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.618531517 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.956595509 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.899519555 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174245728 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927595718 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299803122 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.939992654 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.11808285 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.436418844 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.691874897 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.206083262 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.902958808 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.972122844 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.202518263 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.306125362 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229007397 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988382174 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927451259 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.621606358 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054973511 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.797005547 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.190556104 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.923876197 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137789654 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.63074187 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.927557036 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197085347 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227184233 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.914076142 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.79920792 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931445953 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.931179308 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.144950205 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183320644 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.169763975 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92773334 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.928798822 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.733868078 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.197847965 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975573591 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854291837 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.92136573 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01971901 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.166462793 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943627983 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.438539986 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.634569484 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215818418 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.83651718 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944215669 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.452253389 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.291772862 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24417519 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.469390907 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145955737 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.479201728 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.897162874 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.220752618 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.926212649 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.460603056 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.22535985 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.926864485 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.561028217 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960160744 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.195262617 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.24237396 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.931189135 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707029667 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.886329144 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149633942 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.588908942 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861617116 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.922813251 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.984831707 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.91901924 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.053124848 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930568305 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.807824091 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874995427 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.66938078 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.415724565 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.925185742 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.908630619 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.654147358 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.58128756 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955179943 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067037121 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929459806 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.649304662 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.215201916 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.17520499 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.557407776 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.928350566 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.923740223 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923712941 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.850303966 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.117471434 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.301216669 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220098348 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.403257267 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.960233166 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.930587965 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.142643622 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135454793 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.878680694 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050407787 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438144018 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958795589 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.692464667 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.606977207 seconds)
  done (took 1706.645551173 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.952421067 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.991963337 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.940616413 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.99150213 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.973285694 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.992190247 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.977231366 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.025901245 seconds)
  done (took 57.700890226 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.925059092 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.119532165 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.935189326 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.926647741 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.931757036 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.924182529 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.091297504 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.932678249 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.929275716 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.93720173 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.928395796 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.921558599 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.244093176 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.949204316 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.930682871 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.904956169 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.934039578 seconds)
  done (took 75.357915182 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.925586518 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.152959631 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.958001075 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.938311543 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.899124778 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.928886212 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.966695964 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.939564762 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.931478498 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.156436296 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.260298057 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.958367995 seconds)
  done (took 90.872126488 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.937851112 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.931772931 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.934121214 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.932239663 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.936646785 seconds)
  done (took 11.534027717 seconds)
done (took 2221.175983437 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.173138848 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.1463593 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.161584692 seconds)
  done (took 6.164055209 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.075937929 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.122889522 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.246664096 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.252607472 seconds)
  done (took 10.553152967 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.226148411 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.312565934 seconds)
  done (took 6.393312667 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.341118085 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.934353646 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.323212533 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.925732743 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.925998876 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.931510186 seconds)
  done (took 22.640976304 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.932986963 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.935890799 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.931228166 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.934623443 seconds)
  done (took 9.592481445 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.916147657 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.667595702 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.911770256 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.923314845 seconds)
  done (took 21.273833144 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.67663804 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.364926653 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.678660827 seconds)
  done (took 9.574819544 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.475996526 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.810215942 seconds)
  done (took 9.141553805 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.196823673 seconds)
  done (took 4.054100141 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.958981268 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.206385739 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.45154574 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.450085536 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.535045961 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.784031566 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.255723589 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.173507666 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.342894871 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.367515397 seconds)
  done (took 25.384839035 seconds)
done (took 140.400231824 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.315084811 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.176275124 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.207060689 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.285814389 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.165799262 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.165887459 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.344096299 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.268335096 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.780625032 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.776308539 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.281645972 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.163181174 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.289879227 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.175498271 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.29208312 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.173601254 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.156989582 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.339977564 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.021889994 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.216762591 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.351316741 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.91435437 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.124786757 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.924917534 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.152587247 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.084834897 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.49354121 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.163590893 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.169702434 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.500898883 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.082437726 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.372793135 seconds)
  done (took 175.792811597 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.701221521 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.928780644 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.927539054 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.929409169 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.374583452 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.927862025 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.92882378 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.927911468 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.237144073 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.212693178 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.9294727 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.349847594 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.931641408 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.928010348 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.928277215 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.927905138 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.415233122 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.769341885 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.93848389 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.943160926 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.946143897 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.239076718 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.945578885 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.288740067 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.42045499 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.947909412 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.917345326 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.945721447 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.933798324 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.9024161 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.937744472 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.925429832 seconds)
  done (took 210.368337452 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.933674838 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.934134466 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.929768406 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.930482195 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.931849942 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.930333532 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.92932776 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.930542492 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.559071388 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.555134062 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.936709052 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.93199674 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.936448479 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.929273356 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.936738312 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.932905635 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.92924063 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.942527008 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.93176617 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.939631358 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.948348197 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.619432374 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.945491097 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.612245053 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.940145977 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.941507529 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.931113213 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.943020315 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.946917404 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.943656174 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.945448711 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.929405305 seconds)
  done (took 222.434025771 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.139143805 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.940959977 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.941383762 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.874395109 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.941533543 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.940443818 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.881159323 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.140297785 seconds)
  done (took 19.679333555 seconds)
done (took 630.144940028 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.426990173 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.277964611 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.118352081 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.964211991 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.182307144 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.997220385 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.961517196 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.027054192 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.695405769 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.028793945 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.615939129 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.975754718 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.70462082 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.980206067 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.087782535 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.014292314 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.507785592 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.598428987 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.13439059 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.016896439 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.13452925 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.921388493 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.035508856 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.722238853 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.729444011 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.960880798 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.145375333 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.511989152 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.967290449 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.123191341 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.727445591 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.343339579 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.969816531 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.959799904 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.014141049 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.993711395 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.329659055 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.972566205 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.083089426 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.729113103 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.001454086 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.574932137 seconds)
  done (took 106.128103337 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.931920102 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.93371428 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.9327364 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.932307593 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.932993563 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.931442141 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.932167296 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.92828636 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.925968422 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.929834489 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.927834054 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.929537595 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.930719388 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.928963616 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.93095385 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.930640539 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.929436652 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.932190676 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.929693472 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.92975882 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.929827119 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.928584387 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.947118097 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.932647742 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.933160175 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.933646424 seconds)
  done (took 52.090440269 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.94380797 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.096218385 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.19757519 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.958601286 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.944101126 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.94980063 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.964550365 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.94630517 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.94615398 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.948544469 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.0549074 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.947381446 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.966443415 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.20188861 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.955371602 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.945108326 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.944856219 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.945240596 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.100189771 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.953526785 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.962691114 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.945632287 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.962587912 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.954142125 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.943507487 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.947064469 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.948694922 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.421855217 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.946526428 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.052432852 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.983113795 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.960253128 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.363325058 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.208520393 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.993474962 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.951306615 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.943613191 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.052838786 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.949076325 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.944793999 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.962003225 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.950348847 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.201010202 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.431624623 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.954287383 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.945390623 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.434850353 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.059936077 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.982497077 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.959471172 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.204043521 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.956852894 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.944851505 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.944476315 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.979898642 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.950594404 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.94394917 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.273640272 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.955314789 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.963925282 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.948607385 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.943814013 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.105548638 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.949479613 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.092235736 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.952239105 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.951791404 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.945284602 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.201941196 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.957080347 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.442640584 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.950615076 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.942936456 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.049704782 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.092440774 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.451542764 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.95189053 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.103311615 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.376517555 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.962980716 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.948024258 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.40795511 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.966870485 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.945396441 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.940124474 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.942707255 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.942538849 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.9843347 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.958873383 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.365682502 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.439198524 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.286706402 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.965417308 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.956203354 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.938665464 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.270267817 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.945100853 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.939186703 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.192031331 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.444457725 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.955401488 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.954361944 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.426200214 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.95391797 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.960487303 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.951559962 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.204031745 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.956948167 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.98494015 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.945411137 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.949411597 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.947018249 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.964810709 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.950105954 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.943024013 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.423977566 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.067944037 seconds)
  done (took 240.904417022 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.936304006 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.944095198 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.940272678 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.935569326 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.940969661 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.947084484 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.936718858 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.935444302 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.942397661 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.938471677 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.940079683 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.940955843 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.940279398 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.936478101 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.430105066 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.947677939 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.553020571 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.941912056 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.938481619 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.940907578 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.620643253 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.94613257 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.941427149 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.941002322 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.943155637 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.943696976 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.942151105 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.97199155 seconds)
  done (took 170.027493653 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.949347063 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.131058143 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.96079851 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.984473684 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.952842773 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.943699059 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.970492074 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.971940566 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.956505721 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.946572951 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.947006049 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.009452452 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.960564902 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.090452558 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.977176766 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.976604118 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.051934347 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.951700103 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.947513934 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.947492493 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.975693452 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.93820323 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.015660715 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.07934539 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.963564096 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.064578517 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.949671314 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.951587643 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.951567782 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.070154903 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.961085951 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.00879125 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.976841127 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.965343059 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.073343581 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.065037763 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.053847023 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.974132046 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.950463473 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.949065144 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.946779342 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.936252739 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.066945981 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.964858644 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.951412047 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.054753593 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.963319874 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.951450838 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.9602227 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.946685755 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.959494564 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.965520672 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.019871482 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.083725698 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.977755858 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.970611839 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.974002721 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.222485326 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.955250328 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.051538117 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.941252642 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.070368122 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.96478517 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.936117995 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.952489014 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.955360021 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.977836956 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.976858683 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.0540085 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.954308482 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.052678724 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.977791047 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.953008982 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.94992269 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.953697263 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.07233632 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.071601658 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.982026784 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.983784481 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.978157636 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.947318922 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.95014799 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.941506436 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.967894802 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.94831557 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.070717384 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.068424532 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.954981165 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.954581395 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.952488014 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.953001361 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.976827109 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.076392401 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.987796381 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.04293834 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.015148538 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.024148042 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.967720445 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.963306271 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.956148054 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.015690945 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.967829115 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.96235046 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.272865157 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.01862485 seconds)
  done (took 211.075362253 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.408255532 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.001810198 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.010955344 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.259537527 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.382870531 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.84106126 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.997426311 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.00155865 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.024032197 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.190782379 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.071771312 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.021599445 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.984245388 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.978307327 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.007077737 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.022703202 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.021800793 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.326691988 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.123430725 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.136517313 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.978604547 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.270908892 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.317796833 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.394381299 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.032396855 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.333531223 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.67782571 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.141154187 seconds)
  done (took 63.839007444 seconds)
done (took 845.925448114 seconds)
SAVING RESULT...
DONE!
