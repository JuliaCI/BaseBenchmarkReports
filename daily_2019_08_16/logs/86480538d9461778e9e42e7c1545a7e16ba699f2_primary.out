cset: moving following pidspec: 1719
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.237582908 seconds)
loading group "string"... done (took 0.585668297 seconds)
loading group "linalg"... done (took 7.042738022 seconds)
loading group "parallel"... done (took 0.157709444 seconds)
loading group "find"... done (took 1.107055339 seconds)
loading group "tuple"... done (took 1.84833145 seconds)
loading group "dates"... done (took 1.24275792 seconds)
loading group "micro"... done (took 0.224960733 seconds)
loading group "io"... done (took 0.973089019 seconds)
loading group "scalar"... done (took 37.264443888 seconds)
loading group "sparse"... done (took 11.409689821 seconds)
loading group "broadcast"... done (took 0.910277828 seconds)
loading group "union"... done (took 11.796428955 seconds)
loading group "simd"... done (took 4.142629417 seconds)
loading group "random"... done (took 8.527755786 seconds)
loading group "problem"... done (took 1.856598003 seconds)
loading group "array"... done (took 19.9238051 seconds)
loading group "misc"... done (took 1.682777932 seconds)
loading group "sort"... done (took 3.157510381 seconds)
loading group "collection"... done (took 16.581540892 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.483104834 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122115026 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113590766 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.116953143 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.138998675 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113838296 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121852267 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082795779 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.766457849 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143983961 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117001228 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.408553923 seconds)
done (took 4.891337596 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170308765 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081490332 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080468657 seconds)
  done (took 1.281388756 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064493697 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.11941323 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066007214 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065980076 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066369298 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065354331 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065245977 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065088571 seconds)
  done (took 1.634081273 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07269221 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06828928 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067252459 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067008179 seconds)
  done (took 1.397295472 seconds)
done (took 5.678142127 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.760199767 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.199411432 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181395409 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.390328192 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.126025743 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.152607645 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.636162741 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.296610488 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182478785 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079467202 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101812277 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.319059695 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106086844 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.640545051 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079024209 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088562983 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136148824 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.437135567 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066447505 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081456382 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087876501 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127678355 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.083919762 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073451988 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143021755 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067275877 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.12720391 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079635345 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065555252 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.204911183 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171180154 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.649181823 seconds)
  done (took 10.09996386 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094534361 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.095161581 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06784572 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135391423 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094803429 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068466364 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070235422 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066219456 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08576914 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126428531 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.08754514 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10011071 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064887873 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068171663 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083406177 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202467826 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078894908 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080878516 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069380306 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075030418 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115822461 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077888945 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076736601 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076358707 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128067177 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179944515 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097138498 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096678843 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066044309 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079172115 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114469135 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124787991 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064750523 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065676847 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122473118 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093788189 seconds)
  done (took 4.555542615 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.916712332 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.137972981 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089016399 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160816149 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06682452 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10539272 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06447132 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082694716 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.197266411 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.288583683 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.562135822 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109785358 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097778899 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067192514 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067760488 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066208857 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.340621381 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.118155074 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111009893 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081642564 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072856395 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067873953 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.343556624 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067144547 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065088002 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067320001 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057498268 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11043891 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066673588 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.963291105 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122288111 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066121888 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099829522 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.164584354 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085844842 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.263961644 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066244385 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065713176 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.147244857 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073954377 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065289782 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083068779 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102861432 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.109555557 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067778353 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08285485 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159134526 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066223815 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065236306 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082467369 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.964853595 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15133114 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07499855 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066177726 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.241566877 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085428634 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066553717 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063812402 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.174708996 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.128510867 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066520614 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065498208 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065275666 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068508354 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.348574158 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066082921 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.724283632 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069211448 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075378765 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068316883 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065718867 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07162956 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071712736 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084455746 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.062878896 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065314772 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074098699 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065292424 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065038902 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067126017 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.089237424 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08301661 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.355129958 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065659934 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06710268 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063738601 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089342749 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095939433 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06816111 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064358389 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099387145 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.169693584 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066593732 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100943155 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066359393 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083584342 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064935276 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068236251 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112665142 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065967979 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.085571759 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066702381 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.094933572 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069208125 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098215626 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.077995557 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067308968 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.397008142 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064734327 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064559698 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067219844 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067208132 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066288754 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06748108 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07825915 seconds)
  done (took 20.728136103 seconds)
done (took 37.421734404 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.27470597 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07291702 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073721233 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073698632 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073459629 seconds)
  done (took 1.778604349 seconds)
done (took 2.971048077 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118443415 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09751309 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063338279 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094252574 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063732905 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098737118 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098197168 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080288725 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097236794 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063336295 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094769445 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063381021 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063424263 seconds)
  done (took 2.306721598 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081677669 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081846213 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068126764 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08113313 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.061983162 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081128312 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079476051 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087435511 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079308181 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070547823 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062906717 seconds)
  done (took 2.020733833 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080335789 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082647485 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068454706 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080337977 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062136053 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080676964 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079658172 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.083625219 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079902576 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072284293 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062662326 seconds)
  done (took 2.015205165 seconds)
done (took 7.522850386 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075813694 seconds)
  done (took 1.25320381 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.57908173 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.038573307 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080499767 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111048208 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181502466 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117036141 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.273410473 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085119309 seconds)
  done (took 8.817524065 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085702821 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.081611834 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070915253 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067121179 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069688207 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068817773 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071002115 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070409952 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068772577 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069937987 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070704747 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.067884742 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068651242 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069956666 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067569959 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067113681 seconds)
  done (took 2.379108449 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.089853562 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089369821 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071576484 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07332175 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.0712583 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071073784 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073537626 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072209271 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069704718 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070999367 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073454103 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.071924094 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071005901 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.0638032 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072922586 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074230302 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069794025 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073046683 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073401354 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073187233 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073209595 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063633913 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070527139 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07248826 seconds)
  done (took 3.026434049 seconds)
done (took 16.659601526 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.10910035 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070345691 seconds)
  done (took 1.35944671 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.07979471 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081347765 seconds)
  done (took 1.345554638 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080960368 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064665635 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087661115 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076584851 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065138161 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065466544 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085498048 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065131603 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064823999 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065470317 seconds)
  done (took 1.906134962 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.066721738 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076870798 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07001622 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079660141 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072095042 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063303488 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071379696 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066779044 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.075887653 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061669834 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069494161 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080798556 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069835049 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082062725 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070844771 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067201897 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069065559 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065635761 seconds)
  done (took 2.469098503 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064570544 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065526176 seconds)
  done (took 1.32022388 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066879915 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063259718 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065307348 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065162144 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062136595 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061594101 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062096753 seconds)
  done (took 1.634165818 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.364984496 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108700164 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.292065094 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069357478 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080143588 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.246907849 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064542901 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069202248 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069254963 seconds)
  done (took 2.59551154 seconds)
done (took 13.824456677 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078095962 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084013359 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093680172 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.340847752 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090289154 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064963844 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113234545 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184886802 seconds)
done (took 2.25191339 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210476478 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.555656509 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.36452158 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.192419495 seconds)
  done (took 2.307341908 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.310529108 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090650729 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058087874 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065816012 seconds)
  done (took 1.725657842 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06520938 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067419758 seconds)
  done (took 1.332044875 seconds)
done (took 6.777423961 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064894533 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06482182 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083128572 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062548017 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065795595 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062698497 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062733344 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064787214 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065132692 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.06447531 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.067397912 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064697476 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062685118 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062246016 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065156261 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063338449 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062588623 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062200733 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.073289296 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062434174 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064753929 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062579802 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06239767 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064574172 seconds)
  done (took 2.794402728 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081852238 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065572165 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070097224 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069685117 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068564959 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070503901 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.06952775 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065498845 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070133709 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066757131 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06826562 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068523012 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066319464 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068933591 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066945415 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068541691 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069639338 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066765123 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067253951 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068890162 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069831511 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06535426 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068439531 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069540996 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068502227 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068078136 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066574626 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064924852 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069957731 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068162486 seconds)
  done (took 3.264609808 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06841593 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062250872 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063776971 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069483768 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06272132 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063906575 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062405154 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062888189 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063511621 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062242513 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06405701 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062482021 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062597187 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06367316 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06367841 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066101896 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077883316 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062531592 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062148981 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.062875467 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065648122 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062286869 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062536919 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06232152 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062604096 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062354137 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062789536 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062837361 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06339801 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062195854 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065595796 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066051904 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062497281 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068964879 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066416672 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062480011 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066152629 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062062731 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.0633679 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062382907 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062498472 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062195429 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062498938 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069110198 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062780902 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064081562 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06250339 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063611598 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063323081 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064763824 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061943277 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062359373 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063804508 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.174001177 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065824139 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061452294 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062685416 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061813993 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063598819 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062077678 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061812063 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061830295 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064973101 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066531033 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076458272 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068664696 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062012988 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063770266 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063529069 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065051379 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064467008 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075330865 seconds)
  done (took 5.944967307 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088833453 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086188229 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064645373 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064064758 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061097098 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063305413 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06660262 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06287608 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064133756 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068529461 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063169402 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064062605 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063983792 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075761582 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063263784 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064297553 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068417387 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061027136 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062453514 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0658551 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063145295 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065717874 seconds)
  done (took 2.690270788 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.1514592 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069385591 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103643981 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071336639 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065995574 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07140238 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068341968 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069031246 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068665448 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066921486 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066526535 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068698245 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066755857 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066728306 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066741606 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067012861 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068451626 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06686544 seconds)
  done (took 2.554615705 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075606789 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065046381 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084935902 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065495015 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065038744 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067066136 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069154435 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072380512 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067107906 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064575318 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072523235 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067119385 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.066939882 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064684994 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067030557 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06445932 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.066726219 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064647283 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072502783 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069086233 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068844695 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072495839 seconds)
  done (took 2.725021086 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077777607 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066514271 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08038254 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067959878 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060946233 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063831583 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068549973 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065325161 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068819618 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066525088 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065054984 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062895596 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06868522 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065154815 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068026083 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064963058 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066283248 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06493827 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066219261 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060609084 seconds)
  done (took 2.553196556 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083901605 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067039559 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06632629 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073861228 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066166483 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066165838 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073372011 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066322142 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065812956 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085663641 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066199359 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066235272 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073745719 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070750527 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066650269 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073615743 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073596946 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073867366 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066046903 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065937618 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086216555 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066110396 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073639811 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06567708 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066009698 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066046308 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066643773 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070759695 seconds)
  done (took 3.186944504 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064732199 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064329849 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062472329 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062040621 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062477203 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062325167 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062453868 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062750469 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064814578 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062664127 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064775481 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064665302 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064763856 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064730053 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065436356 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06523291 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064798318 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062427115 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062581763 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062455432 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064559238 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064748168 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064772181 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062179448 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062536376 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064932645 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062372505 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062280057 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065080158 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062680893 seconds)
  done (took 3.127838365 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074645175 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07186785 seconds)
  done (took 1.365577875 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062955899 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07847257 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062464228 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069155595 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068650371 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065635633 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072336553 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068469948 seconds)
  done (took 1.765221208 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.079958292 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075574977 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066427187 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078691088 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075157866 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081854198 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130484051 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066055215 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071743302 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063287102 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078856247 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064229776 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071070328 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065645335 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070827616 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07117475 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062941418 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070703427 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067590317 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06335181 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066187847 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073737067 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067561856 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060660567 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066030174 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.08692214 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075750756 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064632455 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067948287 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072320185 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070587788 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059537255 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065079237 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065671116 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.0629341 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074162007 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07948997 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067909555 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073551964 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065877925 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075047793 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060751469 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069335161 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071095998 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074754903 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065046955 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065619132 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060252809 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063431154 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067426712 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060697104 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064964779 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059938966 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07428467 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068289183 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075318222 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064204601 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06680847 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067575207 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068255329 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07214483 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067211562 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067729993 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065058449 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074334667 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069484252 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074423606 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060287349 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059126266 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06308791 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074381283 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086989879 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071174953 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065714014 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065649902 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06263775 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06810822 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066284331 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070782656 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071237662 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065074064 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070104943 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072272179 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065144362 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067981971 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072907846 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063173378 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067531254 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063126655 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08099239 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.0641742 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063551246 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063582083 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075647197 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068603101 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06494574 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062985692 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072060686 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059739523 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065490545 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065875816 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06643235 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074523886 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068301423 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068636775 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072327837 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071128956 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064306888 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066657441 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06096472 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064338881 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.062997577 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.070703802 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058377633 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066606633 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064413518 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.0640353 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.198058622 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063376988 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065566693 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073605803 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071240581 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064444627 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06222883 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068700049 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064990369 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069001053 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073577978 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064657972 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061188821 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06099 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068292074 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.064721019 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069015175 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069374071 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068624892 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060443119 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063895132 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070669403 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07410017 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066323255 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066980538 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07083198 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066791984 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065215058 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071862322 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068449061 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064679983 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070964277 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066102016 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060489153 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068355241 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068742991 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064524577 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069364554 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068128374 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067386306 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066654036 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06485408 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072494183 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067372235 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064922828 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065876236 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063905904 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075180604 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06744607 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061262844 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062111023 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074163975 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063095684 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065080539 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064881509 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067582203 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065552061 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063481455 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064923947 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067620516 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075302786 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068504123 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065737159 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070672976 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.075654399 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065202689 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067561189 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064926101 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066504865 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066581116 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073739322 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070867632 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06946709 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06765049 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061997884 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070776554 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072541316 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064851365 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063128927 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06454325 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069498917 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070650272 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06945462 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066122102 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063371619 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065801798 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068134674 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067936813 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064804866 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064271654 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071396276 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063300237 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071837303 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065971039 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.074598653 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068375586 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060706494 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068270462 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06347525 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071024449 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060502188 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063780175 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064433843 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06629192 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064388948 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067469368 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059357762 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071531352 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072081495 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06472619 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063397637 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064014688 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070998176 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065664542 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067990396 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068058924 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070187243 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07438162 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063401447 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067206495 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.073797557 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063741637 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.187721491 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071346207 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064800809 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065455819 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065064891 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.0638093 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068741273 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074949237 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071794774 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059614015 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068141634 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063792843 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064779857 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061467666 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070125633 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068660718 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06762162 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072336315 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066298292 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066473901 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069502499 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065747266 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066131857 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06721763 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068886001 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067567179 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067483662 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065325979 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06787584 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064852404 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06367087 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067853785 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066151462 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065974118 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07119742 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066305907 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066283143 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068173838 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066485925 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066273181 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065863579 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064745521 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068848712 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066301581 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065407608 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06831533 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061369981 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072229565 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065327593 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073113771 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065360693 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062222676 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072448565 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067491354 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071399597 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06628435 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065950299 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067481182 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065422782 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068144394 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072074585 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063430335 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075844394 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073313594 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065960512 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.06868657 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065931164 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066907099 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064230798 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066333488 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066710512 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065319825 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065153321 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.06990197 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067647038 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065670365 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066854805 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06602485 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065687898 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06608455 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059492956 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06455072 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065084742 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06551809 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074583099 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066205738 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065568173 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064460394 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065970053 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064962589 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062216836 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072788321 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073984912 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065890018 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07251768 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064367373 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06664653 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075484596 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059501244 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063282686 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062894341 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063197477 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072230834 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065968362 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074045712 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065095439 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064398843 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062446248 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065787686 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063300311 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059127848 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062496019 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067660275 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063287312 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063106002 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064136978 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066361438 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06502033 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072707804 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063058885 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064992257 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064080804 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061430404 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063451381 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063528199 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.20044362 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066169926 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063908896 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063296084 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065054296 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066051607 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066975866 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064921957 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066901367 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074049603 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065488943 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068822627 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069554625 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060601889 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067929429 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065332867 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065615133 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065584632 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069617316 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068930024 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067917102 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074324746 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065435815 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06633909 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066205834 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064131776 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065723818 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065432759 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065851736 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064662691 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066941072 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073882501 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064207012 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068637592 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065465696 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066712676 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072226902 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066204216 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068631462 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07237509 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065603697 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068158597 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074338648 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069454258 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069110424 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067023713 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067337397 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071265358 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06489835 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.071728928 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06584811 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066386672 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067382455 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063334366 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065227454 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065509468 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064550219 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071647815 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066179224 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065003547 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064584814 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063974033 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066014089 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069014979 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072806858 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067792598 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06784025 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061093625 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062560497 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066537197 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063320617 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066493199 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067706673 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07076618 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067698907 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065569134 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064061042 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.073555176 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070625545 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.068472571 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063051467 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.068513244 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065947101 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067513262 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065900964 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065420736 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066252531 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.068987746 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066744159 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064559329 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073078106 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068909007 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066418429 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066655667 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066301562 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066176165 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061258099 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066601487 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067690311 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070789213 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067850407 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065785949 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075733451 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063783242 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066126751 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068727621 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064954637 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070098289 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060642852 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066934914 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065783379 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065860852 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060638033 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064292753 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063070666 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066498561 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064320626 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059767902 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074244738 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072839096 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067365143 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063887396 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063068616 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059606429 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059825918 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.19586821 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067407696 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068603046 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076554327 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064845176 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065092901 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060694582 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066061785 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068644695 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069142445 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064352928 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061215019 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065469349 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068191721 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071680896 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064421644 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065381855 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069116503 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068096815 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063919909 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069528532 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062688196 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069763088 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078630194 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066382509 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066928025 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.071468336 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073188893 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066919998 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061142648 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066012175 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068642695 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066121812 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066828716 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066582254 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080467326 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06872519 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065482747 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064413106 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068967997 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065312908 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073307182 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066385706 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066016518 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070207836 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067513858 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074347508 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068826345 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073887853 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068597829 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068786133 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06504202 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066226688 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063417986 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065101573 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066367636 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066727402 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070604302 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073955403 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065123212 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075901104 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074952445 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067693664 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062249733 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065301638 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065091437 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060456032 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066570405 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063751812 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063595007 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063929354 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064415078 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06651018 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070729796 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066373111 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066489388 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065132296 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060061403 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06729465 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06765613 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066413825 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062324191 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06548569 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065819411 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069183908 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068770644 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063222768 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067218817 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067385246 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066109828 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060821457 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072017985 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0644906 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067194719 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065332898 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066063932 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066594289 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068853653 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069965738 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066798999 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068053023 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069446052 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067665186 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063226333 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063111804 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070831871 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063813772 seconds)
  done (took 41.885387997 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098737699 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062742706 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06112489 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061843878 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072134155 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062087655 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061140317 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062554277 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062441324 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064301021 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06144961 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061622875 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069972618 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076652206 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072566931 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065386343 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061298327 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061972695 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061398233 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061847833 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070217778 seconds)
  done (took 2.706924892 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073006453 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070365562 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07124426 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074431745 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066477423 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069473077 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071349948 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069392389 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07441418 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066105518 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074271737 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069335816 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074218894 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.065637635 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066148398 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069298029 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074524085 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066224418 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069384475 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071422248 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06939887 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070685461 seconds)
  done (took 2.837641602 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065489157 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06450608 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067139255 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060864755 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064974737 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060380563 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068341222 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062968676 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068655841 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064525794 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064010724 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064649813 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066440097 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060541194 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065230806 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062959174 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106111996 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068326134 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064382031 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066203066 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060989759 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066977702 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060490005 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060856662 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064303473 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068243002 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065376206 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062969032 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064535816 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064026168 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064677324 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062846806 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066655812 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065323771 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064011897 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063790071 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064382253 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064792048 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060691121 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062885669 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065609659 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060868387 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065059297 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066095796 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062943252 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063225439 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066126925 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064448491 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060177156 seconds)
  done (took 4.484078848 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078776814 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106642068 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066415795 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086862298 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078216349 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073859463 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068142269 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088270357 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062514558 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063526914 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079934391 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077910004 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064957111 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069413041 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071084314 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064886053 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065726461 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063856439 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068242577 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064478063 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068557229 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070884915 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07896908 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07741895 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068304178 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063974921 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063740345 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068634738 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076289892 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068613911 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069265893 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069915243 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078691635 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069767352 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063812266 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066702637 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080153725 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065273951 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067183251 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062077451 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066594547 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068295478 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070900239 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080412954 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064605838 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069451185 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064854072 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061406436 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076507755 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066520082 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071516278 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07835433 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067612285 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064979509 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068794295 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078807204 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064557796 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063207706 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067535734 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076406886 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062509912 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067753474 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077616949 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066866489 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070815701 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07778619 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069078979 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068236934 seconds)
  done (took 6.239950206 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072677909 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.070947353 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078990214 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077888773 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070634315 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071093447 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070604708 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070542165 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071008433 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075315868 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07080254 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091270577 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066355437 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073425333 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071023248 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07069505 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070951583 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071250296 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070851738 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070450368 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071120564 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07831222 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070826589 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078440411 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096958494 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066614848 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07085538 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071299145 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078970095 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07074802 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078191938 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070955381 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070880488 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078827513 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077757081 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070717186 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064093562 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070740362 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070795479 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070831145 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066342792 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078524245 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070680842 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066181777 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070896689 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070339711 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078017886 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077559158 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073450106 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074936713 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070467386 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078386422 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070891993 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070939951 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.077984911 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.102506291 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078149988 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078303664 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071140801 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077891484 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077851074 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083918388 seconds)
  done (took 5.914275587 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081442498 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074138105 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074996333 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060489373 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063139257 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068371149 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063012399 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06321041 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073116512 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073370596 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075375183 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068375491 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070983491 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074965844 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068579652 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071143794 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068336652 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068371437 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072984406 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068192241 seconds)
  done (took 2.719151164 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073120513 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081628285 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065795361 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070305924 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067715941 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070322902 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066830502 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06828755 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065387314 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068194159 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074543726 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074302122 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065738785 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070276009 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074317589 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070026456 seconds)
  done (took 2.435071098 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07339755 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07060068 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078114299 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064602516 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.062871211 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061408207 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064845704 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060387897 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061507931 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076565082 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064476387 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.066877157 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064390082 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063351665 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06160497 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067025174 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061295342 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062424285 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065351922 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076651646 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.074734358 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06363983 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065355525 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064628491 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064996788 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.06955654 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064504536 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062522236 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062554948 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065004234 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065692638 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068516893 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062038894 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062837312 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063476468 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062419177 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065059736 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065405417 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06772758 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064868255 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063389418 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06439463 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064980363 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065590535 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061547038 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065273058 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061517096 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067098524 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062979973 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065021007 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064710171 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066973151 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066060957 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071769744 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067887118 seconds)
  done (took 4.922352286 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077769064 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06910367 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061042399 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063061961 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067670906 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066741326 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068452675 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066675093 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067139749 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063110249 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067103231 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067624536 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066903069 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068434133 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06684372 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068419258 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060972497 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066518549 seconds)
  done (took 2.524784519 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.069898305 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065216953 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07162141 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06499996 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064758799 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067116851 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061439019 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063596711 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063994059 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06553627 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06508871 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067310799 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063702785 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067066089 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064929775 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065264006 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06736404 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063766922 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064852505 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060890742 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066802844 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063483472 seconds)
  done (took 2.752734172 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071430067 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.090494778 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136930494 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.082797285 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08031839 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077429412 seconds)
  done (took 1.856197119 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088797883 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078167055 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066256976 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086891143 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072755531 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066157286 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066693935 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066370272 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074688853 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074590831 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066892083 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074775537 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07471337 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074101762 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071931516 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071663708 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066299551 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066157925 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065151351 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082589243 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066396434 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074542197 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066303736 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065880237 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065974669 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073588438 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074778377 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074246694 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066413058 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074436081 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071762152 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066254966 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074451061 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074624125 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067668263 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074877907 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066376545 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082605582 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071782123 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073936737 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068518879 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071914883 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074539497 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071071875 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074670049 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066372892 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070722136 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066782515 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066743909 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084477343 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07232927 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073654191 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072771676 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075058074 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074999214 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084387089 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075006856 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073954988 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072570105 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077372894 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074110927 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072502306 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074018119 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074745021 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07229612 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074305625 seconds)
  done (took 6.110345617 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08078874 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085568004 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066996579 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075101744 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074156321 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06704859 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067289477 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066557237 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066830719 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06622636 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106729878 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067223753 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074394901 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074849802 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066765849 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066263432 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066377268 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073807328 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066434456 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084641724 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066308921 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074008537 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074172091 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074048288 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075108498 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071906916 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066439538 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066432191 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06661034 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066953447 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071546545 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066617539 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074321976 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066299431 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073899749 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067113264 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066607696 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071403111 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066498826 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072121785 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074236248 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082863262 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06678671 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066547261 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075556928 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066976049 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066815067 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066697774 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066688624 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066351483 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074856868 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07484856 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074711124 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074150962 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067098304 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06663672 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066282029 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066219007 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06650637 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071671516 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073444373 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06595527 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084764819 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06612483 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066286187 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073638996 seconds)
  done (took 6.030116594 seconds)
done (took 126.589658069 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.188217634 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168659256 seconds)
  done (took 1.669154189 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067174215 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094288525 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075974259 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.126402646 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065813074 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098597769 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097483864 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07709105 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06544998 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065763035 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065583 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067182482 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.129387819 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065744591 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065705331 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.066889573 seconds)
  done (took 2.619391354 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095610981 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.172139595 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098031586 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.063962676 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095846889 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072211739 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064051953 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.073622108 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069958594 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064677864 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072438285 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069958221 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.0639729 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07008584 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.06971005 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071895711 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.063913782 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071697688 seconds)
  done (took 2.752617337 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099002747 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089260029 seconds)
  done (took 1.519912465 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.152403043 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103479354 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148268984 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.331735394 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.159277502 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.227741913 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.125637599 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.124042801 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115066617 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.120840696 seconds)
  done (took 2.936187103 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096433516 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.145802513 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255020091 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114240836 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07137463 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.08992376 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11486528 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076539186 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076822641 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076392933 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.075995221 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075105568 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094861768 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072435297 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072324329 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074681176 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097862527 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071309338 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072982835 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075756206 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09541311 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064792431 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072542361 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071331619 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073439129 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07330748 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064583614 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065036486 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072442248 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072957194 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07545597 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.088129113 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.073322851 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102835172 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069003954 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10437452 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.074826214 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070416303 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073057952 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070524856 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074624749 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074654523 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071236571 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075126553 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064878053 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075291569 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064831614 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064554686 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077114473 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066330311 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076949173 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075620608 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103536801 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06741421 seconds)
  done (took 5.815422167 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.098517465 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10235587 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0694039 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107131345 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0955661 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070769289 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.098107715 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089803246 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.100040658 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090644395 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087337507 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069885105 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079704006 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08174011 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.10688732 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100353654 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.093727302 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070368996 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.09940098 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.100332131 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067489838 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092650986 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089494945 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.099571877 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06663046 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069142594 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067084641 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069621754 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075431369 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076487527 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069282658 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.098940121 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082297272 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076545575 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065941318 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066980547 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066904543 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077781575 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.09486354 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077022117 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.075884488 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066957601 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067232561 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068895835 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089410735 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066795257 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077094771 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078290635 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076704493 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069314917 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069340505 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066979427 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069133417 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078731539 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07627628 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079004352 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077994668 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067738618 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067818963 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070756619 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079111475 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07755702 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077765375 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091217319 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077994586 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068221424 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078521552 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082769281 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067240005 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069235424 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067835363 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069039452 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068735726 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076206048 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076870292 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0686041 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070233879 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06741758 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078129051 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076646499 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06756576 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075297794 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06603072 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067603262 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068906977 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068833852 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075794004 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077977195 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068968732 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067303505 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068575613 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067295003 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065749351 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074637973 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076998395 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.075661176 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076117145 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067547372 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.075678944 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075824869 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068150691 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.075960806 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066444055 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.200405326 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070362925 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077221948 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07721351 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077696105 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069436905 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067838952 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077553039 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079745085 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067571359 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076750872 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079591876 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078680993 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067391489 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079175776 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068169468 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078746679 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069665194 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07816096 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068188919 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077271984 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068307349 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067616551 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067945104 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078331178 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069548471 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068378399 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069330852 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069803522 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07846345 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081048092 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069525963 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079342653 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077260661 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069889509 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076983732 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068003277 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078227135 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069113675 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069150219 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067257241 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080321831 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068059323 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068064189 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068927557 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080361423 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068403023 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078596391 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076410819 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067660695 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081025252 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078315111 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075831624 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078180913 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06980277 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06757948 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067163846 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068435337 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075770897 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077644739 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069957462 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067715321 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.075709799 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078500287 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066867631 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076811852 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076274775 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.076724274 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06796985 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06922586 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078981807 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079945836 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07670502 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.076345859 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077216957 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067694306 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075690059 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076175873 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067109438 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082470926 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067004982 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08053438 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077355109 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075084887 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077078528 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079017195 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079118836 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07835751 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.080936312 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066756899 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067040192 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077923519 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067473287 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068415454 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076501806 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068403138 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067870523 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080280665 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066363651 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076258227 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065653098 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075979007 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065285012 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068139294 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07949569 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066713777 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.201723531 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.0780804 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069936785 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076199371 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07982863 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076870498 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067998723 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06965623 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078634819 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078186795 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067985001 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068102446 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069986232 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076913788 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076066602 seconds)
  done (took 18.453224798 seconds)
done (took 37.102596769 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.205102432 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.14924346 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.200222912 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116491567 seconds)
  done (took 2.097515997 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119405627 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098835969 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093726409 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064055357 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100035239 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064061991 seconds)
  done (took 1.907174946 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.306021252 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213465984 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.179099809 seconds)
  done (took 2.06051766 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.195143275 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.183852338 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.389779367 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.25012686 seconds)
  done (took 2.487377062 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140789258 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087719121 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066067485 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.081978189 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.131715967 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157869367 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099462704 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123596686 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076598718 seconds)
  done (took 2.38211663 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.142194303 seconds)
done (took 12.441276377 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.208564798 seconds)
    (2/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.196694255 seconds)
    (3/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.171852756 seconds)
    (4/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.087650961 seconds)
    (5/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.081147994 seconds)
    (6/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.061143483 seconds)
    (7/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.081694003 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.133387137 seconds)
    (9/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072140595 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.080494978 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.170242703 seconds)
    (12/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067722158 seconds)
    (13/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.18833555 seconds)
    (14/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.182855947 seconds)
    (15/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.189051843 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07592334 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072481407 seconds)
    (18/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.197975144 seconds)
    (19/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.156801996 seconds)
    (20/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.207013759 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.151309477 seconds)
    (22/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.049871959 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.10963596 seconds)
    (24/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073976131 seconds)
    (25/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.111269064 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093001999 seconds)
    (27/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.098322833 seconds)
    (28/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.165625764 seconds)
    (29/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076613897 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.095132958 seconds)
    (31/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.136256974 seconds)
    (32/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.171975776 seconds)
    (33/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070852021 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070247599 seconds)
    (35/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.086910295 seconds)
    (36/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050434793 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.166237889 seconds)
    (38/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077020001 seconds)
    (39/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.0720784 seconds)
    (40/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.177211523 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086744327 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087633159 seconds)
    (43/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.132674548 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.08938836 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.092697614 seconds)
    (46/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.080441889 seconds)
    (47/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.171086755 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071695598 seconds)
    (49/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.153530237 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.141222443 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.070952709 seconds)
    (52/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.065838351 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.172440869 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.094078103 seconds)
    (55/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.06830109 seconds)
    (56/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.137163674 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.174852739 seconds)
    (58/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.098971496 seconds)
    (59/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07154969 seconds)
    (60/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.097234235 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06608612 seconds)
    (62/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.17728461 seconds)
    (63/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.071763891 seconds)
    (64/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080187776 seconds)
    (65/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.147590541 seconds)
    (66/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.062607353 seconds)
    (67/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074582257 seconds)
    (68/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050449297 seconds)
    (69/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069746011 seconds)
    (70/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067033735 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121306811 seconds)
    (72/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.166911927 seconds)
    (73/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.098619879 seconds)
    (74/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.050850816 seconds)
    (75/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072703457 seconds)
    (76/309) benchmarking ("sort", BigInt, false)...
    done (took 0.181476759 seconds)
    (77/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.134267933 seconds)
    (78/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050083579 seconds)
    (79/309) benchmarking ("sort", Float64, false)...
    done (took 0.1227243 seconds)
    (80/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.187457528 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.064679925 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.163435857 seconds)
    (83/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071605609 seconds)
    (84/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06306109 seconds)
    (85/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.252468009 seconds)
    (86/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072768318 seconds)
    (87/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.146129046 seconds)
    (88/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.07727188 seconds)
    (89/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.160071449 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.099572125 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053893217 seconds)
    (92/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075751748 seconds)
    (93/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060731935 seconds)
    (94/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.145128254 seconds)
    (95/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06246272 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066458482 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087216961 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089932276 seconds)
    (99/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.105480515 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.095366685 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133075857 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089148778 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09145425 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.096495069 seconds)
    (105/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07109743 seconds)
    (106/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05195986 seconds)
    (107/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065369284 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.130438129 seconds)
    (109/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050130872 seconds)
    (110/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.05204139 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071669118 seconds)
    (112/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067579631 seconds)
    (113/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073191398 seconds)
    (114/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108349728 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135170895 seconds)
    (116/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078925908 seconds)
    (117/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051848836 seconds)
    (118/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.135711477 seconds)
    (119/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.394828858 seconds)
    (120/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065869357 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 0.141161321 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072800268 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.070977638 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.138627379 seconds)
    (125/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.10680709 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070281688 seconds)
    (127/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.088897982 seconds)
    (128/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068651275 seconds)
    (129/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174331544 seconds)
    (130/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.135437625 seconds)
    (131/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07207689 seconds)
    (132/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064703995 seconds)
    (133/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065279191 seconds)
    (134/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070606527 seconds)
    (135/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.189819967 seconds)
    (136/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.105662791 seconds)
    (137/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068081673 seconds)
    (138/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116559102 seconds)
    (139/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079202804 seconds)
    (140/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07311654 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064368622 seconds)
    (142/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.049914794 seconds)
    (143/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074237145 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064115993 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064478448 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.070820995 seconds)
    (147/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051848673 seconds)
    (148/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.135848374 seconds)
    (149/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.069993465 seconds)
    (150/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050272442 seconds)
    (151/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.04988699 seconds)
    (152/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051367808 seconds)
    (153/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.050624199 seconds)
    (154/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065374423 seconds)
    (155/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050465757 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072063965 seconds)
    (157/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071770986 seconds)
    (158/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078873883 seconds)
    (159/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.107528046 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.145357588 seconds)
    (161/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.134680579 seconds)
    (162/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066061049 seconds)
    (163/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074370961 seconds)
    (164/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050007523 seconds)
    (165/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072143158 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088114982 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086110463 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064497469 seconds)
    (169/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070733009 seconds)
    (170/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062155807 seconds)
    (171/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050032928 seconds)
    (172/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071428879 seconds)
    (173/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074418332 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088468821 seconds)
    (175/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.16722761 seconds)
    (176/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070212363 seconds)
    (177/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065613461 seconds)
    (178/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06344791 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066559977 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070594481 seconds)
    (181/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.059568348 seconds)
    (182/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.131722607 seconds)
    (183/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.106701141 seconds)
    (184/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.050860678 seconds)
    (185/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.059644552 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.065915575 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.137330389 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072052402 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.130569049 seconds)
    (190/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06740683 seconds)
    (191/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.065801119 seconds)
    (192/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076988997 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094210198 seconds)
    (194/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050000692 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.062455271 seconds)
    (196/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.069815136 seconds)
    (197/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.049939782 seconds)
    (198/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073598438 seconds)
    (199/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069360893 seconds)
    (200/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.225044767 seconds)
    (201/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07101083 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.115114325 seconds)
    (203/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074251791 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072705517 seconds)
    (205/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07450478 seconds)
    (206/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053184805 seconds)
    (207/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113351756 seconds)
    (208/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.06176771 seconds)
    (209/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069111571 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.076528975 seconds)
    (211/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062233678 seconds)
    (212/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081618689 seconds)
    (213/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051128746 seconds)
    (214/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.07714579 seconds)
    (215/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070082212 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119110336 seconds)
    (217/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072147322 seconds)
    (218/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.05253896 seconds)
    (219/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.13622925 seconds)
    (220/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063809797 seconds)
    (221/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066550661 seconds)
    (222/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050363577 seconds)
    (223/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050098093 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131572063 seconds)
    (225/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052745774 seconds)
    (226/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07092788 seconds)
    (227/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065311316 seconds)
    (228/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070093394 seconds)
    (229/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064334571 seconds)
    (230/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07077767 seconds)
    (231/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050406175 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065209963 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111550655 seconds)
    (234/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066428986 seconds)
    (235/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.135111695 seconds)
    (236/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.052988066 seconds)
    (237/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.095601893 seconds)
    (238/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064970282 seconds)
    (239/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088011179 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064908777 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064921357 seconds)
    (242/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079076189 seconds)
    (243/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052011273 seconds)
    (244/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050379408 seconds)
    (245/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081470926 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065199455 seconds)
    (247/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050939506 seconds)
    (248/309) benchmarking ("sort", Int8, false)...
    done (took 0.139367488 seconds)
    (249/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.086409666 seconds)
    (250/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052184 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064425897 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06479017 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06484974 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.137662867 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124528614 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064623973 seconds)
    (257/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06555758 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071078489 seconds)
    (259/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.049941921 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064931642 seconds)
    (261/309) benchmarking ("sort", Float32, false)...
    done (took 0.126384297 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088178947 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072295869 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.087237047 seconds)
    (265/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067237177 seconds)
    (266/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071032696 seconds)
    (267/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.0520527 seconds)
    (268/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065495872 seconds)
    (269/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085072693 seconds)
    (270/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.075851941 seconds)
    (271/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.163849698 seconds)
    (272/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053136712 seconds)
    (273/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051688715 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088860338 seconds)
    (275/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.086678827 seconds)
    (276/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051470616 seconds)
    (277/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064561754 seconds)
    (278/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.05132814 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064108216 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.093861884 seconds)
    (281/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050079662 seconds)
    (282/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.059626338 seconds)
    (283/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051146428 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071661881 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095020499 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063185911 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.063966398 seconds)
    (288/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06589628 seconds)
    (289/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050535644 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.062971683 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.116303684 seconds)
    (292/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051421952 seconds)
    (293/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.050991243 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071245787 seconds)
    (295/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.063926739 seconds)
    (296/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.083867793 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084107199 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069693045 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.099839962 seconds)
    (300/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051511236 seconds)
    (301/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050679808 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091595233 seconds)
    (303/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.05164924 seconds)
    (304/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072346157 seconds)
    (305/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.05026007 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069572315 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.087408552 seconds)
    (308/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.16785365 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064069626 seconds)
  done (took 29.745045615 seconds)
done (took 31.122525809 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082961737 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091670895 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074496389 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092567656 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080201837 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076076538 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072167784 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077545968 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079093641 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080613453 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077790459 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054358992 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073462918 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073225231 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073889849 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090370027 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077498683 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071976109 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072439073 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064223777 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072140586 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06532302 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066494423 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054251644 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077016717 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070942693 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071819901 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073417755 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065022214 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065121474 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068399177 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072704762 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065269995 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077325275 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07141501 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072046707 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073721101 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075242472 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066678149 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06564254 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073519268 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065316678 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072305716 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072721074 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071152944 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070775118 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072511178 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076778427 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090342057 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067422911 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074002922 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075571911 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07667588 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071788772 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068679644 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072334184 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069819192 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090313792 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072587364 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067465916 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073152617 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073072629 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070386795 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07234562 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072517819 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07450783 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074647349 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070461929 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073604431 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070413817 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065272396 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072682201 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06846287 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064940163 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07475202 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075714923 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063885526 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07029243 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072197315 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070415436 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064147706 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067281392 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066196328 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070593333 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066615698 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053863851 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068568387 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071008539 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063824472 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072413714 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070973611 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071338144 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066482545 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07434825 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06429045 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069614504 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065272606 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064933357 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066642594 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068649015 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064312248 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067194079 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073620833 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066126413 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070301461 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077850066 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064596233 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070356301 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063699593 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063840028 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077948069 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073441949 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064629571 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067439053 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063391404 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071817416 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063643787 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064390749 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06456629 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064504253 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069889881 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064383207 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066228005 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070486768 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075601253 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06345055 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066595773 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065725509 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063833449 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068654083 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063882391 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06385031 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.201184 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061972963 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067776579 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066042769 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072602513 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068009073 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072736077 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067221607 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072981816 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069672549 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07067248 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070738792 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065159374 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058394258 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067229925 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067326423 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066809072 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064979676 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066887583 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065165698 seconds)
done (took 12.304750706 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066196308 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143438223 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097304303 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09432666 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084833048 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065623065 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075009641 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100414798 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066934873 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101050449 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086668442 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084212178 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110730867 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064251028 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065383991 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069539107 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066331059 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080492688 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099444495 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085561828 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107627743 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065044155 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092970672 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08917133 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086269548 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100542515 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066234228 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069833708 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.0689546 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089829886 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085568635 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069291007 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065885251 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098978824 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091242132 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.081640643 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065750824 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081205544 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06607019 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065077552 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.079780193 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096102398 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078939547 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079327445 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069552942 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068263912 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066521082 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082308399 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087666465 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077530518 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08520737 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101800646 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067767665 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065249914 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064051707 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084024639 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064961273 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068057568 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065782946 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068034836 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065320402 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068347102 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079902507 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085543742 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068892923 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079037161 seconds)
  done (took 6.713595239 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082259315 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089567343 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082061262 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081740549 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065293765 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065716835 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065907716 seconds)
  done (took 1.993873947 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066069534 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087648439 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088461734 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.0873323 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083842428 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086104231 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074481165 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.0657781 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080171057 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067269733 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08673564 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101021 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06631355 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.071886396 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089551416 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065993233 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089411523 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065892125 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070534932 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089007213 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067706558 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081393335 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069416487 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066423098 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080120778 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066165571 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111497705 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070173286 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067686958 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068782556 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063700018 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105098217 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079611071 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074706079 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065983582 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079947724 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079612738 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063921577 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081421639 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070574038 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079188217 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065569899 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066471096 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063867615 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069593452 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075642258 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066085516 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065791057 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068063421 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084561957 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066007345 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079046791 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070163322 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068100384 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067066337 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06906685 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074868417 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066453066 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084768713 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066812078 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.081831248 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081316215 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079267398 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081353751 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068054207 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078756369 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079157989 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068541807 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067315685 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069157583 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081559142 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064272361 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067136231 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07626232 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06760545 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.087946792 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.087935681 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066538643 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074381322 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066046212 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065439943 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06563715 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.087896517 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068038576 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06560211 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069891362 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068785182 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06381666 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064707864 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068909991 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063898949 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.066830629 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068326301 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068645862 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068071656 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081656833 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068000665 seconds)
  done (took 8.636094476 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068555996 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06664476 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068674163 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06656928 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066827155 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066655346 seconds)
  done (took 1.88510254 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091692205 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069167889 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079236542 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071494494 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10275968 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085765589 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086046366 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077685753 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083207173 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07782285 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085622883 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089167806 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091379296 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071363908 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08532446 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070875879 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085683403 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074722161 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077485324 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071922139 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085279724 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07210868 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072285553 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08050682 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074545749 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071027012 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066331213 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077698847 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077853428 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077466045 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071726936 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074378343 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069368428 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077085184 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085955279 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069215057 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071163326 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076268672 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071983538 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074442054 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087107931 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072079652 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073075578 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076408698 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077053397 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069417011 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076384387 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074748244 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085399101 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076302124 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07581473 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070335128 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073896491 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075548071 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069414187 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077109376 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076075473 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085228655 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070947298 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069498681 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067697112 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07418446 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076482972 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074692918 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077572042 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075558486 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069372632 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071253523 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071654041 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070566625 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075753637 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068144057 seconds)
  done (took 6.971374224 seconds)
done (took 27.651215478 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.544004307 seconds)
  done (took 1.993073892 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.614642416 seconds)
  done (took 2.087630308 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.634616706 seconds)
  done (took 8.103500623 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.37975564 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.46101487 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.70483345 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128855723 seconds)
  done (took 3.181181728 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.673106812 seconds)
  done (took 2.153669892 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.207450227 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.193394372 seconds)
  done (took 1.89345892 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.367651601 seconds)
  done (took 1.842155074 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.103217757 seconds)
  done (took 2.576628547 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.257425039 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.16101854 seconds)
  done (took 1.899854966 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.45725369 seconds)
  done (took 1.935322025 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.830582474 seconds)
  done (took 6.310643411 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212106923 seconds)
  done (took 1.733715095 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240798165 seconds)
  done (took 1.719735219 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.706851085 seconds)
  done (took 3.185987156 seconds)
done (took 42.094933872 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.07959843 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080642805 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080475844 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078342532 seconds)
  done (took 1.786084035 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077110581 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072105978 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075748071 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07268252 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07587024 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071935913 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073760869 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07622612 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071970464 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072661076 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072221182 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072139212 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074033115 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073883205 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070252084 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074222842 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07536554 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071960438 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074777544 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071890351 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070644914 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074081071 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074623348 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071550795 seconds)
  done (took 3.243723898 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077735096 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073112176 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074603133 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071670392 seconds)
  done (took 1.785382156 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077593802 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092458796 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088929858 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076817775 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091179485 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085171955 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068257192 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068423976 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072649115 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076586428 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067490931 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095217256 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086938927 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076302292 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078257105 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065348515 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067871451 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086553074 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076461818 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076988914 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069671001 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076411503 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067501248 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087404797 seconds)
  done (took 3.360072389 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076841141 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102266469 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076443082 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086241377 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089492006 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065315364 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073661009 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.08870396 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122491801 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065103298 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069369061 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06522249 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072174485 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064834493 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075417454 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104585617 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107358843 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068045606 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094722915 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06502829 seconds)
  done (took 3.12612476 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071660127 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069789294 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065539563 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068601979 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076629281 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072540578 seconds)
  done (took 1.920180251 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067419464 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066279398 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067574598 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066148043 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070860367 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067135616 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065582363 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066848028 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066544506 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066173203 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066577026 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065460903 seconds)
  done (took 2.293946352 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.323506551 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067633711 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068438748 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065450347 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07038212 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065863795 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079325636 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067451162 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090295197 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065946499 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066085179 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067977777 seconds)
  done (took 2.592757693 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205503906 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075515428 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233794438 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135408054 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109928577 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113828641 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102808542 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112054578 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141534 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10035664 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165508201 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163295853 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106095128 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135409657 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087962596 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097504069 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152918753 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160380313 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10228062 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16329261 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141448417 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123373184 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145603125 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100775049 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104876285 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120655358 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070693513 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079344527 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1683531 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130294255 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144301209 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109938074 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092825179 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174480278 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169158537 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141185076 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133103809 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083060651 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101290924 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131899654 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194941637 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086754624 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159884075 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247392852 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081230294 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132720744 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118968114 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120359721 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105374898 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089525993 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144315116 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182476667 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136625603 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086547681 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110755363 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113882381 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113325839 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101952264 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179524463 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159537461 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126737979 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07097476 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097763509 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151272347 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129507082 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108017494 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125006841 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091700052 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132442173 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152746409 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116899643 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141203728 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127513334 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087754309 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118402045 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137958153 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12676248 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167970787 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123209636 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073039331 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123973754 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102557317 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080574082 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141586305 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074860558 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173320486 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097334812 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10481325 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111595078 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10750279 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107380639 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158524537 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140520681 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244986444 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066276868 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10381512 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119499426 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146409653 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086515329 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108016517 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114612957 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077245464 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137415675 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074411409 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122456248 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07551892 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124691713 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131349066 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075218152 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119967426 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100959755 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099106694 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130867009 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15830066 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088713078 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081744142 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165115525 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120674867 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103561073 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142013879 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153592581 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098009073 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101237796 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148078091 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177118283 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089200995 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161014836 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106176352 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083170595 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086798745 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122552921 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111236555 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121479281 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08146584 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117468417 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1666493 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074621207 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094947809 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132250448 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078404426 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079823388 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101647765 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098958191 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093634043 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098882256 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102586752 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134842147 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121156292 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103090821 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270110876 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099666006 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168859878 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088232795 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099816038 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102604987 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.06927337 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135044677 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154913275 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078633586 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161791059 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122066326 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103515597 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118941104 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082235494 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137685898 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079661011 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069727634 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142319139 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109880883 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109364664 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148067899 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102841391 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125936607 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118147156 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132363569 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130507031 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127650711 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104139464 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087501726 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110850475 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123940864 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072729801 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090205277 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079343927 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102673594 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094594921 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082798033 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140615078 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122953429 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099471473 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110501863 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09604473 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145960429 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075897949 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127454019 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118148206 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092930425 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149727612 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150515475 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12997204 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097529292 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142175533 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069589651 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072796555 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.2319733 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124650895 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083621381 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083570855 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115792377 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144976619 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128205711 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137720342 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109964454 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11974411 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153070197 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069247074 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115410405 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145498661 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120461336 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104115383 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089704658 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098233545 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140474276 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107321882 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178765039 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112481387 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123553576 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15095324 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098707703 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083217829 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1017529 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133880234 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103003196 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14320937 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098613196 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087391983 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108643652 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073914671 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098784921 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125952262 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118895497 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134033209 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113564345 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131409354 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076593393 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115451275 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119428823 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120961066 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063861553 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118091313 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158421764 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092948162 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116634504 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153972984 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078064829 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122418529 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.321250682 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145096921 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08443067 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108876716 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118374887 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126690143 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119590593 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138554489 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107277102 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133702038 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107073249 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084660632 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087048273 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095631108 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104107144 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093247546 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107019889 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11313319 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093654578 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12991425 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101968088 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109220385 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116903505 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095658449 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.087876045 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095903114 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171985077 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118667833 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168744429 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098905093 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.142885223 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161791256 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07437589 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078360801 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07736036 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13814301 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083211144 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129899365 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097207506 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10471008 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122932126 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140148498 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094135277 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067976032 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107369679 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132955161 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111153813 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097387236 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10273331 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160248069 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099060588 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078706098 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112324232 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103581849 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100425532 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166833457 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.205826097 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097425168 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076495212 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080905533 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127956799 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151629804 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079334176 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102863794 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117632121 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108915567 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125563937 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100594534 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098864365 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113344216 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147389133 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128423132 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089014929 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110842298 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127171793 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170553066 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106669912 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095311737 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168790683 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150398581 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.158312319 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087886417 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114752335 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113193668 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107012981 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137417985 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082779417 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161360239 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081015856 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134406894 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103103439 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089115544 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128514501 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098233459 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087746877 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146415091 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116246806 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082070174 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077014484 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116514078 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118959937 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105077787 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07478662 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136338673 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072393584 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130231415 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165661185 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080104805 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10319396 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093138397 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077045797 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103591682 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098650186 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08630093 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.095993031 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165144805 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084804917 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142875444 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135560476 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108807708 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130650037 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096284067 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.631963527 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075298333 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144636706 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109474467 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158389465 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092331263 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109814372 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104085215 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115836689 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133367003 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097876025 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.172556532 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121661075 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.109456015 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076578685 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095973258 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096119286 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.083882712 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099756245 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10595862 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108014483 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.088419674 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.108916329 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114066983 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.078077278 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090321861 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144195286 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110388295 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133797472 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131167146 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080560388 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110310266 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127435813 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076409541 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.11317972 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138229986 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100951217 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092490739 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076289387 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.095249268 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157221918 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.069635167 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148430393 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113222247 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102765984 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106887863 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.104455571 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123069284 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100999853 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113099757 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08834409 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.102096541 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106516395 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076993851 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072389188 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098482964 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10449907 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.092134645 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090673969 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.092231025 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140941421 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.068506274 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089399461 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097427053 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133736535 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160916247 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.084399391 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078586641 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110383227 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105692883 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.105905901 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112968136 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07524206 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078199757 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.076528943 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.074929887 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10243246 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105519599 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098067517 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103900511 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150393477 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.078762349 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.21701656 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089334994 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09836921 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.067134845 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.073713604 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08971659 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091594829 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100506704 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094738483 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156892283 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.089762838 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.08593838 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086313529 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.070561056 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078648485 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.484190132 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111679028 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121945577 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100156814 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065266401 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112804674 seconds)
  done (took 57.596468433 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109831119 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.085171926 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100395559 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.152399538 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124321909 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.213843426 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.159486209 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201753419 seconds)
  done (took 2.804716024 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069972493 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097072635 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102063546 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085433968 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067817059 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070328955 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22840043 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082208977 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067787712 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090143978 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080321281 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070091447 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.407223964 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067265485 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069081432 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063717241 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068491322 seconds)
  done (took 3.434972474 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.381312642 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.364109494 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.374284591 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073824292 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.853940497 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090234782 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.07136668 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096414526 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071407623 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.278733917 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.700657101 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.092609492 seconds)
  done (took 14.103656568 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076285524 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070323527 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084124382 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083831423 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072700106 seconds)
  done (took 2.038090184 seconds)
done (took 101.629136743 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081861585 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.297023142 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053389148 seconds)
  done (took 2.029800957 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083576325 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084343633 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084959594 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082509538 seconds)
  done (took 1.991695498 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073703463 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075787984 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083860633 seconds)
  done (took 1.884308345 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223853291 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138700226 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086738726 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082029527 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078288742 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077988287 seconds)
  done (took 1.900740683 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072985254 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074376338 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072653324 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076228219 seconds)
  done (took 1.952833312 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075569586 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05254186 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055350183 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055654416 seconds)
  done (took 1.894696474 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085977559 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078446034 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077785444 seconds)
  done (took 1.897592257 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105381783 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.08421425 seconds)
  done (took 1.844934831 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080975762 seconds)
  done (took 1.737426941 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096836294 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113447033 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127230761 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108389999 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135928093 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107561337 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087882161 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085478354 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076556365 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086310242 seconds)
  done (took 2.681341088 seconds)
done (took 21.997121241 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078745438 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.453805119 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36047505 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090631973 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.678822947 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356039539 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.968052562 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091810184 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120244697 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067605028 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083817437 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.657468023 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.958225026 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.410262384 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.945244851 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.315566164 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.669960373 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068176628 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067700786 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067487505 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.953795019 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067289571 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067820962 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068220883 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650176845 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371314476 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067654713 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.31764632 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067685155 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069450065 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354847886 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067793709 seconds)
  done (took 16.276524523 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070455077 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118725329 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073194079 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083750104 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07035089 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068974497 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071356007 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068425755 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124882244 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067319302 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084203676 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067374464 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071499241 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068345031 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086342103 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068273322 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068329374 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068387968 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067944005 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068244437 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086098494 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067802586 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067863417 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068352482 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067389257 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079276929 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068147889 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068051962 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068677543 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070237539 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07082991 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068225686 seconds)
  done (took 4.057740309 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113875205 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124574019 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07414348 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102160858 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111406124 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069823631 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142483401 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092662512 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126687043 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067875931 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084093781 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067569051 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100815175 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068281678 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087129264 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068168077 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068683985 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06823328 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067820491 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068389218 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086759768 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067316387 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067351418 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068049071 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067822957 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080635974 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068264597 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068084762 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06751978 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069874751 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070891634 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068281648 seconds)
  done (took 4.297722925 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07133177 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074380699 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082549867 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083417457 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068935501 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071305963 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072304213 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069462727 seconds)
  done (took 2.268718678 seconds)
done (took 28.562273363 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078234689 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068913701 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072628722 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080793588 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072927925 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078187764 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066677925 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073973936 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071516255 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072505424 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074293831 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067557111 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071406601 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067188048 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073054196 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067187746 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078817326 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071370067 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078734912 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079290762 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06973738 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07228038 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073443418 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078664157 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078671102 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078210703 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076414236 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072437311 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068255886 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069664905 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076364485 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083312263 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068029197 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079430881 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067205895 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067300835 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070953408 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067178611 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078244155 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075780004 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069110541 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075065541 seconds)
  done (took 4.734606954 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087160917 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091026923 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084319077 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061553271 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066573948 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064100706 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08813525 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059413503 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.05920011 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087590994 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055366258 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058782896 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062554687 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053447999 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059038013 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056372197 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061141124 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055386433 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058711834 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059428561 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057696839 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054155193 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059608096 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064529105 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056279194 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061880395 seconds)
  done (took 3.37019074 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074342451 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083161494 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087407601 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125531199 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102878601 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076670354 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078063824 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092292057 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085333956 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066647974 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.0709549 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093545887 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087460378 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073816032 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067278853 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083943718 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08133851 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068829712 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073303167 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090607033 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084081644 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08335348 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092782489 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080278545 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066868845 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069047001 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070856494 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080893588 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071710954 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075486403 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070725218 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071057403 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06879286 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078608899 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.082395023 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069577472 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089810309 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076629609 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077520477 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067960744 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070579385 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068117552 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089294982 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122131666 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066425164 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07338026 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074632655 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076516602 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067269795 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085590442 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078261111 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066678721 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070311236 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066704617 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067589003 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080174242 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069700282 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.06950755 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076709173 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070158455 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085637402 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071184336 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082456212 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067576271 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074813077 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066055749 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067381605 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066261127 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091927494 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068810298 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108354141 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068499868 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068510482 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07605379 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074584149 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073280379 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068739944 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082059867 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077594884 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.0706603 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076251683 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07024173 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070279769 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087459042 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069044028 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06870537 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068677418 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07301846 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069888457 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068560303 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079557306 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066810948 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070014048 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083209204 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066453645 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068252549 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07262186 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07176484 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067056764 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07777627 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071681709 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067661539 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076337106 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066526343 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069539134 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076800536 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072817597 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066119164 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071759357 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072995605 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06791286 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068262799 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069871754 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068816424 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075903244 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073406684 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071223532 seconds)
  done (took 10.555055623 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.15915677 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15243622 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069783394 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144201526 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07607096 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078551759 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146902619 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094109523 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067206893 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06799481 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068090262 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114420004 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104720211 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.120724702 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078425189 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067075607 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082623691 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116135933 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147953963 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142373493 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082876872 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076008302 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069708368 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068438517 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073710494 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081655626 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090336817 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076357685 seconds)
  done (took 4.433155896 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079473384 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.099405263 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073108465 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088848092 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089565179 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067080003 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069523024 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069338827 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080112431 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077692681 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06709633 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072864239 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073698871 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073036478 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068242819 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074216981 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074263952 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068760072 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070458957 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072832411 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076790524 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080150066 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071738106 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066920687 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073391704 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066451049 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064244872 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083566417 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067578729 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089168362 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065269418 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07470872 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08066942 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06845373 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067288471 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067625984 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067428555 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067263744 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069035672 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066311693 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066015197 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057569058 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06678515 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078856074 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07358949 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056689104 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072023606 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072096486 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072143093 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064903423 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070448254 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070272725 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070018961 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074228569 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072358245 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072127203 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068214115 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066075497 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075128325 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066946764 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064480858 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065590467 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071405862 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065108822 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077234251 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071564126 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065871205 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067047301 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068461711 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073335397 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067110694 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070555039 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064859434 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068720353 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07158251 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068591115 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06803248 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065647435 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066626002 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067178584 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055430938 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067148863 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05325167 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069775207 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065174247 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065710979 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066700835 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071800175 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078802928 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068068081 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072461034 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068216675 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065962632 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07058867 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059874042 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069912085 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081911386 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081852564 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067110533 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065078101 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081099207 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071980077 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066250232 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056207117 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074378283 seconds)
  done (took 9.119322294 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094964911 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087674517 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069907606 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08268894 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090522608 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08723801 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074356403 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076082198 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068909332 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081357363 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072801957 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075767615 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067362679 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.0764692 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093321681 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076441178 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069903402 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076207881 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071510479 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100580494 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082605332 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081664052 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074137634 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067757016 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075563653 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079652865 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089512978 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079906273 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.077607097 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.074652303 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079441561 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090275593 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073617423 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071657803 seconds)
  done (took 4.421904027 seconds)
done (took 38.305304327 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.766277382 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.929758256 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.756883672 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.132486573 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.831079334 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.094124277 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.867435555 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.749046411 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.915418239 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.788026919 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.019940716 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.793724219 seconds)
done (took 65.340974764 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.799121125 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.890796314 seconds)
    (2/2) benchmarking "String"...
    done (took 2.02514796 seconds)
  done (took 5.605349223 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.12629408 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.280014795 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.994789838 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.745974044 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.752246233 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.054689804 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.546623933 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.266926185 seconds)
  done (took 30.329244914 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.872399999 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.947018559 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.370171442 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.406388082 seconds)
  done (took 15.329304194 seconds)
done (took 62.958046575 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.775908024 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.800149141 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.766666598 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.731129573 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.801985287 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.755615097 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.081551617 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.96860069 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.747580272 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.734425992 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.744577489 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.174332097 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.755602296 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.195136533 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.744519859 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.746842967 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.762302111 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.211829353 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.900240447 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.755902141 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.757174051 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.780753672 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.746750247 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.75274955 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.783058464 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.741866478 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.174786885 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.744584521 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.353764304 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.746620531 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.773556242 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.2421214 seconds)
  done (took 204.439853438 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.738245292 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.812592414 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.8500949 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.766317541 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.256623705 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.937438157 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.877165837 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.279210288 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.743771509 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.744340592 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.064692521 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.739014222 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.074567361 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.689579355 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.748435897 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.841313468 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.881323054 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.036320176 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.739560877 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.011003254 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.761656566 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.908613117 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.855465087 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.994253837 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.742680633 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.833397816 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.769016362 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.922824519 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.939825892 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.873863366 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.777490795 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.7959022 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.97044369 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.621930719 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.758756708 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.758581198 seconds)
  done (took 169.798336527 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.135352614 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.747981301 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.748222602 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.747299007 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.759695211 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.747726408 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.871444585 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.875600083 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.215744469 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.094926449 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.799589007 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.591060079 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.749716926 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.815049935 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.760611832 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.751184952 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.763919017 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.775243522 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.752467456 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.74892802 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.871519101 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.761449317 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.950832988 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.758451946 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.748643823 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.754975795 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.119263443 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.748874933 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.75484241 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.008745212 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.748583361 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.749093778 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.63668415 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.702479076 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.838395792 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.749732817 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.754886792 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.749156335 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.969979343 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.750483989 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.748622383 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.752399003 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.917666739 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.749070663 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.873296452 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.750213811 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.25640911 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.751702788 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.749491768 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.750730017 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.542435035 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.429607813 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.750452608 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.749245075 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.75364288 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.749986899 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.750162147 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.756391572 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.463800623 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.823778433 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.751316897 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.753533175 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.756304947 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.75158781 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.887661862 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.752207242 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.968109884 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.806675239 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.861866149 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.875081594 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.753188777 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.818094718 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.845946177 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.752325176 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.750777462 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.749950776 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.750479698 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.751889898 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.831873658 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.752603613 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.750710035 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.882544997 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.759022013 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.753157305 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.802929328 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.821565453 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.75164599 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.643851456 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.752172432 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.750925456 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.071310275 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.820540763 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.752338811 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.752223413 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.751985994 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.879842273 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.753623127 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.876192112 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.537461076 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.753067484 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.512045571 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.754493428 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.891783934 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.75365465 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.938797621 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.755272954 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.835844475 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.757664648 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.754052061 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.753099283 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.784433031 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.753969516 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.81192246 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.755903318 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.12374804 seconds)
  done (took 399.687572368 seconds)
done (took 777.804189672 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.429444829 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.391682306 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.513128612 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.418794846 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.394353501 seconds)
  done (took 13.841910606 seconds)
done (took 15.537427029 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.838007939 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.84534134 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.78059094 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.843588196 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.773921947 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.84336151 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.825601697 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.781039905 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.810196749 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.780228757 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.813492527 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.782134735 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.767997766 seconds)
  done (took 25.179901147 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.984074325 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.995615382 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.828248851 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.010621605 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.802847313 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.991895966 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.917708723 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.908863782 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.904383664 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.773059875 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.768665196 seconds)
  done (took 22.582366546 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.992371467 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.99526081 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.831188632 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.989267234 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.806075101 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.99419871 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.923527437 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.911825542 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.908021682 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.771579515 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.768412458 seconds)
  done (took 22.590953641 seconds)
done (took 72.047309329 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.763242584 seconds)
  done (took 3.459892264 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.783832564 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.921584227 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.773213767 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.766422941 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.7634513 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.765884544 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.76711337 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.765344506 seconds)
  done (took 16.004725027 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.760834185 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.763727877 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.764236066 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.761622556 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.762916108 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.760442694 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.764381915 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.764075234 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.760824394 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.762291732 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.762764474 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.762192892 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.761009222 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.764535957 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.760850757 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.761759853 seconds)
  done (took 29.895640521 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.764468129 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.762094745 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.762304382 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.762499983 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.761514109 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.762773677 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.762326467 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.7606816 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.763435331 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.763446889 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.763429565 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.762272979 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.763830516 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.762914059 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.763425136 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.76352223 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.763157685 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.763540843 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.767008352 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.763555369 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.764292336 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.763800959 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.764062802 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.763274284 seconds)
  done (took 44.017836367 seconds)
done (took 95.075892781 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.462900612 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.20964635 seconds)
  done (took 8.373052598 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.768046712 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.765043244 seconds)
  done (took 5.269171981 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.766112794 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.766157545 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.765867699 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.765219326 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.765306023 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.766432957 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.766605341 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.766687828 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.767039414 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.766635838 seconds)
  done (took 19.361307082 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.765570104 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.766681733 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.764142298 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.766968574 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.768035112 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.764281094 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.766352403 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.76654794 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.76710772 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.765524429 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.766555176 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.764111309 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.765541934 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.76513947 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.767967015 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.764598471 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.76484429 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.764683279 seconds)
  done (took 33.484607538 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.768050496 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.769588763 seconds)
  done (took 5.238087302 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.764178338 seconds)
    (2/7) benchmarking "second"...
    done (took 1.764343244 seconds)
    (3/7) benchmarking "month"...
    done (took 1.763911023 seconds)
    (4/7) benchmarking "year"...
    done (took 1.765872697 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.765571872 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.764806583 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.764171282 seconds)
  done (took 14.054548889 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.767908836 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.931433518 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.998195491 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.451924327 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.770089489 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.771883814 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.717615175 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.773054461 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.773736772 seconds)
  done (took 19.657039027 seconds)
done (took 107.136644387 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.576714134 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.763974197 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.157125559 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.820997954 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.854689038 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.060964598 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.796753239 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.988311832 seconds)
done (took 42.72229515 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.801069813 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.237628341 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.249888989 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.456331898 seconds)
  done (took 11.646454395 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.749258617 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.289572828 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.800902829 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.362739326 seconds)
  done (took 19.917973874 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.133673053 seconds)
    (2/2) benchmarking "read"...
    done (took 2.122094616 seconds)
  done (took 5.963170754 seconds)
done (took 46.033304209 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.768927919 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.768909091 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.767232296 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.767333786 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.769785639 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.76613977 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.767195635 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.768403179 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.769115657 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.77012913 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.77073417 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768756705 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.767201626 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767153132 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769161805 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.767136643 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767120228 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.767068763 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.7704758 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.768396837 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.769949 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.76722875 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.76647252 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.771647169 seconds)
  done (took 44.145558484 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.771266668 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.769193607 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.772288312 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.771408156 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.769284528 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.769172494 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.769495707 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.767916248 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.771021051 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.770083058 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.767788672 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.768663973 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.771410697 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.769349146 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770544001 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.769397824 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.77043824 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769425327 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771606148 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.769335039 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.771569782 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769081529 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.768756976 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.771675923 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.77042491 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.7703429 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.772293151 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.77047531 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.772276999 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.769680268 seconds)
  done (took 54.811011997 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.777663871 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.780228007 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.772605307 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.772588172 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.772940753 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.772626057 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.772822744 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.77170605 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.772098563 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.771409718 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.771705411 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.774077051 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.774396934 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.773812868 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.771974173 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.771903086 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.772383292 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.774077263 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.773905152 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.773229567 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.774517327 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.77384374 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.773029874 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.773534868 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.774007014 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.77353792 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.77398044 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.774844661 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.773700143 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.773124276 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.773400757 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.77379813 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.774427754 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.773406351 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.774854002 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.774148674 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.779497681 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.783797969 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.775431641 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.774266569 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.773210991 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.773690808 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.775048283 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.774759546 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.775438735 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.774072867 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.775653273 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.775691444 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.775595081 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.775974548 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.775495552 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.775184331 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.776929455 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.77668657 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.776600504 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.774313111 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.776306668 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.776148436 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.776216312 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.775386705 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.776297098 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.776373829 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.776351233 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.776748692 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.777421705 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.776236084 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.776422878 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.774583562 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.775408691 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.777092589 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.774732192 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.776875506 seconds)
  done (took 129.494087261 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.776428734 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.775897321 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.772590684 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.774297779 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.77229766 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.77635673 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.773477271 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776481322 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774412559 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.776210206 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777606908 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.774938026 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77410264 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.777137434 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.776146587 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.773873753 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.778587831 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.774276962 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.778059785 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.776978084 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.776306704 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.77359974 seconds)
  done (took 40.769787083 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.777836407 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.777482236 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.77379799 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.777872978 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.774648912 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.777893119 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.778337502 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.777688428 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77802687 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.775738825 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776916951 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777359614 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.776188103 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775453708 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.777176864 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.775893757 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.777147507 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.775138468 seconds)
  done (took 33.691075438 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.775793983 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.776349577 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.776628619 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.774632585 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.777537685 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.780147813 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.775525972 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.778020304 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.77864768 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.774903471 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.779345469 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779766778 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.778161825 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775792781 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776237722 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.776434623 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.780108124 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.777089493 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.780149886 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.776536165 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.776968012 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.779956023 seconds)
  done (took 40.816129693 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.779865805 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.778107394 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.776788132 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.777992296 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.776386584 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.779542662 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.778819772 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.778522894 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.779886574 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.780761692 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.77624154 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.781566409 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.77691633 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.776817738 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.779153045 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.775994005 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.778295264 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.777229327 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.779595648 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.779526214 seconds)
  done (took 37.280967128 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.781976653 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782361933 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.779390098 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.781887685 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781560914 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.78184943 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.780458794 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.782759793 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.782158805 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.7816118 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.782459148 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.781732649 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.778984135 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.783264009 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.781333753 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781766765 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.781025779 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.783436155 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.781833054 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.780579554 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.78344608 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.780772587 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.78352045 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.782729179 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.781749741 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.783461005 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.783682673 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.783650626 seconds)
  done (took 51.609789597 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.78361174 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.780412017 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.777860837 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.779987297 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.780500102 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.779288673 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.777640142 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.781540977 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.783177599 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.7811752 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.782632486 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.782339442 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.782971272 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.780661966 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.780189787 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.781665116 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780454513 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.781247989 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.779243073 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778318319 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.78253603 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783504036 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.781234681 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.778838067 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778149718 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.781476059 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.779085157 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.781569364 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.782381828 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.780228569 seconds)
  done (took 55.138819794 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.801690413 seconds)
    (2/2) benchmarking "in"...
    done (took 1.801512513 seconds)
  done (took 5.318022178 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.781833511 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.782621302 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.781817185 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.780998337 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.780203863 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.783215283 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.783552718 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.781927078 seconds)
  done (took 15.971697206 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.783951466 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.782945491 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.782877292 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.781986483 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.783208619 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.784232508 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790432646 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.784969585 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.786303451 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.782624599 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.789983399 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.792540655 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.787921901 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.784579081 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.785594495 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.785308642 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.783169339 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.784653519 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.785568964 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.783367562 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.783828218 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.786350106 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.786461106 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.78304813 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.78624523 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.796415078 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.790232238 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.783401016 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.784689004 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.790180517 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.785317404 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.782857005 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.786813768 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.785444883 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.784231377 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.786495673 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.795603818 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.786879106 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.791820666 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.787261624 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.785346282 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.782701187 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.788463758 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.789586868 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.786380991 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.788672813 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.788539433 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.781036299 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.787204078 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.787109215 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.792428072 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.786146616 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.782215153 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.792562142 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.78849503 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.794502756 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.787308039 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.788994903 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.795799457 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.797398029 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.802732994 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.79444484 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.788535036 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.788997802 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.796824736 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.808954418 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.796200433 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.783731929 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.784585993 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.785831282 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.796113655 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.801748009 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.799119252 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.788065881 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.786828502 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.790091167 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.788872769 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.785707703 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.797069107 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.79040451 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.788703773 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.788242585 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.79798575 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.809556181 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.787452108 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.787045392 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.790002191 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.790348377 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.790012376 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.801533051 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.791672415 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.786889177 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.788329305 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.789378714 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.791921421 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.789879897 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.789062534 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.78886713 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.785185406 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.790398782 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.789066314 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.792446208 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.79778207 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.789846952 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.790501382 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.796194822 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.791504116 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.787735268 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.800349792 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.788466016 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.790067057 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.790881034 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.799462021 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.787484696 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.794196057 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.797734494 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.789797476 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.792964633 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.790392748 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.791345592 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.798328591 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.816811351 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.78971456 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.788956016 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.794171746 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.802948968 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.790067823 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.795146234 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.789942834 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.787820022 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.788856648 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.792467371 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.790108893 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.792701996 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.789841012 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.792267405 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.785671543 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.78988514 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.792444893 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.791969105 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.79290337 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.792024691 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.792131214 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.79639711 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.792096247 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.794216496 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.799184819 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.794857908 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.792316072 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.793637631 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.787449876 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.794960327 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.794469176 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.792709066 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.793966224 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.793085319 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.791060474 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.793152845 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.792448323 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.79208994 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.790431831 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.792515664 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.797415094 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.792449884 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.797108052 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.793939039 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.788860524 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.791365347 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.793005165 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.793844008 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.790915148 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.789615484 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.794497614 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.800905924 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.791488617 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.791362929 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.795295972 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.792933167 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.791764761 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.791626582 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.794021694 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.80303947 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.79211756 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.80039903 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.792852587 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.793603934 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.794060689 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.794744368 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.792964317 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.793630031 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.79697825 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.800685032 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.807393793 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.803110488 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.793627463 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.795895023 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.794740508 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.796036894 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.798510459 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.793545368 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.793291676 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.794370482 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.79314087 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.792104313 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.796629565 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.794765431 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.793321358 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.792908027 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.793830224 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.794105684 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.794565633 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.79764766 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.796235794 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.790872562 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.795557605 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.795015175 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.79350587 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.792355633 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.792594718 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.794000688 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.79470706 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.795658858 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.805496026 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.792789848 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.796987843 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.795711245 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.795299136 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.791800353 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.794608634 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.797260404 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.795688547 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.802991413 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.79645846 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.795165775 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.80137238 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.796847723 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.796108662 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.79811465 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.795765207 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.791550383 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.797955774 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.802951583 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.795448031 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.796164887 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.797085491 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.798651361 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.795151181 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.804179626 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.792749025 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.794770985 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.797496016 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.798244207 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.793210073 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.797448925 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.797229157 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.797687618 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.799942712 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.79549762 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.794328945 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.800580523 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.797260168 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.797060066 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.797795677 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.799279005 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.806193702 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.804545288 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.798077478 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.799943143 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.79944404 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.802155829 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.798885687 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.796454367 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.798521501 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.811721036 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.807402623 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.807936792 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.800716217 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.796485101 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.804137707 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.799844445 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.803835816 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.801213573 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.799436263 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.800708572 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.797010603 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.796956811 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.801428619 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.797834739 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.799995556 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.799619603 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.80385236 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.798577768 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.798280307 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.798340623 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.798493685 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.797837822 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.799094386 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.799124684 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.803392263 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.801988139 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.798046653 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.798962217 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.807206833 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.801123798 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.80328659 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.79821235 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.797637058 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.799681055 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.799704012 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.799072635 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.802934635 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.807441126 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.803387512 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.811529108 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.801650419 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.810653355 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.799048435 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.803304421 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.806973279 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.797641595 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.800040944 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.800622968 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.800730819 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.809922577 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.800371519 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.801184849 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.805850113 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.800675284 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.803187371 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.799874136 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.80069843 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.800481473 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.802713181 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.81006823 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.802776174 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.806125614 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.803348409 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.798820082 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.803442396 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.800228538 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.798860553 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.810394281 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.80070584 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.804086834 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.799984371 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.804097915 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.799641076 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.801477218 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.802369183 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.798498637 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.801396993 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.809601504 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.801321303 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.805063425 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.804110391 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.814487031 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.80416472 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.812118168 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.802695558 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.803495025 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.802292054 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.803912067 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.805207509 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.801433012 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.806742253 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.803618643 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.80524745 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.805278925 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.804696611 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.805651364 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.805244385 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.804647128 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.802709055 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.814790653 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.827564814 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.803408442 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.807849523 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.799193908 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.804288659 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.808196926 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.80532383 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.802498681 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.804849287 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.814474808 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.81128238 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.805602239 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.805259537 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.80379322 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.805015597 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.803791634 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.804149863 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.805015703 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.804517774 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.808248142 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.80448934 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.811111902 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.80415487 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.806357009 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.804627983 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.807496458 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.816328834 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.804313733 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.805977197 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.807725115 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.80399069 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.804980202 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.803434223 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.805534848 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.806613705 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.804279712 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.806705095 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.810244638 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.81183357 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.806189514 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.804648695 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.804798872 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.806754008 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.806509903 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.80764394 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.80776134 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.803256489 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.807311838 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.805019269 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.807735234 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.804289139 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.804323933 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.806449044 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.806272232 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.80827978 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.814166117 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.807591026 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.80257281 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.806193631 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.805612732 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.807998998 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.806809694 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.825664855 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.810105509 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.81650268 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.816401497 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.811437743 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.811273951 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.809603932 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.81546226 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.805190141 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.806767323 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.807791943 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.813921928 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.806643733 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.810423101 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.808461878 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.814843176 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.809733225 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.808262704 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.817132494 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.807906763 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.807847605 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.807582008 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.815737859 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.808616591 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.803094649 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.808180193 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.809045147 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.820784714 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.811857247 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.808820674 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.808570548 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.8074579 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.808712063 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.816513279 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.807250222 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.808685876 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.805794679 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.808878202 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.81220432 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.808950628 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.805279553 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.809473837 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.810643879 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.812109173 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.817729216 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.806060965 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.81209562 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.809056127 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.809920063 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.810800626 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.808253851 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.807173629 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.807284062 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.808989318 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.809112131 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.813035143 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.812749466 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.810131653 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.811994232 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.811307067 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.810833315 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.810545601 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.820878818 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.816167953 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.806957892 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.809616098 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.810638755 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.813203056 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.810660889 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.810782905 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.813368426 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.813280844 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.809950318 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.810735074 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.811923263 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.815511811 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.830208386 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.811225588 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.8125385 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.81312163 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.815867109 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.810760921 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.809110443 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.812641968 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.815841451 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.815691694 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.8180481 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.811948938 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.819315756 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.812424057 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.812930737 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.816679678 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.815810568 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.820153617 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.820763548 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.811786809 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.813053358 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.817495192 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.8291192 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.816651875 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.825173146 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.843680713 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.812577403 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.815558232 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.814194599 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.813348578 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.812897528 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.816523319 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.813809982 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.81294487 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.81487869 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.813661811 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.815933415 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.819620223 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.814013408 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.813182833 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.817162455 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.813060902 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.817817503 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.810921096 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.812910353 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.812350564 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.81275978 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.814630797 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.815189143 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.814553291 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.829938829 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.82624578 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.812876798 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.817771896 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.810813539 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.819115187 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.817257307 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.82433835 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.822440422 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.815157723 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.81453798 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.816364338 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.815387651 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.81026683 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.816142504 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.815345368 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.813639384 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.812074024 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.830386123 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.82354885 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.82348395 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.815474736 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.816858191 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.816706578 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.816828571 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.81643606 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.815610596 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.818517577 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.815759634 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.820309131 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.814474328 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.81661537 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.818325285 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.822697757 seconds)
  done (took 1075.480497161 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.815081986 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.812589328 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.814306674 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.812989755 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.814159002 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.814743988 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814371763 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.814066099 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.813150927 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.815725239 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.816016291 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.813525373 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.813156597 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.81521354 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813837137 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.813126494 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.812858307 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.812574502 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.813991408 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813423737 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.81310595 seconds)
  done (took 39.840386987 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.81600891 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.814149196 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.812658847 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.815629424 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.812639056 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.814897144 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.813811271 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.8171774 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.815369096 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.812991384 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.816809402 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816653672 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.814242943 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.814695307 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.814654902 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.816363297 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.816068756 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.814772699 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.817426765 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.81240345 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.819390715 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.814890936 seconds)
  done (took 41.681647924 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.818026233 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.819022342 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.817565053 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.812821119 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.816027097 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.813520015 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.818335604 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.817001776 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.817170399 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.820081989 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.816996834 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.819099259 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.824480435 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.823308029 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.822298603 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.819044186 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.962267641 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.820755983 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.819283951 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.818738142 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.816019049 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.826244914 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.814854377 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.81778351 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.818244539 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.819271733 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.817778248 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.819243782 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.819362704 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.818824708 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.822922191 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.817162442 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.820223752 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.822983292 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.821940228 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.820194127 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.820761668 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.819316012 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.815286206 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.819450004 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.829079878 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.841421305 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.82097435 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.828115419 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.81873703 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.820823462 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.824419235 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.827086632 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.815934684 seconds)
  done (took 91.081769837 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.820899617 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.819898595 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.816472988 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.819577717 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.820661456 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.821135128 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.819883603 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.820694918 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.81845464 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.817565368 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.820379747 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.817945074 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.819480415 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.821349679 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.821311807 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.818827374 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.818760888 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.820543872 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.818144531 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.818520779 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.817799265 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.821112601 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.822044135 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.818654269 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.82144328 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.819371446 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.818739554 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.822525396 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.819684949 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.820843907 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.820914432 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.821492851 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.82117709 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.820264302 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.818075059 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.82276151 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.822425608 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.81990527 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.822446819 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.818344793 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.823886453 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.822179065 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.822762544 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.823644748 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.819845829 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.822399982 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.820796831 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.820484553 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.820383497 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.822178635 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.823816027 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.820413059 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.824056197 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.819119655 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.823336107 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.824863707 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.822501441 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.820861876 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.821627204 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.82045287 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.81970561 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.822934753 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.822178804 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.824653793 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.825087829 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.821918938 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.822960091 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.82487425 seconds)
  done (took 125.577744002 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.824435091 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.82377769 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.823758219 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824559106 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.82586363 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.824989074 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.824794103 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.824981099 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.825222348 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.825292384 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.824942335 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.824347706 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.824826297 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.824592391 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.823531408 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.824612223 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.824168461 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.822739873 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.826210955 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.823531428 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.824591927 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.82403516 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.824292913 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.824824749 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.825632973 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.824552456 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.823858853 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.826713783 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.825902844 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.824949959 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.824971867 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.824256601 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.825499448 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.825267803 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.827041558 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.827931542 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.824529122 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.826388436 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.825983062 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.824618436 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.828711337 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.82825315 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.825966392 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.827697035 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.827438477 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.827449809 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.826061162 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.827827977 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.826090838 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.82665862 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.826368598 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.827378282 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.827619771 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.826595031 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.826376296 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.826870909 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.826740039 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.827474111 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.828355865 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.826281761 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.830346125 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.827328278 seconds)
  done (took 114.955054446 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.826994826 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.826745615 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.825164697 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.823426817 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.827440438 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.824239526 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.827598741 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.828678432 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.828131263 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.826124758 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.827119423 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.825606598 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827337719 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.827190566 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.825187333 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.825547187 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.825464559 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.825267709 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.830781048 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.823867117 seconds)
  done (took 38.28873209 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.825362859 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.829043464 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.825413157 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.827598263 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.828613025 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.824702184 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.829489163 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829062962 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829488173 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.829436894 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.829173648 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.828522877 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.827147188 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.825841396 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.83011094 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.82811033 seconds)
  done (took 31.007125766 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.826841028 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.826407189 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.830327084 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.829547881 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.827470506 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.826676233 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.830080469 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.826533349 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.827715589 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.830405863 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.82816003 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.829990817 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.829627136 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.830481302 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.827591044 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.831896301 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.829919094 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.827475311 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.830966016 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.831282709 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.828986041 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.829814379 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.834455307 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.830278478 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.827426479 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.829658965 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.829946708 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.828894221 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.828016594 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.831050591 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.828121331 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.826968717 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.827856807 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.831046637 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.830979158 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.829645915 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.830979486 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.831676208 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.830933234 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.829618204 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.832671871 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.829449946 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.831457927 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.831893533 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.829216829 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.831440501 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.8310476 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.828218118 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.828099747 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.829176713 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.834332636 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.833720194 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.831392453 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.832697144 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.831439791 seconds)
  done (took 102.403747073 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.831869484 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.83243199 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.830783984 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.831991362 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.832867585 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.830107436 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.831068141 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.830757567 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.831080362 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.83365155 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.831697738 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.833577687 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.831477883 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.83416235 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.832460418 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.832155164 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.831478002 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.831370215 seconds)
  done (took 34.738069831 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.830644224 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.831439063 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.834941742 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.832011908 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.832183731 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.832268641 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.829966521 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.834699318 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.835160267 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.830699712 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83085142 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.833298796 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.83280769 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.832708689 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.832229985 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832802172 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.832635368 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.833598739 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.830868771 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.831150509 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.835036663 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.834118307 seconds)
  done (took 42.081158832 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.832468274 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.832626046 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.851102369 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.879485868 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.869924688 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.833952209 seconds)
  done (took 12.864159726 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832820885 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836401768 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.831924616 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837291049 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835982595 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834362813 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833833708 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831891521 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835025683 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831983428 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832977635 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836084807 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835624472 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831869173 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836360875 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838001836 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832614409 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835674652 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834743153 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837035521 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835184379 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836570791 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834035425 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832638788 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832929985 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834266485 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836185021 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833293689 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833412536 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838291637 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837790731 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83562115 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837283219 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833189164 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841859677 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839842011 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83473466 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840494077 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837988079 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836347003 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.835745841 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837051275 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83820602 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835754416 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836382018 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834484389 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8356755 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836530967 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836354246 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836652988 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840066323 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834684881 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839356958 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837549724 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838077482 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839806284 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835311122 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833909927 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837965063 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83597402 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837260748 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83829267 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83487754 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837407915 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840543507 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835766996 seconds)
  done (took 122.941871584 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837214482 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.837317627 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835963555 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836953566 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83781698 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837420861 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836070167 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835849013 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836877153 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835779744 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83979683 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838296807 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836382547 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840089864 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837674116 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837540598 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838109772 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836337039 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838362753 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841320399 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835776589 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838835807 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839253735 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837613639 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837831473 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840601588 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839996653 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838286316 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837654785 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838553238 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838218461 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839282981 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83848376 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.841123324 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839302416 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838621632 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837484046 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840856225 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839878445 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841879595 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839825056 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841970508 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838915217 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840108846 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838377754 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839908537 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837611674 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841227144 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838117786 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839657644 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840847846 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841634976 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839544943 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838757321 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841025831 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840161947 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839263649 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841293468 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838496133 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843659947 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838918615 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840307915 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844303928 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839785027 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838524141 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839233034 seconds)
  done (took 123.144293458 seconds)
done (took 2506.83768844 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.930449526 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.883956632 seconds)
  done (took 15.586848769 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.008160856 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.957111177 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.843607902 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.862498485 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.843969888 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.837866377 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.863337285 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.842464462 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.842893159 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.843906139 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.842531501 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.030556564 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.838162747 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.84108089 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.845916138 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.937289449 seconds)
  done (took 52.047662813 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.847877095 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.847382391 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.860421094 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.851082143 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.848747231 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.866462445 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.877155217 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.851563775 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.908183933 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.87157331 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.972826535 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.859027103 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.850173939 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.901698932 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.861757995 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.863838983 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.947940258 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.926209772 seconds)
  done (took 35.589301545 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.930076996 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.849429862 seconds)
  done (took 10.566364967 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.879604774 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.862197124 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.84535168 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.869093343 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.857888853 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.878340702 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.881170194 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.851521466 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.880585144 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.870989246 seconds)
  done (took 70.457471372 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.856305424 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.852354406 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.849724943 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.846390706 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.843061644 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.845373689 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.847510872 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.844784385 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.546474422 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.883350047 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.853753675 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.855640742 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.846098663 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.85117451 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.846979003 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.871764404 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.962369703 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.846404118 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.845247503 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.854477299 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.851526291 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.94262916 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.863078643 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.849745862 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.880858539 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.543692199 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.857100657 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.855340678 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.004216293 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.849541482 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.84790928 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.848864265 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.852139313 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.240123492 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.16708299 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.848181838 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.857570328 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.856714819 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.848450343 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.022772193 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.849167771 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.854998322 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.844272196 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.155275441 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.936132896 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.893508312 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.228052443 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.854972512 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.851001297 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.881368038 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.851649085 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.852487343 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.866246623 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.358304646 seconds)
  done (took 131.795839762 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.84749893 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.422108074 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.011194731 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.844775128 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.129598766 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.088149648 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.84513881 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.896174158 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.847089369 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.096494589 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.022900511 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.9672512 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.845436875 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.846172838 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.845994749 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.842848435 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.000732596 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.918350565 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.846255191 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.844238194 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.883565378 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.111799696 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.974221308 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.84621782 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.869216367 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.07305379 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.974327642 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.965534704 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.36929155 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.843791255 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.91447155 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.847505168 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.848341941 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.843558928 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.011912052 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.955751391 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.94781461 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.84702103 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.843910592 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.843086345 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.510067951 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.07093244 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.958717291 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.985130859 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.096948722 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.076325541 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.496205823 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.845035591 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.484778797 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.042661964 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.058673481 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.10358757 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.978550939 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.850803168 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.09312437 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.846178735 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.847675011 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.109406025 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.077263101 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.963295565 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.850187808 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.848363028 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.848938866 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.16721339 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.852548312 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.959603254 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.850210462 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.848571 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.963603288 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.96511632 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.079814405 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.092860668 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.880429452 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.710128553 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.355625518 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.135337554 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.919893111 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.112324135 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.8508447 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.846595212 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.942395812 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.600842611 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.023264502 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.167812729 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.117278094 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.89073152 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.451873805 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.849656697 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.098707132 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.100931652 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.081579097 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.095007056 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.017355613 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.170673684 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.847913537 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.847719663 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.051251869 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.982878842 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.852104555 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.210882374 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.099925367 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.579084433 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.881670087 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.156517645 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.991142382 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.847891103 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.475554782 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.84981909 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.051697175 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.893476769 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.850014682 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.85150703 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.101267156 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.72226289 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.849097589 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.636850306 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.918935741 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.851889162 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.120428996 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.855689622 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.095192382 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.854127244 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.164171187 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.360259824 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.895121722 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.044837526 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.095804947 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.639466268 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.121642747 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.166280886 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.979026944 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.114104129 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.669861887 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.850163345 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.136619054 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.852902648 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.850914077 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.022667542 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.854177894 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.008322834 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.853302815 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.114616893 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.87852325 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.025398838 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.854309161 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.130557057 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.897860092 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.9048522 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.854714836 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.969502264 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.853055264 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.891456229 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.03703467 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.85537367 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.851522422 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.445298833 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.854542773 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.001825253 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.154147949 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878502813 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.926940232 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.378575398 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.851097828 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.949641223 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.881402547 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.453764184 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.855817516 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.025323773 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.855617684 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.831060885 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.852261694 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.164971919 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.079285134 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.854031141 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.853375299 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.649162971 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.562738848 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.853433081 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.03098223 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.085651675 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.506247052 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.076693296 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.853838788 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.987329455 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.855098071 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.927019278 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.207119021 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.855474707 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.854838696 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.853474903 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.855494476 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.854280153 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.084314392 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.885241407 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.544856081 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.99328699 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.1022581 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.169537571 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.122841898 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.90664524 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.861564728 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.124981468 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.860856486 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.924683403 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.856395046 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.879281129 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.105871423 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.858271464 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.085178076 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.146395732 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.909295417 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.905912712 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.859276559 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.854419933 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.855596917 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.001724267 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.959276125 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.859210408 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.858226349 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.975774729 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.984832907 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.049487487 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.447082765 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.030296801 seconds)
  done (took 900.063020684 seconds)
done (took 1217.878646197 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.857729131 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.860752392 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.843698324 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.853849494 seconds)
  done (took 29.208809997 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.860836677 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.8583589 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.860306621 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.857122609 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.860184141 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.858614362 seconds)
  done (took 12.945712504 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.879667256 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.854936624 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.855919549 seconds)
  done (took 21.381140813 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.927693297 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.271802609 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.964514961 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.310146065 seconds)
  done (took 10.264620576 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.860886683 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.86005944 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.860340664 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.862569392 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.862323988 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.863320684 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.861643625 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.863736601 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.863840271 seconds)
  done (took 18.550859591 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.027416913 seconds)
done (took 98.172586761 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.23426332 seconds)
    (2/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.841067148 seconds)
    (3/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.203135363 seconds)
    (4/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.921415376 seconds)
    (5/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.261161505 seconds)
    (6/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.035548142 seconds)
    (7/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.189460663 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.243185599 seconds)
    (9/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.882432855 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.988712375 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.216593973 seconds)
    (12/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.920363825 seconds)
    (13/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.840265312 seconds)
    (14/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.300128425 seconds)
    (15/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.843489281 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.92815778 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.890888071 seconds)
    (18/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.458758468 seconds)
    (19/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.926279076 seconds)
    (20/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.730437712 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.861742383 seconds)
    (22/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.219027538 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.539488859 seconds)
    (24/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.907957911 seconds)
    (25/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.875568641 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.875549396 seconds)
    (27/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.777296078 seconds)
    (28/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.068848544 seconds)
    (29/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.886040269 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.541005112 seconds)
    (31/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.021861328 seconds)
    (32/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.843185896 seconds)
    (33/309) benchmarking ("perf_sum", Float32, true)...
    done (took 3.154798472 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.95969704 seconds)
    (35/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.862237254 seconds)
    (36/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.738799343 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.856136013 seconds)
    (38/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.858335986 seconds)
    (39/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.001085003 seconds)
    (40/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.055628349 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.861462941 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.776002281 seconds)
    (43/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.120755658 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.650827111 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.160338319 seconds)
    (46/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.023371077 seconds)
    (47/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.148998935 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.002248457 seconds)
    (49/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.469755871 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.84450135 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.128978825 seconds)
    (52/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.23199461 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.149774307 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.229871236 seconds)
    (55/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.944409511 seconds)
    (56/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.262076096 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.858859125 seconds)
    (58/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.188157577 seconds)
    (59/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.886351405 seconds)
    (60/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.20029189 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.916927202 seconds)
    (62/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.221404125 seconds)
    (63/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.95992882 seconds)
    (64/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.694554491 seconds)
    (65/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.847644382 seconds)
    (66/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.252368822 seconds)
    (67/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.860845422 seconds)
    (68/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 5.273098107 seconds)
    (69/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.993386928 seconds)
    (70/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.5942909 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.05886413 seconds)
    (72/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.843137668 seconds)
    (73/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.045841721 seconds)
    (74/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.839147315 seconds)
    (75/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.945270076 seconds)
    (76/309) benchmarking ("sort", BigInt, false)...
    done (took 6.858955028 seconds)
    (77/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.957407659 seconds)
    (78/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.161689044 seconds)
    (79/309) benchmarking ("sort", Float64, false)...
    done (took 5.666257068 seconds)
    (80/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.45763435 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.542398977 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.822947149 seconds)
    (83/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.88690775 seconds)
    (84/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.940162915 seconds)
    (85/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.846328763 seconds)
    (86/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 9.480405262 seconds)
    (87/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.114734575 seconds)
    (88/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.869223464 seconds)
    (89/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.181164048 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.8681767 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.854728585 seconds)
    (92/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.002384594 seconds)
    (93/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.386834422 seconds)
    (94/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.058650033 seconds)
    (95/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.849986076 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.929067686 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.781415313 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.248256522 seconds)
    (99/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.062178886 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.196986913 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.865833393 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.109923553 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.511780794 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.867702446 seconds)
    (105/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 3.492816406 seconds)
    (106/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.845315965 seconds)
    (107/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.983223397 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.963931798 seconds)
    (109/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.025918458 seconds)
    (110/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.442924951 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.064136832 seconds)
    (112/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.924911735 seconds)
    (113/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.889528402 seconds)
    (114/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.139897521 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.862949867 seconds)
    (116/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.027356999 seconds)
    (117/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.385376433 seconds)
    (118/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.971161816 seconds)
    (119/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.851139686 seconds)
    (120/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 9.63004773 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 2.384893382 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.887793457 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.142404276 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.971191601 seconds)
    (125/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.141975747 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.080487601 seconds)
    (127/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.126319669 seconds)
    (128/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.379995205 seconds)
    (129/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.874050474 seconds)
    (130/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.959461111 seconds)
    (131/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.876719577 seconds)
    (132/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.868244563 seconds)
    (133/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.40611501 seconds)
    (134/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.077317349 seconds)
    (135/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.261024489 seconds)
    (136/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.534987171 seconds)
    (137/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.548557435 seconds)
    (138/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.866469316 seconds)
    (139/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.372054996 seconds)
    (140/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.984448182 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.250730696 seconds)
    (142/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.236369898 seconds)
    (143/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.966947199 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.141646231 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.092700363 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.892928547 seconds)
    (147/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.058832078 seconds)
    (148/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.158760205 seconds)
    (149/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.95431081 seconds)
    (150/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.033803936 seconds)
    (151/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.219534717 seconds)
    (152/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.20457584 seconds)
    (153/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.855664582 seconds)
    (154/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.007706695 seconds)
    (155/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.045741354 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.890877719 seconds)
    (157/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.890067549 seconds)
    (158/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.550237083 seconds)
    (159/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.007432651 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.890790832 seconds)
    (161/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.924564567 seconds)
    (162/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.95574069 seconds)
    (163/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.999113721 seconds)
    (164/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.12395044 seconds)
    (165/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.009084928 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.773478472 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.806665433 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.202274513 seconds)
    (169/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.885568554 seconds)
    (170/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.224189091 seconds)
    (171/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.180914838 seconds)
    (172/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.982027865 seconds)
    (173/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.950306873 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.872816549 seconds)
    (175/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.873118013 seconds)
    (176/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.029938712 seconds)
    (177/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.924989182 seconds)
    (178/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.947060148 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.866876714 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 3.155077298 seconds)
    (181/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.04052241 seconds)
    (182/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.907569133 seconds)
    (183/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.084167173 seconds)
    (184/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.020356971 seconds)
    (185/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.374650428 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.867868564 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.976179711 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.913269606 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.8700789 seconds)
    (190/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.856591105 seconds)
    (191/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 3.468907481 seconds)
    (192/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.55150655 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.863470233 seconds)
    (194/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.178359836 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.93379985 seconds)
    (196/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.987055636 seconds)
    (197/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.170305312 seconds)
    (198/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.885099924 seconds)
    (199/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.197304755 seconds)
    (200/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.931422445 seconds)
    (201/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.109168542 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.974507 seconds)
    (203/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.597991902 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.078959119 seconds)
    (205/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.878401005 seconds)
    (206/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.240117784 seconds)
    (207/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.407620122 seconds)
    (208/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.117432084 seconds)
    (209/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.895770595 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.112752229 seconds)
    (211/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.183258001 seconds)
    (212/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.433213056 seconds)
    (213/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.963732791 seconds)
    (214/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.986768216 seconds)
    (215/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.890015527 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.285942411 seconds)
    (217/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.999526131 seconds)
    (218/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.759567986 seconds)
    (219/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.491947845 seconds)
    (220/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.908836867 seconds)
    (221/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.865721764 seconds)
    (222/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.177917088 seconds)
    (223/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.104302118 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.770834268 seconds)
    (225/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.857973959 seconds)
    (226/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 3.321558562 seconds)
    (227/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.867845979 seconds)
    (228/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.895651285 seconds)
    (229/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.140631587 seconds)
    (230/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.896684028 seconds)
    (231/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.969796271 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.169375317 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.944306921 seconds)
    (234/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.952249313 seconds)
    (235/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.946247137 seconds)
    (236/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.855181032 seconds)
    (237/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.081045559 seconds)
    (238/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.273727026 seconds)
    (239/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.893766438 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.530807726 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.248553731 seconds)
    (242/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.386664193 seconds)
    (243/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.401816195 seconds)
    (244/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.060276678 seconds)
    (245/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.698352311 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.213720991 seconds)
    (247/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.170268244 seconds)
    (248/309) benchmarking ("sort", Int8, false)...
    done (took 4.874354411 seconds)
    (249/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.95349092 seconds)
    (250/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.852776171 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.176100816 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.968260055 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.199120095 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.870805499 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.96948017 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.166355017 seconds)
    (257/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.872395217 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.901430121 seconds)
    (259/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.177113755 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.464012881 seconds)
    (261/309) benchmarking ("sort", Float32, false)...
    done (took 5.640629319 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.048239171 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.252698594 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.514259637 seconds)
    (265/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.941987432 seconds)
    (266/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.895875962 seconds)
    (267/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.105057423 seconds)
    (268/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.552926903 seconds)
    (269/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.975259559 seconds)
    (270/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.870810625 seconds)
    (271/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.910732871 seconds)
    (272/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.995133619 seconds)
    (273/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.565870859 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.136554553 seconds)
    (275/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.87391329 seconds)
    (276/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.038309733 seconds)
    (277/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.089384457 seconds)
    (278/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.090540776 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.109878701 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.859994805 seconds)
    (281/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 4.380067142 seconds)
    (282/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.05623479 seconds)
    (283/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.012136748 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.970703947 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.920823419 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.953023241 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.122810095 seconds)
    (288/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.872563977 seconds)
    (289/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.115942779 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.986479846 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.895371586 seconds)
    (292/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.051604251 seconds)
    (293/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.106850002 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.150470322 seconds)
    (295/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.966443631 seconds)
    (296/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.89137863 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.785618093 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.925073075 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.945570271 seconds)
    (300/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.488556087 seconds)
    (301/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.340910593 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.923322028 seconds)
    (303/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.014625612 seconds)
    (304/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.885283206 seconds)
    (305/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.968299749 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.897827272 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.916897702 seconds)
    (308/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.872532397 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.017525268 seconds)
  done (took 1023.167913531 seconds)
done (took 1024.975071416 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.909222865 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.899969316 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.881980661 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.90828516 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.995935728 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.918386396 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.894031824 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.885033416 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.933248983 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.933442485 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.883096616 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.917480902 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.88534823 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.883353293 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.882714106 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.899243264 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.190759706 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.910651355 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.900349899 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.895062586 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.902554428 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.884519104 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.933611637 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.917709373 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.889533071 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.888510501 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.889055778 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.903994127 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.996315772 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.888975093 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.888683461 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.896169303 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.191943184 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.908905169 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.879588828 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.905193738 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.898147668 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.893971863 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.888836184 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.918837116 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.335703629 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.89060411 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.888059107 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.885619605 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.887574485 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.890539569 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.887986342 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.894815522 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.899290059 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.89996147 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.33135467 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.90517716 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.888753842 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.886518975 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.897898136 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.888206236 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.891624207 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.905384992 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.90527868 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.90273201 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.18432133 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.914762754 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.889391344 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.905775274 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.894909236 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.367684079 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.887511742 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.891507932 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.335232757 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.898685853 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.371809927 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.90061893 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.888954941 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.900947826 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.920234989 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.195298176 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.907132334 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.885763462 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.894977866 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.886173601 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.897737393 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.899689621 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.892535346 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.887547825 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.901584277 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.921115686 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.898724153 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.890688992 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.897315552 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.906607755 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.896370261 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.900052997 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.89132457 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.884234761 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.89725943 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.892231747 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.891086295 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.890270127 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.894122224 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.898425435 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.33483874 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.909725382 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.885991361 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.886083017 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.887665605 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.903845451 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.335177156 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.894448493 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.911744598 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.937205901 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.889910446 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.186276425 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.918351797 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.905560008 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.898890161 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.89195582 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.886055772 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.185357957 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.357385968 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.907635349 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.892830041 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.889597223 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.906709967 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.892528461 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.88869404 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.194806823 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.915343232 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.905366784 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.010194259 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.899345367 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.923146675 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.888970215 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.894554225 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.920076428 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.905598268 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.922749947 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.894563786 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.907515659 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.907028099 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.887345362 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.90255108 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.90095063 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.891774714 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.895627084 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.884959767 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.921240636 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.904126456 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.90415695 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.914846526 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.012411271 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.890474858 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.187782655 seconds)
done (took 296.776553915 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.958690344 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.879806752 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.991033371 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.885714462 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.972351647 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.973807672 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.884754756 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.884044309 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.884198621 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.27015796 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.88583481 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.894383119 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.885591507 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.885131289 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.970267838 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.888098624 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.883396837 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.230402772 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.888725634 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.959730286 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.883059846 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.885296847 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.887847593 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.270725259 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.885779561 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.883641884 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.960731757 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.890227376 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.235670732 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.886601869 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.887711296 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.235042789 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.978729271 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.906119406 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.896905408 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.895039834 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.973913692 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.891323733 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.971627773 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.97193192 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.99533326 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.930218161 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.889291249 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.886818126 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.891610527 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.890506991 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.886181978 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.91751486 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.879863951 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.886947418 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.23399996 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.899122132 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.897521373 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.888032976 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.887670508 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.913476099 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.887285461 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.891609226 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.981957131 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.89268695 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.956061223 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.273949674 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.272206478 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.889554469 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.886657784 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.889214317 seconds)
  done (took 185.644373265 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.957521578 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.967018641 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.960628817 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.892974119 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.943542563 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.964594767 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.891835193 seconds)
  done (took 15.395077518 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.896731526 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.891730775 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.940723922 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.941816927 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.891337818 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.041934291 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.891689332 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.903462372 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.888924917 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.945500921 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.893615119 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.89261653 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.899353294 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.891741237 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.940777293 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.90365114 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.006818297 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.893189392 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.894375724 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.050484656 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.890622005 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.900150931 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.948996129 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.904942311 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.895304772 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.899582478 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.47647053 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.893851138 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.891058956 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.892960231 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.891135595 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.935827969 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.895095428 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.889164408 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.891604593 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.009399922 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.893976361 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.892384111 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.892954567 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.891965597 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.893651708 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.89370123 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.895143704 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.889571597 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.89324924 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.916873185 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.892334902 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.893831299 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.892357273 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.894286239 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.945295438 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.893056814 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.892182115 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.892556392 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.9506078 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.901453488 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.895804593 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.89148748 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.894505268 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.892000996 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.050885789 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.941995948 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.895361743 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.94359962 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.893377673 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.895991745 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.892935127 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.894264524 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.952350273 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.894205417 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.944078959 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.892919458 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.051074804 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.91994292 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.896561403 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.898052559 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.898257322 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.896998492 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.889354854 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.902429653 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.891247342 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.897805368 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.902791636 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.893367307 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.892211816 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.00337853 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.004195246 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.893242807 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.908256616 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.904558225 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.894324146 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.950222894 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.895974186 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.893312054 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.949817646 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.012687357 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.953800394 seconds)
  done (took 208.18852213 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.901728964 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.904369972 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.89796473 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.913800174 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.896812405 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.89750513 seconds)
  done (took 13.234508394 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.900430528 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.897941571 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.897194829 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.896815037 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.898448821 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.89859246 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.898240012 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.899836683 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.903896891 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.897125524 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.899993335 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.341633827 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.900473752 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.897079166 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.898195302 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.896045423 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.899107985 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.895836815 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.898920642 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.898416615 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.050786844 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.897951152 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.89848391 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.900170718 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.903829568 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.898566077 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.905184189 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.897128916 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.898077865 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.907140014 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.901277017 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.899397379 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.900779797 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.905478353 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.903826403 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.900693382 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.902588418 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.901753195 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.895419811 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.901879558 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.901796636 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.900823012 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.899180201 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.901657673 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.901055512 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.904008072 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.905112383 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.907170622 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.901355688 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.902272754 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.902132799 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.899432451 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.900849006 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.901116608 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.90463191 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.903320765 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.906549104 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.899201514 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.900913639 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.902948601 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.900068767 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.900376343 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.901394913 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.903039374 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.897692465 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.903702606 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.901103038 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.905437921 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.900036755 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.900658565 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.903774696 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.896685537 seconds)
  done (took 140.26965865 seconds)
done (took 564.562839373 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.154890379 seconds)
  done (took 8.979665646 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.993963674 seconds)
  done (took 8.912000712 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.570740279 seconds)
  done (took 10.398348349 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.910441645 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.920384261 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.905897946 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.895162182 seconds)
  done (took 29.469944938 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.279025603 seconds)
  done (took 9.106732754 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.909632864 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.891668583 seconds)
  done (took 15.696538434 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.974777788 seconds)
  done (took 8.803451287 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.996271264 seconds)
  done (took 8.829108308 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.911852457 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.906255561 seconds)
  done (took 15.659228664 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.880656025 seconds)
  done (took 8.708113417 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.66989103 seconds)
  done (took 11.511950489 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.903267438 seconds)
  done (took 8.745340775 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.944025019 seconds)
  done (took 8.771580971 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.091681806 seconds)
  done (took 9.92093145 seconds)
done (took 165.339409275 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.899205349 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.895159542 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.894776685 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.896239293 seconds)
  done (took 29.415022146 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.936039113 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.935678821 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.937258015 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.946243456 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.940720989 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.935222809 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.929434096 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.928199911 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.947457645 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.939641488 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.937332454 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.939174121 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.937424102 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.928707601 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.939950066 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.939283065 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.946299564 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.937302873 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.928204694 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.940658407 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.904438986 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.945430262 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.937842333 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.903806979 seconds)
  done (took 48.274911372 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.10339745 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.976648776 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.056786543 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.955192836 seconds)
  done (took 9.921120237 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.955047989 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.95676546 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.968194905 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.006781827 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.03271341 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.964424752 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.931962893 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.926052372 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.912784806 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.957487926 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.034115348 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.972464281 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.043911472 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.904437204 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.106242481 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.905116168 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.903656645 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.956076964 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.008590019 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.021598617 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.906207939 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.958928827 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.95945392 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.972867844 seconds)
  done (took 49.09483609 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.901969809 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.911347386 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.909817156 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.904167497 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.905290493 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.906094291 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.911907748 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.905459083 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.926592274 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.904936196 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.903685496 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.90432779 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.903754972 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.904673158 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.902558224 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.917261783 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.919527114 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.903114203 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.909224403 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.909413806 seconds)
  done (took 39.995691781 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.90030308 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.750155645 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.249002079 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.154368815 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.898976838 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.898893151 seconds)
  done (took 31.684041216 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.917150943 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.968107549 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.912196128 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.961936335 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.041916942 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.911939412 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.905757291 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.974463642 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.015247077 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.976797088 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.922917325 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.93289514 seconds)
  done (took 25.275472659 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.901642475 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.900071015 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.901535181 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.917565196 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.917646521 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.914514354 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.913793736 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.899961975 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.920053013 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.924854979 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.912456456 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.921011046 seconds)
  done (took 44.782915476 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990003143 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.947314098 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.91727871 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.588154188 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.278545172 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111616605 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.552573565 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.241899175 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.907921536 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176258261 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.944925818 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005227171 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.159457156 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.414802751 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.936522232 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.357797146 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.204881051 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100775134 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929542841 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.582157721 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966017963 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.112369505 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.71664872 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.962570642 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.113767613 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.031549164 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.163296247 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.902824268 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037421737 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93945743 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912470884 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.902598134 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17745885 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.27895114 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008452491 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915377216 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.523413672 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.614817334 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.894530653 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.677454418 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.645258015 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.031737562 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914032344 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904988327 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.837545684 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.075930267 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279525482 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.907279852 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.614345427 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.904730611 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914082647 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000899772 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.905714166 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.719333777 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822272762 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.90411851 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.906871508 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910024671 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.474225793 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.029529239 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.115909042 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.883122571 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.996787009 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.627456942 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28858692 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.055036135 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.908203435 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.907378767 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840027119 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.586698983 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961375057 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.233562403 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.924088565 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.554952627 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.219412865 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.007786861 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.848368477 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164715212 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.459240654 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.880514984 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134167305 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906680358 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840884245 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.852236939 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.840530523 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165836306 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942064195 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.660887844 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944685286 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.242373996 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.917865188 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923159975 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931405312 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.132045732 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.791177552 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905925181 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.724635837 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.05120978 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92631874 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.239385156 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841790038 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.909249982 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163856683 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.118134929 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.007173117 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.400041868 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069138572 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.488262139 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.962414273 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.074587188 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.956256344 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.168523468 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966016095 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.017908171 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962418179 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.906575837 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188549511 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.514930577 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.048184892 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.001911024 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.035226686 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.212637808 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931691041 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990429226 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.909582068 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.910294131 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.689419463 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.462718459 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.909767898 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.910763684 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.999123882 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.961466333 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.908639057 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856118707 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.536021926 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.98586354 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.922851597 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.134795245 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.490704549 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.223952231 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84330453 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238560899 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.998643232 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.130193534 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.549041843 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.988679137 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.171153528 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.000554406 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.041354846 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959207907 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930369915 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007624158 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93143559 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.079106728 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.203181231 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.915399231 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.916779005 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.693563049 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.947776172 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917481708 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.916866745 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.660935378 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192604012 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.931230884 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.9143091 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.799643301 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.926660275 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971850529 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.914528597 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.917652491 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.446387221 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.642790181 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.912445256 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.500498968 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131915209 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917954727 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.593747941 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027859614 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.994598634 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.176791762 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968156809 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.843397113 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.620938 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.604146117 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910075162 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.844904053 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.912054094 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917505956 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920290354 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.108324046 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.174939921 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951456832 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.601571973 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.951828761 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920905038 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.916576026 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910867444 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.422266985 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.042431993 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.112457631 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.956851829 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054831267 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.925537454 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.844585569 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.914516691 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.914929311 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.911528379 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.910357624 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944037413 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.604691129 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295216538 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.16979535 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.521692225 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926409568 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.636338338 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.97005789 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.911261401 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.742104712 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.103740736 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.949394623 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922522475 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.924326235 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.685974859 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.623253693 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.479547282 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235973879 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.208691309 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345164332 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.149769784 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.942282063 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.247997111 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849410019 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.478947989 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.971687774 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.265509719 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859933675 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998324592 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.553327052 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.260998425 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928646859 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14372786 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304616601 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.670128548 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093560383 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.125463728 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949933104 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.088970649 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.875200203 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.197477551 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056890641 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.620278097 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130646396 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263134722 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.645826115 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.078496848 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.914334986 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.579394564 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994105763 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.631848312 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.086761258 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.117881785 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.864634503 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401583454 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.925009956 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.142896691 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253678761 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.107432368 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.041899245 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851196299 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.926939679 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.927076041 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.916069049 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.918700731 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.786271949 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.17054612 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926179747 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851666173 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.043585216 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.199732714 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.81390307 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.920288043 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914903972 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20534485 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.464283869 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085272785 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.029979211 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.436578788 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.92246227 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.850497064 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850592904 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.608754882 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.923912372 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.892684746 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113632028 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.016044101 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.830369002 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.006656047 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.9980215 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.175416748 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.930404943 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.181797298 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.191708714 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.615693941 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941062157 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.017979139 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.573150315 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.034398592 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.919889145 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.154293402 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.671383554 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.144465695 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.95075899 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.87090914 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.917999844 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.132084737 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.919650181 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.829685497 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154448639 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.645161364 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.996412783 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235232199 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99118197 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.873290216 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.97125161 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.011863302 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929402837 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999199696 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932091899 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.931657716 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.931142287 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967352245 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.880086778 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.04907023 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.935331638 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014358307 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.047770256 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.445691259 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.927422447 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2095369 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29873481 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.235851794 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982268429 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.921837963 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921686681 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856047187 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068208031 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.147402315 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197349674 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.046955872 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.033723169 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943982511 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.60624787 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.15714457 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166703903 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197253248 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.817918539 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.447953594 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.96325643 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.923172971 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932963213 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.135703623 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124658663 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216273779 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.062520759 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.022116159 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.287709364 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197745732 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.924195492 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.924651514 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.516008983 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.008254041 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.598436867 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.964879061 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.828517958 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204885472 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931680345 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.303220853 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.945810229 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.082373276 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.697805215 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.634882874 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.215517967 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.902387531 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.984532977 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.191398195 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.298845953 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236952232 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990561934 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935714424 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.034241077 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07184857 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.793005312 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.92249559 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.925480339 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.972945627 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.636276808 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.933681175 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19551105 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233797513 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.922970094 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.801502634 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948176831 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.934147635 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.148512279 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179717506 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.175408926 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934405259 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.931877345 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.74186999 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190928525 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988436651 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858412257 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.92847856 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024471445 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.174980965 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945928653 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.379443602 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.634996657 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186178873 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.92409966 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947031324 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.095334548 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.280397971 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2434082 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.461790776 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123495298 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.510696374 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.517720892 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231051766 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.932419807 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.095399484 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.232908496 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.929194595 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.024042552 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966574993 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.190418779 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.241730302 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.959300976 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.642198494 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.895908739 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.269709647 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.490312254 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864361351 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.934395783 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.984671219 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.927164452 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.056415744 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937192487 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.820977361 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.103181389 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.711664437 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212431569 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.928164677 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.9150267 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.640087935 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.230030248 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963907216 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070488561 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93412613 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.599826489 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.278455494 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.185597784 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.028452584 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.936132643 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.933340421 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928331836 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.91566686 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.126133358 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.122838028 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196160835 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.047839364 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.968692719 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.93149566 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.146153998 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14036198 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.864622587 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06957584 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.02795436 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972298977 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.835067342 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.431070382 seconds)
  done (took 1696.866980404 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.957222891 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.942180526 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.995321418 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.036013407 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.004452673 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.050543398 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.076266476 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.956901956 seconds)
  done (took 57.881210451 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.929152044 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.147334811 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.937173867 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.929815536 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.937701056 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.929038791 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.097876855 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.938629617 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.937562424 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.9393994 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.940350142 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.928841021 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.245840979 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.952581797 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.930334793 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.923765511 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.934977169 seconds)
  done (took 75.466237793 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.930906003 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.948304435 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.950427589 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.947775618 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.954888601 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.935217072 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.754636707 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.955541469 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.932096568 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.06141162 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.562015509 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.944212853 seconds)
  done (took 87.740451918 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.938158046 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.937515151 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.938786054 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.936852818 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.938084228 seconds)
  done (took 11.55383156 seconds)
done (took 2209.810732833 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.186634639 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.146893286 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.172124953 seconds)
  done (took 6.182056543 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.082557586 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.129779197 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.248820471 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.256355068 seconds)
  done (took 10.587690238 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.218621557 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.303049026 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.143891423 seconds)
  done (took 8.530976034 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.338255206 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.934896159 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.047306794 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.934419549 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.93302694 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.932373978 seconds)
  done (took 22.668168416 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.939045298 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.942033305 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.938842289 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.941851646 seconds)
  done (took 9.627862267 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.919524439 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.716327121 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.921989508 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.933180174 seconds)
  done (took 21.356908432 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.690635169 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.698652643 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.683689562 seconds)
  done (took 9.939913664 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.573773089 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.857911181 seconds)
  done (took 9.299460509 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.194015446 seconds)
  done (took 4.060896678 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.068757182 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.200220079 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.398118961 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.430666487 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.490268213 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.815854987 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.24816632 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.182851116 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.321357727 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.377860164 seconds)
  done (took 25.40099886 seconds)
done (took 143.026452306 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.314932787 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.306163332 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.13905218 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.274557193 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.234973727 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.137834856 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.1500842 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.257880486 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.782996988 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.778199181 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.315343219 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.254310886 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.097238287 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.302549691 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.099195214 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.177439545 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.188604772 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.33188727 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.970560334 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.169828972 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.153563708 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.9147266 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.159220022 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.924028631 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.19020568 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.098403721 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.488396796 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.17839791 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.126446055 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.501546504 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.161023612 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.324414925 seconds)
  done (took 173.372007248 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.699949294 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.935238711 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.932263957 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.93328896 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.396701534 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.93475606 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.938151897 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.936862072 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.192884716 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.164174891 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.935090079 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.39927684 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.936908454 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.93445947 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.947127543 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.935061775 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.327735917 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.78000498 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.95188996 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.955561529 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.959411121 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.340212105 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.958636216 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.394825889 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.344143953 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.955633217 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.937060477 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.957193824 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.944822323 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.946446577 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.950799687 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.935798317 seconds)
  done (took 210.66578929 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.937634669 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.935813534 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.954562957 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.937026288 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.942726126 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.937736273 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.940056062 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.93686732 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.515603222 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.506297292 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.943204076 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.944130463 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.941441865 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.935075783 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.944372084 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.939278975 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.951078519 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.943794482 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.942303428 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.943041943 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.948799389 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.642812297 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.947628205 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.635137604 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.970125854 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.945385757 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.937179921 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.946018384 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.946302855 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.948874377 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.947824284 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.936797658 seconds)
  done (took 222.614938595 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.143740368 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.947610193 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.948092085 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.902231264 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.947910943 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.950619072 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.943314293 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.143120629 seconds)
  done (took 19.813092664 seconds)
done (took 628.346289711 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.392727871 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.236337109 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.120504804 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.970158539 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.193560702 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.000068663 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.966422597 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.031042189 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.161881688 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.037342733 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.648363108 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.982937424 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.741068536 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.986279054 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.092432162 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.020797762 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.531854424 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.616713146 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.141007577 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.022877141 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.136710688 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.903972671 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.038590395 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.203951371 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.770529471 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.946335728 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.133748903 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.536358986 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.977598623 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.126952039 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.693926543 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.334484065 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.976644751 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.964372821 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.016460786 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.000431709 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.307368253 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.974470142 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.087202343 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.707470101 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.012231782 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.047167064 seconds)
  done (took 107.664976932 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.939033054 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.941250064 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.937750842 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.937953703 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.938939083 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.938563845 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.937204936 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.93458632 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.936919805 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.936430326 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.938598635 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.937356323 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.938331957 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.938755982 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.936310864 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.935731902 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.936182872 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.940166365 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.936643865 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.936370888 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.939140609 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.938342937 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.938844376 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.93854356 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.938368476 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.93787493 seconds)
  done (took 52.276362485 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.949372466 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.090050443 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.17110777 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.968255887 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.950427853 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.953668907 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.967695326 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.953195796 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.950137916 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.952496231 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.039597255 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.95437371 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.969814199 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.176637534 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.962365197 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.949768756 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.952915846 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.95062212 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.096719517 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.964456229 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.971124601 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.953820754 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.97152398 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.964075537 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.952599038 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.950721836 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.953835938 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.389307074 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.957845035 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.042764716 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.990911733 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.971791871 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.346786172 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.183573044 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.009085856 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.957914932 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.951200812 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.045750923 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.955532305 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.952974391 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.970584101 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.9533142 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.174161998 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.446723517 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.961272237 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.952260642 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.399945267 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.049351829 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.990043273 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.962258031 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.178920006 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.963224513 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.954228762 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.951651944 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.988980169 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.961178958 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.950386619 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.26381581 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.96067672 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.967984922 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.955584381 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.955031528 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.103191106 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.958157472 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.094586927 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.95823443 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.959852787 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.954640355 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.176921072 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.968228173 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.448665553 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.96360343 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.953583378 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.042407537 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.09567484 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.424554557 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.96390319 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.10740957 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.362108475 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.973120907 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.959854835 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.381439462 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.97713882 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.95760266 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.953679748 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.954634985 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.954311735 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.99687916 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.968976894 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.386855166 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.449392398 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.276174711 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.98116487 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.967347763 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.956161654 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.265783098 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.961737842 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.956235106 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.170779204 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.459713592 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.964718182 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.962618078 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.437089957 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.965805399 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.97296774 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.963414426 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.18105172 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.966372496 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.997683082 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.954648141 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.960818423 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.960557007 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.973454962 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.960376427 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.955559318 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.426043428 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.05947878 seconds)
  done (took 241.297169628 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.951128626 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.948202097 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.949384701 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.947338328 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.947835588 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.955099815 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.948003387 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.951601175 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.953826531 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.94839942 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.948959826 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.950262882 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.950857319 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.961050261 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.420886998 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.957899855 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.561110389 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.950353226 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.949652133 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.949283999 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.629136463 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.955581136 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.949776109 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.948925692 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.954482219 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.957076029 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.957964279 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.972995047 seconds)
  done (took 170.311213097 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.956319923 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.140010403 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.972054124 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.993439473 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.962350653 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.954271584 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.982119961 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.978213356 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.963121584 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.954594697 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.956931943 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.019516297 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.968226918 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.097855118 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.988505743 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.988961681 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.063900299 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.962140018 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.956638688 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.9556694 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.98775437 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.952489455 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.018050819 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.086956088 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.972342333 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.077157494 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.96083488 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.959793742 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.957402588 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.076937744 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.96796412 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.018880882 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.983684669 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.977835764 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.082814908 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.072096028 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.062510843 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.985347007 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.960525961 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.956197517 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.957739649 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.9468728 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.076125857 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.975411087 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.960610592 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.066473175 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.974156921 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.962275942 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.968812829 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.958509627 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.973007614 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.977676944 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.025343909 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.086205132 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.990470425 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.98568261 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.984563124 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.243434182 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.968877067 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.061702408 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.953155306 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.079273537 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.976419535 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.948862028 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.960249695 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.963855149 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.989407219 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.990532909 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.064624857 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.96600269 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.061751345 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.992774234 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.965406496 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.957811839 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.961241474 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.079864596 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.076696667 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.992385993 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.997078021 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.990880792 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.955816376 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.961233027 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.949757957 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.976669504 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.964242548 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.077269342 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.071849466 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.965789043 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.962981044 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.961740885 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.963808002 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.988509677 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.089484293 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.99408585 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.060106815 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.027006738 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.032615178 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.971270801 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.972928115 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.964599882 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.024958269 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.973869632 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.973206703 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.291317927 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.035153734 seconds)
  done (took 212.142144412 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.054867008 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.448516489 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.017471796 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.019065971 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.24655106 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.379651612 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.801788273 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.0076026 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.01082284 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.039782447 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.172216065 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.063398737 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.026826545 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.000735789 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.410294977 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.999978551 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.013698403 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.036502488 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.013957827 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.547559691 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.326925036 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.128416995 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.011594845 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.163809511 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.98865126 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.311683072 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.49624129 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.404096137 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.045821179 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.354159915 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.345051114 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.688471683 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.226012126 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.250022696 seconds)
  done (took 77.945990926 seconds)
done (took 863.509800923 seconds)
SAVING RESULT...
DONE!
