cset: moving following pidspec: 14839
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.304458381 seconds)
loading group "string"... done (took 0.584106545 seconds)
loading group "linalg"... done (took 7.144509566 seconds)
loading group "parallel"... done (took 0.166108293 seconds)
loading group "find"... done (took 1.123826131 seconds)
loading group "tuple"... done (took 1.985276161 seconds)
loading group "dates"... done (took 1.270636122 seconds)
loading group "micro"... done (took 0.235695681 seconds)
loading group "io"... done (took 0.970332649 seconds)
loading group "scalar"... done (took 38.588498876 seconds)
loading group "sparse"... done (took 12.405717891 seconds)
loading group "broadcast"... done (took 0.977405757 seconds)
loading group "union"... done (took 13.174029255 seconds)
loading group "simd"... done (took 4.503075818 seconds)
loading group "random"... done (took 9.061131358 seconds)
loading group "problem"... done (took 1.96589425 seconds)
loading group "array"... done (took 21.500927874 seconds)
loading group "misc"... done (took 1.942186178 seconds)
loading group "sort"... done (took 3.262561126 seconds)
loading group "collection"... done (took 18.22604877 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.540606431 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143361566 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118104103 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.140134558 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.186185763 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132573119 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.14659193 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086067193 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.016417104 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.162886999 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140401394 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.47870124 seconds)
done (took 5.055643329 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.205838389 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087879302 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097166524 seconds)
  done (took 0.891150028 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066822787 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127881038 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081527454 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069248669 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068258759 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082416111 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068021986 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06678563 seconds)
  done (took 1.276772557 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075698467 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070004814 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085865336 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06938751 seconds)
  done (took 1.011508139 seconds)
done (took 4.174884383 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.899797265 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.238140901 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.19105044 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.45625492 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.148984964 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189908841 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674901726 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.344121032 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.211927725 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101513088 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106530131 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.379799305 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108049141 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.672933119 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076349514 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106506266 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.169799532 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.453399577 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081708852 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084273102 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104426757 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14291996 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101529972 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078470333 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.168975056 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070640029 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147857472 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096792815 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069417412 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.243034992 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190304022 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.727263261 seconds)
  done (took 10.58580704 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10171291 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.118877142 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069567335 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140144398 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.11731802 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072676968 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071580516 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084090166 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092202124 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.159413078 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115220541 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10634826 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082233514 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070795922 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101159287 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212321082 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107710422 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086628124 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087218025 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07650112 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123052305 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083274463 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094725415 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079697092 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.15299808 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195026888 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111543521 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112148091 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070066758 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081369609 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132946979 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142985763 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066629834 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083163754 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.140996892 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111068441 seconds)
  done (took 4.582173939 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.048548923 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.160986926 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092314724 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153023002 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.087561002 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068336066 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.127341058 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082180188 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100684293 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.235104963 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.164123674 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064557592 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.473262494 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128393012 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101811231 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06991266 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069121857 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.084491308 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.511141425 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145285497 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103840236 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102660376 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075483311 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086954523 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.727593633 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071535875 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067637504 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085739005 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061243102 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146736916 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068916452 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.222275006 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.089297475 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08938768 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119259328 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.181670041 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095775543 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123270633 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083669235 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068416649 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.169835396 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074440493 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.084009221 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089042449 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121813767 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120125978 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069764673 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082864967 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.182441064 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068439294 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100342947 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.873499334 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165591599 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078343779 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066733688 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.291623572 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101759683 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068117322 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065566262 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.109486868 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.246574776 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.1622416 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069121538 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067022711 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084189849 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068905887 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.739736014 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086627244 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.715015892 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072503534 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078478625 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086054233 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068765746 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089136735 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074426983 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101793364 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068480339 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069093471 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083961455 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066632943 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085284802 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086464914 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.203098991 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084384949 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06829884 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065367466 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.10361919 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112309924 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071369735 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066135671 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117924032 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069681334 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084133978 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.102641161 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085446934 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.100375765 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071250972 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129450623 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068311415 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.157136549 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067515808 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.116275768 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073254995 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115134423 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.09520616 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069002535 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153080496 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065578261 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082869161 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068428984 seconds)
    (110/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.06475048 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082749796 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06864444 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084007885 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08331862 seconds)
  done (took 21.782317614 seconds)
done (took 38.710959138 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.291772471 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091828834 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.092609842 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075582235 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092290577 seconds)
  done (took 1.430660573 seconds)
done (took 2.19224104 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120901284 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11738868 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064189768 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113143619 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06454551 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118141967 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11437528 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081827048 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118062164 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065644557 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112852558 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065116364 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06393485 seconds)
  done (took 2.00825476 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084190685 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085304965 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086195528 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083324264 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079821976 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084345743 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080982225 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10636909 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08146337 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088270277 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065413855 seconds)
  done (took 1.683518843 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083029327 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08521585 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086779479 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082225503 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079531839 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083102714 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081162084 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103082076 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082299946 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090193712 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065595837 seconds)
  done (took 1.682348498 seconds)
done (took 6.125727463 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079636507 seconds)
  done (took 0.832041047 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.703178575 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.537191326 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084564433 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.13441329 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.221897558 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.153502377 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.438077999 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.110878962 seconds)
  done (took 10.320291554 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103525507 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086388367 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073899733 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086940868 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071849844 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.090405514 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072721996 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070161567 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085650688 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073823497 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087101884 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070331474 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086869168 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071290109 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07299998 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084609766 seconds)
  done (took 2.113444111 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095106672 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093432418 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092092347 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076939629 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091202468 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073887133 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093322424 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075893023 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088683906 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073837445 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092542154 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076063463 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088954635 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067761053 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091797275 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077735551 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087767766 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076516341 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092203866 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078028741 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091936067 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067682781 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089800953 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.0764821 seconds)
  done (took 2.877393245 seconds)
done (took 16.902566035 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.13221504 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07676427 seconds)
  done (took 0.972609717 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082509831 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098774401 seconds)
  done (took 0.952787845 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08369886 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082246668 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090772528 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093613212 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082600384 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068006007 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103010543 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068598047 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082795682 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067690338 seconds)
  done (took 1.591236013 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069612724 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094570908 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072444551 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097896584 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075782266 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081839843 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074315132 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085192957 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079337376 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080040869 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072753551 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100678095 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073145392 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101395966 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074812776 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085603034 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088186576 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069816479 seconds)
  done (took 2.247604317 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067553929 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068708967 seconds)
  done (took 0.90885026 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068899142 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065540826 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083719104 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069043329 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.07988791 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064896007 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080898909 seconds)
  done (took 1.285228783 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.401042212 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110481376 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.244230724 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.08867863 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104796338 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263427411 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084981187 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072455713 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.08923098 seconds)
  done (took 2.269759361 seconds)
done (took 10.997698932 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080506745 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088169554 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111112665 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.419749418 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106884778 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068022535 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.14353227 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.223975949 seconds)
done (took 2.015289089 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126107299 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.621104954 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.403407132 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.213362233 seconds)
  done (took 2.016583647 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.380854597 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093703107 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075173551 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068396138 seconds)
  done (took 1.39813852 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067281602 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071644481 seconds)
  done (took 0.919563625 seconds)
done (took 5.235040708 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068202342 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068425858 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081063134 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08549605 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084142714 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065628065 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06576165 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085021961 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06770043 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067998025 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.084105207 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.071460828 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083247376 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065320413 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066366629 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.083093387 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067953729 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066102516 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080650612 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065411659 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066147955 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083306964 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065815853 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065301004 seconds)
  done (took 2.568122295 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086536649 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084405862 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07309424 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088757194 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072099673 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088868464 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073226212 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068043113 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088834523 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071342246 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086845758 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072889932 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085328738 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072694303 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085564655 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071959155 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088988119 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070885052 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070247399 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087480365 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073211786 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083774149 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072691453 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087920092 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072534711 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08696833 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070888362 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083660214 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07268276 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087249168 seconds)
  done (took 3.163161411 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071773305 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065679691 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082020947 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071823938 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065074652 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082294437 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065392843 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081549772 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066244709 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065426212 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082090389 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.0648349 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065583361 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082690919 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06605978 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084065166 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081480807 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065612892 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081437945 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065954113 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068183469 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080483497 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065639191 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081160863 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064935878 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065315349 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081850391 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065139308 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066041317 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080922952 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06875925 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068167155 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.080882714 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071736585 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08515833 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065130652 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069720472 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080668099 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065921572 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06538489 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080016887 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065321454 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06465766 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.08784684 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065823434 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083258522 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065219334 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06666013 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082178533 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069090481 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081458187 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065164347 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068107471 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.08207098 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069919691 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065175899 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081950017 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065830238 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082576092 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065229334 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065309588 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081381738 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068868401 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066355536 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096159771 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072443041 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081251595 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06698007 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066642574 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083889191 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067397152 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079334283 seconds)
  done (took 6.036189847 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118739988 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092057238 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083712743 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067183788 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080437517 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065938777 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069341756 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081312398 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067933223 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087026019 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065882029 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066906198 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083302514 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079096801 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082067353 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067431559 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087114391 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064325399 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06625087 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085324943 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066212188 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084636608 seconds)
  done (took 2.504081367 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.186229427 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088799619 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110351599 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091798231 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085617788 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075358489 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087130602 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07257481 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072297079 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087104028 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070007091 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087310055 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069742415 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085355595 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070843173 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085989811 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072316943 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085873482 seconds)
  done (took 2.372591468 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078696103 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067934879 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106937621 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067668476 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084822024 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070926266 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089501744 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076962528 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086161418 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068217123 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092334231 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070155966 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08575137 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068141706 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070044163 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084248823 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071002119 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083450456 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076534274 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088504053 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073222222 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092335248 seconds)
  done (took 2.543225185 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081860651 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069401965 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101878962 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086961483 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064008428 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066287461 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090141829 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068336255 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089546109 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069484636 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067945055 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082115792 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072946465 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083324567 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07386931 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083839332 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070202583 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067595466 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086014388 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065560376 seconds)
  done (took 2.332883926 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088150071 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085191481 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069767594 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092856264 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070332826 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085232604 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077016746 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.084571172 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06934694 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10875896 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070134387 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08536013 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077390442 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089539416 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069103745 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092453563 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077466669 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092846217 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069075375 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085479717 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108559998 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.179019874 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092842319 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069840636 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084620965 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069189145 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069851551 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089080012 seconds)
  done (took 3.199006472 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067495504 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067787856 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081799718 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065344667 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065293547 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081933374 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065636639 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066083251 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084231137 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066777879 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06761204 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084691786 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069080037 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.08377158 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068039728 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06864038 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084195828 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065675887 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065676396 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081955012 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067860865 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067673346 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083985446 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066646038 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081368986 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068026638 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065538907 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081197356 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068107839 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065559835 seconds)
  done (took 2.96279549 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077330462 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092212587 seconds)
  done (took 0.96885891 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065215671 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08204671 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081474987 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072034716 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088315514 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069894276 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092661593 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072743802 seconds)
  done (took 1.420553494 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08250579 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079164319 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085406399 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080078938 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095199461 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084808189 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154636765 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08651767 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074898346 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083516966 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081935379 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067460853 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090672225 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068899479 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090563956 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07393345 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066576222 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089642191 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070866191 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082987931 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070187505 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092489614 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070933182 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064950411 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085908031 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077453745 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.09538722 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070062922 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087475131 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075383563 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089626999 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062614995 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06841504 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084527403 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066344188 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094218475 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082536968 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087158684 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076651107 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069329433 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094247651 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063451804 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088859413 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074493968 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094448097 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068719757 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084776242 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063844237 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065979241 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086682875 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064704017 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068224842 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079199659 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075881279 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088017438 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078891806 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086707086 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068906228 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070524054 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087492796 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074762577 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086510151 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070183011 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068132912 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093517291 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072684361 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093557561 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064034048 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062484386 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082635869 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078238962 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107248863 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074501832 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084877609 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069378741 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082510986 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071395418 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069720318 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089669673 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074156542 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084628199 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073806396 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091481625 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068665098 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070731803 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091204777 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067167752 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086437362 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066026062 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10000335 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067315302 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082493969 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065631462 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078133799 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087829541 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068831978 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081900287 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075602401 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062716877 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08573456 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070058131 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084845223 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078477716 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089989598 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073824494 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093208573 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076340649 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068661691 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087465677 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065535803 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086680773 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067315549 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074843742 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079470563 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071791472 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085187248 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069184344 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092858306 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065895679 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068681158 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091624294 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073254538 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083818782 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065041984 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070896963 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084998299 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071504013 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092227478 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067459384 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063093839 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079684994 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071145692 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084582933 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072024434 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089770477 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070617015 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063101975 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082931775 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072553232 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092808191 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068368652 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085306491 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073586124 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06949995 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083761652 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074166522 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086858703 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067677137 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073385763 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084676028 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063904272 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088270817 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071099564 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066864007 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088105368 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071819938 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087059304 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069802708 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083893395 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074462247 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069002637 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083687666 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068499344 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083831998 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078472659 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069456739 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080376062 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066093584 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092264007 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066691268 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068114152 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083872983 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070875929 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085827296 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066855019 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067893786 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086551256 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079326439 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088825374 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069633324 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090065688 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079741838 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084627506 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070688468 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069155079 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085932984 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069806554 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093252367 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07375343 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090169562 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071402927 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065512223 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090183587 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075273347 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084127952 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066766559 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067456469 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089514073 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073672756 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088697425 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069491152 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083291285 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068571173 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071189657 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088027135 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068189801 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08375502 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072861687 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084462393 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075156283 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068918926 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095780913 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070704809 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080248043 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072382265 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083584366 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074764252 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064567699 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082338863 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067794096 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086351051 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067216107 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071021244 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079974275 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075317901 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092793528 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06834058 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068127637 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08538444 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074844876 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08664107 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071760448 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070759587 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090873592 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07900313 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083986475 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071867206 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095359705 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068749358 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062397619 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089750745 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067877132 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084652344 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068283302 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066778255 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087769978 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075976606 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091798334 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063213379 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087465 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067595559 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066883197 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080802651 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072968418 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087515622 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069244974 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074664497 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086420022 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069503156 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089071734 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068999559 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068975007 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08613275 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072330605 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08592481 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07099637 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084095593 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071576729 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06772616 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082961155 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070211113 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.084904393 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068445412 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07336888 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084761964 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068740661 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087567279 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069295425 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068912985 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085423208 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067788105 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087765863 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068600906 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068368625 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087015308 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064827723 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092023242 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067941069 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076072286 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084619846 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065408975 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090330392 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070715421 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.08938375 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068809343 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070248445 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086558346 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068895362 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087642638 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075016213 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06604506 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095373723 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076233165 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086278332 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071298862 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085150348 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069991183 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06751693 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.0861484 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069790504 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.084973574 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068403701 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072287252 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08732301 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068991385 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086985284 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06959424 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068278274 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086982081 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063783368 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067251971 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085410974 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068795535 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094457906 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069320182 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085017163 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068126886 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069209724 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084338321 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065953495 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092357932 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077054072 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085556184 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076390079 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084254287 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070174788 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078395799 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.07964664 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067029334 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082877965 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066306672 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075522898 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085637925 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077978955 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085285995 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067777744 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065303797 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085753826 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06784374 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079830778 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066420278 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071339116 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084084696 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067702839 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085794454 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071116823 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06918605 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094907061 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067814868 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085482417 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068775192 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065226852 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08390363 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06773009 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088133085 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069367925 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065628812 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082822263 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068669191 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085510623 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069431082 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068636762 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.08652469 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075092512 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084931347 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071216367 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072054079 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.082883796 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071153535 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086010383 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068232187 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067847522 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088589062 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071795974 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086166124 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076698693 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084857531 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069013929 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068667156 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083833289 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068320607 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085254367 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068223249 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068074923 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087128573 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076254952 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083570231 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070973884 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068087282 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085084905 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074485813 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085849041 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071137329 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092254416 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06898605 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069893506 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093592111 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072259893 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088260084 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06984855 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086120794 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074197533 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067608529 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090959798 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068731628 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085958927 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069705176 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065940468 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085197757 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068976861 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084715675 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074016034 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068921221 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084696341 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06837457 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083447156 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068634858 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071062283 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092422294 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070614051 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088209687 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064678251 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065903991 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086895189 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066504508 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086397869 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071357994 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073381848 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08754523 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069348495 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084393709 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077087563 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091214992 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073223945 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066754554 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088761447 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069947587 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088537557 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069563599 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068439743 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087306934 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072605917 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087221736 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068439119 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075206973 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08871838 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0699346 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087133298 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069774905 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068305378 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081442011 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069806944 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087484911 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073500279 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087981278 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06884575 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078908994 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083219326 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06915297 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088513886 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068294457 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072362507 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081087703 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069587395 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086329501 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071276041 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.0639974 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08478061 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06721645 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087743593 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068296784 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064384319 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095714919 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077091004 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088355747 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068833419 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084412954 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064206655 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06404874 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084951424 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070532165 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.086253598 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078381369 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067262228 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084882204 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064240947 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085708559 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071456621 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071060044 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082835132 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064534043 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066188446 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088428193 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073613131 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084468738 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06965082 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088733268 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07116593 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066499592 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088562349 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066015315 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089618212 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080550485 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085994085 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069060004 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074232563 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093662678 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069285623 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.08129397 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069218909 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07119195 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086417342 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069389441 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08655386 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083613523 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088949933 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068403801 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067153265 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088535288 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068066397 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093128824 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069841957 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086118526 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073315 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06937417 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093967885 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07134674 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092872541 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071233924 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088670851 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068325877 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06787397 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084385976 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06767832 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087143374 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069843925 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072256007 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.093868954 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067262351 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096416386 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07755738 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088263257 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06612983 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067797757 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085569939 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06418944 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086479163 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067083796 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06635092 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084259323 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068268738 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.086231838 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073982648 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068692613 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087359754 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068668062 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080019375 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070812458 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070431443 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086583509 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065785601 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086035271 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070022546 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072498744 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088871584 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066572639 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087081433 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070444637 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068855907 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081706197 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075276441 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085336292 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070918201 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06746125 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086295014 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070666232 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089011676 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074835407 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087432806 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071413161 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077214915 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088738756 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067662124 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083970607 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073593856 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06633572 seconds)
  done (took 46.934653593 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108481686 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08346136 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064525146 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08181536 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077110897 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08320328 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064481513 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065067002 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08284702 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067567944 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081576763 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064403096 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090597336 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087688987 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09455868 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068130302 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081785123 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065608275 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081445501 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066168414 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090680961 seconds)
  done (took 2.497146971 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076497038 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090766502 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075387021 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095471574 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069991131 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090964648 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074398585 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09051265 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095458286 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070118379 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095684494 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072851756 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086576627 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069732677 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086848744 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074340879 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.096171239 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069875074 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.089611655 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075097782 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090325591 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075285432 seconds)
  done (took 2.654981528 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069114938 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067834414 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086943691 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06360187 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067632122 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081023751 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072622642 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.08350974 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072531297 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.075207636 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084585608 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066960949 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086902866 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063727112 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068220069 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083466483 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.13248168 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071318074 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067048413 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087310107 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063933772 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087470151 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064709043 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063709571 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.084874034 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07174255 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087080613 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066285481 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067238684 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084617922 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067844667 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083203305 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068926847 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068416202 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084548006 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067107569 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067556725 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086051156 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064093868 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084192072 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069119329 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06403257 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08606657 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069383257 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065732007 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084192741 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069345201 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085484226 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063468967 seconds)
  done (took 4.54163374 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08642777 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130901802 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088385497 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091286879 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.102330521 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093151105 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072471237 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112159272 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066036907 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.08557024 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084126941 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103557989 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086563019 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073020942 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092091983 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068230107 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086567505 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067336971 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072054756 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085994253 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071948387 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092785763 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101078612 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081549604 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089711041 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067059266 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08560987 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072782156 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097964491 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072943317 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.090249161 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073301234 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.101175521 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070522349 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085560727 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070057617 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.102246695 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068193767 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089487109 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066223488 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088203444 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073212649 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092647077 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085162019 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086848874 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073546403 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086148761 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065724621 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.099504643 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070721528 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093767974 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101401829 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072792999 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08636522 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073570077 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101340729 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068979719 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084736667 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071580032 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099238046 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066572703 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090082125 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082569702 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088006899 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076044611 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101519704 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073691754 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090923315 seconds)
  done (took 6.718113359 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077177505 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092848645 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0830978 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102186573 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093172694 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075437515 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093096205 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074841213 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092350962 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080042061 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092385452 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113888803 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070813594 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095216171 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075850477 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094092674 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075458247 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093698828 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074845313 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094631026 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092869337 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08231393 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092529962 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100678118 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10480183 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087692804 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075393191 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092943451 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082513174 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094133015 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1038049 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075390552 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092908016 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100603473 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086822438 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092646117 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067950616 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092351987 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075578212 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093394461 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070648427 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10167904 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074437361 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088913471 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07536484 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092926245 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101473044 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.087135176 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096119734 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098146022 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075125493 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100401239 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074446695 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093688269 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101007957 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.108519154 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101902351 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100101425 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07603021 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101528052 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10080441 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108992699 seconds)
  done (took 6.418023214 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088869112 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096198866 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099205874 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064186029 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066385029 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090675675 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06665902 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084776651 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077731588 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095526586 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080176009 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090413657 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075770113 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098582551 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090846785 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076050139 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090475603 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07321342 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095220016 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072827645 seconds)
  done (took 2.532042635 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077870869 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104898182 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069897215 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073718041 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090767845 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073874327 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090310774 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072270318 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087312889 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072478602 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097059177 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079100409 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087851997 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075128653 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096848589 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074757846 seconds)
  done (took 2.186579254 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080975371 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097185256 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08357872 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088236648 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067774677 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084504864 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068540171 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064184385 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084143729 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.08265675 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087582495 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071469755 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087223072 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067556782 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065073782 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090821095 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065270922 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084834691 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068890753 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.10150615 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080071477 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085823742 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070147033 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069647412 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.08790217 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073999642 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087585517 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067065086 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085934786 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069831741 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087625702 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077380426 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084620737 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067476853 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067017628 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084548074 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069574804 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08716378 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072116361 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068197789 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085626133 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068810756 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087068079 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070161446 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083717662 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070367259 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065024959 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092916435 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066604608 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087764593 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069140807 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090329176 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069987129 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.078804841 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091252593 seconds)
  done (took 5.177893187 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082142469 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071153402 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084485053 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067193176 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090041712 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070806747 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071923837 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08950909 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070752776 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084871781 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071429875 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089842196 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070703689 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071640252 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089548827 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072770247 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084134698 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070980963 seconds)
  done (took 2.271432697 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07466065 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069177243 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094549578 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069005391 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087318528 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071828303 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064796141 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086735249 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067772679 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087121038 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068933081 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071419417 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085785455 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071417538 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086679247 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069325852 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070794423 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085829527 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069583126 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083028221 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071158925 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067411624 seconds)
  done (took 2.543231659 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073936054 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095529996 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.164959851 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.109361297 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08476797 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.100477228 seconds)
  done (took 1.498337776 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092978273 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100371307 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07032735 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10849759 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077119666 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0891196 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070868807 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088927069 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079441155 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103037555 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070812754 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097784615 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097415574 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079242063 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09502914 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076191961 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089952253 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06994421 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08767765 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107348823 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071503918 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097004909 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071772655 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088580278 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070720838 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097318753 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079366476 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102854471 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088665893 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07998134 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094360572 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07114663 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097347472 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102733638 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072828552 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097477883 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071286887 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107466219 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077103857 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097844936 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071281005 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096015897 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097150661 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075728101 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09830529 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070854819 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094254369 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070937657 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090075082 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113615003 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076350396 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097627584 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094472804 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080241668 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097913416 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114014904 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085388007 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097283476 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094868352 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083783998 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097966467 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076175742 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097921253 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103334096 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077675624 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097749212 seconds)
  done (took 6.710795586 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087128849 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107442937 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071844391 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103111632 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097557585 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071035987 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089853258 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071022511 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089025571 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0713595 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129402089 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071335285 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097930172 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097487029 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071631469 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088468372 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070994958 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096807942 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070640904 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114763332 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089285087 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079660712 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097218887 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097641002 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08431981 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094989032 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07131356 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089284479 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070931459 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089922336 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076461072 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090417135 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098425659 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070443265 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096930589 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071126971 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088904121 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075536944 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089833916 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076682492 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098088759 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106619244 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071433367 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089176455 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083584693 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089484044 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069999622 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090163305 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070215559 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089080523 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083746293 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103497596 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102661142 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097291463 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071037068 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089741176 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071004359 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089929845 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071052465 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094526511 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079537407 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089309127 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113563318 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070961547 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088986009 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079335686 seconds)
  done (took 6.596194972 seconds)
done (took 130.132089631 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201589627 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185193066 seconds)
  done (took 1.257148209 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070508621 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097871844 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099593654 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129524052 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087727956 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102269982 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119873495 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080529033 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068100376 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088006282 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069486269 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.089937972 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133086661 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068647769 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087190073 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07061775 seconds)
  done (took 2.339663274 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104096495 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.198226121 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110438763 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067373935 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101114626 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080509101 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086592263 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079570377 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095656172 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067557446 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079722326 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096424326 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066969577 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096625689 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076281937 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.099684002 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067329427 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09863812 seconds)
  done (took 2.553949963 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105694301 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142241399 seconds)
  done (took 1.125934994 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.200305441 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.122910511 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201990315 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.41773631 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.205733862 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.276054978 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.172978219 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.17157098 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.156313487 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.168725339 seconds)
  done (took 2.968283904 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101378652 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172003356 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.312670426 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.13876267 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.087218012 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116783313 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139124365 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.090619445 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.102675728 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100995977 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082315419 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098347716 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099481831 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096896794 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076883712 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097923467 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121724675 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075918365 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077610558 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.097879351 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11892936 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068419709 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076746888 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095206723 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079336051 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098498158 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068137876 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087248562 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077792155 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096026312 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080667512 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114747375 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098736866 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.131868556 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.083192531 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.131524147 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099095616 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074635014 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096605205 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07460849 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097932594 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.0790249 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104291939 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079047841 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087074427 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079791288 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086847634 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069261038 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.099845144 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078883302 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100070469 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081044127 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.130884406 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.098125561 seconds)
  done (took 6.291094092 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.743111621 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.113327746 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094606558 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.800457291 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090066546 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105972681 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.707529241 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11830469 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.210620708 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.758106035 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.090633862 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099484815 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.179840087 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.234800153 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.890286893 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.283143013 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.630348119 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104888905 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109168492 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.132535345 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13852008 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.175170793 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.151073624 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.43701796 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076105282 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092690748 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.136448071 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075704429 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161499673 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085380527 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099426628 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155737358 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.225606038 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.154511849 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096967727 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071201513 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093050668 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.147540753 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.24145446 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.170612643 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.158270331 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06908646 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092307602 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140644537 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132784267 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069316608 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138897442 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172594082 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.147835714 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074714378 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.097038773 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.142459134 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138799727 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.141343779 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101660193 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.284740596 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.264166633 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092106893 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119063036 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.084262614 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.235932354 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083526609 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.197667982 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13978244 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.165799835 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091656314 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.743145619 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.147254322 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092484435 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075056032 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119744104 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096378708 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.139447241 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144290148 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.371230051 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.141994165 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073790568 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09165294 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.207168856 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104116136 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072913473 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140363058 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.096083597 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101911721 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.164643905 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142241559 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.145909711 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.205726519 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.140880678 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.159003856 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075120761 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124453955 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.095644698 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.191444105 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.169629223 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.140770018 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.20714405 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140638281 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.141243814 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.147069491 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097675004 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.149918089 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119237105 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.082118418 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138587566 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189301867 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122985289 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083315662 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095575594 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139822814 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.125876179 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085029372 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.160287375 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.14960317 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.454540725 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.147370392 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.089181272 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087767432 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138955581 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161743061 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076901589 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.233973308 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101955588 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.167344948 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121519187 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070207472 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118974836 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.141794706 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078651291 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120996554 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.158187358 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07927405 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.212179407 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.189310583 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078111823 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213661009 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.161493358 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076715529 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.14744507 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120622608 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145547184 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098228275 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139822618 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076268734 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781314362 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143324712 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121578022 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073162487 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177010186 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091633919 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083234388 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.104705695 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069545772 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.760049701 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086424695 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101878712 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104079395 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076700765 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121175503 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136931584 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094122117 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138850695 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.179821694 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09718475 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118529941 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084155465 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.140037156 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.097486531 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104327806 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084728159 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104589858 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123626425 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074629545 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104523317 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147482809 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.142011039 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.191390364 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.542600245 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071173375 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.104577912 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.198634084 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072150364 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.261451729 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137635389 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.19481424 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141498408 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081109338 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.284810455 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.143878187 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.180153561 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.085161681 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.171508358 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070821215 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137103172 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.141175674 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092141299 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076096405 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.139141551 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.164443254 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.144283821 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.941928061 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072831133 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.205420846 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069043976 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169336432 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077821766 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097468172 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.239463706 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092191298 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147678414 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.143014222 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073848883 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105901699 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.67442171 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.106243896 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1387228 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095864267 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.17122932 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.141296095 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.156692426 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136682309 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076627331 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.138016555 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207018148 seconds)
  done (took 40.42752111 seconds)
done (took 57.841767414 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.259724871 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.180403012 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.241225634 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145279761 seconds)
  done (took 1.802429882 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144898068 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10503775 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118541235 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086844541 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104126266 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087003594 seconds)
  done (took 1.550082199 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.405551625 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.26624151 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231660097 seconds)
  done (took 1.808721919 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.263080173 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.214291347 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.448502915 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.298720112 seconds)
  done (took 2.25288542 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.177321952 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114795832 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068414936 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107561886 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.159548534 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.255923191 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128947161 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.190017108 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081090216 seconds)
  done (took 2.23429217 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.198686109 seconds)
done (took 10.753645285 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.194585372 seconds)
    (2/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.116966452 seconds)
    (3/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.238936694 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.192737543 seconds)
    (5/309) benchmarking ("sort", Float64, false)...
    done (took 0.148543965 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.153998572 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.17554269 seconds)
    (8/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.099728797 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.108274116 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.200124831 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.105373509 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.108611485 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.100806435 seconds)
    (14/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134091665 seconds)
    (15/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.082148392 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.099706566 seconds)
    (17/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077482361 seconds)
    (18/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.296344756 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.119204671 seconds)
    (20/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123848913 seconds)
    (21/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077434848 seconds)
    (22/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.281017534 seconds)
    (23/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.103334495 seconds)
    (24/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072920584 seconds)
    (25/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113849924 seconds)
    (26/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.238310921 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.166311957 seconds)
    (28/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.264216348 seconds)
    (29/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.099402743 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.099893442 seconds)
    (31/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.110550565 seconds)
    (32/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.306066575 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.268265123 seconds)
    (34/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.080472376 seconds)
    (35/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.261141507 seconds)
    (36/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.213585633 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075320059 seconds)
    (38/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.236373365 seconds)
    (39/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.233816338 seconds)
    (40/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.249417529 seconds)
    (41/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.116068738 seconds)
    (42/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.190545141 seconds)
    (43/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.081050686 seconds)
    (44/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.155647917 seconds)
    (45/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.271802457 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096837349 seconds)
    (47/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.238752801 seconds)
    (48/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110828708 seconds)
    (49/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.092484519 seconds)
    (50/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.064133053 seconds)
    (51/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.111147702 seconds)
    (52/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.064355993 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07481559 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095581719 seconds)
    (55/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172629147 seconds)
    (56/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.155732349 seconds)
    (57/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067974783 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.091595036 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090841843 seconds)
    (60/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.286431849 seconds)
    (61/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.178064318 seconds)
    (62/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.093142449 seconds)
    (63/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079151059 seconds)
    (64/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053773009 seconds)
    (65/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.063704423 seconds)
    (66/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.169824664 seconds)
    (67/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054328141 seconds)
    (68/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.126915478 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.156692208 seconds)
    (70/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054630532 seconds)
    (71/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.239627269 seconds)
    (72/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.079048037 seconds)
    (73/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.090871683 seconds)
    (74/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074073498 seconds)
    (75/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.07522767 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.172364527 seconds)
    (77/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.159286466 seconds)
    (78/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.054966395 seconds)
    (79/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07505221 seconds)
    (80/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.259605853 seconds)
    (81/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.253651866 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.111270311 seconds)
    (83/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.216427776 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.089946695 seconds)
    (85/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.083824812 seconds)
    (86/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.098909254 seconds)
    (87/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.076107435 seconds)
    (88/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.263586768 seconds)
    (89/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.112998615 seconds)
    (90/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115918602 seconds)
    (91/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.196449144 seconds)
    (92/309) benchmarking ("sort", Int8, false)...
    done (took 0.166261681 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068407521 seconds)
    (94/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.108147672 seconds)
    (95/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095828716 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090075706 seconds)
    (97/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.090510057 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.099869666 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.118798681 seconds)
    (100/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064772949 seconds)
    (101/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05335128 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.123128449 seconds)
    (103/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.09931981 seconds)
    (104/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.219795755 seconds)
    (105/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.133227075 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091349902 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089842508 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069940166 seconds)
    (109/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.07401663 seconds)
    (110/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.095514416 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068236012 seconds)
    (112/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.099053194 seconds)
    (113/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.08149975 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074977008 seconds)
    (115/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.138270083 seconds)
    (116/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076198209 seconds)
    (117/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.093640007 seconds)
    (118/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.237667614 seconds)
    (119/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.076859594 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14683691 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.129679772 seconds)
    (122/309) benchmarking ("sort", Float32, false)...
    done (took 0.151263684 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.098358004 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.089612687 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074950983 seconds)
    (126/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.122286452 seconds)
    (127/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053808468 seconds)
    (128/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.054253458 seconds)
    (129/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053885987 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.115352456 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 0.159921462 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090334341 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098452815 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094587789 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089769281 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073690116 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067526521 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.097307995 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.100184306 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.161592903 seconds)
    (141/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054605066 seconds)
    (142/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102354539 seconds)
    (143/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067649076 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.167340418 seconds)
    (145/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.189814436 seconds)
    (146/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069318828 seconds)
    (147/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.101474453 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.091053175 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076094768 seconds)
    (150/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.243378737 seconds)
    (151/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.077728982 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.114841866 seconds)
    (153/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.19765516 seconds)
    (154/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054131798 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096473998 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.115714383 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067886763 seconds)
    (158/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.181294106 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067323549 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097722657 seconds)
    (161/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054055143 seconds)
    (162/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.246708811 seconds)
    (163/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.071134348 seconds)
    (164/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.133092076 seconds)
    (165/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074757302 seconds)
    (166/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053212467 seconds)
    (167/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.075452052 seconds)
    (168/309) benchmarking ("sort", BigInt, false)...
    done (took 0.211312518 seconds)
    (169/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.079634688 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.098900076 seconds)
    (171/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067976513 seconds)
    (172/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.054790046 seconds)
    (173/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.129257714 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069096398 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.09002527 seconds)
    (176/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053605311 seconds)
    (177/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065901644 seconds)
    (178/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054486656 seconds)
    (179/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.077477641 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097519342 seconds)
    (181/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.137174807 seconds)
    (182/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.079695655 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.115268327 seconds)
    (184/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.473087009 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068329589 seconds)
    (186/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068807121 seconds)
    (187/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.077180434 seconds)
    (188/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069971041 seconds)
    (189/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.240412296 seconds)
    (190/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055328914 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074880844 seconds)
    (192/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.097964192 seconds)
    (193/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.07481645 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.171878207 seconds)
    (195/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.055430176 seconds)
    (196/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.117323652 seconds)
    (197/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.054828703 seconds)
    (198/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.081295896 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.099752013 seconds)
    (200/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069323129 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.16509938 seconds)
    (202/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.252498257 seconds)
    (203/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070020918 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066524386 seconds)
    (205/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.076919149 seconds)
    (206/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070625238 seconds)
    (207/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054174816 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.10100021 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067908969 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067113648 seconds)
    (211/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.098059012 seconds)
    (212/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072021077 seconds)
    (213/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.192545983 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.114825504 seconds)
    (215/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081118744 seconds)
    (216/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075021275 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.113761242 seconds)
    (218/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07715366 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.097728067 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077321255 seconds)
    (221/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.089454548 seconds)
    (222/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093203786 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.112789716 seconds)
    (224/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054241853 seconds)
    (225/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075632512 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.138628418 seconds)
    (227/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068234916 seconds)
    (228/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.091982124 seconds)
    (229/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067475397 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097639413 seconds)
    (231/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.085360671 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073940178 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.147277561 seconds)
    (234/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120508434 seconds)
    (235/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055334442 seconds)
    (236/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.09134613 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066723793 seconds)
    (238/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.052494915 seconds)
    (239/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.076565313 seconds)
    (240/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.190128044 seconds)
    (241/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053460251 seconds)
    (242/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068641194 seconds)
    (243/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.171771458 seconds)
    (244/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.133715787 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141549203 seconds)
    (246/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.075968797 seconds)
    (247/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053859191 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068311138 seconds)
    (249/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.096290003 seconds)
    (250/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053296622 seconds)
    (251/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053809979 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.200103607 seconds)
    (253/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063397818 seconds)
    (254/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053457051 seconds)
    (255/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096518873 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.106047461 seconds)
    (257/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.077830546 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.110266864 seconds)
    (259/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053774229 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.166628546 seconds)
    (261/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.097722069 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.113412218 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091342325 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067226072 seconds)
    (265/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053336924 seconds)
    (266/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.077205055 seconds)
    (267/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053452281 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.055824314 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096861565 seconds)
    (270/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062892127 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067375161 seconds)
    (272/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.053715993 seconds)
    (273/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.094694089 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076924114 seconds)
    (275/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.074809947 seconds)
    (276/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054374162 seconds)
    (277/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055432451 seconds)
    (278/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103882712 seconds)
    (279/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074987333 seconds)
    (280/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069422626 seconds)
    (281/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.085765495 seconds)
    (282/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05399058 seconds)
    (283/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056781382 seconds)
    (284/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.10327371 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075831961 seconds)
    (286/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072135906 seconds)
    (287/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.075450703 seconds)
    (288/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081476509 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066780301 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.090161003 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.162121064 seconds)
    (292/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069454152 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075773588 seconds)
    (294/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.097106987 seconds)
    (295/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081749012 seconds)
    (296/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09623025 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073262135 seconds)
    (298/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067646559 seconds)
    (299/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.075682576 seconds)
    (300/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054878475 seconds)
    (301/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074614293 seconds)
    (302/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.092124334 seconds)
    (303/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05382697 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073618158 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.088886684 seconds)
    (306/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053923788 seconds)
    (307/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.05649415 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066855005 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.07556443 seconds)
  done (took 35.305887443 seconds)
done (took 36.219808723 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083245829 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115608546 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077614818 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116873084 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082239233 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102218472 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.0744863 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081307618 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.105263354 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084374784 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.102806614 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056946359 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099157373 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077501988 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099043141 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093329807 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102470642 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074678877 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075163071 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.088688194 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076147799 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089175942 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069577507 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056622993 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102001482 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074930513 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074148009 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.099390571 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067894635 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089276923 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071100151 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074844797 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089471796 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080745312 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095661531 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075027132 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076884927 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.100175259 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06990527 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088956922 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075598641 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067337432 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096046175 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075665308 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073827641 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094567131 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076428954 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103545855 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093474719 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091520036 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076128974 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.101055798 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07869387 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.0744567 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093998443 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075969372 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.095037131 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09335463 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098421733 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070149264 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075688464 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.099347503 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073780394 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09766813 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075981187 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077452902 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.100753963 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073917266 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099765947 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073615825 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067655659 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097744462 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071605821 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067381433 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.099920689 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078893456 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.089022019 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073831001 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074781676 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.095638698 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068378432 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091168051 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069604689 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074867071 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091290888 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056739241 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072126383 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095965101 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067555096 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075759415 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.097362063 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075309346 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069064176 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.101174453 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067873212 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095207666 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06816193 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067704051 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092322935 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072305224 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066879827 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091964373 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07732136 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091560589 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07425169 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081405274 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090045227 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074109439 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088960798 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067163928 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083730663 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099759169 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067801496 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092145221 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067233133 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075178799 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089217865 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067885726 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067445569 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090180625 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073820266 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067353585 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092235993 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075175267 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103640759 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067419416 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071646064 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092021046 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068130278 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073093861 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090198042 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068697175 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06932113 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.087029133 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069908723 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089550964 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075449654 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069467338 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098329784 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06975865 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098353807 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072046008 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073895764 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095054418 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067490838 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.06122378 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092716623 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069960057 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069848988 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.08971168 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069692993 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067222716 seconds)
done (took 13.425275705 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067289668 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.170203002 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.127220283 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097531292 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111748827 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068626174 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.101219923 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105537498 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.093055675 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.128548929 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08947203 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109802377 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115786062 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.089747797 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068286076 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072087688 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.091885616 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.090486288 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.126236529 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.110848729 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118752294 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.090077251 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121917969 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092454711 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113846654 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.095612921 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090864584 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072656181 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.094189928 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103973383 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110507425 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071571736 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068505941 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124806892 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.119343956 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087078446 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090354453 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08702984 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.090476215 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067957608 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115075122 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.102138509 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106785972 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.106646453 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074611425 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070938895 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.092540653 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.088638903 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.1166367 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08304786 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112861616 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.136284999 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071307155 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.10724837 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067210774 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.112443385 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.107191614 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.07126376 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068496158 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093836926 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067839799 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071410352 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112631842 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.118240748 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072546131 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.107248335 seconds)
  done (took 7.364288971 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085787822 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118555353 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086035132 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108842497 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068122339 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068396427 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091152813 seconds)
  done (took 1.600223403 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068994944 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091769145 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113718683 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091305379 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110783184 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088593972 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101413972 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069389951 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109064387 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069938622 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089761693 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129524134 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070326401 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.09946814 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092647136 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09146833 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092281336 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091264755 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072098527 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115050015 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072255634 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.112930656 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071209226 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069080558 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10688918 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069274143 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140216205 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074486341 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093581624 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.07195694 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068091686 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.141461954 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106290028 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079538073 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069599932 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106052658 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084431787 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089753456 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086183936 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097206995 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084156172 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070065257 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093136248 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067881838 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073546599 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102432888 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070803046 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093061135 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071895693 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090106619 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092170598 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083287082 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092406723 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072868381 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071185244 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097510141 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079491699 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092684934 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08970463 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07132046 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109184551 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085254532 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106026888 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085320576 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094638548 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084121257 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10619044 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071936593 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070876342 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.096290554 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08593698 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089978135 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071351223 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079662693 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09354839 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.0922846 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.114870725 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071120452 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101950622 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069547749 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069720657 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091858128 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093042754 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096166973 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06958936 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073744506 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095209155 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068487188 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068057219 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.095568465 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067681597 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092914604 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072030851 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07047781 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09439786 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085872839 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069783802 seconds)
  done (took 9.460239041 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070493206 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070740053 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093672878 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070130305 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069683703 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092914079 seconds)
  done (took 1.455070317 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.100399081 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094894422 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084254166 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.09789599 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10802696 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107409186 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085422703 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107102072 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087118363 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104962475 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084332811 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10799827 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090270046 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.098528779 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084367887 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098342704 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085044681 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10217126 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08155816 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099282765 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090157819 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098770915 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075299505 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.109301887 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073032342 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075233807 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102085122 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081889265 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104261425 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08484718 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.099671548 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073754761 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096717824 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084301275 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107278799 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073804346 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097325856 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074606476 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101718407 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073230616 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107935929 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075586995 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079970792 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096873802 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107560136 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073745285 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073552765 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101483723 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084756775 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096752676 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074228131 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097833517 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073305916 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096998696 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073548437 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107648976 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074262302 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107985442 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076014572 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07472456 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095741619 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073740905 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107354806 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072849392 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106365507 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073929875 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.09692083 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076469347 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098639661 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075271855 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073718152 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095082485 seconds)
  done (took 7.472650371 seconds)
done (took 28.321282868 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.650099932 seconds)
  done (took 1.631639864 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.765051433 seconds)
  done (took 1.750197862 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.552403241 seconds)
  done (took 15.543025934 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.616448277 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.758860191 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.810403272 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160208951 seconds)
  done (took 3.328135999 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.884591956 seconds)
  done (took 1.888453275 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235907906 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224849945 seconds)
  done (took 1.451743749 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.738163699 seconds)
  done (took 1.735695566 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.31351098 seconds)
  done (took 2.30532203 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.322494447 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182671333 seconds)
  done (took 1.504603644 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.527854081 seconds)
  done (took 1.528108367 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.641372899 seconds)
  done (took 7.645754657 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.228820632 seconds)
  done (took 1.241069863 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.269057457 seconds)
  done (took 1.272029494 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.119097814 seconds)
  done (took 4.122175839 seconds)
done (took 47.940106985 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079660849 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082841668 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10552302 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080035965 seconds)
  done (took 1.345533267 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078911363 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075626595 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101623971 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074845166 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102519651 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075132049 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100689055 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079922179 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073932034 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09912608 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075615356 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097799916 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077346055 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099965398 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072628396 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077641202 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101967982 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075663614 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101883786 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075369375 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072937495 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099434919 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078329792 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.097121829 seconds)
  done (took 3.077025057 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078890252 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075747719 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099162454 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074265872 seconds)
  done (took 1.334787109 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078564199 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.117406719 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091441742 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078801864 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.118315156 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112259249 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072258263 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071824735 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097378932 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080070152 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093738052 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099748749 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.11274264 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078768267 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.10436511 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067976103 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070576571 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112181004 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080132234 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102415106 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072603829 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082245789 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.093578635 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092819062 seconds)
  done (took 3.194211155 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07932251 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105771178 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.103420653 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092362756 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.117465254 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067990145 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.10209032 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094094775 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150883646 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067484412 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.095760327 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068153888 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098635365 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067390939 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079138401 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.134099582 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113648199 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.093936653 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099936905 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.091551615 seconds)
  done (took 2.939085938 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076435533 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071883663 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090778893 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070458935 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078243666 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097397219 seconds)
  done (took 1.496605658 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06970125 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069228837 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092591848 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069011324 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073734857 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092237655 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068386398 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068807996 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092230076 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069617295 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068646952 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091652546 seconds)
  done (took 1.93766521 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.438078045 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070791008 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.095033569 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067468737 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073493033 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09257104 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082377855 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069927429 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116455638 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069246011 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092616396 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070631478 seconds)
  done (took 2.355293128 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262971579 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079175661 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325320839 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168993479 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141410481 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1567072 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105726105 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141265343 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199060813 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139467903 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201331895 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226260554 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136246772 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168543825 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116921769 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.132939088 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187157399 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221856574 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106511311 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22509427 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207043467 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15775474 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18220649 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130160448 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135996666 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153596578 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074026727 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10682108 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232732817 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161897633 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203032901 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139419556 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099446007 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231729024 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226689221 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197439137 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163235859 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087016281 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.158661547 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165570595 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256100449 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11552594 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195802731 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13473298 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108053829 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172881865 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147048851 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147900294 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.138156821 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116295339 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174528001 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241233261 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.168272905 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113791848 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138413938 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143744997 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145344136 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104384997 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270195159 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196907119 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160390741 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.09852603 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099343917 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212046162 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161393296 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143228171 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.154329656 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121329753 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16842942 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211935708 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148023138 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174634987 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182616823 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091594994 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148530368 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19642696 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158267368 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230189321 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156348622 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075507525 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153820714 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132060436 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084141623 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.172319142 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102880717 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210238552 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126945997 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.14142895 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140980363 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138319744 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112722157 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222853465 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203885807 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132989246 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068125985 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132321075 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.151298821 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177846901 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115838459 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137467212 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14835396 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081621478 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19184385 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077957428 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155051569 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.105645963 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153002999 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163649143 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078009654 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157660295 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129228902 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.130111213 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164591205 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22035289 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092515594 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110168496 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228117644 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156370678 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133383191 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177457656 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.215952731 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.104234052 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131654685 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20780676 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242912607 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092616685 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223946138 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136288756 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086320092 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.116121511 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155848281 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141438629 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150783428 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084935045 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.179165136 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200686722 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.102025159 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123230965 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169055969 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084876678 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108763702 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14225938 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128083237 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098072756 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.128238041 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134831154 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171139646 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178629675 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110379807 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180112618 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102076633 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226832798 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11704973 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.132239152 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106939548 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097844297 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.166222142 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219120731 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082510838 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226302651 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.154705237 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132920878 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148553509 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085583804 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196741313 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081806716 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073088913 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200984243 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139358361 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139262999 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.186380902 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131867407 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.157135994 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.153617504 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163509971 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187748797 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163442013 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135679695 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090806905 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141617866 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153940145 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101745452 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122153903 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.085607402 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132126571 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124545556 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0865598 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197680565 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157349289 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100180536 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13999876 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125284266 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204580202 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079891922 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160505473 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.14790785 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123070465 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.186370642 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212219747 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166227987 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128858357 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201269194 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073464173 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076042794 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118889634 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156253346 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11120613 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086094499 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146885188 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206574574 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158603023 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167779834 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139508846 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151131432 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213469688 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073391761 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.14493388 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181990356 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154826902 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.156120247 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114590776 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101693778 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200448099 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111723118 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271648347 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148471367 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155051639 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183026969 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.132248298 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082147013 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134936408 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192946746 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134239971 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184340595 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129031732 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115884901 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113013571 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108169082 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131948048 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15641139 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148539043 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190903616 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.145377772 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16324819 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079199044 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15112831 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1512375 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177313474 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067197183 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149225926 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221468087 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097003065 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172606008 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187775152 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107280818 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.127575579 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235494741 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201478535 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086774695 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13835279 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149732893 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184409365 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148242073 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171015939 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139970572 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166002096 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139211947 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088139026 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115966218 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125930625 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109871077 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122954598 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139199924 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.146220297 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.122344378 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160925511 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140968871 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14005191 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14753044 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.126170969 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094097691 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125934992 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23516589 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15145317 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2338556 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103089697 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.206961896 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225326612 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07826544 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107382647 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.08275424 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169252076 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11263983 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163924447 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124987764 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132997961 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156611052 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174365756 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123689366 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070648212 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139363924 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164946569 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140294507 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126911644 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133830114 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196459418 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.13134647 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107509504 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155274313 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107332107 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131051902 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234711016 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063019877 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12560109 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078212487 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108759598 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158705239 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212927439 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085124479 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.154163313 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147967075 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150097132 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158775569 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130274275 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127802675 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142588556 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181120215 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157356494 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.118898462 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141454658 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159902658 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214093381 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135067066 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098307897 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231916299 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21157738 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196627195 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.116666369 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145297236 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145283963 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138370827 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17050329 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112268041 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226104847 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085274513 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193935786 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133617368 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095428493 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184223441 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099503681 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117985237 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195590277 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148419931 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109809803 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107121592 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147126008 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152646931 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135510051 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078135677 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168168798 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.100509794 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166468296 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229064355 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083605887 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134251228 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125092337 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083832988 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136180702 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130962126 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115158547 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.124661317 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226341813 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.118604656 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208666295 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173335285 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142853341 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194897405 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103357335 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663562063 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.106715402 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186739882 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149529139 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23479917 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126054969 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147776387 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140306013 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15241115 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200633272 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133391487 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180216577 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188212695 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.151644672 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082119527 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132633092 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14009325 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.118895598 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135898362 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144547033 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146096345 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.104048088 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.149145198 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180941339 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.085144031 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124575431 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190301798 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171469814 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175407819 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171398699 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11318233 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148920087 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170539842 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108547648 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.153210819 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214576192 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136481434 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100677307 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.110004354 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135370207 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232255791 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076345308 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220968774 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15544997 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139568187 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143957913 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.149281945 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162472446 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136984842 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155327422 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12507787 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.141250601 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146077593 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112776087 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079869297 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134905368 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141220999 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.127245438 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130573243 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.120747564 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209621903 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073881948 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125132204 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131332825 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176735341 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238568233 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.090274065 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112230819 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148917696 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142913589 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.144548368 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155153824 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.110496166 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084837095 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.110724642 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.115537731 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.134428081 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143695543 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131423135 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140019594 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227758456 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087227549 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255130849 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12357486 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108864615 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.097972895 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081645254 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124767205 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126868669 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136602387 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101820816 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231693733 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.124544658 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.092506876 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121681024 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.10113673 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086859851 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159902427 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139479087 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151528951 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127857797 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065255666 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138128206 seconds)
  done (took 71.861352608 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.133350225 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104545965 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.118402039 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.173897949 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.146264774 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23758038 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.180854305 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223153818 seconds)
  done (took 2.422431307 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070672016 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.118278391 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103459513 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116366539 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090669386 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070247339 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.293993608 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.11083118 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068559799 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.115374201 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.119278306 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092665921 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.46851388 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066947961 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095790621 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.08550793 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068842452 seconds)
  done (took 3.247719822 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.425860168 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.641180075 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.451398094 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074855276 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.92315008 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.108228663 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.395005015 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.162940338 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.091811144 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.432435366 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.729621941 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.149688139 seconds)
  done (took 17.685980631 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076092157 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070700064 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.11102386 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084898591 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.09969189 seconds)
  done (took 1.541262463 seconds)
done (took 115.438353339 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081120311 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.348330539 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05431699 seconds)
  done (took 1.534541048 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084300453 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085491483 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.1118124 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083817489 seconds)
  done (took 1.472435562 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075583391 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077733885 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111507811 seconds)
  done (took 1.370132932 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.278730696 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.167537149 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090257717 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083451559 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079316811 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105912504 seconds)
  done (took 1.374232539 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074031793 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076692861 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101099338 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078629785 seconds)
  done (took 1.430371115 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077101986 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054120594 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056832847 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083781037 seconds)
  done (took 1.376263249 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090649537 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.10688627 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082236249 seconds)
  done (took 1.382874504 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109510827 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.114134791 seconds)
  done (took 1.328976128 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083216825 seconds)
  done (took 1.184215503 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093479444 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141382263 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.156578791 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137100655 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.166769127 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137817588 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08829317 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114844762 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104847503 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089778989 seconds)
  done (took 2.336947178 seconds)
done (took 16.504232406 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079205912 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.393733161 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362763081 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117839396 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670590799 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357368534 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.026542273 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119913443 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121426494 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09522502 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085428583 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676819609 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.026256509 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.351797943 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.015021734 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32373023 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677160313 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06927697 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09375215 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069741877 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.985997891 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094908324 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06935434 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069531514 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677175685 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373633001 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096504565 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324416317 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068972423 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096955771 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356342282 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096033529 seconds)
  done (took 16.143031056 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071669709 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.145313592 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07465651 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085032557 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098189638 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07099939 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099992593 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070819335 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153715677 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068912282 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112734383 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069827584 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098710746 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070436272 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089123574 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096254033 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070797517 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069633182 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095650255 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070514478 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114378229 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06938303 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06918259 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096340483 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069219945 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107227086 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069749718 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069264171 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095580803 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071550173 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098508657 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070762352 seconds)
  done (took 3.892983851 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117273939 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153319858 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075683622 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130852408 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114818374 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097955805 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.172277697 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094463406 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156710817 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069204126 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112563567 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069491732 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129414916 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070311691 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114992382 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070503659 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070782951 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096761599 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069389702 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09613702 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088541151 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094899829 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069902493 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06973641 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097433447 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082366327 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095338996 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069397588 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069310293 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097767864 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072809408 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096031453 seconds)
  done (took 4.205299011 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073778898 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076650543 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110653318 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084790488 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097894928 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073749736 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074756502 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097847274 seconds)
  done (took 1.803856091 seconds)
done (took 27.152948157 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079886477 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071729659 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100813166 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082457461 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101402512 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080095001 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069510489 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103190794 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078370656 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074748874 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104060613 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069245935 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098983453 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069167896 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075621299 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095751841 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08058384 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10027244 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080796366 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080672393 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.098651008 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079071723 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102073727 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08139809 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107282138 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080553522 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084842758 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101412177 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070660514 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098273564 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078130201 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085713882 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.096629782 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080750442 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.096510292 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070075211 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.06976093 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095176483 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080728921 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.101894352 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072660339 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101883974 seconds)
  done (took 4.740853974 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089952146 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090251532 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.112972928 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.071792461 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098724014 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064750052 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.118089611 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07206426 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.095115062 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090631161 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057181414 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.088494916 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.072833234 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.063745724 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.095400363 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058895631 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061204669 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.084741348 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062347629 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060478412 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086556225 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056161908 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.061823349 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064593018 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.08388216 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064745567 seconds)
  done (took 3.147284106 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076734206 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085536452 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115953895 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130577905 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133699 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079337568 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105836271 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088826411 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115949075 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068515535 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.0726103 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.125324378 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089084308 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102353733 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069426493 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115862828 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083430587 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070227956 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102236044 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092228138 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.113091416 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.079289215 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.121973596 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082754295 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06882602 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098220222 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072866877 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.108826947 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073586558 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078284742 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100145631 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073107627 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097584068 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080712175 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073704172 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.098501767 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092796564 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10590695 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08135456 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070428493 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100332975 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070338271 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116213542 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113730077 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.096045967 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076383343 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07783094 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105419352 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069991222 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115088297 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078635631 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06918597 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.099746924 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069363608 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096697772 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082974257 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071688228 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.099312903 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078460671 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099321777 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082029632 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073386883 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112270613 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069186498 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.104046423 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069195128 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070925402 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095269629 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095310408 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070611318 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.139387318 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070246732 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.098080745 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078291873 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104226079 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07598521 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070782071 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111915316 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07914953 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099815445 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078054515 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074041916 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099220661 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090831742 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098827979 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071733193 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070580234 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102330067 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072202913 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.097536579 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082849786 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069615628 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099310558 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086630482 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095682093 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071003966 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07531611 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.10135787 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069634468 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108531159 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075454296 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070514647 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105740509 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069357723 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.1000152 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079726116 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07392062 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.096209057 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074340603 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102300521 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070313952 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070278234 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099630413 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071261731 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079010735 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.102438023 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073915976 seconds)
  done (took 11.512876966 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.193667837 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.194645078 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072009168 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.180536567 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077584105 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108234081 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.181819373 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097374591 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097294635 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069813703 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070656927 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.131077303 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.125800258 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.107875595 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.108300968 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069050935 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115235821 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.105423726 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.183227784 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.17692728 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.117244448 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078218532 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071272839 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098984018 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071255469 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.106335058 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086104903 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.104669804 seconds)
  done (took 4.334887019 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083987909 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.138421128 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075319474 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093724002 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.12036183 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069597206 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102583426 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071596803 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109501944 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081805725 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097229868 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074933974 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076032463 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106353148 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070232792 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107080172 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079832064 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071036977 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100548917 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074715597 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.109023037 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082120923 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101721566 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069513127 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075817755 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096996705 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066163919 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.114315324 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068958228 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.120729066 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067879967 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075702774 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.115623174 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069929266 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096518601 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072448815 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072690957 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.101020197 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070633459 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067956878 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095212355 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059648305 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068489108 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.109212311 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07594268 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088418477 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075274346 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.102195871 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074749974 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068298893 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100013149 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071879502 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072435263 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.110284555 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074621033 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.102543823 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074392762 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067264279 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104927038 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072764143 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065622582 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095479361 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074114265 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.095563561 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077674484 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073641201 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09601378 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072668136 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075035886 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103348221 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072938042 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.099571285 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067629905 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072776812 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102347574 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074087337 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074611637 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.095570695 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069445094 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.097637043 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057628894 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069512595 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055726087 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100135212 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068177427 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.095958504 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072799006 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075305283 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110650421 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071716558 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.102994411 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070668093 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068574079 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099466341 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065334535 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.100659206 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088188975 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112812138 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069494674 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06831589 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.11428039 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074490998 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.09608362 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05846013 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076293529 seconds)
  done (took 10.023614807 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098568187 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094966239 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098694408 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086197697 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125989638 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094401128 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105102318 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07588094 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071452579 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114823892 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069520226 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105791637 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.07021926 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078564641 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126177019 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077553868 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099430555 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078703036 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073550935 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.138283655 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085687848 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.112135893 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.083267146 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097608381 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073972687 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081396524 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.125597551 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.082462357 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108904151 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.087302169 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.082209212 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.124414182 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.088557616 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100820834 seconds)
  done (took 4.363809589 seconds)
done (took 39.234512455 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.194135586 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.404928819 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.19353008 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.07816067 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.21739684 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.219282034 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.202122035 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.190744113 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.271443581 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.194421235 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.45607003 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.801881851 seconds)
done (took 58.561011207 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.294376107 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.333172769 seconds)
    (2/2) benchmarking "String"...
    done (took 1.4618804 seconds)
  done (took 3.933039895 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.546464496 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.154409963 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.474425333 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.190907724 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.18994889 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.636959405 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.8046433 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.008991444 seconds)
  done (took 27.595908866 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.194795503 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.558373264 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.635180063 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.552636423 seconds)
  done (took 18.077679464 seconds)
done (took 59.585567313 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.218993279 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.237575373 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.231477861 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.178359016 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.314825787 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.210307793 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.553401291 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.197175376 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.194378963 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.184191473 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.214852275 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.19027964 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.197487371 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.524185974 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.195624311 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.193218601 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.260654433 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.700637047 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.570487827 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.204900613 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.225623227 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.244386839 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.194968331 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.190921649 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.264533221 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.192550898 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.20541505 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.204919283 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.413244275 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.195722103 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.282499079 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.721883251 seconds)
  done (took 190.246233777 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.191785267 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.273592174 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.398157088 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.226856933 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.66759214 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.389778006 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.332946916 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.746051363 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.20969866 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.21213684 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.528798293 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.191906876 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.582812442 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.157436034 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.20378893 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.277265953 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.37115065 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.541276465 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.208417906 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.463917763 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.20025635 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.404426913 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.312109474 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.447089223 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.237485956 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.264384959 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.203480987 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.208888728 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.382352851 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.320512875 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.225141714 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.237784413 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.767324038 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.054230293 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.212193959 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.220206626 seconds)
  done (took 150.011557317 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.465567267 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.193192128 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.193789474 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193983593 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.192445659 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.224098572 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.194306 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.708236507 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.71037842 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.696659803 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.684412281 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.196053983 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.252570847 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.398344821 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.19384095 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.285702425 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.207882548 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.194729749 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.210155218 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.217471854 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.1968943 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194603702 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.720544706 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.209692202 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.358773956 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.20157936 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.195090998 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.225098942 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.589039182 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195505521 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.224847632 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.509751338 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.23798278 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196001316 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.474569859 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.407287401 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.302006777 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.196434638 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.224884075 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.194936498 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.463406482 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196730953 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.19660082 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.199073338 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.753959074 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.196720029 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.717630697 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.197950264 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.083548093 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.195625262 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.196048851 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.995953342 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.608811169 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.195054228 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.196408297 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.198247955 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.195633735 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196420445 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.225447261 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.197119138 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.965571901 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.292862205 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.196735466 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.199769828 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226605553 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.196074726 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.269188453 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198058882 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.72450983 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.254954693 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.419374571 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.726544359 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199642998 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287778316 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315582726 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.19644806 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.19709345 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.19758233 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.19692106 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.302877023 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.196655548 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.590015099 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.20312589 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.198054926 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.256116938 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.290822264 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.198098407 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.479303042 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.197685004 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.198029788 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.901150375 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.28947065 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.197085653 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.198882443 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197805485 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.592326249 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.717322238 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.381797292 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.198800291 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.999985201 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.19978528 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.605395887 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.709987945 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.749713218 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.198082586 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.30397495 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.201687593 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.202067171 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.196096658 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.225500316 seconds)
    (110/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.198192751 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.197690268 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.19850149 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.259011134 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.593743786 seconds)
  done (took 345.842377145 seconds)
done (took 688.703307618 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.871250982 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.856490893 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.966371349 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.860542169 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.839355867 seconds)
  done (took 10.536293298 seconds)
done (took 11.68131161 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.372368047 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.372490063 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.251698081 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.372974036 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.223581992 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.38926988 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.352119138 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.217434776 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.293899632 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.270842551 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.292093483 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.24286349 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222291953 seconds)
  done (took 18.014880039 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.487125079 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.49885245 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.259670676 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.48944642 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236425747 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.496870337 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.380626636 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.390269528 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.3806657 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.213350316 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.210288119 seconds)
  done (took 16.187072664 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.500309144 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.483400891 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262437941 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.488693465 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237170235 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.500975404 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.382375788 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.391349042 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.379933035 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.213148073 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.209231875 seconds)
  done (took 16.190880498 seconds)
done (took 51.533472559 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.203815144 seconds)
  done (took 2.344942757 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.236101222 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.399028773 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.21865179 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.208458242 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.207109882 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.207182876 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.208723406 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.205562452 seconds)
  done (took 11.033539312 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.203255154 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.200823721 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.204228114 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.20144374 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.202052853 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.20489924 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.204562945 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.201747073 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.202055531 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.204299116 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.203362045 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.20222929 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.205319958 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.202405438 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.20462056 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.20141897 seconds)
  done (took 20.389714139 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.204090388 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.202100477 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.201932317 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.203397561 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.203273347 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.20158673 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.2038928 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.202744087 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.201499873 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.203042356 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.203227556 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.203878792 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.204266338 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.20300878 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.20275685 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.204536735 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.203468948 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.202874832 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.206641976 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.20328828 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.204309289 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.203119331 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.20372153 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.204707302 seconds)
  done (took 30.025882052 seconds)
done (took 64.934609601 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.205615525 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.762552405 seconds)
  done (took 9.111125941 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.205753588 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.206101968 seconds)
  done (took 3.556274728 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.206041547 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.205108769 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.205335921 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.205705937 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.206423644 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.205984869 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.206599342 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.205972002 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.206655404 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.206863842 seconds)
  done (took 13.204053931 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.205921021 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.206963549 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.203869872 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.208206141 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.207501658 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.204395706 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.20771304 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.206754507 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.206811553 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.204518481 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.20777317 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.2051643 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.207622102 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.204417746 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.208245535 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.204040305 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.205833374 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.205034243 seconds)
  done (took 22.854850016 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.207130648 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.208048765 seconds)
  done (took 3.558526427 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.204521667 seconds)
    (2/7) benchmarking "second"...
    done (took 1.204706025 seconds)
    (3/7) benchmarking "month"...
    done (took 1.204654792 seconds)
    (4/7) benchmarking "year"...
    done (took 1.204899265 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.204241797 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.204534288 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.205209746 seconds)
  done (took 9.576220431 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.207610989 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.383891968 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.464887364 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.777881386 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.208245192 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.210568826 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.052609522 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.211207812 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.213063592 seconds)
  done (took 13.87459839 seconds)
done (took 76.878344601 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.191696569 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.199000128 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.024514153 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.22308499 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.216221256 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.49860388 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.228980639 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.320690782 seconds)
done (took 37.048203309 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.216291122 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.951463901 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.981519045 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.212285099 seconds)
  done (took 11.291458443 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.18466302 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.073172956 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.191257272 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.174600381 seconds)
  done (took 17.768680257 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.778974953 seconds)
    (2/2) benchmarking "read"...
    done (took 1.530066466 seconds)
  done (took 4.45294886 seconds)
done (took 40.876247036 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206757087 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.206677773 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.204281942 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.204252886 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.208486116 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.203931146 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.203760356 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.207370696 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.206658635 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.206177362 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.206262738 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.206283017 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206005353 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205990551 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203656296 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.205597896 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207231848 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.204178119 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204202457 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.204553195 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.204344242 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.206476611 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.202689841 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.203985932 seconds)
  done (took 30.073736072 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.206859323 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.20470585 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.206797799 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.206250102 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.206135624 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.207790619 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.207723426 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.203940134 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.208516287 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.207312512 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.204488152 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.204036775 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.207080063 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.205658341 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206916451 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.205672074 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.206804385 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204543669 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207182847 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.205168216 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.207608042 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20483052 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.205284674 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.208506507 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.205130685 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.205500411 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.208537356 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.205892136 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.2089804 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.206221113 seconds)
  done (took 37.335204759 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.213816274 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.215157506 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.207786076 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.209543409 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.20917862 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.210278653 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.20790749 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.209224643 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.209030449 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.209425678 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.207380584 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.208277362 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.208581814 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.208172777 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.208471342 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.209092495 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.208500416 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.209850241 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.208805392 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.209818469 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.20882865 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.208376141 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.208731256 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.209812928 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.207176753 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.208269094 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.209126916 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.208827444 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.209197303 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.209357906 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.208326433 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.210115316 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.209034424 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.207737364 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.207975153 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.208079528 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.211820662 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.216110372 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.207760857 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.20912352 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.210071807 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.209184769 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.208670124 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.208469476 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.208096934 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.208812687 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.208918914 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.208865567 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.211013451 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.208147172 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.208768635 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.208405744 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.208523841 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.20843016 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.208821323 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.208475422 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.21068208 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.208096994 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.20773481 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.207615497 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.20904029 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.208566286 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.208286031 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.207519305 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.210725204 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.207926554 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.208185561 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.208176804 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.207996672 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.209113579 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.208551016 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.208501194 seconds)
  done (took 88.197954238 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.209769865 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.205726887 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.204976346 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.205133024 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.205646626 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.208390907 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.205499241 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208493859 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218749595 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.209103124 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208260441 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.207212245 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205688713 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.208503729 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.207696387 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.206345374 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.210093409 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.205481476 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.209048528 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.209629603 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.208975398 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.206777564 seconds)
  done (took 27.72126014 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209964203 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.209573842 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.206457352 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.209385414 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.206977417 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.209451789 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.209372605 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.209925772 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208449228 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208352454 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207702715 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208312893 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.206308805 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207250789 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20709332 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.206676721 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.209035276 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.206613538 seconds)
  done (took 22.893666491 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.207055815 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.206336749 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.210807171 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.207902287 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.207637197 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.209380361 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206834544 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.210063648 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.209760323 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.206894931 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.209665494 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210239615 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.210195261 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207303356 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210021581 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.207432863 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.209997095 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206609804 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209993311 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.206935009 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.207970435 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209926093 seconds)
  done (took 27.735624232 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210219435 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.210406007 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.208455921 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.208091478 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.20739195 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.210446021 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.210376311 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.207687602 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.210163574 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.211187654 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207467169 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.209488871 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.207846713 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.208422841 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.208167478 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20796741 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.210444972 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.208617691 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211545369 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.209249061 seconds)
  done (took 25.332029293 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.211232063 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.211591453 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.210720194 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.211048291 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.212766064 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.211887236 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.211664271 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.212054711 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.211720562 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.212564123 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.212264225 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.212374125 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.212501644 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.213321992 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.211662051 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.210928377 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.211483038 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.212254197 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.211760802 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.211183646 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.211762332 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.213276854 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.21233467 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.211200679 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.211736421 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.210774054 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.211473931 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.211518634 seconds)
  done (took 35.079838949 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211951191 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.211445872 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.207578255 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.208536093 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.208854173 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.206948543 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.208571977 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.208235435 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.211423564 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.20938906 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.210447016 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.210238689 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.210384493 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.210183533 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.211229541 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.210867697 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210883121 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.208996794 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208914335 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208249671 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.210569908 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210527643 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.210814992 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.208908455 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208993437 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.211273216 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208875112 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.209099414 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211693054 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.208341031 seconds)
  done (took 37.441390152 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.229747752 seconds)
    (2/2) benchmarking "in"...
    done (took 1.229648757 seconds)
  done (took 3.608689051 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.210459864 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211792875 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.211212055 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.209839198 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.209153237 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.212050186 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.212478743 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20936974 seconds)
  done (took 10.833874401 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.210435663 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.212215244 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.210934988 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.211491446 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.211067075 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.212135821 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.220244524 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.2271758 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.213207421 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.211655417 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.215410941 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.217399617 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.216503789 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.211994208 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.210273606 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.213880771 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.21283287 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.210876594 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.212117376 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.212131088 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.211411479 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.214528813 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.214327407 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.209138897 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.214512399 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.223802682 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.217720021 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.212302851 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.211641219 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.218121239 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.211579743 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.209859944 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.214106654 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.211551578 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.21200582 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.210789884 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.223604165 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.225806413 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.220528604 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.211639369 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.213284857 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.209157293 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.21272115 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.213964695 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.213610224 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.212385448 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.212947785 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.209279234 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.211186673 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.215748127 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.215464594 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.210530796 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.209238854 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.2197218 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.214378624 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.221081809 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.227203877 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.215743256 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.219005716 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.224169686 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.226119498 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.21869459 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.213263479 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.212272633 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.221626759 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.234562681 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.222036042 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.223940062 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.210340689 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.212231078 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.222430718 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.226300404 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.22135473 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.214157165 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.212555717 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.213036973 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.212503912 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.213278479 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.221589094 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.230991957 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.21201262 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.21209169 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.221162161 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.231212707 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.211799754 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.21338803 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.212520402 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.213149393 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.214334712 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.224174723 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.228072144 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.213556389 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.212280291 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.212195024 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.215216531 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.213723649 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.211956594 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.215986891 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.212149927 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.214511223 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.214343032 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.216799233 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.222168975 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.214558947 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.214122406 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.22391844 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.215681524 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.214252571 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.224947202 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.215318545 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.214470455 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.214629331 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.221604202 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.21262119 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.217123447 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.22170983 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.21445197 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.21677784 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.216111781 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.215494559 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.223497175 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.238501705 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.215782944 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.215544562 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.219478093 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.224368287 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.214861968 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.219175172 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.216560868 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.21358776 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.2129731 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.217479117 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.215954244 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.217251229 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.216172864 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.218168077 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.213931608 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.215286468 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.21648403 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.219039895 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.219890341 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.216530921 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.217993412 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.21938698 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.216876785 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.218485585 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.225047353 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.217273784 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.217861087 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.216816208 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.213884763 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.217616986 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.217784519 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.217247624 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.216177441 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.217540865 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.215677979 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.21862048 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.217274462 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.217097003 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.21774387 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.216764075 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.219597667 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.216901237 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.222622484 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.215620935 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.21442981 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.216780105 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.217576384 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.217939743 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.218082231 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.215915884 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.21944003 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.222915192 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.217863163 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.216904801 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.222480465 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.21680702 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.2178698 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.217070341 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.2205461 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.225227044 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.218580342 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.226161919 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.218214154 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.218526668 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.21756534 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.217994017 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.217952832 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.218383486 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.220013738 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.22476807 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.231653031 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.226851924 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.218394338 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.221782236 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.21926121 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.22022722 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.224421516 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.218851872 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.218717681 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.218504167 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.218005152 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.218088651 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.220780253 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.21722387 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.218202942 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.219363896 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.21809446 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.21920844 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.219299689 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.219304494 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.220795988 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.216350975 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.219383932 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.218746487 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.218028357 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.217224171 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.217784573 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.218713683 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.220080635 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.219844971 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.229728849 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.21738572 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.220619846 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22095333 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.220476572 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.21887799 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.220448114 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.222872572 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.220976331 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.228034679 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.234595662 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.221490105 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.228083712 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.234274463 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.220046438 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.223483878 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.221109727 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.218633884 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.222647151 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.227067709 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.221263315 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.220462661 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.220646177 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.220838884 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.221945035 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.229128479 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.218815691 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.220050897 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.222198276 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.223364555 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.218260275 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.222597579 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.222201188 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.221371647 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.223725917 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.221714196 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.222506819 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.223877784 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.222400891 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.221906102 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.221518589 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.222871521 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.227784311 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.229330565 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.225184177 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.224772004 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.222286129 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.224831566 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.224588611 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.22185865 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.221214076 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.234975383 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.228938645 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.231069942 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.225574367 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.223436414 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.229219663 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.222955481 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.225569038 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.222666719 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.222864313 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.223601672 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.222058574 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.22099872 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.224365748 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.224519135 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.224411222 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.223842856 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.226569379 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.224124065 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.22217803 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.223648759 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.223220438 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.224573329 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.222889127 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.223918572 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.226734191 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.226084726 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.223366169 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.223538215 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.23291617 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.238587344 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.224957067 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.22342212 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.223599727 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.223679462 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.225216704 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.223250162 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.225850558 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.230501087 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.226467693 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.2323369 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.224046265 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.233941897 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.224330217 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.226728412 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.230234927 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.222726031 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.224107186 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.224393802 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.223764868 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.233347873 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.238143329 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.225291932 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.227465275 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.224400354 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.224563251 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.225633155 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.224279468 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.224799997 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.225648014 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.236061601 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.239957082 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.22810646 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.227843577 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.222253816 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.22550513 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.226423941 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.224307299 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.231641374 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.226154647 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.227739251 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.225218878 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.226479409 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.226777009 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.225771985 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.226960049 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.224810696 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.227364391 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.235466598 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.241554915 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.229099998 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.226716317 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.237454054 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.227220156 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.23609695 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.240815944 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.226782928 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.227023033 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.2273841 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.230380003 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.227417859 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.23001667 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.227159428 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.228040133 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.22948121 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.227048889 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.231469875 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.227780024 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.22769858 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.226301074 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.235456124 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.24763249 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.227851861 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.230376526 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.225265074 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.227944181 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.229453225 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.226975522 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.225829184 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.229378072 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.234619519 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234865487 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.227686069 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.226786033 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.228067001 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.228051205 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.229065259 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.228777304 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.22858328 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.229081942 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.230844119 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.228735499 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234257073 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.229267086 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.229756317 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.230164555 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.229470947 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.239708124 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.229002736 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.229730463 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.228694623 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.229988784 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.229126047 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.229741429 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.228047868 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.229945691 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.229493088 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.230149132 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.23401018 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.233806335 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.232378184 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.229207383 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.229234879 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.228685063 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.230955718 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.230077085 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.229612457 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.229684062 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.230459788 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.230073014 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.232060841 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.228585277 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.231491157 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.23112438 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.231121555 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.232010725 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.235116389 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.230619928 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.228140706 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.231035954 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.230533103 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.228303328 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.230858386 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.24220958 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.23281571 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.2386164 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.237480487 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.23240496 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.231095935 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.232809817 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.236726935 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.229832863 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.23271895 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.231493507 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.233327632 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.231049272 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.232942394 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.231598964 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.240698143 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.231915984 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.231165804 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241023314 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.247379326 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23234302 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.233201076 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.235612426 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.231840992 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.229567029 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.231791732 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.231037141 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.2414839 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.248644556 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.232466866 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.234170732 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.229899039 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.233232932 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235016322 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.232662701 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.234050749 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.231390312 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.232810547 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.231790729 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.232782948 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.230823128 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.233062005 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.233436207 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.235112606 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.238272039 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.228799736 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.236254451 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.232265233 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.234114792 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.23284145 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.232936009 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.231650655 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.231779997 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.233043304 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.233219671 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.234054354 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.23634626 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.233358008 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.233708558 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.234005498 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.233077838 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.235783732 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.240474494 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.239340249 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.232208422 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.233343857 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.233395136 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.237483866 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.232885797 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.233518632 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.233652079 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.237349066 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.234653132 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234097801 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.234848398 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.235944059 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25025913 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.248382013 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.235145511 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.235562551 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241077351 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.235239511 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.232913557 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.235460394 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.238620981 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.237363882 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.240026252 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.234053108 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.244359971 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249676532 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.235880375 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.23924353 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.236788727 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.242180344 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.238769271 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.235248696 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.235073296 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.240822629 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.251025844 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.236937717 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.244342028 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.263529608 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.251319563 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.236826103 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.235822776 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.234535742 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.236102649 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.239100753 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.23653946 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.235766805 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.237080091 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.235785557 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.237435148 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242072711 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.238175136 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.236312846 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.237474243 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.236655869 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.239851095 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.234089593 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.236190595 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.23740415 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.236936602 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.236719449 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.236681613 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.237789652 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250708535 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.247571916 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.237643809 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.237258986 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.234376145 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.242574377 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.238794747 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.244882941 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.242902968 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.237449329 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.237440484 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.239827649 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.23640655 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.235772906 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.238272106 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.237176845 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237426603 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.236331019 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.251353545 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244414974 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.243940347 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.238639008 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238128642 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.239011769 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.240683759 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238427001 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237959479 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.241418998 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.23856837 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.24091175 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.238637765 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.238215029 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.241057334 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.245451565 seconds)
  done (took 731.963173989 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.237276281 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.237590236 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.237421867 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.237332977 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236985529 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237866884 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237642148 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.236499863 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.236995723 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.237634625 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.236621169 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237037945 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.237598185 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.238677403 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237697488 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.237014253 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237634495 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.236365994 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.236897266 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236996795 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.237689531 seconds)
  done (took 27.159369448 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.238944823 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.237278822 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.23781202 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.239744688 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237102881 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.240287194 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.237947271 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239794704 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.240192832 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237543025 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.240664481 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239666476 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.23828497 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.239014793 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238320462 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240978502 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.240614842 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.237286818 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.241273218 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.238194305 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241517005 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.238499907 seconds)
  done (took 28.437006305 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.242340251 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.240770046 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.239467138 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.238394486 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.240647034 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.238613331 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.24077948 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.2407686 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.241152784 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.242995373 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.239270077 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.241454185 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.246094945 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.245354901 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.245175356 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.242327773 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.385430652 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.242241929 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.241707996 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.241225497 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.240091146 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.250301121 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.240014775 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.239742632 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.240774863 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.242317836 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.243230758 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.242108437 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.242026502 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.243234924 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.245366477 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.243252566 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.241649098 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.245412166 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.242654814 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.243061919 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.24658697 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.243902682 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.241036833 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.24343691 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.252127467 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.260918672 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.24310568 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.251997385 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.244642552 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.243678206 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.247258202 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.249610471 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.240902909 seconds)
  done (took 62.249077663 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.243739915 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.244389853 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.241575925 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.244020355 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.244125414 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.244304707 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.244492823 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.243232036 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.242036872 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.241864585 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.244962385 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.242568897 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.242230852 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.245213776 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.245474997 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.242542085 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.242386522 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.242653742 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.242869963 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.242923665 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.241635672 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.245323893 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.246411394 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.242909016 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.245453278 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.242418088 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.243626882 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.245304294 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.243306733 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.243431101 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.245338072 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.245654615 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.246256609 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.243617048 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.243616989 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.24609602 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.246890938 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.2439053 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.245485863 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.243687895 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.246298934 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.245079429 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.246285587 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.246608489 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.243678878 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.244234306 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.243442016 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.243501005 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.244380185 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.24551022 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.246669942 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.243968285 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.245260852 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.243419275 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.246247243 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.247537288 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.243696678 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.243921708 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.245937057 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.244822991 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.244728439 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.246970302 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.245309885 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.247394022 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.246868932 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.244578071 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.24514302 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.24736865 seconds)
  done (took 85.809649451 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.247632417 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.247102627 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24736112 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247283579 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.247040127 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.247131464 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.246589933 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.247583123 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.24736407 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.247496359 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.246580031 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.247918942 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.247560398 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.248331515 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.247393555 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.247991448 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.247659638 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.249540838 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.247923351 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248236736 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.248148185 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.247482973 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.246992555 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.247812258 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.248828587 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.247340506 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.24733646 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.247141253 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247484279 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.247639964 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.248026653 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.248480159 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.247433745 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.247879659 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.248778753 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.248582618 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.248155043 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248567722 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.248021835 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.248311337 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.2477754 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.248917377 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.248494843 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.248406804 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.248985457 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.249317736 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.248791274 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.248817014 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.250371117 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.24876079 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.248136122 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.249967894 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247833928 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.25029768 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.249706867 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.249277079 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.249077668 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.249560114 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249353613 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.249958006 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.250045761 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.250438353 seconds)
  done (took 78.577702467 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250415707 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.250395727 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.246774146 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.247215685 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.251108396 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.248376967 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.250617407 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.250696699 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.251268878 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.251299734 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250120835 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248150376 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248226586 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251896532 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.248279421 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248473131 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248138419 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.248338752 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250259207 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.248954127 seconds)
  done (took 26.174967737 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.248717753 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.252207954 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.248703325 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.250688753 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.251511796 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.248915336 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.25222215 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25149392 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249795103 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252824055 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.251879931 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.252803657 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249764207 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.249236645 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.252896464 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.249206591 seconds)
  done (took 21.200104149 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.25058105 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.251909882 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.251742175 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.251394652 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.248762104 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.250228812 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.252213496 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.249190067 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.249736112 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.252986098 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.25257794 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.252718978 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.252873884 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.253044029 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.250393937 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.252514802 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.251450065 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.250853636 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.252362892 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.252811101 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.251354066 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.250234147 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.253799897 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.252470815 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.250639347 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.251862898 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.250262937 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.250259817 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.25072419 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.254115971 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.250740234 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.251539868 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.25094844 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.251855918 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.253389332 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.251038272 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.253350834 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.254042135 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.253028005 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.253662562 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.254492465 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.252347392 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.254379981 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.253908537 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.251935799 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.254189813 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.25186272 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.252310834 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.252685242 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.252550037 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.254994608 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.254238654 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.255260111 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.255455555 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.255406363 seconds)
  done (took 70.06476871 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255601594 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.255919566 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.25219116 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.255657776 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.255376976 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.252767587 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.255624796 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.253563889 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25359572 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.255357345 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.254106916 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.255241462 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.254502342 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.255517968 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.253810264 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255814217 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.254271341 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.25354959 seconds)
  done (took 23.772591173 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.25390095 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.25471694 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.257382526 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.25275424 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.252913797 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.2578014 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253354369 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.255800318 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255896786 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.25450872 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254410724 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.255989645 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255991438 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.256655791 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.254448149 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253850654 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.25681885 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.257771026 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.255053209 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.254776402 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.255532108 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.256344226 seconds)
  done (took 28.808509606 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.255281058 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.255695582 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.272356322 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.295771518 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.284842942 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.254414054 seconds)
  done (took 8.809496543 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254820875 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257386576 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.254587523 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259419845 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258424595 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254345326 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255185464 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255536087 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257625568 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255340309 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255606324 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258365775 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258205198 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255276898 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258288161 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258169621 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255208852 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256134251 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256732847 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258365166 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255634011 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258743273 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255411312 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255443499 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256322346 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255943043 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258763864 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256848269 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255514489 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258948582 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256216631 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253950993 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257114883 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254627659 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256438927 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257000618 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253500342 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253335662 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.248757083 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.247113315 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.24796734 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.248959508 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.24943311 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.246072941 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.248501139 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.242431494 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.236603359 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236851632 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236859051 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.240922505 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239840688 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.237305009 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.240214638 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237138926 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233483056 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233659941 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230412661 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2302027 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233111406 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230343183 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231001127 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233300037 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227041708 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226602087 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229254981 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227065989 seconds)
  done (took 83.587701418 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226829958 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.227931473 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226854541 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228815463 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227869266 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227790187 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227302773 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22706663 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227143696 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227541245 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229835695 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227573756 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228116602 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228238799 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228818242 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228433971 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22801048 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227789121 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228384451 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232396815 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228531073 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228656892 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229030514 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228489584 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22924195 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230845123 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228481522 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227891286 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228594249 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228511245 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228893447 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229029704 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228978111 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.228493334 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22884701 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229469177 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229245253 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228789667 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228902935 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230683943 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229680009 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231286859 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229255372 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22942346 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23043369 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230439711 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230078776 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230051639 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229663389 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22954105 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230115345 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230474119 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229629681 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229992371 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229552795 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229475619 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22983023 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230571927 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230221472 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232868694 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230524652 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229376487 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233041318 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230550863 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230681137 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230000151 seconds)
  done (took 82.298153446 seconds)
done (took 1706.309618497 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.220641566 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.292143433 seconds)
  done (took 13.682551548 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.39248661 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.345619271 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.231260197 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.233778615 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.231637618 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.22690792 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.248032647 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.231186135 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.231512396 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.230854837 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.230989721 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.419680289 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.283249015 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.231447923 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.232444341 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.323342775 seconds)
  done (took 41.50618313 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.256392233 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.240961979 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.335193703 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.25589814 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.259903663 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.397907641 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.288069957 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.238704273 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.383259428 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.274300512 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.578883184 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.259934652 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.239030732 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.189244066 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.254317463 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.398617881 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.45152498 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.58346096 seconds)
  done (took 28.057137318 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.619182479 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.263761866 seconds)
  done (took 9.057221675 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.273551405 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.255003949 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.231800535 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.236568426 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.267689104 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.282038613 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.278919949 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.265400974 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.242118391 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.291521706 seconds)
  done (took 63.808784543 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.255700123 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.240629947 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.240078896 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.237978013 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.23452569 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.231945713 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.2379589 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.235063454 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.294974764 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.347521693 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.25079104 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.246445068 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.241798039 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.240306604 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.236414978 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.272788946 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.365606616 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.237560694 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.23689867 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.246310698 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.239916423 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.359972532 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.27549924 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.237194383 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.348264491 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.361222823 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.241142907 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.246505489 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.358206805 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.238791899 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.238542693 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.239938505 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.240894466 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.776576869 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.656070201 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.257175006 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.261093772 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.249347182 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.238176781 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.412787527 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.241029466 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.247800329 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.242303746 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.630983071 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.3889536 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.338694355 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.342253891 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.240473138 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.242215178 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.299013159 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.241156688 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.242308645 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.267527052 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.949669116 seconds)
  done (took 104.699574454 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.232278484 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.721496405 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.401363887 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.255855091 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.989088903 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.858433804 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.234712815 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.478467392 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.280337218 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.233035381 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.557330577 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.691412707 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.23546238 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.254921744 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.402007015 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.239237779 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.236166376 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.95985921 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.236133992 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.235917043 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.634822396 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.249707068 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.234223833 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.27645983 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.271860912 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.654859766 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.484171239 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.636053647 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.239219536 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.23467029 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.657056868 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.240325116 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.280280436 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.235519371 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.489277249 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.545463011 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.526745901 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.235508709 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.234380446 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.236929641 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.261289361 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.651773098 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.534485004 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.236792196 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.23566926 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.655850868 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.236128671 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.239838898 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.239768519 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.439041442 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.231677405 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.237789154 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.481422732 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.235865033 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.587556244 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.250058361 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.296997076 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.684247362 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.236369637 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.263420464 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.282858339 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.237764677 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.241402633 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.23926284 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.241147863 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.541382729 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.696233137 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.238752102 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.542087913 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.650090429 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.237728308 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.716000103 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.155857734 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.260128241 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.28954115 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.236669353 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.767331947 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.683563395 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.286898718 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.237652176 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.527798327 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.238522173 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.537046903 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.249288943 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.238534955 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.646097848 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.253832794 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.240358576 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.237079713 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.239055068 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.851264965 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.238786505 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.485686519 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.250200194 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.238970185 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.238452418 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.27151699 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.246017931 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.237623207 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.236711548 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.719339944 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.241530088 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.521499373 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.255894673 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.238338152 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.253070189 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.240097445 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.239220936 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.458429046 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.719599886 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.246766452 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.239356936 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.238657733 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.239023873 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.540019897 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.239762414 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.502310604 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.24063893 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.246815652 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.240372224 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.933808444 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.246875184 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.239634825 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.243435692 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.076005351 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.447278185 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.255033871 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.255930457 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.241428068 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.252195763 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.436597129 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.24009342 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.283306164 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.242668595 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.903549218 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.26406737 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.261418503 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.896827678 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.247948717 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.037475907 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.257997905 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.242018364 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.53729012 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.4976546 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.633800695 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.241386937 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.256044 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.871714169 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.28211281 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.374207063 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.259210357 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.243819644 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.435803701 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.513280826 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.241080127 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.816341088 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.240619413 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.453891527 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.247388364 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.549841429 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.684138326 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.241446065 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.249605533 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.897505341 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.903339665 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.849452775 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.242678672 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.553852664 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.206810928 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.695328174 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.24116514 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.2433747 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.667312 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.245035257 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.243936161 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.241281436 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.242430776 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.30713804 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.413987934 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.817317978 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.246395266 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.661477227 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.263775324 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.243182707 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.260793342 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.244387811 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.595968964 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.321264081 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.245268147 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.300585477 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.241804542 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.248817224 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.674796121 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.199102056 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.245055457 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.393562041 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.827581965 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.243276754 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.244950287 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.884098941 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.56229249 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.709392233 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.249725729 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.510009792 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.244434975 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.281038054 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.931594421 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.25122194 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.672081368 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.244063652 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.243341552 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.785015751 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.243661957 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.295865129 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.244199433 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.24463591 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.724629559 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.244523904 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.248447452 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.448145623 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.243716494 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.507677326 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.24420935 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.254846614 seconds)
  done (took 1087.702589326 seconds)
done (took 1349.683917844 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.246276611 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.246725804 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.232841855 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.243980539 seconds)
  done (took 26.158030439 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.250769897 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.248338006 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.249011237 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.248061358 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.251397897 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.248970508 seconds)
  done (took 8.681712421 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.281445285 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.245844677 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.244252311 seconds)
  done (took 18.957988252 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.440397714 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.388591141 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.571129542 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.225660977 seconds)
  done (took 9.812448497 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.24924448 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.24949418 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.250206272 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.251483083 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.252485539 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.253496973 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.251371412 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.251868002 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.253881678 seconds)
  done (took 12.448676419 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.718414322 seconds)
done (took 81.965298738 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.728664531 seconds)
    (2/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.348747347 seconds)
    (3/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.230089516 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.260363477 seconds)
    (5/309) benchmarking ("sort", Float64, false)...
    done (took 5.459524937 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.806711883 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.230935934 seconds)
    (8/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.310247283 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.63804356 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.256734798 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.471315931 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.784485137 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.285614469 seconds)
    (14/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.260573577 seconds)
    (15/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.244896158 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.275822473 seconds)
    (17/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.271669809 seconds)
    (18/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.371981194 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.633263731 seconds)
    (20/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.224623202 seconds)
    (21/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.273312784 seconds)
    (22/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.24226086 seconds)
    (23/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.273128141 seconds)
    (24/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.264456494 seconds)
    (25/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.261769478 seconds)
    (26/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.743442703 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.341576227 seconds)
    (28/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.231995514 seconds)
    (29/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.379110435 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.289981027 seconds)
    (31/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.344263584 seconds)
    (32/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.530504512 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.447062953 seconds)
    (34/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.331291803 seconds)
    (35/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.612279504 seconds)
    (36/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.260412901 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.354698943 seconds)
    (38/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.665134289 seconds)
    (39/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.218653644 seconds)
    (40/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.908825465 seconds)
    (41/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.274945992 seconds)
    (42/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.938239565 seconds)
    (43/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.352084166 seconds)
    (44/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.234564913 seconds)
    (45/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.847687162 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.069217451 seconds)
    (47/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.936275394 seconds)
    (48/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.909023135 seconds)
    (49/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.247296818 seconds)
    (50/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.115781277 seconds)
    (51/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.388466638 seconds)
    (52/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.726712835 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.369115625 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.503722051 seconds)
    (55/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.246877219 seconds)
    (56/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.42618242 seconds)
    (57/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.255841111 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.309369528 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.468591413 seconds)
    (60/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.23391921 seconds)
    (61/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.427589467 seconds)
    (62/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.312652667 seconds)
    (63/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.386195526 seconds)
    (64/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.442808371 seconds)
    (65/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.585791057 seconds)
    (66/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.400075127 seconds)
    (67/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.238512108 seconds)
    (68/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.248604375 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.296034567 seconds)
    (70/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.827387797 seconds)
    (71/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.378260131 seconds)
    (72/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.357268674 seconds)
    (73/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.234889244 seconds)
    (74/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.275729085 seconds)
    (75/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.931746956 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.247729346 seconds)
    (77/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.531347909 seconds)
    (78/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.673791884 seconds)
    (79/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.334481665 seconds)
    (80/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.703586963 seconds)
    (81/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.619115645 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.45526943 seconds)
    (83/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.474207589 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.367023389 seconds)
    (85/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.374267814 seconds)
    (86/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.251129539 seconds)
    (87/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.336756211 seconds)
    (88/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.536921563 seconds)
    (89/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.381640228 seconds)
    (90/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.252835402 seconds)
    (91/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.254320299 seconds)
    (92/309) benchmarking ("sort", Int8, false)...
    done (took 4.26432691 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.676280267 seconds)
    (94/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.599337805 seconds)
    (95/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.266827861 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.927370053 seconds)
    (97/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.808943203 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.275302138 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.07690679 seconds)
    (100/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.40128279 seconds)
    (101/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.468293486 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.251880773 seconds)
    (103/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.253133357 seconds)
    (104/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.771741216 seconds)
    (105/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.533541644 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.58095999 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.645493563 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.264794718 seconds)
    (109/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.909923299 seconds)
    (110/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.917982209 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.586161333 seconds)
    (112/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.386260623 seconds)
    (113/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.33555322 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.450773954 seconds)
    (115/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.245560783 seconds)
    (116/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.30083136 seconds)
    (117/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.319894974 seconds)
    (118/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.629573189 seconds)
    (119/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.255437749 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.272905882 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.327609501 seconds)
    (122/309) benchmarking ("sort", Float32, false)...
    done (took 5.212641786 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.077410967 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.647506434 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.665934966 seconds)
    (126/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.807350558 seconds)
    (127/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.712615453 seconds)
    (128/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.517845504 seconds)
    (129/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.746997989 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.629977446 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 1.749310518 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.56716792 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.290233097 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.510750803 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.593401097 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.934848624 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.024747921 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.513952546 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.248249249 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.256702201 seconds)
    (141/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.404625531 seconds)
    (142/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.244585475 seconds)
    (143/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.339284125 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.275878539 seconds)
    (145/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.741076212 seconds)
    (146/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.351509372 seconds)
    (147/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.994007979 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.25403866 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.385501843 seconds)
    (150/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.76113778 seconds)
    (151/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.380430131 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.955708698 seconds)
    (153/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.254934115 seconds)
    (154/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.529364805 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.371238689 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.493230699 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.09350034 seconds)
    (158/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.679574329 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.925553378 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.281498778 seconds)
    (161/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.452412154 seconds)
    (162/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.25179749 seconds)
    (163/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.401641676 seconds)
    (164/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.367905213 seconds)
    (165/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.337131039 seconds)
    (166/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.345190452 seconds)
    (167/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.447312987 seconds)
    (168/309) benchmarking ("sort", BigInt, false)...
    done (took 6.254630826 seconds)
    (169/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.262845859 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.276190723 seconds)
    (171/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.376690211 seconds)
    (172/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.243892896 seconds)
    (173/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.579755489 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.254787558 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.810436324 seconds)
    (176/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.022336468 seconds)
    (177/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.239194007 seconds)
    (178/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.878247038 seconds)
    (179/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.057026041 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.30330751 seconds)
    (181/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.88964285 seconds)
    (182/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.265617973 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.848576005 seconds)
    (184/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.453833502 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.86564328 seconds)
    (186/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.254821892 seconds)
    (187/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.774931344 seconds)
    (188/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.328248256 seconds)
    (189/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.409734504 seconds)
    (190/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.565519143 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.294606006 seconds)
    (192/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.281529347 seconds)
    (193/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.492813574 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.256414853 seconds)
    (195/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.010845718 seconds)
    (196/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.338077649 seconds)
    (197/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.765647523 seconds)
    (198/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.265526667 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.301812049 seconds)
    (200/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.262816155 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.356625555 seconds)
    (202/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.4627478 seconds)
    (203/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.341478179 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.314081097 seconds)
    (205/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.253716231 seconds)
    (206/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.331882113 seconds)
    (207/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.820381678 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.100293209 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.7074777 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.092126676 seconds)
    (211/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.298546059 seconds)
    (212/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.324449381 seconds)
    (213/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.292995137 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.389803202 seconds)
    (215/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.949966886 seconds)
    (216/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.300238497 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.210237226 seconds)
    (218/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.297255051 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.477440563 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.78722074 seconds)
    (221/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.279477879 seconds)
    (222/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.291352075 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.507340588 seconds)
    (224/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.250150207 seconds)
    (225/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.296925072 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.354144998 seconds)
    (227/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.951019902 seconds)
    (228/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.36604338 seconds)
    (229/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.498501003 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.308352695 seconds)
    (231/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.380924344 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.2792781 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.332543152 seconds)
    (234/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.256785185 seconds)
    (235/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.276431081 seconds)
    (236/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.277097597 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.301498032 seconds)
    (238/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.376459792 seconds)
    (239/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.246344246 seconds)
    (240/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.259572181 seconds)
    (241/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.610892203 seconds)
    (242/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.25632827 seconds)
    (243/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.840274594 seconds)
    (244/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.934504348 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.258678183 seconds)
    (246/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.452927342 seconds)
    (247/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.601957121 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.850277551 seconds)
    (249/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.268197895 seconds)
    (250/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.40922875 seconds)
    (251/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.851761358 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.26138047 seconds)
    (253/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.5874467 seconds)
    (254/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.652929619 seconds)
    (255/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.285653948 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.333446656 seconds)
    (257/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.255857459 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.248850339 seconds)
    (259/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.660856138 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.259387627 seconds)
    (261/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.269462421 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.258123431 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.263077634 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.473919177 seconds)
    (265/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.481141463 seconds)
    (266/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.546103864 seconds)
    (267/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.552929563 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.260636146 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.289998973 seconds)
    (270/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.589780229 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.020978475 seconds)
    (272/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.819894169 seconds)
    (273/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.452587589 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.658458595 seconds)
    (275/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.020087933 seconds)
    (276/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.0823186 seconds)
    (277/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.24525611 seconds)
    (278/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.507647214 seconds)
    (279/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.28752358 seconds)
    (280/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.259845082 seconds)
    (281/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.577157559 seconds)
    (282/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.030757094 seconds)
    (283/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.270516037 seconds)
    (284/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.78529917 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.344377471 seconds)
    (286/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.387597071 seconds)
    (287/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.769716873 seconds)
    (288/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.947972232 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.357952563 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.378647029 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.361247455 seconds)
    (292/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.34336122 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.398804842 seconds)
    (294/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.287791836 seconds)
    (295/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.407345979 seconds)
    (296/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.288141138 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.303770304 seconds)
    (298/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.01651915 seconds)
    (299/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.249085451 seconds)
    (300/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.80753712 seconds)
    (301/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.34781227 seconds)
    (302/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.326266591 seconds)
    (303/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.567606407 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.285309378 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.043157148 seconds)
    (306/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.414236333 seconds)
    (307/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.683309137 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.492184422 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.496265233 seconds)
  done (took 884.181980902 seconds)
done (took 885.370197403 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.296141373 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.287770151 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.272392314 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.293875356 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.384382242 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.305058796 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.283352072 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.275307692 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.321087875 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.321717397 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.271526158 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.305017662 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.274868369 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.273129627 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.272260802 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.286694716 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.170856269 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.274388966 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.290165215 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.282545148 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.291254398 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.272019361 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.322753652 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.3064134 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.276229493 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.276104692 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.276923335 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.293131834 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.385156955 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.276770168 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.277162889 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.285918125 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.171568214 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.272132079 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.269548674 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.294257539 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.286155392 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.283331518 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.278269736 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.306561179 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.528923259 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.275051292 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.276223798 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.275153398 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.276063052 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.279760564 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.27642074 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.281984513 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.288000694 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.288412875 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.52115962 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.29124472 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.278287033 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.275528057 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.287000514 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.276370812 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.279605117 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.291897075 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.294659882 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.29104898 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.164767911 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.281041739 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.278482291 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.293223278 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.283005913 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.561704402 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.271474849 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.280844485 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.535903603 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.28049284 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.562282373 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.283882904 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.278188508 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.289822394 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.30766483 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.177562914 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.271904602 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.276156058 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.284174207 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.275213576 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.286068398 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.289348406 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.280658819 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.277954767 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.290291204 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.309494899 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.286973375 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.278435487 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.285954547 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.295834931 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.284837045 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.288396454 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.280931322 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.273211302 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.287869961 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.281523807 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.28008193 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.281308718 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.281622414 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.289056952 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.536745023 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.293941744 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.274192658 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.274517906 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.278212608 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.293150147 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.538746249 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.279704138 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.300266149 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.325140457 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.280371646 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.173485529 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.281780186 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.294766268 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.287623997 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.281988572 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.274071095 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.174482951 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.537356466 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.293040677 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.280646519 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.278283874 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.294403116 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.27937111 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.275829995 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.184940125 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.279781723 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.292946806 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.399793315 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.29026568 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.311552573 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.278399984 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.282073857 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.31236204 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.295504855 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.311319264 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.283428351 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.295433346 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.29583473 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.276617938 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.291498858 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.290629631 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.281121343 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.286568314 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.27486351 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.309861328 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.29276727 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.293258418 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.300759285 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.400632138 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.277926304 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.174617135 seconds)
done (took 214.283530554 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.338333728 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.269917498 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.380403462 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.278179111 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.374913185 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.374271067 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.275513578 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.276215607 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.275062974 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.655616694 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.275469581 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.275516807 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.270512531 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.275763962 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.359611231 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.277599071 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.275846725 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.618906046 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.277794781 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.347713346 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.276487542 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.275634574 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.278750118 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.658357159 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.276310008 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.275443857 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.348800874 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.279051443 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.624018245 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.279315994 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.278298084 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.624196296 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.368596262 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.296617197 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.289585247 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.287211998 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.376461753 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.293224756 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.359449173 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.358348391 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.382616744 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.308102094 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.272198069 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.276713297 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.281356142 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.279602948 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.276710425 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.3062817 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.277629065 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.277900315 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.621615946 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.289664071 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.278091881 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.278724998 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.277800954 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.308647653 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.278052969 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.280261263 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.36855825 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.279932306 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.341618194 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.687633337 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.657960845 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.281823118 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.279588248 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.278930405 seconds)
  done (took 144.800724493 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.348111162 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.352624976 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.386208589 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.280852268 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.331413795 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.389703597 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.28159624 seconds)
  done (took 10.586583798 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.285670282 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.281513914 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.331002665 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.330337902 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.280377754 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.427240496 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.281373205 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.292921792 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.279631566 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.333144452 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.282587321 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.282092598 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.289124856 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.279577659 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.330124325 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.292232036 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.395697767 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.282638363 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.281684404 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.435196899 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.280080283 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.289279886 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.333986734 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.293019184 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.283009009 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.28752557 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.850760418 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.283118333 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.279434135 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.283116451 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.281392403 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.319517184 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.283504297 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.277142858 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.280907651 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.398261635 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.282839541 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.281283723 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.284431851 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.283078134 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.283839396 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.283815775 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.28320235 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.282437445 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.28521267 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.307191132 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.284541937 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.284093465 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.284268806 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.285094354 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.332519883 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.284060427 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.281492625 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.281339064 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.339633766 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.290915288 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.284334056 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.281554463 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.285226161 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.282444578 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.437731156 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.331151251 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.284613345 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.331243124 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.285404975 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.286306068 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.285650899 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.285280113 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.338623427 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.285359474 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.332700267 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.28294782 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.441138574 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.308038112 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.286646381 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.288353345 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.287386571 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.284544681 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.279412311 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.290155914 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.282930954 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.285540049 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.291372972 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.282929311 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.283808378 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.387907673 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.393286805 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.283257807 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.297864558 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.292334551 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.28390096 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.337647202 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.286656353 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.284681307 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.338211661 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.399643027 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.338571126 seconds)
  done (took 148.320427732 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.291095121 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.293727555 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.287199128 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.301998582 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.286355452 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.286657398 seconds)
  done (took 8.968763859 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.286949143 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.286749723 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.287030714 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.286603992 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.286477011 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.286917101 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.286858641 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.288269016 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.290039345 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.286945373 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.287806137 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.288265892 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.288218186 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.286322651 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.28731443 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.287574356 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.287330755 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.285141438 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.287380607 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.286470226 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.390046081 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.287420616 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.287129633 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.288676471 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.29145254 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.287896616 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.295424084 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.28767608 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.289464267 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.29516602 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.290176956 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.288055741 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.288706685 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.293937185 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.292690979 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.288782869 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.291335909 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.28962374 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.285552676 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.289026276 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.289967483 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.288360767 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.289877446 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.289901417 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.290991438 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.292448251 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.292557771 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.296694398 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.288618008 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.28907532 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.290376363 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.289619984 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.29021633 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.289623805 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.294450713 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.293285509 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.293749432 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.290012963 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.288747356 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.29057532 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.291136274 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.290348682 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.291771996 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.292397389 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.287978292 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.290177203 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.290664535 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.292212234 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.290678981 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.290659467 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.291568623 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.28898703 seconds)
  done (took 95.174559735 seconds)
done (took 409.06348684 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.443153363 seconds)
  done (took 7.668676944 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.331406364 seconds)
  done (took 7.559106562 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.156083334 seconds)
  done (took 19.390936432 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.316325541 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.33282785 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.28510821 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.295388705 seconds)
  done (took 26.456996429 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.330665215 seconds)
  done (took 7.556637671 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.293775995 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.291359888 seconds)
  done (took 13.81422355 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.710184029 seconds)
  done (took 7.937083808 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.611499471 seconds)
  done (took 7.848204858 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.290305453 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.317267669 seconds)
  done (took 14.09640145 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.271258593 seconds)
  done (took 7.497628051 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.955295881 seconds)
  done (took 8.182994253 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.293854048 seconds)
  done (took 7.522888249 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.338431198 seconds)
  done (took 7.565546766 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.434389913 seconds)
  done (took 8.661486277 seconds)
done (took 152.985435922 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.28529072 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.286422574 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.286475874 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.284779901 seconds)
  done (took 26.369960651 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.325780928 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.324912863 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.326719027 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.337443506 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.328590411 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.325661529 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.318085348 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.317821196 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.33642394 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.328743623 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.327698972 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.327562082 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.325242764 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.318166603 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.328351575 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.328138456 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.336988749 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.326857172 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.318612055 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.329857779 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.293712908 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.3380344 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.329371957 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.29337919 seconds)
  done (took 33.020443172 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.490619602 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.363692698 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.446376847 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.345145444 seconds)
  done (took 6.874420636 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.345758388 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.345906342 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.36149149 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.397497247 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.424265975 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.356637419 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.32083371 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.315546087 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.301743923 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.347382132 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.422991487 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.36348758 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.429430389 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.293450519 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.480654234 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.294661519 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.293353303 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.347003687 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.397997927 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.411809119 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.29491727 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.346877057 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.350069324 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.363964607 seconds)
  done (took 33.837143899 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.29353841 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.302642864 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.300743483 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.294038771 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.294865171 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.294671973 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.299864004 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.294877545 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.316015109 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.295453031 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.293663855 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.293813654 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.293149916 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.294981447 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.294476267 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.306822078 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.308584201 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.294477753 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.298090211 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.301193575 seconds)
  done (took 27.196224863 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.288316877 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.141839783 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.638563278 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.543999648 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.289077607 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.29031181 seconds)
  done (took 27.423815906 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.358016947 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.469438488 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.294836735 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.612550917 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.688137061 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.296271513 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.296249801 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.504409916 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.776646122 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.785508958 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.347347447 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.355027061 seconds)
  done (took 19.016300658 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.294698114 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.291382481 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.296343727 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.307129741 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.34473758 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.299594807 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.302814761 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.289439035 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.346842355 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.350834904 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.300056905 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.346161631 seconds)
  done (took 37.002883285 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378738417 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.334907075 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.192483796 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.023813156 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.669319166 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.502686825 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.039342282 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.705518738 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.295522148 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565098983 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.987094851 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394300394 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.54624549 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301178002 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.291870779 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.240712578 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.516477837 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.736784968 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294897616 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.977329981 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317821858 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.291193687 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.035245818 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.320310484 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.504089694 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.421135574 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.55339519 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.293376539 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546515202 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.305839418 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303323352 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.293577227 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.567010226 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926816297 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388411579 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304604553 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.973303601 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.006164558 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.28652555 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.98780382 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.748650675 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.295309626 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304576072 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293607029 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.226999229 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.294619638 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.713372738 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.300699989 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.005357863 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.294211746 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.304753149 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388317618 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.297432892 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.108728899 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295113982 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.294656924 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.292705443 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299598411 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868656808 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.434238478 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.298655084 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.231077637 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.669623648 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.988770767 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865425024 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.396894478 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.298359978 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.29862765 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228902824 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.987831563 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.31220229 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442519249 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.315424379 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.944434822 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951196889 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.013261359 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.237257277 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.803103178 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.298832671 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.230503887 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.523040813 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295524004 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.231532132 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.250631142 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.229963244 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949567576 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304447072 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.627448803 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.303201102 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.707857126 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.30760346 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313213616 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320016368 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.51977361 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.182406984 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295139516 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.749481593 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437813208 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317599425 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.711152573 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.231705202 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.30022621 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550484621 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.508063307 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.303875205 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.252242792 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.484136362 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.740884404 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.314017041 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.296466785 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.309121557 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.820647861 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.311031229 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.435179038 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315989464 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.297226464 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988523574 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298688974 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.411539467 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.004774279 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537875647 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.045286723 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299868284 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381670931 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302908922 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.298173872 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.059185899 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.813737451 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.298115717 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.299709395 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.297130327 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.310243873 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.297788492 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246175935 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.299773716 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.03387613 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.299852442 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.521527124 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.297873059 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.578276727 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.22975339 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442952664 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.351986273 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.518372358 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.403050919 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.294085797 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.55024451 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293379339 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.296758692 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.30800075 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313110933 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392219352 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31627344 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.303533156 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.550752238 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.298135349 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.299533416 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.091781948 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.297279837 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294277678 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.299815063 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.118944313 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.821698689 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27433877 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.303970229 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.184223421 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.307955618 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358101413 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.299648873 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.304740156 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.942557126 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.083085467 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.300939915 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.301171775 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.519271682 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.304406932 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.077388191 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373586828 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.477432128 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.828248218 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.308816624 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.229213196 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.006348292 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.988688041 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295440797 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.230962471 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.295894411 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304748331 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.306154232 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.786771018 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.828669253 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297515818 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.002205513 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.302541731 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.30836682 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.303055854 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297976719 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.923949171 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.457282654 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.300117517 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.308957027 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4381841 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.310699669 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.230058269 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.300440007 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.302628616 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.296327148 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.296761859 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32964531 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.010633952 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.758762478 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.553899795 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.97446038 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.30971837 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.163639589 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.326745255 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.297452174 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.804606936 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312850665 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.323659149 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32045681 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.307926539 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.060771487 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.967959942 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868942078 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972670765 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783269954 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.181380058 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.299424066 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.300185217 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.718240548 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.232757996 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.854337111 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.470302527 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.71722156 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.243494238 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.484132067 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.416871254 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.998760293 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.309584127 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.524588783 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172913003 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.812358038 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.322288327 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.509691542 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333733997 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.3009091 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.229246546 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.601805203 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.517332768 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.805147392 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37764788 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.716307972 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.81097323 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.31348741 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.298244896 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.589645871 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460297843 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.012055443 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.470261579 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.298857931 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.039045537 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.770181375 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.310808297 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.525402108 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876180091 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.304192205 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.485310923 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238872166 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.310193267 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.310872118 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.301709611 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.437520842 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.2988836 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.567404189 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.310902009 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.233667192 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.300239866 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786925711 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.15478846 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.306359489 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300732503 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994736212 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.305410329 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561994278 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.304572002 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.913336699 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308644034 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.235304588 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.234199942 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.994252124 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.304892269 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275565821 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.751643334 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.657473457 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.286463034 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.31932727 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164494884 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.555841573 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.31469281 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.833946708 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.528292104 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.083282732 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325174679 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.402113115 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.855923466 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.302057308 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.301713535 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.538137374 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.123681695 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.526128568 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.206526297 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.209331608 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.300654818 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.516687858 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.302109533 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.069287037 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539304657 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.013407264 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.316605799 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955126069 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328187861 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.062874717 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.229739361 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.667690264 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.311501805 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381932617 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.313015763 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.314049744 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.31365322 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461159521 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.054853793 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.317988167 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.317845461 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397572055 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.48607434 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.932061755 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.307010481 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841775251 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981416218 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.842736862 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.317046611 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.30389813 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304462441 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237242049 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452407206 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.528003156 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577227578 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434949476 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.731894012 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328000047 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.86062598 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.330119624 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.517791998 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579723924 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.199559779 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315764055 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.31873086 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.304606407 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.315337524 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.515981473 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7596385 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.820445761 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424734366 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.306143944 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.72356069 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579851265 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.305388312 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.304264588 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.894649391 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.3085083 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.599122297 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.311900145 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.092984795 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453363099 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.315277934 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944566661 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.316051951 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.465916484 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.078710199 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.038415126 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.560526658 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.72354634 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.317870855 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.844024607 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.952017795 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.568896789 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373162113 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.317125849 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.424438107 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453445471 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.311971521 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.305970966 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30720189 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150848097 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.016450484 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.315523792 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846636389 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.571076457 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.304351983 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.313241644 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329946581 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.31668065 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.528748283 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975499772 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.534348527 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.316725775 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.311576505 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.122882849 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.847269694 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.3206349 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241114423 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.311133425 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53014818 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.543322856 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.32708236 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.759817704 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.018490793 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824670788 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.280392983 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329162684 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.316612066 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.958826955 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846428289 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.944230011 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76113089 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.866356181 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.308460816 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585415181 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.313152284 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.308086147 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599046152 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.312295759 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.310511187 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.322253908 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.844351198 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.021774627 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.311698277 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.05068816 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.245502975 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648829075 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.928875273 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248062631 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312692712 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.480721875 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.31324737 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439184037 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.320617562 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.317624342 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316378301 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.044450467 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.582965881 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.314573926 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.31403282 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.929229817 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.316529333 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31707801 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.532689482 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318498215 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.974135401 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.659792599 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.563900154 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.319316622 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.298873079 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.313831081 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310890038 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.296724781 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.508742485 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.803313726 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827494605 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.313022822 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.322885669 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.31486647 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.526588224 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.522036661 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.096764316 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.335689397 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31818315 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.32864569 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.216461418 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.811196033 seconds)
  done (took 1561.99385196 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.342125258 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.347181494 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.339219413 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.319886341 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.347052595 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.388214549 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.359601444 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.386830345 seconds)
  done (took 52.08211765 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.321451535 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.558519078 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.339007776 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.311739009 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.320577044 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.322284223 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.718023286 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.313955026 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.321164276 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.321644041 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.316698162 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.315299866 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.897043514 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.320889123 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.315427354 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.297841873 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.318920313 seconds)
  done (took 64.888964595 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.324875375 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.533571652 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.393214837 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.333161716 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.977590577 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.317151014 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.500632128 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.386518069 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.323386252 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.348901416 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.963926892 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.319105028 seconds)
  done (took 82.976530316 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.318242424 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.320011335 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.320274418 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.31984161 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.320105535 seconds)
  done (took 7.851771235 seconds)
done (took 1981.763295176 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.574648677 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.952041673 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.919207716 seconds)
  done (took 5.124988508 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.460363499 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.509847894 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.628283044 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.634415144 seconds)
  done (took 7.485958523 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.592301724 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.70845206 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.502866877 seconds)
  done (took 6.057558249 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.624256184 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.320575094 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.434171552 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.314949808 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.315482608 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.31553754 seconds)
  done (took 20.202133212 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.318024793 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.320279839 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.319318957 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.320990144 seconds)
  done (took 6.533714556 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.300401789 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.055411448 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.300169377 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.316464327 seconds)
  done (took 18.228009379 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.06589827 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.077415538 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.061330299 seconds)
  done (took 7.460045278 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.326553645 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.158894332 seconds)
  done (took 9.740827416 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.613837838 seconds)
  done (took 2.869221944 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.44931915 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.590663966 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.261310321 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.196925569 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.296373136 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.813418955 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.802516341 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.421395355 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.186669503 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.279869819 seconds)
  done (took 26.554787964 seconds)
done (took 123.464964192 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.834130569 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.318828184 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.521674486 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.805693311 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.539598695 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.521444723 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.513526261 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.775579508 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.328969343 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.310451062 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.810883514 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.538204566 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.677823903 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.316587357 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.677405278 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.31603937 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.537282055 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.87991846 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.492284428 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.732270693 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.52100726 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.448847791 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.638783095 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.472263144 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.53915969 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.472977866 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.028259014 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.561204046 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.667579151 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.050280642 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.473525254 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.906982459 seconds)
  done (took 185.486693892 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.315876566 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.316349849 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.316534409 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.333136408 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.316953474 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.325135868 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.318561397 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.316801846 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.316272712 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.316537865 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.318974985 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.317883459 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.319899016 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.316360317 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.319051714 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.322385849 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.317709406 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.317094954 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.330071004 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.323155982 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.329462331 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.317599945 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.330788426 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.335756531 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.317719501 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.319696477 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.334976254 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.317466074 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.318193592 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.319244986 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.331342077 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.319545307 seconds)
  done (took 203.54523538 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.319399369 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.335339236 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.31695619 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.336283376 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.31805339 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.327534102 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.31788599 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.319127132 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.330592126 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.317945508 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.319351136 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.327024941 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.31760754 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.319039981 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.333548138 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.33570692 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.318253377 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.319256897 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.332853559 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.322843574 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.319202546 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.324696306 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.319507953 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.319344067 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.318564695 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.333713442 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.339010869 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.318975259 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.318190443 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.319264502 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.318855162 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.319238542 seconds)
  done (took 203.61413701 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.514610426 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.326851024 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.327715191 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.264905118 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.328389248 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.326742241 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.32499365 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.516794815 seconds)
  done (took 14.191771599 seconds)
done (took 608.09394057 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.530660993 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.258954731 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.519435878 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.348920361 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.058860714 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.349435512 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.349080993 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.504670453 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.21905352 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.507270219 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.533981992 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.345556004 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.675355418 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.346658412 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.58298657 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.438072126 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.171560104 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.286681637 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.644738997 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.82771666 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.58866017 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.742752245 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.503664621 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.223369268 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.677616656 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.744074307 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.969003021 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.168439538 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.348304968 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.650407553 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.899989296 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.23828441 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.399272309 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.38325368 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.436239799 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.419321868 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.204079351 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.380842923 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.520032199 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.505602962 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.828656271 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.039273159 seconds)
  done (took 89.632855156 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.318566092 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.321526916 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.317216894 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.320563473 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.319595023 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.320473741 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.317655892 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.319931469 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.319622667 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.318272599 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.318207724 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.320549706 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.319804292 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.320496142 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.319883742 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.318194633 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.322186168 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.322294401 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.32100779 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.319932561 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.32026824 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.318705261 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.319668463 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.320914171 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.320259907 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.319897938 seconds)
  done (took 35.580512124 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.331379151 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.562007504 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.719093382 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.338848037 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.331270632 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.335015953 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.401829414 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.332893408 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.334310158 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.334710873 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.477909463 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.336620713 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.366061934 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.727952695 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.33703202 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.332888199 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.332447385 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.332939313 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.570437229 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.342930175 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.404964693 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.333920493 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.40409948 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.343033707 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.335559877 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.333427213 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.337471602 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.816579478 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.336937981 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.477769998 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.037487454 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.402507542 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.779625587 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.734002855 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.040766844 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.337484187 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.333548226 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.482369375 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.335908804 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.333942802 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.402085818 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.335698397 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.73091443 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.945105929 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.349301961 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.334040205 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.838329658 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.481874758 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.55375576 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.340543572 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.750720135 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.337027813 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.335832086 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.334413953 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.552626152 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.341061465 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.333466695 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.840028214 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.354953482 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.403508158 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.335119676 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.333912929 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.578305748 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.335744437 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.568231536 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.337641384 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.341974132 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.335418083 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.731347437 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.339504484 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.957219877 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.349504878 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.334116429 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.47925999 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.567828189 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.868167396 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.339007051 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.584006396 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.791647953 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.403139116 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.339866394 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.806603256 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.408471041 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.340578614 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.338353442 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.337267901 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.335248825 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.379548347 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.401687953 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.888818047 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.954017072 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.857482301 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.40922301 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.347928046 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.335989462 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.843798114 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.339071765 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.33645565 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.7263374 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.963615186 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.352036266 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.344399897 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.947759392 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.353521654 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.406367962 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.340768364 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.737225756 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.338748593 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.38129835 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.336288366 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.342320126 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.339496585 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.406784526 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.340190563 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.336744646 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.936270414 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.504092434 seconds)
  done (took 174.630503825 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.328692759 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.350628667 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.341686868 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.330138267 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.329527818 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.336030284 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.329699259 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.329989457 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.335331466 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.330226342 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.331364096 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.330196864 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.33159628 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.333088455 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.339758907 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.337846072 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.942819962 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.330250478 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.32987206 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.331380922 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.111511448 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.333655143 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.331758803 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.330647011 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.330955403 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.331695942 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.339312113 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.333441438 seconds)
  done (took 151.994642595 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.338607503 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.852849682 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.34021864 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.456874876 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.356879087 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.33527595 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.453641512 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.390753883 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.340439913 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.337095951 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.336633271 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.612642713 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.341037348 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.802593937 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.509473029 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.455744939 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.801023578 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.340036348 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.337698605 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.3372996 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.458538016 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.34662909 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.612378371 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.849916022 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.339614328 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.852833036 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.330914256 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.340280728 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.338031863 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.853434158 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.339041656 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.613989706 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.408814836 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.393547241 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.852993602 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.805032376 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.807157353 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.471011827 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.34093825 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.338361938 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.337778979 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.329525872 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.85387964 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.34100903 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.340313569 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.849379775 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.355153956 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.341137296 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.349657469 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.338795124 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.394063255 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.394726314 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.619267733 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.860322239 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.409350942 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.360548887 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.458569408 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.713494804 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.342828032 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.804096506 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.328251179 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.859989206 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.345507517 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.328906154 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.340173842 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.346121492 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.475260151 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.457981762 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.806082896 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.341768361 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.805423077 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.47601619 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.339533461 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.340744293 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.342878715 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.858277241 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.807251803 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.476492806 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.46300103 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.514302096 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.334260601 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.3407038 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.33191203 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.410647693 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.341154063 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.859712874 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.807487473 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.343475443 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.343158855 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.342880177 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.344093992 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.500130889 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.860767343 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.412064803 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.801656389 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.631737855 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.620055744 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.343626215 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.394947198 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.341506994 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.620587399 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.345153918 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.39448032 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.77798223 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.621289437 seconds)
  done (took 158.359517688 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.568826697 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.522915843 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.429010588 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.449059408 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.862052652 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.891773917 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.451883945 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.461235203 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.444667975 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.572902773 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.425039333 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.441637105 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.512541623 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.4101792 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.011842352 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.406394492 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.427678772 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.459467644 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.445534965 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.393751196 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.932530764 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.609635857 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.5018146 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.35024066 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.432821852 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.086538285 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.859761011 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.845469548 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.499526475 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.611843021 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.84392815 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.459615456 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.24038546 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.958613515 seconds)
  done (took 64.099183357 seconds)
done (took 675.558109034 seconds)
SAVING RESULT...
DONE!
